
Board_Diagnostics.elf:     file format elf32-littlenios2
Board_Diagnostics.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0001c2bc memsz 0x0001c2bc flags r-x
    LOAD off    0x0001d2dc vaddr 0x0081c2dc paddr 0x0081e028 align 2**12
         filesz 0x00001d4c memsz 0x00001d4c flags rw-
    LOAD off    0x0001fd74 vaddr 0x0081fd74 paddr 0x0081fd74 align 2**12
         filesz 0x00000000 memsz 0x00000178 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001b3e4  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000cb4  0081b628  0081b628  0001c628  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001d4c  0081c2dc  0081e028  0001d2dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000178  0081fd74  0081fd74  0001fd74  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_0      00000000  0081feec  0081feec  0001f028  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001f028  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001558  00000000  00000000  0001f050  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0003b85b  00000000  00000000  000205a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000e741  00000000  00000000  0005be03  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000128ed  00000000  00000000  0006a544  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00003260  00000000  00000000  0007ce34  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004ab3  00000000  00000000  00080094  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000251a9  00000000  00000000  00084b47  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  000a9cf0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000022a0  00000000  00000000  000a9d50  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000b04a7  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000b04aa  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000b04b6  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000b04b7  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000b04b8  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000b04bc  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000b04c0  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  000b04c4  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  000b04cf  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  000b04da  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000003  00000000  00000000  000b04e5  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000024  00000000  00000000  000b04e8  2**0
                  CONTENTS, READONLY
 29 .jdi          00003c54  00000000  00000000  000b050c  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0008fff9  00000000  00000000  000b4160  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
0081b628 l    d  .rodata	00000000 .rodata
0081c2dc l    d  .rwdata	00000000 .rwdata
0081fd74 l    d  .bss	00000000 .bss
0081feec l    d  .sdram_0	00000000 .sdram_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Board_Diagnostics_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 board_diag.c
00800290 l     F .text	00000068 MenuBegin
008002f8 l     F .text	00000048 MenuItem
008003cc l     F .text	0000010c MenuEnd
0081fd74 l     O .bss	00000004 entry.2675
0081fd78 l     O .bss	00000001 ch.2676
008004d8 l     F .text	000000b4 DoSevenSegMenu
0081fd79 l     O .bss	00000001 ch.2680
00800bc4 l     F .text	0000005c SevenSegCount
00800c20 l     F .text	00000238 SevenSegControl
0080058c l     F .text	00000164 TopMenu
0081fd7a l     O .bss	00000001 ch.2689
008006f0 l     F .text	000000c8 TestLEDs
008007b8 l     F .text	00000108 TestLCD
008009c0 l     F .text	00000184 TestButtons
0081fd7b l     O .bss	00000004 entry.2704
0081fd7f l     O .bss	00000001 ch.2703
0081fd80 l     O .bss	00000004 entry.2712
0081fd84 l     O .bss	00000001 ch.2711
008008c0 l     F .text	0000005c handle_button_interrupts
0080091c l     F .text	00000060 init_button_pio
0080097c l     F .text	00000044 disable_button_pio
00800b44 l     F .text	00000080 sevenseg_set_hex
0081c2dc l     O .rwdata	00000010 segments.2742
0081fd85 l     O .bss	00000001 ch.2757
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00801254 l     F .text	00000008 __fp_lock
0080125c l     F .text	00000008 __fp_unlock
00801270 l     F .text	0000019c __sinit.part.1
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
0081c2ec l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
00802ff8 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfscanf.c
0081bb3a l     O .rodata	00000022 basefix.4191
00000000 l    df *ABS*	00000000 vfprintf.c
0081bb9e l     O .rodata	00000010 zeroes.4255
00806bf8 l     F .text	000000bc __sbprintf
0081bbae l     O .rodata	00000010 blanks.4254
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
0081bcbf l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
00806eb8 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0081cb38 l     O .rwdata	00000020 lc_ctype_charset
0081cb18 l     O .rwdata	00000020 lc_message_charset
0081cb58 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
0081be5c l     O .rodata	0000000c p05.2710
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0080ae20 l     F .text	00000064 sulp
0081bfa4 l     O .rodata	00000014 fpi.2679
0081bfb8 l     O .rodata	00000028 tinytens
0081bf90 l     O .rodata	00000014 fpinan.2715
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfscanf.c
0081bfe0 l     O .rodata	00000022 basefix.3642
00000000 l    df *ABS*	00000000 vfprintf.c
0081c002 l     O .rodata	00000010 zeroes.4240
0081c012 l     O .rodata	00000010 blanks.4239
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
00810578 l     F .text	000000fc __sprint_r.part.0
0081c032 l     O .rodata	00000010 blanks.4199
0081c022 l     O .rodata	00000010 zeroes.4200
00811980 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00811e34 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0081c142 l     O .rodata	00000010 zeroes.4184
0081c152 l     O .rodata	00000010 blanks.4183
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00814aa4 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0081754c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0081766c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00817698 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00817948 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00817a3c l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00817b20 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
00817cfc l     F .text	00000050 alt_get_errno
00817d4c l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
00817f70 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0081e018 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
008181fc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00818344 l     F .text	00000038 alt_dev_reg
0081cd38 l     O .rwdata	00001060 jtag_uart_0
0081dd98 l     O .rwdata	00000120 lcd_display
0081deb8 l     O .rwdata	000000c4 uart
0081df7c l     O .rwdata	00000030 audio_i2c_config
0081dfac l     O .rwdata	00000030 Audio
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0081867c l     F .text	00000208 altera_avalon_jtag_uart_irq
00818884 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207.c
0081e01c l     O .rwdata	00000004 colstart
00818ea4 l     F .text	000000b4 lcd_write_command
00818f58 l     F .text	000000d4 lcd_write_data
0081902c l     F .text	000000cc lcd_clear_screen
008190f8 l     F .text	000001e8 lcd_repaint_screen
008192e0 l     F .text	000000c8 lcd_scroll_up
008193a8 l     F .text	000002a0 lcd_handle_escape
00819b30 l     F .text	000000ac alt_lcd_16207_timeout
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00819d74 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
0081a01c l     F .text	0000009c altera_avalon_uart_irq
0081a0b8 l     F .text	000000e0 altera_avalon_uart_rxirq
0081a198 l     F .text	00000144 altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
0081a330 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
0081a55c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0081aa34 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0081ae68 l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0081fdc0 g     O .bss	00000004 alt_instruction_exception_handler
00802f24 g     F .text	00000018 putchar
0080a2d4 g     F .text	00000074 _mprec_log10
0080a3c0 g     F .text	0000008c __any_on
00808d4c g     F .text	00000054 _isatty_r
0081be68 g     O .rodata	00000028 __mprec_tinytens
00817c44 g     F .text	00000078 alt_main
00802f3c g     F .text	000000a8 _puts_r
0081fdec g     O .bss	00000100 alt_irq
00808eb0 g     F .text	0000005c _lseek_r
0081e028 g       *ABS*	00000000 __flash_rwdata_start
008087e0 g     F .text	000000ac __sflags
00815f1c g     F .text	00000084 .hidden __eqdf2
0081feec g       *ABS*	00000000 __alt_heap_start
00802ee0 g     F .text	0000003c printf
00813c98 g     F .text	0000009c _wcrtomb_r
00803490 g     F .text	0000005c __sseek
008015a4 g     F .text	00000010 __sinit
00811a3c g     F .text	00000138 __swbuf_r
00808dd0 g     F .text	0000007c _setlocale_r
0080140c g     F .text	00000068 __sfmoreglue
0081055c g     F .text	0000001c ungetc
00817cdc g     F .text	00000020 __malloc_unlock
0080ae84 g     F .text	000015ec _strtod_r
00800340 g     F .text	0000008c GetInputString
0080d210 g     F .text	000000f4 _sfread_r
00809350 g     F .text	0000015c memmove
0080158c g     F .text	00000018 _cleanup
008094ac g     F .text	000000a8 _Balloc
00815fa0 g     F .text	000000e0 .hidden __gtdf2
0081b13c g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
00800000 g     F .entry	0000001c __reset
0081fd88 g     O .bss	00000004 edge_capture
00800020 g       *ABS*	00000000 __flash_exceptions_start
00801ff0 g     F .text	00000058 _fstat_r
0081fd8c g     O .bss	00000004 errno
0080325c g     F .text	00000014 __srget
0080340c g     F .text	00000008 __seofread
00812c60 g     F .text	00001038 ___svfiprintf_internal_r
0081fdb0 g     O .bss	00000004 alt_argv
00825fdc g       *ABS*	00000000 _gp
008181cc g     F .text	00000030 usleep
0081cbb8 g     O .rwdata	00000180 alt_fd_list
008022dc g     F .text	00000070 _getc_r
0080234c g     F .text	00000088 getc
00802f1c g     F .text	00000008 _putchar_r
0081abe0 g     F .text	00000090 alt_find_dev
00809218 g     F .text	00000138 memcpy
00812768 g     F .text	0000026c __hexnan
00801264 g     F .text	0000000c _cleanup_r
008171dc g     F .text	000000d0 .hidden __floatsidf
0081af28 g     F .text	00000078 alt_io_redirect
00816080 g     F .text	000000e0 .hidden __ltdf2
0081b628 g       *ABS*	00000000 __DTOR_END__
00802fe4 g     F .text	00000014 puts
0081b1e8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00808fb8 g     F .text	000000d8 mbrtowc
0080ab7c g     F .text	00000074 __fpclassifyd
0080a230 g     F .text	000000a4 __ratio
0081195c g     F .text	00000024 __vfiprintf_internal
00818a80 g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00802eb4 g     F .text	0000002c _printf_r
00814bc0 g     F .text	00000008 .hidden __udivsi3
00817998 g     F .text	000000a4 isatty
00808da0 g     F .text	00000030 iswspace
0081beb8 g     O .rodata	000000c8 __mprec_tens
00808e4c g     F .text	0000000c __locale_charset
00814cfc g     F .text	000000b8 .hidden __lesf2
00813ee0 g     F .text	00000074 .hidden __fixunsdfsi
0081b15c g     F .text	0000008c alt_icache_flush
0081fd98 g     O .bss	00000004 __malloc_top_pad
0080d1a0 g     F .text	00000070 __ssrefill_r
0080cd50 g     F .text	00000024 strtoul
0081dff0 g     O .rwdata	00000004 __mb_cur_max
00808e7c g     F .text	0000000c _localeconv_r
0080cd74 g     F .text	00000334 _strtoull_r
008098b8 g     F .text	0000003c __i2b
0080888c g     F .text	000004c0 __sfvwrite_r
00803270 g     F .text	00000054 _sbrk_r
0080a5b8 g     F .text	0000005c _read_r
0081e00c g     O .rwdata	00000004 alt_max_fd
00800ebc g     F .text	000000f0 _fclose_r
00801224 g     F .text	00000030 fflush
0081fd94 g     O .bss	00000004 __malloc_max_sbrked_mem
00817798 g     F .text	000001b0 alt_irq_register
0080358c g     F .text	000016f8 __ssvfscanf_r
00814db4 g     F .text	0000089c .hidden __adddf3
00814bd0 g     F .text	00000074 .hidden __nesf2
00809fd8 g     F .text	0000011c __b2d
00814514 g     F .text	00000590 .hidden __umoddi3
00817b70 g     F .text	000000d4 lseek
0081dfdc g     O .rwdata	00000004 _global_impure_ptr
0080a614 g     F .text	00000568 _realloc_r
0081feec g       *ABS*	00000000 __bss_end
0081b038 g     F .text	00000104 alt_tick
0081c042 g     O .rodata	00000100 __hexdig
00813f54 g     F .text	000005c0 .hidden __udivdi3
00811c54 g     F .text	00000184 _fputwc_r
0081be90 g     O .rodata	00000028 __mprec_bigtens
0080969c g     F .text	00000104 __s2b
008172ac g     F .text	000000a4 .hidden __floatunsidf
00809d80 g     F .text	00000060 __mcmp
00819f7c g     F .text	000000a0 altera_avalon_uart_init
008015c4 g     F .text	00000018 __fp_lock_all
0081afa0 g     F .text	00000098 alt_alarm_stop
0080c7d0 g     F .text	00000024 strtol
0081fda8 g     O .bss	00000004 alt_irq_active
00801b88 g     F .text	00000444 _fseeko_r
008000fc g     F .exceptions	000000d4 alt_irq_handler
0081cb90 g     O .rwdata	00000028 alt_dev_null
0081a9f0 g     F .text	00000044 alt_dcache_flush_all
008097a0 g     F .text	00000068 __hi0bits
00817154 g     F .text	00000088 .hidden __fixdfsi
0080c470 g     F .text	0000001c strtod
0081e028 g       *ABS*	00000000 __ram_rwdata_end
0081e004 g     O .rwdata	00000008 alt_dev_list
0081824c g     F .text	000000f8 write
0080a44c g     F .text	000000a0 _putc_r
00814c44 g     F .text	000000b8 .hidden __gtsf2
0081c2dc g       *ABS*	00000000 __ram_rodata_end
008176e8 g     F .text	000000b0 fstat
00801728 g     F .text	00000024 fprintf
00816080 g     F .text	000000e0 .hidden __ledf2
00809af0 g     F .text	00000140 __pow5mult
0081068c g     F .text	000012d0 ___vfiprintf_internal_r
0081fda4 g     O .bss	00000004 __nlocale_changed
00814bc8 g     F .text	00000008 .hidden __umodsi3
0081feec g       *ABS*	00000000 end
00819648 g     F .text	000004e8 altera_avalon_lcd_16207_write
00801fcc g     F .text	00000024 fseeko
0081a5ac g     F .text	000001ac altera_avalon_uart_write
00801b64 g     F .text	00000024 fseek
008185c4 g     F .text	000000b8 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0081b628 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
00819dec g     F .text	00000080 alt_avalon_timer_sc_init
00819ecc g     F .text	00000060 altera_avalon_uart_write_fd
008174e8 g     F .text	00000064 .hidden __clzsi2
00819f2c g     F .text	00000050 altera_avalon_uart_close_fd
00818c8c g     F .text	00000218 altera_avalon_jtag_uart_write
008015b4 g     F .text	00000004 __sfp_lock_acquire
00809130 g     F .text	000000e8 memchr
00804c84 g     F .text	00001f50 ___vfprintf_internal_r
0080acb8 g     F .text	00000058 _sprintf_r
00801870 g     F .text	000002f0 _free_r
00808e58 g     F .text	00000010 __locale_mb_cur_max
0081b460 g     F .text	00000194 __call_exitprocs
008031e8 g     F .text	00000074 __srget_r
0080d0a8 g     F .text	000000f8 _sungetc_r
0081fda0 g     O .bss	00000004 __mlocale_changed
0081dfe4 g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
0081fdb8 g     O .bss	00000004 _alt_tick_rate
0080c7f4 g     F .text	000002f4 _strtoll_r
00809c30 g     F .text	00000150 __lshift
0081fdbc g     O .bss	00000004 _alt_nticks
00817fc0 g     F .text	000000fc read
008183b0 g     F .text	000000b0 alt_sys_init
00812a94 g     F .text	000001cc __ssprint_r
00802e58 g     F .text	0000005c _open_r
0081b34c g     F .text	00000114 __register_exitproc
008129d4 g     F .text	000000c0 strncmp
008098f4 g     F .text	000001fc __multiply
0081892c g     F .text	00000068 altera_avalon_jtag_uart_close
0081c2dc g       *ABS*	00000000 __ram_rwdata_start
0081b628 g       *ABS*	00000000 __ram_rodata_start
0081fdc4 g     O .bss	00000028 __malloc_current_mallinfo
00814bd0 g     F .text	00000074 .hidden __eqsf2
0080a0f4 g     F .text	0000013c __d2b
00818460 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080cae8 g     F .text	00000268 _strtoul_r
0081ad84 g     F .text	000000b4 alt_get_fd
0081a898 g     F .text	00000158 alt_busy_sleep
00806e64 g     F .text	00000054 _close_r
0081b2d0 g     F .text	0000007c memcmp
00818520 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0081feec g       *ABS*	00000000 __alt_stack_base
00818570 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
008021d0 g     F .text	000000cc _fwrite_r
008032c4 g     F .text	0000007c sscanf
00806d10 g     F .text	00000154 __swsetup_r
00815650 g     F .text	000008cc .hidden __divdf3
00801474 g     F .text	00000118 __sfp
0080a348 g     F .text	00000078 __copybits
0081c710 g     O .rwdata	00000408 __malloc_av_
008015c0 g     F .text	00000004 __sinit_lock_release
00816160 g     F .text	00000724 .hidden __muldf3
008033b8 g     F .text	00000054 __sread
0081ac70 g     F .text	00000114 alt_find_file
0081aa84 g     F .text	000000a4 alt_dev_llist_insert
00817cbc g     F .text	00000020 __malloc_lock
00801700 g     F .text	00000028 _fprintf_r
0081811c g     F .text	000000b0 sbrk
0080e370 g     F .text	00001f90 ___svfprintf_internal_r
008011c8 g     F .text	0000005c _fflush_r
00811b90 g     F .text	000000c4 _calloc_r
008016e4 g     F .text	0000001c fopen
0081fd74 g       *ABS*	00000000 __bss_start
00802d34 g     F .text	00000124 memset
00800e58 g     F .text	00000064 main
0081fdb4 g     O .bss	00000004 alt_envp
0081fd90 g     O .bss	00000004 __malloc_max_total_mem
008184c0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00811b74 g     F .text	0000001c __swbuf
00814cfc g     F .text	000000b8 .hidden __ltsf2
00819bdc g     F .text	00000138 altera_avalon_lcd_16207_init
008034ec g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00800fac g     F .text	00000014 fclose
0080c590 g     F .text	00000240 _strtol_r
00817350 g     F .text	00000198 .hidden __truncdfsf2
008070b8 g     F .text	00001728 _dtoa_r
0080258c g     F .text	000007a8 _malloc_r
00813df4 g     F .text	00000030 __ascii_wctomb
0081e010 g     O .rwdata	00000004 alt_errno
00810300 g     F .text	000000d4 __submore
00802048 g     F .text	000000c4 _fwalk
008090d4 g     F .text	0000005c _mbtowc_r
0080a4ec g     F .text	000000cc putc
00814b10 g     F .text	00000054 .hidden __divsi3
0080174c g     F .text	00000124 _malloc_trim_r
0081b628 g       *ABS*	00000000 __CTOR_END__
0080ad7c g     F .text	000000a4 strcmp
0081b628 g       *ABS*	00000000 __flash_rodata_start
0081b628 g       *ABS*	00000000 __DTOR_LIST__
00815f1c g     F .text	00000084 .hidden __nedf2
0081837c g     F .text	00000034 alt_irq_init
008180bc g     F .text	00000060 alt_release_fd
0080ad10 g     F .text	0000006c sprintf
0081c162 g     O .rodata	00000100 .hidden __clz_tab
0081fd9c g     O .bss	00000004 _PathLocale
0080c48c g     F .text	00000104 strtof
0081b284 g     F .text	00000014 atexit
00814c44 g     F .text	000000b8 .hidden __gesf2
00806cb4 g     F .text	0000005c _write_r
00808e88 g     F .text	0000001c setlocale
0080acb0 g     F .text	00000008 nanf
0081dfe0 g     O .rwdata	00000004 _impure_ptr
0081fdac g     O .bss	00000004 alt_argc
00800fc0 g     F .text	00000208 __sflush_r
00808f0c g     F .text	000000ac _mbrtowc_r
0081ab84 g     F .text	0000005c _do_dtors
00808e74 g     F .text	00000008 __locale_cjk_lang
00801b60 g     F .text	00000004 _fseek_r
00803014 g     F .text	000001d4 __srefill_r
00800000 g       *ABS*	00000000 __alt_mem_sdram_0
00800020 g       .exceptions	00000000 alt_irq_entry
00809090 g     F .text	00000044 __ascii_mbtowc
00809f78 g     F .text	00000060 __ulp
008015dc g     F .text	00000018 __fp_unlock_all
00819d14 g     F .text	00000060 altera_avalon_lcd_16207_write_fd
0081dffc g     O .rwdata	00000008 alt_fs_list
0080d304 g     F .text	0000106c __ssvfiscanf_r
00800020 g       *ABS*	00000000 __ram_exceptions_start
00808ea4 g     F .text	0000000c localeconv
0080229c g     F .text	00000040 fwrite
00803340 g     F .text	00000078 _sscanf_r
0081e028 g       *ABS*	00000000 _edata
00819e6c g     F .text	00000060 altera_avalon_uart_read_fd
0081feec g       *ABS*	00000000 _end
00800244 g       *ABS*	00000000 __ram_exceptions_end
00818994 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
00803414 g     F .text	0000007c __swrite
0081dfe8 g     O .rwdata	00000004 __malloc_trim_threshold
00808e68 g     F .text	0000000c __locale_msgcharset
0081b298 g     F .text	00000038 exit
0080210c g     F .text	000000c4 _fwalk_reent
00809de0 g     F .text	00000198 __mdiff
00814b64 g     F .text	0000005c .hidden __modsi3
0081dfec g     O .rwdata	00000004 __ctype_ptr__
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
008015b8 g     F .text	00000004 __sfp_lock_release
0080abf0 g     F .text	000000c0 __sccl
0081bbbe g     O .rodata	00000101 _ctype_
0081dff4 g     O .rwdata	00000004 __mbtowc
0081a2dc g     F .text	00000054 altera_avalon_uart_close
008015f4 g     F .text	000000f0 _fopen_r
0081b5f4 g     F .text	00000034 _exit
0081a758 g     F .text	00000140 alt_alarm_start
00813e80 g     F .text	00000060 .hidden __muldi3
008023d4 g     F .text	000001b8 __smakebuf_r
008034f4 g     F .text	00000098 strlen
00817e18 g     F .text	00000158 open
00815fa0 g     F .text	000000e0 .hidden __gedf2
00811f34 g     F .text	00000834 __gethex
0081dff8 g     O .rwdata	00000004 __wctomb
00810674 g     F .text	00000018 __sprint_r
0081ae38 g     F .text	00000030 alt_icache_flush_all
0081e014 g     O .rwdata	00000004 alt_priority_mask
00806bd4 g     F .text	00000024 __vfprintf_internal
0081a380 g     F .text	000001dc altera_avalon_uart_read
00813e24 g     F .text	0000005c _wctomb_r
00816884 g     F .text	000008d0 .hidden __subdf3
00809808 g     F .text	000000b0 __lo0bits
0081e020 g     O .rwdata	00000008 alt_alarm_list
008103d4 g     F .text	00000188 _ungetc_r
0081ab28 g     F .text	0000005c _do_ctors
00813d34 g     F .text	000000c0 wcrtomb
0081759c g     F .text	000000d0 close
00817aa0 g     F .text	00000080 alt_load
00811dd8 g     F .text	0000005c fputwc
00000000  w      *UND*	00000000 free
008015bc g     F .text	00000004 __sinit_lock_acquire
0080957c g     F .text	00000120 __multadd
00809554 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409114 	ori	at,at,580
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram_0-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001526 	beq	r2,zero,800190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
  80013c:	008020b4 	movhi	r2,130
  800140:	10bf7b04 	addi	r2,r2,-532
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	008020b4 	movhi	r2,130
  800158:	10bf7b04 	addi	r2,r2,-532
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	21000104 	addi	r4,r4,4
  800168:	1105883a 	add	r2,r2,r4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	e17ffd17 	ldw	r5,-12(fp)
  800178:	183ee83a 	callr	r3
#endif
        break;
  80017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800180:	0005313a 	rdctl	r2,ipending
  800184:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800188:	e0bfff17 	ldw	r2,-4(fp)
  80018c:	00000706 	br	8001ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
  800190:	e0bffc17 	ldw	r2,-16(fp)
  800194:	1085883a 	add	r2,r2,r2
  800198:	e0bffc15 	stw	r2,-16(fp)
      i++;
  80019c:	e0bffd17 	ldw	r2,-12(fp)
  8001a0:	10800044 	addi	r2,r2,1
  8001a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a8:	003fe006 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001b0:	e0bffb17 	ldw	r2,-20(fp)
  8001b4:	103fda1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b8:	0001883a 	nop
}
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0a77917 	ldw	r2,-25116(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0a77917 	ldw	r2,-25116(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	1809883a 	mov	r4,r3
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	e1bffe17 	ldw	r6,-8(fp)
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	068020b4 	movhi	gp,130
    ori gp, gp, %lo(_gp)
  800260:	d697f714 	ori	gp,gp,24540
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800268:	10bf5d14 	ori	r2,r2,64884

    movhi r3, %hi(__bss_end)
  80026c:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800270:	18ffbb14 	ori	r3,r3,65260

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	0817aa00 	call	817aa0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	0817c440 	call	817c44 <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <MenuBegin>:
 * 
 * Function to set the Menu "header".
 */

static void MenuBegin( char *title )
{
  800290:	defffd04 	addi	sp,sp,-12
  800294:	dfc00215 	stw	ra,8(sp)
  800298:	df000115 	stw	fp,4(sp)
  80029c:	df000104 	addi	fp,sp,4
  8002a0:	e13fff15 	stw	r4,-4(fp)
  printf("\n\n");
  8002a4:	010020b4 	movhi	r4,130
  8002a8:	212d8a04 	addi	r4,r4,-18904
  8002ac:	0802fe40 	call	802fe4 <puts>
  printf("----------------------------------\n");
  8002b0:	010020b4 	movhi	r4,130
  8002b4:	212d8b04 	addi	r4,r4,-18900
  8002b8:	0802fe40 	call	802fe4 <puts>
  printf("Nios II Board Diagnostics\n");
  8002bc:	010020b4 	movhi	r4,130
  8002c0:	212d9404 	addi	r4,r4,-18864
  8002c4:	0802fe40 	call	802fe4 <puts>
  printf("----------------------------------\n");
  8002c8:	010020b4 	movhi	r4,130
  8002cc:	212d8b04 	addi	r4,r4,-18900
  8002d0:	0802fe40 	call	802fe4 <puts>
  printf(" %s\n",title);
  8002d4:	010020b4 	movhi	r4,130
  8002d8:	212d9b04 	addi	r4,r4,-18836
  8002dc:	e17fff17 	ldw	r5,-4(fp)
  8002e0:	0802ee00 	call	802ee0 <printf>
}
  8002e4:	e037883a 	mov	sp,fp
  8002e8:	dfc00117 	ldw	ra,4(sp)
  8002ec:	df000017 	ldw	fp,0(sp)
  8002f0:	dec00204 	addi	sp,sp,8
  8002f4:	f800283a 	ret

008002f8 <MenuItem>:
 *    (defined by 'string').
 *
 **********************************************************************/

static void MenuItem( char letter, char *name )
{
  8002f8:	defffc04 	addi	sp,sp,-16
  8002fc:	dfc00315 	stw	ra,12(sp)
  800300:	df000215 	stw	fp,8(sp)
  800304:	df000204 	addi	fp,sp,8
  800308:	2005883a 	mov	r2,r4
  80030c:	e17fff15 	stw	r5,-4(fp)
  800310:	e0bffe05 	stb	r2,-8(fp)
  printf("     %c:  %s\n" ,letter, name);
  800314:	e0bffe07 	ldb	r2,-8(fp)
  800318:	010020b4 	movhi	r4,130
  80031c:	212d9d04 	addi	r4,r4,-18828
  800320:	100b883a 	mov	r5,r2
  800324:	e1bfff17 	ldw	r6,-4(fp)
  800328:	0802ee00 	call	802ee0 <printf>
}
  80032c:	e037883a 	mov	sp,fp
  800330:	dfc00117 	ldw	ra,4(sp)
  800334:	df000017 	ldw	fp,0(sp)
  800338:	dec00204 	addi	sp,sp,8
  80033c:	f800283a 	ret

00800340 <GetInputString>:
*           returns the string, minus any '\r' characters it 
*           encounters.
*
******************************************************************/
void GetInputString( char* entry, int size, FILE * stream )
{
  800340:	defff904 	addi	sp,sp,-28
  800344:	dfc00615 	stw	ra,24(sp)
  800348:	df000515 	stw	fp,20(sp)
  80034c:	df000504 	addi	fp,sp,20
  800350:	e13ffd15 	stw	r4,-12(fp)
  800354:	e17ffe15 	stw	r5,-8(fp)
  800358:	e1bfff15 	stw	r6,-4(fp)
  int i;
  int ch = 0;
  80035c:	e03ffc15 	stw	zero,-16(fp)
  
  for(i = 0; (ch != '\n') && (i < size); )
  800360:	e03ffb15 	stw	zero,-20(fp)
  800364:	00000e06 	br	8003a0 <GetInputString+0x60>
  {
    if( (ch = getc(stream)) != '\r')
  800368:	e13fff17 	ldw	r4,-4(fp)
  80036c:	080234c0 	call	80234c <getc>
  800370:	e0bffc15 	stw	r2,-16(fp)
  800374:	e0bffc17 	ldw	r2,-16(fp)
  800378:	10800360 	cmpeqi	r2,r2,13
  80037c:	1000081e 	bne	r2,zero,8003a0 <GetInputString+0x60>
    {
      entry[i] = ch;
  800380:	e0bffb17 	ldw	r2,-20(fp)
  800384:	e0fffd17 	ldw	r3,-12(fp)
  800388:	1885883a 	add	r2,r3,r2
  80038c:	e0fffc17 	ldw	r3,-16(fp)
  800390:	10c00005 	stb	r3,0(r2)
      i++;
  800394:	e0bffb17 	ldw	r2,-20(fp)
  800398:	10800044 	addi	r2,r2,1
  80039c:	e0bffb15 	stw	r2,-20(fp)
void GetInputString( char* entry, int size, FILE * stream )
{
  int i;
  int ch = 0;
  
  for(i = 0; (ch != '\n') && (i < size); )
  8003a0:	e0bffc17 	ldw	r2,-16(fp)
  8003a4:	108002a0 	cmpeqi	r2,r2,10
  8003a8:	1000031e 	bne	r2,zero,8003b8 <GetInputString+0x78>
  8003ac:	e0fffb17 	ldw	r3,-20(fp)
  8003b0:	e0bffe17 	ldw	r2,-8(fp)
  8003b4:	18bfec16 	blt	r3,r2,800368 <__alt_data_end+0xff800368>
    {
      entry[i] = ch;
      i++;
    }
  }
}
  8003b8:	e037883a 	mov	sp,fp
  8003bc:	dfc00117 	ldw	ra,4(sp)
  8003c0:	df000017 	ldw	fp,0(sp)
  8003c4:	dec00204 	addi	sp,sp,8
  8003c8:	f800283a 	ret

008003cc <MenuEnd>:
 *    and continues until either a 'q' or a character outside of the 
 *    range, enclosed by 'lowLetter' and 'highLetter', is reached.
 */

static int MenuEnd( char lowLetter, char highLetter )
{
  8003cc:	defffc04 	addi	sp,sp,-16
  8003d0:	dfc00315 	stw	ra,12(sp)
  8003d4:	df000215 	stw	fp,8(sp)
  8003d8:	df000204 	addi	fp,sp,8
  8003dc:	2007883a 	mov	r3,r4
  8003e0:	2805883a 	mov	r2,r5
  8003e4:	e0fffe05 	stb	r3,-8(fp)
  8003e8:	e0bfff05 	stb	r2,-4(fp)
  static char entry[4];
  static char ch;

  printf("     q:  Exit\n");
  8003ec:	010020b4 	movhi	r4,130
  8003f0:	212da104 	addi	r4,r4,-18812
  8003f4:	0802fe40 	call	802fe4 <puts>
  printf("----------------------------------\n");
  8003f8:	010020b4 	movhi	r4,130
  8003fc:	212d8b04 	addi	r4,r4,-18900
  800400:	0802fe40 	call	802fe4 <puts>
  printf("\nSelect Choice (%c-%c): [Followed by <enter>]",lowLetter,highLetter);
  800404:	e0fffe07 	ldb	r3,-8(fp)
  800408:	e0bfff07 	ldb	r2,-4(fp)
  80040c:	010020b4 	movhi	r4,130
  800410:	212da504 	addi	r4,r4,-18796
  800414:	180b883a 	mov	r5,r3
  800418:	100d883a 	mov	r6,r2
  80041c:	0802ee00 	call	802ee0 <printf>
  
  GetInputString( entry, sizeof(entry), stdin );
  800420:	008020b4 	movhi	r2,130
  800424:	10b7f804 	addi	r2,r2,-8224
  800428:	10800017 	ldw	r2,0(r2)
  80042c:	10800117 	ldw	r2,4(r2)
  800430:	d1276604 	addi	r4,gp,-25192
  800434:	01400104 	movi	r5,4
  800438:	100d883a 	mov	r6,r2
  80043c:	08003400 	call	800340 <GetInputString>
  if(sscanf(entry, "%c\n", &ch))
  800440:	d1276604 	addi	r4,gp,-25192
  800444:	014020b4 	movhi	r5,130
  800448:	296db104 	addi	r5,r5,-18748
  80044c:	d1a76704 	addi	r6,gp,-25188
  800450:	08032c40 	call	8032c4 <sscanf>
  800454:	10001726 	beq	r2,zero,8004b4 <MenuEnd+0xe8>
  {
    if( ch >= 'A' && ch <= 'Z' )
  800458:	d0a76703 	ldbu	r2,-25188(gp)
  80045c:	10803fcc 	andi	r2,r2,255
  800460:	1080201c 	xori	r2,r2,128
  800464:	10bfe004 	addi	r2,r2,-128
  800468:	10801050 	cmplti	r2,r2,65
  80046c:	1000091e 	bne	r2,zero,800494 <MenuEnd+0xc8>
  800470:	d0a76703 	ldbu	r2,-25188(gp)
  800474:	10803fcc 	andi	r2,r2,255
  800478:	1080201c 	xori	r2,r2,128
  80047c:	10bfe004 	addi	r2,r2,-128
  800480:	108016c8 	cmpgei	r2,r2,91
  800484:	1000031e 	bne	r2,zero,800494 <MenuEnd+0xc8>
      ch += 'a' - 'A';
  800488:	d0a76703 	ldbu	r2,-25188(gp)
  80048c:	10800804 	addi	r2,r2,32
  800490:	d0a76705 	stb	r2,-25188(gp)
    if( ch == 27 )
  800494:	d0a76703 	ldbu	r2,-25188(gp)
  800498:	10803fcc 	andi	r2,r2,255
  80049c:	1080201c 	xori	r2,r2,128
  8004a0:	10bfe004 	addi	r2,r2,-128
  8004a4:	108006d8 	cmpnei	r2,r2,27
  8004a8:	1000021e 	bne	r2,zero,8004b4 <MenuEnd+0xe8>
      ch = 'q';        
  8004ac:	00801c44 	movi	r2,113
  8004b0:	d0a76705 	stb	r2,-25188(gp)
  }
  return ch;
  8004b4:	d0a76703 	ldbu	r2,-25188(gp)
  8004b8:	10803fcc 	andi	r2,r2,255
  8004bc:	1080201c 	xori	r2,r2,128
  8004c0:	10bfe004 	addi	r2,r2,-128
}
  8004c4:	e037883a 	mov	sp,fp
  8004c8:	dfc00117 	ldw	ra,4(sp)
  8004cc:	df000017 	ldw	fp,0(sp)
  8004d0:	dec00204 	addi	sp,sp,8
  8004d4:	f800283a 	ret

008004d8 <DoSevenSegMenu>:
 * Generates the Seven Segment Display menu.
 * 
 ******************************************************************************/

static void DoSevenSegMenu( void )
{
  8004d8:	defffe04 	addi	sp,sp,-8
  8004dc:	dfc00115 	stw	ra,4(sp)
  8004e0:	df000015 	stw	fp,0(sp)
  8004e4:	d839883a 	mov	fp,sp
  static char ch;

  while(1)
  {
    MenuBegin("Seven Segment Menu");
  8004e8:	010020b4 	movhi	r4,130
  8004ec:	212db204 	addi	r4,r4,-18744
  8004f0:	08002900 	call	800290 <MenuBegin>
    MenuItem('a', "Count From 0 to FF.");
  8004f4:	01001844 	movi	r4,97
  8004f8:	014020b4 	movhi	r5,130
  8004fc:	296db704 	addi	r5,r5,-18724
  800500:	08002f80 	call	8002f8 <MenuItem>
    MenuItem('b', "Control Individual Segments.");
  800504:	01001884 	movi	r4,98
  800508:	014020b4 	movhi	r5,130
  80050c:	296dbc04 	addi	r5,r5,-18704
  800510:	08002f80 	call	8002f8 <MenuItem>
    ch = MenuEnd('a', 'b');
  800514:	01001844 	movi	r4,97
  800518:	01401884 	movi	r5,98
  80051c:	08003cc0 	call	8003cc <MenuEnd>
  800520:	d0a76745 	stb	r2,-25187(gp)
  
    switch(ch)
  800524:	d0a76743 	ldbu	r2,-25187(gp)
  800528:	10803fcc 	andi	r2,r2,255
  80052c:	1080201c 	xori	r2,r2,128
  800530:	10bfe004 	addi	r2,r2,-128
  800534:	10c01860 	cmpeqi	r3,r2,97
  800538:	1800031e 	bne	r3,zero,800548 <DoSevenSegMenu+0x70>
  80053c:	108018a0 	cmpeqi	r2,r2,98
  800540:	1000031e 	bne	r2,zero,800550 <DoSevenSegMenu+0x78>
  800544:	00000406 	br	800558 <DoSevenSegMenu+0x80>
    {
      MenuCase('a', SevenSegCount);
  800548:	0800bc40 	call	800bc4 <SevenSegCount>
  80054c:	00000206 	br	800558 <DoSevenSegMenu+0x80>
      MenuCase('b', SevenSegControl);
  800550:	0800c200 	call	800c20 <SevenSegControl>
  800554:	0001883a 	nop
    }
    
    if ( ch == 'q' )
  800558:	d0a76743 	ldbu	r2,-25187(gp)
  80055c:	10803fcc 	andi	r2,r2,255
  800560:	1080201c 	xori	r2,r2,128
  800564:	10bfe004 	addi	r2,r2,-128
  800568:	10801c58 	cmpnei	r2,r2,113
  80056c:	1000011e 	bne	r2,zero,800574 <DoSevenSegMenu+0x9c>
    {
      break;
  800570:	00000106 	br	800578 <DoSevenSegMenu+0xa0>
    }
  }
  800574:	003fdc06 	br	8004e8 <__alt_data_end+0xff8004e8>
}
  800578:	e037883a 	mov	sp,fp
  80057c:	dfc00117 	ldw	ra,4(sp)
  800580:	df000017 	ldw	fp,0(sp)
  800584:	dec00204 	addi	sp,sp,8
  800588:	f800283a 	ret

0080058c <TopMenu>:
 * Generates the top level menu for this diagnostics program.
 * 
 ******************************************************************************/

static char TopMenu( void )
{
  80058c:	defffe04 	addi	sp,sp,-8
  800590:	dfc00115 	stw	ra,4(sp)
  800594:	df000015 	stw	fp,0(sp)
  800598:	d839883a 	mov	fp,sp
  
  /* Output the top-level menu to STDOUT */

  while (1)
  {
    MenuBegin("Main Menu");
  80059c:	010020b4 	movhi	r4,130
  8005a0:	212dc404 	addi	r4,r4,-18672
  8005a4:	08002900 	call	800290 <MenuBegin>
#ifdef LED_PIO_NAME
    MenuItem( 'a', "Test LEDs (D1-D4)" );
  8005a8:	01001844 	movi	r4,97
  8005ac:	014020b4 	movhi	r5,130
  8005b0:	296dc704 	addi	r5,r5,-18660
  8005b4:	08002f80 	call	8002f8 <MenuItem>
#endif
#ifdef LCD_DISPLAY_NAME
    MenuItem( 'b', "LCD Display Test");
  8005b8:	01001884 	movi	r4,98
  8005bc:	014020b4 	movhi	r5,130
  8005c0:	296dcc04 	addi	r5,r5,-18640
  8005c4:	08002f80 	call	8002f8 <MenuItem>
#endif
#ifdef BUTTON_PIO_NAME
    MenuItem( 'c', "Push Button Test");
  8005c8:	010018c4 	movi	r4,99
  8005cc:	014020b4 	movhi	r5,130
  8005d0:	296dd104 	addi	r5,r5,-18620
  8005d4:	08002f80 	call	8002f8 <MenuItem>
#endif
#ifdef SEVEN_SEG_PIO_NAME
    MenuItem( 'd', "Seven Segment Menu" );
  8005d8:	01001904 	movi	r4,100
  8005dc:	014020b4 	movhi	r5,130
  8005e0:	296db204 	addi	r5,r5,-18744
  8005e4:	08002f80 	call	8002f8 <MenuItem>
#endif
#ifdef JTAG_UART_NAME
    MenuItem( 'e', "JTAG UART Menu" );
#endif  
    ch = MenuEnd('a', 'e');
  8005e8:	01001844 	movi	r4,97
  8005ec:	01401944 	movi	r5,101
  8005f0:	08003cc0 	call	8003cc <MenuEnd>
  8005f4:	d0a76785 	stb	r2,-25186(gp)

  
    switch(ch)
  8005f8:	d0a76783 	ldbu	r2,-25186(gp)
  8005fc:	10803fcc 	andi	r2,r2,255
  800600:	1080201c 	xori	r2,r2,128
  800604:	10bfe004 	addi	r2,r2,-128
  800608:	10bfe7c4 	addi	r2,r2,-97
  80060c:	10c00468 	cmpgeui	r3,r2,17
  800610:	18001f1e 	bne	r3,zero,800690 <TopMenu+0x104>
  800614:	100690ba 	slli	r3,r2,2
  800618:	00802034 	movhi	r2,128
  80061c:	10818b04 	addi	r2,r2,1580
  800620:	1885883a 	add	r2,r3,r2
  800624:	10800017 	ldw	r2,0(r2)
  800628:	1000683a 	jmp	r2
  80062c:	00800670 	cmpltui	r2,zero,25
  800630:	00800678 	rdprs	r2,zero,25
  800634:	00800680 	call	80068 <__alt_mem_sdram_0-0x77ff98>
  800638:	00800688 	cmpgei	r2,zero,26
  80063c:	00800690 	cmplti	r2,zero,26
  800640:	00800690 	cmplti	r2,zero,26
  800644:	00800690 	cmplti	r2,zero,26
  800648:	00800690 	cmplti	r2,zero,26
  80064c:	00800690 	cmplti	r2,zero,26
  800650:	00800690 	cmplti	r2,zero,26
  800654:	00800690 	cmplti	r2,zero,26
  800658:	00800690 	cmplti	r2,zero,26
  80065c:	00800690 	cmplti	r2,zero,26
  800660:	00800690 	cmplti	r2,zero,26
  800664:	00800690 	cmplti	r2,zero,26
  800668:	00800690 	cmplti	r2,zero,26
  80066c:	008006b4 	movhi	r2,26
    {
#ifdef LED_PIO_NAME
      MenuCase('a',TestLEDs);
  800670:	08006f00 	call	8006f0 <TestLEDs>
  800674:	00001006 	br	8006b8 <TopMenu+0x12c>
#endif
#ifdef LCD_DISPLAY_NAME
      MenuCase('b',TestLCD);
  800678:	08007b80 	call	8007b8 <TestLCD>
  80067c:	00000e06 	br	8006b8 <TopMenu+0x12c>
#endif
#ifdef BUTTON_PIO_NAME
      MenuCase('c',TestButtons);
  800680:	08009c00 	call	8009c0 <TestButtons>
  800684:	00000c06 	br	8006b8 <TopMenu+0x12c>
#endif
#ifdef SEVEN_SEG_PIO_NAME
      MenuCase('d',DoSevenSegMenu);
  800688:	08004d80 	call	8004d8 <DoSevenSegMenu>
  80068c:	00000a06 	br	8006b8 <TopMenu+0x12c>
#endif
#ifdef JTAG_UART_NAME
      MenuCase('e',DoJTAGUARTMenu);
#endif
      case 'q':	break;
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
  800690:	d0a76783 	ldbu	r2,-25186(gp)
  800694:	10803fcc 	andi	r2,r2,255
  800698:	1080201c 	xori	r2,r2,128
  80069c:	10bfe004 	addi	r2,r2,-128
  8006a0:	010020b4 	movhi	r4,130
  8006a4:	212dd604 	addi	r4,r4,-18600
  8006a8:	100b883a 	mov	r5,r2
  8006ac:	0802ee00 	call	802ee0 <printf>
  8006b0:	00000106 	br	8006b8 <TopMenu+0x12c>
      MenuCase('d',DoSevenSegMenu);
#endif
#ifdef JTAG_UART_NAME
      MenuCase('e',DoJTAGUARTMenu);
#endif
      case 'q':	break;
  8006b4:	0001883a 	nop
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
    }
    
    if (ch == 'q' )
  8006b8:	d0a76783 	ldbu	r2,-25186(gp)
  8006bc:	10803fcc 	andi	r2,r2,255
  8006c0:	1080201c 	xori	r2,r2,128
  8006c4:	10bfe004 	addi	r2,r2,-128
  8006c8:	10801c58 	cmpnei	r2,r2,113
  8006cc:	1000011e 	bne	r2,zero,8006d4 <TopMenu+0x148>
      break;
  8006d0:	00000106 	br	8006d8 <TopMenu+0x14c>
  }
  8006d4:	003fb106 	br	80059c <__alt_data_end+0xff80059c>
  return( ch );
  8006d8:	d0a76783 	ldbu	r2,-25186(gp)
}
  8006dc:	e037883a 	mov	sp,fp
  8006e0:	dfc00117 	ldw	ra,4(sp)
  8006e4:	df000017 	ldw	fp,0(sp)
  8006e8:	dec00204 	addi	sp,sp,8
  8006ec:	f800283a 	ret

008006f0 <TestLEDs>:
 * This function tests LED functionality.
 * It exits when the user types a 'q'.
 */

static void TestLEDs(void)
{
  8006f0:	defffd04 	addi	sp,sp,-12
  8006f4:	dfc00215 	stw	ra,8(sp)
  8006f8:	df000115 	stw	fp,4(sp)
  8006fc:	df000104 	addi	fp,sp,4
  volatile alt_u8 led;
  static char ch;
  static char entry[4];
  
  /* Turn the LEDs on. */
  led = 0xff;
  800700:	00bfffc4 	movi	r2,-1
  800704:	e0bfff05 	stb	r2,-4(fp)
  IOWR_ALTERA_AVALON_PIO_DATA(LED_PIO_BASE, led);
  800708:	e0bfff03 	ldbu	r2,-4(fp)
  80070c:	10c03fcc 	andi	r3,r2,255
  800710:	00804034 	movhi	r2,256
  800714:	10844c04 	addi	r2,r2,4400
  800718:	10c00035 	stwio	r3,0(r2)
  printf( "\nLEDs D1-D4 should now be on.\n" );
  80071c:	010020b4 	movhi	r4,130
  800720:	212de404 	addi	r4,r4,-18544
  800724:	0802fe40 	call	802fe4 <puts>
  printf( "\tPlease press 'q' [Followed by <enter>] to exit this test.\n" );
  800728:	010020b4 	movhi	r4,130
  80072c:	212dec04 	addi	r4,r4,-18512
  800730:	0802fe40 	call	802fe4 <puts>
  
  /* Get the input string for exiting this test. */
  do {
    GetInputString( entry, sizeof(entry), stdin);
  800734:	008020b4 	movhi	r2,130
  800738:	10b7f804 	addi	r2,r2,-8224
  80073c:	10800017 	ldw	r2,0(r2)
  800740:	10800117 	ldw	r2,4(r2)
  800744:	d12767c4 	addi	r4,gp,-25185
  800748:	01400104 	movi	r5,4
  80074c:	100d883a 	mov	r6,r2
  800750:	08003400 	call	800340 <GetInputString>
    sscanf( entry, "%c\n", &ch );
  800754:	d12767c4 	addi	r4,gp,-25185
  800758:	014020b4 	movhi	r5,130
  80075c:	296db104 	addi	r5,r5,-18748
  800760:	d1a768c4 	addi	r6,gp,-25181
  800764:	08032c40 	call	8032c4 <sscanf>
  } while ( ch != 'q' );
  800768:	d0a768c3 	ldbu	r2,-25181(gp)
  80076c:	10803fcc 	andi	r2,r2,255
  800770:	1080201c 	xori	r2,r2,128
  800774:	10bfe004 	addi	r2,r2,-128
  800778:	10801c58 	cmpnei	r2,r2,113
  80077c:	103fed1e 	bne	r2,zero,800734 <__alt_data_end+0xff800734>
  
  /* Turn the LEDs off and exit. */
  led = 0x0;
  800780:	e03fff05 	stb	zero,-4(fp)
  IOWR_ALTERA_AVALON_PIO_DATA(LED_PIO_BASE, led);
  800784:	e0bfff03 	ldbu	r2,-4(fp)
  800788:	10c03fcc 	andi	r3,r2,255
  80078c:	00804034 	movhi	r2,256
  800790:	10844c04 	addi	r2,r2,4400
  800794:	10c00035 	stwio	r3,0(r2)
  printf(".....Exiting LED Test.\n");
  800798:	010020b4 	movhi	r4,130
  80079c:	212dfb04 	addi	r4,r4,-18452
  8007a0:	0802fe40 	call	802fe4 <puts>
}
  8007a4:	e037883a 	mov	sp,fp
  8007a8:	dfc00117 	ldw	ra,4(sp)
  8007ac:	df000017 	ldw	fp,0(sp)
  8007b0:	dec00204 	addi	sp,sp,8
  8007b4:	f800283a 	ret

008007b8 <TestLCD>:
 * Tests the LCD by printing some simple output to each line.
 * 
 ******************************************************************************/

static void TestLCD( void )
{
  8007b8:	defffd04 	addi	sp,sp,-12
  8007bc:	dfc00215 	stw	ra,8(sp)
  8007c0:	df000115 	stw	fp,4(sp)
  8007c4:	df000104 	addi	fp,sp,4
  FILE *lcd;
  static char ch;
  static char entry[4];
  
  lcd = fopen("/dev/lcd_display", "w");
  8007c8:	010020b4 	movhi	r4,130
  8007cc:	212e0104 	addi	r4,r4,-18428
  8007d0:	014020b4 	movhi	r5,130
  8007d4:	296e0604 	addi	r5,r5,-18408
  8007d8:	08016e40 	call	8016e4 <fopen>
  8007dc:	e0bfff15 	stw	r2,-4(fp)
  
  /* Write some simple text to the LCD. */
  if (lcd != NULL )
  8007e0:	e0bfff17 	ldw	r2,-4(fp)
  8007e4:	10000c26 	beq	r2,zero,800818 <TestLCD+0x60>
  {
    fprintf(lcd, "\nThis is the LCD Display.\n");
  8007e8:	010020b4 	movhi	r4,130
  8007ec:	212e0704 	addi	r4,r4,-18404
  8007f0:	01400044 	movi	r5,1
  8007f4:	01800684 	movi	r6,26
  8007f8:	e1ffff17 	ldw	r7,-4(fp)
  8007fc:	080229c0 	call	80229c <fwrite>
    fprintf(lcd, "If you can see this, your LCD is functional.\n");
  800800:	010020b4 	movhi	r4,130
  800804:	212e0e04 	addi	r4,r4,-18376
  800808:	01400044 	movi	r5,1
  80080c:	01800b44 	movi	r6,45
  800810:	e1ffff17 	ldw	r7,-4(fp)
  800814:	080229c0 	call	80229c <fwrite>
  }
  printf("\nIf you can see messages scrolling on the LCD Display, then it is functional!\n");
  800818:	010020b4 	movhi	r4,130
  80081c:	212e1a04 	addi	r4,r4,-18328
  800820:	0802fe40 	call	802fe4 <puts>
  printf( "\tPlease press 'q' [Followed by <enter>] to exit this test.\n" );
  800824:	010020b4 	movhi	r4,130
  800828:	212dec04 	addi	r4,r4,-18512
  80082c:	0802fe40 	call	802fe4 <puts>
  
  /* Get the input string for exiting this test. */
  do {
    GetInputString( entry, sizeof(entry), stdin);
  800830:	008020b4 	movhi	r2,130
  800834:	10b7f804 	addi	r2,r2,-8224
  800838:	10800017 	ldw	r2,0(r2)
  80083c:	10800117 	ldw	r2,4(r2)
  800840:	d1276904 	addi	r4,gp,-25180
  800844:	01400104 	movi	r5,4
  800848:	100d883a 	mov	r6,r2
  80084c:	08003400 	call	800340 <GetInputString>
    sscanf( entry, "%c\n", &ch );
  800850:	d1276904 	addi	r4,gp,-25180
  800854:	014020b4 	movhi	r5,130
  800858:	296db104 	addi	r5,r5,-18748
  80085c:	d1a76a04 	addi	r6,gp,-25176
  800860:	08032c40 	call	8032c4 <sscanf>
  } while ( ch != 'q' );
  800864:	d0a76a03 	ldbu	r2,-25176(gp)
  800868:	10803fcc 	andi	r2,r2,255
  80086c:	1080201c 	xori	r2,r2,128
  800870:	10bfe004 	addi	r2,r2,-128
  800874:	10801c58 	cmpnei	r2,r2,113
  800878:	103fed1e 	bne	r2,zero,800830 <__alt_data_end+0xff800830>

  /* Send the command sequence to clear the LCD. */
  if (lcd != NULL )
  80087c:	e0bfff17 	ldw	r2,-4(fp)
  800880:	10000726 	beq	r2,zero,8008a0 <TestLCD+0xe8>
  {
    fprintf(lcd, "%c%s", ESC, CLEAR_LCD_STRING);
  800884:	e13fff17 	ldw	r4,-4(fp)
  800888:	014020b4 	movhi	r5,130
  80088c:	296e2e04 	addi	r5,r5,-18248
  800890:	018006c4 	movi	r6,27
  800894:	01c020b4 	movhi	r7,130
  800898:	39ee3004 	addi	r7,r7,-18240
  80089c:	08017280 	call	801728 <fprintf>
  }
  fclose( lcd );
  8008a0:	e13fff17 	ldw	r4,-4(fp)
  8008a4:	0800fac0 	call	800fac <fclose>

  return;
  8008a8:	0001883a 	nop
}
  8008ac:	e037883a 	mov	sp,fp
  8008b0:	dfc00117 	ldw	ra,4(sp)
  8008b4:	df000017 	ldw	fp,0(sp)
  8008b8:	dec00204 	addi	sp,sp,8
  8008bc:	f800283a 	ret

008008c0 <handle_button_interrupts>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void handle_button_interrupts(void* context)
#else
static void handle_button_interrupts(void* context, alt_u32 id)
#endif
{
  8008c0:	defffc04 	addi	sp,sp,-16
  8008c4:	df000315 	stw	fp,12(sp)
  8008c8:	df000304 	addi	fp,sp,12
  8008cc:	e13ffe15 	stw	r4,-8(fp)
  8008d0:	e17fff15 	stw	r5,-4(fp)
  /* Cast context to edge_capture's type.
   * It is important to keep this volatile,
   * to avoid compiler optimization issues.
   */
  volatile int* edge_capture_ptr = (volatile int*) context;
  8008d4:	e0bffe17 	ldw	r2,-8(fp)
  8008d8:	e0bffd15 	stw	r2,-12(fp)
  /* Store the value in the Button's edge capture register in *context. */
  *edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE);
  8008dc:	00804034 	movhi	r2,256
  8008e0:	10844b04 	addi	r2,r2,4396
  8008e4:	10c00037 	ldwio	r3,0(r2)
  8008e8:	e0bffd17 	ldw	r2,-12(fp)
  8008ec:	10c00015 	stw	r3,0(r2)
  /* Reset the Button's edge capture register. */
  IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE, 0);
  8008f0:	0007883a 	mov	r3,zero
  8008f4:	00804034 	movhi	r2,256
  8008f8:	10844b04 	addi	r2,r2,4396
  8008fc:	10c00035 	stwio	r3,0(r2)
  /* 
   * Read the PIO to delay ISR exit. This is done to prevent a spurious
   * interrupt in systems with high processor -> pio latency and fast
   * interrupts.
   */
  IORD_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE);
  800900:	00804034 	movhi	r2,256
  800904:	10844b04 	addi	r2,r2,4396
  800908:	10800037 	ldwio	r2,0(r2)
}
  80090c:	e037883a 	mov	sp,fp
  800910:	df000017 	ldw	fp,0(sp)
  800914:	dec00104 	addi	sp,sp,4
  800918:	f800283a 	ret

0080091c <init_button_pio>:

/* Initialize the button_pio. */

static void init_button_pio()
{
  80091c:	defffd04 	addi	sp,sp,-12
  800920:	dfc00215 	stw	ra,8(sp)
  800924:	df000115 	stw	fp,4(sp)
  800928:	df000104 	addi	fp,sp,4
  /* Recast the edge_capture pointer to match the alt_irq_register() function
  * prototype. */
  void* edge_capture_ptr = (void*) &edge_capture;
  80092c:	d0a76b04 	addi	r2,gp,-25172
  800930:	e0bfff15 	stw	r2,-4(fp)
  /* Enable all 4 button interrupts. */
  IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BUTTON_PIO_BASE, 0xf);
  800934:	00c003c4 	movi	r3,15
  800938:	00804034 	movhi	r2,256
  80093c:	10844a04 	addi	r2,r2,4392
  800940:	10c00035 	stwio	r3,0(r2)
  /* Reset the edge capture register. */
  IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE, 0x0);
  800944:	0007883a 	mov	r3,zero
  800948:	00804034 	movhi	r2,256
  80094c:	10844b04 	addi	r2,r2,4396
  800950:	10c00035 	stwio	r3,0(r2)
   */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(BUTTON_PIO_IRQ_INTERRUPT_CONTROLLER_ID, BUTTON_PIO_IRQ, 
    handle_button_interrupts, edge_capture_ptr, 0x0);
#else
  alt_irq_register( BUTTON_PIO_IRQ, edge_capture_ptr, 
  800954:	01000044 	movi	r4,1
  800958:	e17fff17 	ldw	r5,-4(fp)
  80095c:	01802034 	movhi	r6,128
  800960:	31823004 	addi	r6,r6,2240
  800964:	08177980 	call	817798 <alt_irq_register>
    handle_button_interrupts);
#endif
}
  800968:	e037883a 	mov	sp,fp
  80096c:	dfc00117 	ldw	ra,4(sp)
  800970:	df000017 	ldw	fp,0(sp)
  800974:	dec00204 	addi	sp,sp,8
  800978:	f800283a 	ret

0080097c <disable_button_pio>:

/* Tear down the button_pio. */

static void disable_button_pio()
{
  80097c:	defffe04 	addi	sp,sp,-8
  800980:	dfc00115 	stw	ra,4(sp)
  800984:	df000015 	stw	fp,0(sp)
  800988:	d839883a 	mov	fp,sp
  /* Disable interrupts from the button_pio PIO component. */
  IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BUTTON_PIO_BASE, 0x0);
  80098c:	0007883a 	mov	r3,zero
  800990:	00804034 	movhi	r2,256
  800994:	10844a04 	addi	r2,r2,4392
  800998:	10c00035 	stwio	r3,0(r2)
  /* Un-register the IRQ handler by passing a null handler. */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(BUTTON_PIO_IRQ_INTERRUPT_CONTROLLER_ID, BUTTON_PIO_IRQ, 
    NULL, NULL, NULL);
#else
  alt_irq_register( BUTTON_PIO_IRQ, NULL, NULL );
  80099c:	01000044 	movi	r4,1
  8009a0:	000b883a 	mov	r5,zero
  8009a4:	000d883a 	mov	r6,zero
  8009a8:	08177980 	call	817798 <alt_irq_register>
#endif
}
  8009ac:	e037883a 	mov	sp,fp
  8009b0:	dfc00117 	ldw	ra,4(sp)
  8009b4:	df000017 	ldw	fp,0(sp)
  8009b8:	dec00204 	addi	sp,sp,8
  8009bc:	f800283a 	ret

008009c0 <TestButtons>:
 * 
 ******************************************************************************/


static void TestButtons( void )
{
  8009c0:	defffb04 	addi	sp,sp,-20
  8009c4:	dfc00415 	stw	ra,16(sp)
  8009c8:	df000315 	stw	fp,12(sp)
  8009cc:	df000304 	addi	fp,sp,12
  /* Variable which holds the last value of edge_capture to avoid 
   * "double counting" button/switch presses
   */
  int last_tested;
  /* Initialize the Buttons/Switches (SW0-SW3) */
  init_button_pio();
  8009d0:	080091c0 	call	80091c <init_button_pio>
  /* Initialize the variables which keep track of which buttons have been tested. */
  buttons_tested = 0x0;
  8009d4:	e03ffd05 	stb	zero,-12(fp)
  all_tested = 0xf;
  8009d8:	008003c4 	movi	r2,15
  8009dc:	e0bfff05 	stb	r2,-4(fp)

  /* Initialize edge_capture to avoid any "false" triggers from
   * a previous run.
   */
   
  edge_capture = 0;
  8009e0:	d0276b15 	stw	zero,-25172(gp)
  
  /* Set last_tested to a value that edge_capture can never equal
   * to avoid accidental equalities in the while() loop below.
   */
    
  last_tested = 0xffff;
  8009e4:	00bfffd4 	movui	r2,65535
  8009e8:	e0bffe15 	stw	r2,-8(fp)

  /* Print a quick message stating what is happening */
  
  printf("\nA loop will be run until all Push buttons (PB0-PB3) have been pressed.\n\n");
  8009ec:	010020b4 	movhi	r4,130
  8009f0:	212e3104 	addi	r4,r4,-18236
  8009f4:	0802fe40 	call	802fe4 <puts>
  printf("\n\tNOTE:  Once a button press has been detected, for a particular button,\n\tany further presses will be ignored!\n\n");
  8009f8:	010020b4 	movhi	r4,130
  8009fc:	212e4404 	addi	r4,r4,-18160
  800a00:	0802fe40 	call	802fe4 <puts>
  
  /* Loop until all buttons have been pressed.
   * This happens when buttons_tested == all_tested.
   */
  
  while (  buttons_tested != all_tested )
  800a04:	00003f06 	br	800b04 <TestButtons+0x144>
  { 
    if (last_tested == edge_capture)
  800a08:	d0a76b17 	ldw	r2,-25172(gp)
  800a0c:	e0fffe17 	ldw	r3,-8(fp)
  800a10:	1880011e 	bne	r3,r2,800a18 <TestButtons+0x58>
    {
      continue;
  800a14:	00003b06 	br	800b04 <TestButtons+0x144>
    }
    else
    {
      last_tested = edge_capture;
  800a18:	d0a76b17 	ldw	r2,-25172(gp)
  800a1c:	e0bffe15 	stw	r2,-8(fp)
      switch (edge_capture)
  800a20:	d0a76b17 	ldw	r2,-25172(gp)
  800a24:	10c000a0 	cmpeqi	r3,r2,2
  800a28:	1800151e 	bne	r3,zero,800a80 <TestButtons+0xc0>
  800a2c:	10c000c8 	cmpgei	r3,r2,3
  800a30:	1800031e 	bne	r3,zero,800a40 <TestButtons+0x80>
  800a34:	10800060 	cmpeqi	r2,r2,1
  800a38:	1000061e 	bne	r2,zero,800a54 <TestButtons+0x94>
  800a3c:	00003106 	br	800b04 <TestButtons+0x144>
  800a40:	10c00120 	cmpeqi	r3,r2,4
  800a44:	1800191e 	bne	r3,zero,800aac <TestButtons+0xec>
  800a48:	10800220 	cmpeqi	r2,r2,8
  800a4c:	1000221e 	bne	r2,zero,800ad8 <TestButtons+0x118>
  800a50:	00002c06 	br	800b04 <TestButtons+0x144>
      {
        case 0x1:
          if (buttons_tested & 0x1)
  800a54:	e0bffd03 	ldbu	r2,-12(fp)
  800a58:	1080004c 	andi	r2,r2,1
  800a5c:	10000126 	beq	r2,zero,800a64 <TestButtons+0xa4>
          {
            continue;
  800a60:	00002806 	br	800b04 <TestButtons+0x144>
          }
          else
          {
            printf("\nButton 1 (PB0) Pressed.\n");
  800a64:	010020b4 	movhi	r4,130
  800a68:	212e6004 	addi	r4,r4,-18048
  800a6c:	0802fe40 	call	802fe4 <puts>
            buttons_tested = buttons_tested | 0x1;
  800a70:	e0bffd03 	ldbu	r2,-12(fp)
  800a74:	10800054 	ori	r2,r2,1
  800a78:	e0bffd05 	stb	r2,-12(fp)
          } 
          break;
  800a7c:	00002106 	br	800b04 <TestButtons+0x144>
        case 0x2:
          if (buttons_tested & 0x2)
  800a80:	e0bffd03 	ldbu	r2,-12(fp)
  800a84:	1080008c 	andi	r2,r2,2
  800a88:	10000126 	beq	r2,zero,800a90 <TestButtons+0xd0>
          {
            continue;
  800a8c:	00001d06 	br	800b04 <TestButtons+0x144>
          } 
          else
          {
            printf("\nButton 2 (PB1) Pressed.\n");
  800a90:	010020b4 	movhi	r4,130
  800a94:	212e6704 	addi	r4,r4,-18020
  800a98:	0802fe40 	call	802fe4 <puts>
            buttons_tested = buttons_tested | 0x2;
  800a9c:	e0bffd03 	ldbu	r2,-12(fp)
  800aa0:	10800094 	ori	r2,r2,2
  800aa4:	e0bffd05 	stb	r2,-12(fp)
          }
          break;
  800aa8:	00001606 	br	800b04 <TestButtons+0x144>
        case 0x4:
          if (buttons_tested & 0x4)
  800aac:	e0bffd03 	ldbu	r2,-12(fp)
  800ab0:	1080010c 	andi	r2,r2,4
  800ab4:	10000126 	beq	r2,zero,800abc <TestButtons+0xfc>
          {
            continue;
  800ab8:	00001206 	br	800b04 <TestButtons+0x144>
          }
          else
          {
            printf("\nButton 3 (PB2) Pressed.\n");
  800abc:	010020b4 	movhi	r4,130
  800ac0:	212e6e04 	addi	r4,r4,-17992
  800ac4:	0802fe40 	call	802fe4 <puts>
            buttons_tested = buttons_tested | 0x4;
  800ac8:	e0bffd03 	ldbu	r2,-12(fp)
  800acc:	10800114 	ori	r2,r2,4
  800ad0:	e0bffd05 	stb	r2,-12(fp)
          }
          break;
  800ad4:	00000b06 	br	800b04 <TestButtons+0x144>
        case 0x8:
          if (buttons_tested & 0x8)
  800ad8:	e0bffd03 	ldbu	r2,-12(fp)
  800adc:	1080020c 	andi	r2,r2,8
  800ae0:	10000126 	beq	r2,zero,800ae8 <TestButtons+0x128>
          {
            continue;
  800ae4:	00000706 	br	800b04 <TestButtons+0x144>
          }
          else
          {
            printf("\nButton 4 (PB3) Pressed.\n");
  800ae8:	010020b4 	movhi	r4,130
  800aec:	212e7504 	addi	r4,r4,-17964
  800af0:	0802fe40 	call	802fe4 <puts>
            buttons_tested = buttons_tested | 0x8;
  800af4:	e0bffd03 	ldbu	r2,-12(fp)
  800af8:	10800214 	ori	r2,r2,8
  800afc:	e0bffd05 	stb	r2,-12(fp)
          }
          break;
  800b00:	0001883a 	nop
  
  /* Loop until all buttons have been pressed.
   * This happens when buttons_tested == all_tested.
   */
  
  while (  buttons_tested != all_tested )
  800b04:	e0fffd03 	ldbu	r3,-12(fp)
  800b08:	e0bfff03 	ldbu	r2,-4(fp)
  800b0c:	18bfbe1e 	bne	r3,r2,800a08 <__alt_data_end+0xff800a08>
          break;
      }
    }
  }
  /* Disable the button pio. */
  disable_button_pio();
  800b10:	080097c0 	call	80097c <disable_button_pio>

  printf ("\nAll Buttons (PB0-PB3) were pressed, at least, once.\n");
  800b14:	010020b4 	movhi	r4,130
  800b18:	212e7c04 	addi	r4,r4,-17936
  800b1c:	0802fe40 	call	802fe4 <puts>
  usleep(2000000);
  800b20:	010007f4 	movhi	r4,31
  800b24:	21212004 	addi	r4,r4,-31616
  800b28:	08181cc0 	call	8181cc <usleep>
  return;
  800b2c:	0001883a 	nop
}
  800b30:	e037883a 	mov	sp,fp
  800b34:	dfc00117 	ldw	ra,4(sp)
  800b38:	df000017 	ldw	fp,0(sp)
  800b3c:	dec00204 	addi	sp,sp,8
  800b40:	f800283a 	ret

00800b44 <sevenseg_set_hex>:
 * the variable 'hex' into what is displayed on
 * the Seven Segment Display.
 *********************************************/
 
static void sevenseg_set_hex(alt_u8 hex)
{
  800b44:	defffd04 	addi	sp,sp,-12
  800b48:	df000215 	stw	fp,8(sp)
  800b4c:	df000204 	addi	fp,sp,8
  800b50:	2005883a 	mov	r2,r4
  800b54:	e0bfff05 	stb	r2,-4(fp)
  static alt_u8 segments[16] = {
    0x81, 0xCF, 0x92, 0x86, 0xCC, 0xA4, 0xA0, 0x8F, 0x80, 0x84, /* 0-9 */
    0x88, 0xE0, 0xF2, 0xC2, 0xB0, 0xB8 };                       /* a-f */

  alt_u32 data = segments[hex & 15] | (segments[(hex >> 4) & 15] << 8);
  800b58:	e0bfff03 	ldbu	r2,-4(fp)
  800b5c:	10c003cc 	andi	r3,r2,15
  800b60:	008020b4 	movhi	r2,130
  800b64:	10b0b704 	addi	r2,r2,-15652
  800b68:	10c5883a 	add	r2,r2,r3
  800b6c:	10800003 	ldbu	r2,0(r2)
  800b70:	10c03fcc 	andi	r3,r2,255
  800b74:	e0bfff03 	ldbu	r2,-4(fp)
  800b78:	1004d13a 	srli	r2,r2,4
  800b7c:	10803fcc 	andi	r2,r2,255
  800b80:	110003cc 	andi	r4,r2,15
  800b84:	008020b4 	movhi	r2,130
  800b88:	10b0b704 	addi	r2,r2,-15652
  800b8c:	1105883a 	add	r2,r2,r4
  800b90:	10800003 	ldbu	r2,0(r2)
  800b94:	10803fcc 	andi	r2,r2,255
  800b98:	1004923a 	slli	r2,r2,8
  800b9c:	1884b03a 	or	r2,r3,r2
  800ba0:	e0bffe15 	stw	r2,-8(fp)

  IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_PIO_BASE, data);
  800ba4:	e0fffe17 	ldw	r3,-8(fp)
  800ba8:	00804034 	movhi	r2,256
  800bac:	10840004 	addi	r2,r2,4096
  800bb0:	10c00035 	stwio	r3,0(r2)
}
  800bb4:	e037883a 	mov	sp,fp
  800bb8:	df000017 	ldw	fp,0(sp)
  800bbc:	dec00104 	addi	sp,sp,4
  800bc0:	f800283a 	ret

00800bc4 <SevenSegCount>:
 * Displays from 0 to FF on the Seven Segment Display with
 * a 0.25s count delay implemented in a for loop.
 *******************************************/
 
static void SevenSegCount( void )
{
  800bc4:	defffd04 	addi	sp,sp,-12
  800bc8:	dfc00215 	stw	ra,8(sp)
  800bcc:	df000115 	stw	fp,4(sp)
  800bd0:	df000104 	addi	fp,sp,4
  alt_u32 count;
  for (count = 0; count <= 0xff; count++)
  800bd4:	e03fff15 	stw	zero,-4(fp)
  800bd8:	00000906 	br	800c00 <SevenSegCount+0x3c>
  {
    sevenseg_set_hex( count );
  800bdc:	e0bfff17 	ldw	r2,-4(fp)
  800be0:	10803fcc 	andi	r2,r2,255
  800be4:	1009883a 	mov	r4,r2
  800be8:	0800b440 	call	800b44 <sevenseg_set_hex>
    usleep(50000);
  800bec:	0130d414 	movui	r4,50000
  800bf0:	08181cc0 	call	8181cc <usleep>
 *******************************************/
 
static void SevenSegCount( void )
{
  alt_u32 count;
  for (count = 0; count <= 0xff; count++)
  800bf4:	e0bfff17 	ldw	r2,-4(fp)
  800bf8:	10800044 	addi	r2,r2,1
  800bfc:	e0bfff15 	stw	r2,-4(fp)
  800c00:	e0bfff17 	ldw	r2,-4(fp)
  800c04:	10804030 	cmpltui	r2,r2,256
  800c08:	103ff41e 	bne	r2,zero,800bdc <__alt_data_end+0xff800bdc>
  {
    sevenseg_set_hex( count );
    usleep(50000);
  }
}
  800c0c:	e037883a 	mov	sp,fp
  800c10:	dfc00117 	ldw	ra,4(sp)
  800c14:	df000017 	ldw	fp,0(sp)
  800c18:	dec00204 	addi	sp,sp,8
  800c1c:	f800283a 	ret

00800c20 <SevenSegControl>:
 * Displays selected Seven Segment segments.
 * 
 ******************************************/

static void SevenSegControl(void)
{
  800c20:	defffb04 	addi	sp,sp,-20
  800c24:	dfc00415 	stw	ra,16(sp)
  800c28:	df000315 	stw	fp,12(sp)
  800c2c:	df000304 	addi	fp,sp,12
  alt_32 bits;
  alt_32 keyBit;
  static char ch;
  
  /* Turn all segments off at start of test. */
  bits = 0xffff;
  800c30:	00bfffd4 	movui	r2,65535
  800c34:	e0bffd15 	stw	r2,-12(fp)
  IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_PIO_BASE, bits);
  800c38:	00804034 	movhi	r2,256
  800c3c:	10840004 	addi	r2,r2,4096
  800c40:	e0fffd17 	ldw	r3,-12(fp)
  800c44:	10c00035 	stwio	r3,0(r2)

  printf("\n");
  800c48:	01000284 	movi	r4,10
  800c4c:	0802f240 	call	802f24 <putchar>
  printf("\n");
  800c50:	01000284 	movi	r4,10
  800c54:	0802f240 	call	802f24 <putchar>
  printf("         +-A--+     +-a--+\n");
  800c58:	010020b4 	movhi	r4,130
  800c5c:	212e8a04 	addi	r4,r4,-17880
  800c60:	0802fe40 	call	802fe4 <puts>
  printf("         |    |     |    |\n");
  800c64:	010020b4 	movhi	r4,130
  800c68:	212e9104 	addi	r4,r4,-17852
  800c6c:	0802fe40 	call	802fe4 <puts>
  printf("         F    B     f    b\n");
  800c70:	010020b4 	movhi	r4,130
  800c74:	212e9804 	addi	r4,r4,-17824
  800c78:	0802fe40 	call	802fe4 <puts>
  printf("         |    |     |    |\n");
  800c7c:	010020b4 	movhi	r4,130
  800c80:	212e9104 	addi	r4,r4,-17852
  800c84:	0802fe40 	call	802fe4 <puts>
  printf("         +-G--+     +-g--+\n");
  800c88:	010020b4 	movhi	r4,130
  800c8c:	212e9f04 	addi	r4,r4,-17796
  800c90:	0802fe40 	call	802fe4 <puts>
  printf("         |    |     |    |\n");
  800c94:	010020b4 	movhi	r4,130
  800c98:	212e9104 	addi	r4,r4,-17852
  800c9c:	0802fe40 	call	802fe4 <puts>
  printf("         E    C     e    c\n");
  800ca0:	010020b4 	movhi	r4,130
  800ca4:	212ea604 	addi	r4,r4,-17768
  800ca8:	0802fe40 	call	802fe4 <puts>
  printf("         |    |     |    |\n");
  800cac:	010020b4 	movhi	r4,130
  800cb0:	212e9104 	addi	r4,r4,-17852
  800cb4:	0802fe40 	call	802fe4 <puts>
  printf("         +-D--+ (H) +-d--+ (h)\n");
  800cb8:	010020b4 	movhi	r4,130
  800cbc:	212ead04 	addi	r4,r4,-17740
  800cc0:	0802fe40 	call	802fe4 <puts>
  printf("\n");
  800cc4:	01000284 	movi	r4,10
  800cc8:	0802f240 	call	802f24 <putchar>
  printf("Press 'q' [Followed by <enter>] to exit this test.\n");
  800ccc:	010020b4 	movhi	r4,130
  800cd0:	212eb504 	addi	r4,r4,-17708
  800cd4:	0802fe40 	call	802fe4 <puts>
  
  do
  {
    /* Get terminal input. */
    GetInputString( entry, sizeof(entry), stdin);
  800cd8:	008020b4 	movhi	r2,130
  800cdc:	10b7f804 	addi	r2,r2,-8224
  800ce0:	10800017 	ldw	r2,0(r2)
  800ce4:	10800117 	ldw	r2,4(r2)
  800ce8:	e0ffff04 	addi	r3,fp,-4
  800cec:	1809883a 	mov	r4,r3
  800cf0:	01400104 	movi	r5,4
  800cf4:	100d883a 	mov	r6,r2
  800cf8:	08003400 	call	800340 <GetInputString>
    sscanf( entry, "%c\n", &ch );
  800cfc:	e0bfff04 	addi	r2,fp,-4
  800d00:	1009883a 	mov	r4,r2
  800d04:	014020b4 	movhi	r5,130
  800d08:	296db104 	addi	r5,r5,-18748
  800d0c:	d1a76a44 	addi	r6,gp,-25175
  800d10:	08032c40 	call	8032c4 <sscanf>
    /* SSD pattern algorithm. */
    keyBit = 0;
  800d14:	e03ffe15 	stw	zero,-8(fp)
    if(ch >= 'a' && ch <= 'g')
  800d18:	d0a76a43 	ldbu	r2,-25175(gp)
  800d1c:	10803fcc 	andi	r2,r2,255
  800d20:	1080201c 	xori	r2,r2,128
  800d24:	10bfe004 	addi	r2,r2,-128
  800d28:	10801850 	cmplti	r2,r2,97
  800d2c:	1000101e 	bne	r2,zero,800d70 <SevenSegControl+0x150>
  800d30:	d0a76a43 	ldbu	r2,-25175(gp)
  800d34:	10803fcc 	andi	r2,r2,255
  800d38:	1080201c 	xori	r2,r2,128
  800d3c:	10bfe004 	addi	r2,r2,-128
  800d40:	10801a08 	cmpgei	r2,r2,104
  800d44:	10000a1e 	bne	r2,zero,800d70 <SevenSegControl+0x150>
      keyBit = 1 << ('g' - ch);
  800d48:	d0a76a43 	ldbu	r2,-25175(gp)
  800d4c:	10803fcc 	andi	r2,r2,255
  800d50:	1080201c 	xori	r2,r2,128
  800d54:	10bfe004 	addi	r2,r2,-128
  800d58:	00c019c4 	movi	r3,103
  800d5c:	1885c83a 	sub	r2,r3,r2
  800d60:	00c00044 	movi	r3,1
  800d64:	1884983a 	sll	r2,r3,r2
  800d68:	e0bffe15 	stw	r2,-8(fp)
  800d6c:	00002706 	br	800e0c <SevenSegControl+0x1ec>
    else if(ch == 'h')
  800d70:	d0a76a43 	ldbu	r2,-25175(gp)
  800d74:	10803fcc 	andi	r2,r2,255
  800d78:	1080201c 	xori	r2,r2,128
  800d7c:	10bfe004 	addi	r2,r2,-128
  800d80:	10801a18 	cmpnei	r2,r2,104
  800d84:	1000031e 	bne	r2,zero,800d94 <SevenSegControl+0x174>
      keyBit = 1 << 7;
  800d88:	00802004 	movi	r2,128
  800d8c:	e0bffe15 	stw	r2,-8(fp)
  800d90:	00001e06 	br	800e0c <SevenSegControl+0x1ec>
    else if(ch >= 'A' && ch <= 'G')
  800d94:	d0a76a43 	ldbu	r2,-25175(gp)
  800d98:	10803fcc 	andi	r2,r2,255
  800d9c:	1080201c 	xori	r2,r2,128
  800da0:	10bfe004 	addi	r2,r2,-128
  800da4:	10801050 	cmplti	r2,r2,65
  800da8:	1000101e 	bne	r2,zero,800dec <SevenSegControl+0x1cc>
  800dac:	d0a76a43 	ldbu	r2,-25175(gp)
  800db0:	10803fcc 	andi	r2,r2,255
  800db4:	1080201c 	xori	r2,r2,128
  800db8:	10bfe004 	addi	r2,r2,-128
  800dbc:	10801208 	cmpgei	r2,r2,72
  800dc0:	10000a1e 	bne	r2,zero,800dec <SevenSegControl+0x1cc>
      keyBit = 1 << ('G' - ch + 8);
  800dc4:	d0a76a43 	ldbu	r2,-25175(gp)
  800dc8:	10803fcc 	andi	r2,r2,255
  800dcc:	1080201c 	xori	r2,r2,128
  800dd0:	10bfe004 	addi	r2,r2,-128
  800dd4:	00c013c4 	movi	r3,79
  800dd8:	1885c83a 	sub	r2,r3,r2
  800ddc:	00c00044 	movi	r3,1
  800de0:	1884983a 	sll	r2,r3,r2
  800de4:	e0bffe15 	stw	r2,-8(fp)
  800de8:	00000806 	br	800e0c <SevenSegControl+0x1ec>
    else if(ch == 'H')
  800dec:	d0a76a43 	ldbu	r2,-25175(gp)
  800df0:	10803fcc 	andi	r2,r2,255
  800df4:	1080201c 	xori	r2,r2,128
  800df8:	10bfe004 	addi	r2,r2,-128
  800dfc:	10801218 	cmpnei	r2,r2,72
  800e00:	1000021e 	bne	r2,zero,800e0c <SevenSegControl+0x1ec>
      keyBit = 1 << 15;
  800e04:	00a00014 	movui	r2,32768
  800e08:	e0bffe15 	stw	r2,-8(fp)
    bits ^= keyBit;
  800e0c:	e0fffd17 	ldw	r3,-12(fp)
  800e10:	e0bffe17 	ldw	r2,-8(fp)
  800e14:	1884f03a 	xor	r2,r3,r2
  800e18:	e0bffd15 	stw	r2,-12(fp)
    IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_PIO_BASE, bits);
  800e1c:	00804034 	movhi	r2,256
  800e20:	10840004 	addi	r2,r2,4096
  800e24:	e0fffd17 	ldw	r3,-12(fp)
  800e28:	10c00035 	stwio	r3,0(r2)
  }
  while( ch != 'q' );
  800e2c:	d0a76a43 	ldbu	r2,-25175(gp)
  800e30:	10803fcc 	andi	r2,r2,255
  800e34:	1080201c 	xori	r2,r2,128
  800e38:	10bfe004 	addi	r2,r2,-128
  800e3c:	10801c58 	cmpnei	r2,r2,113
  800e40:	103fa51e 	bne	r2,zero,800cd8 <__alt_data_end+0xff800cd8>
}
  800e44:	e037883a 	mov	sp,fp
  800e48:	dfc00117 	ldw	ra,4(sp)
  800e4c:	df000017 	ldw	fp,0(sp)
  800e50:	dec00204 	addi	sp,sp,8
  800e54:	f800283a 	ret

00800e58 <main>:
}

#endif

int main()
{
  800e58:	defffd04 	addi	sp,sp,-12
  800e5c:	dfc00215 	stw	ra,8(sp)
  800e60:	df000115 	stw	fp,4(sp)
  800e64:	df000104 	addi	fp,sp,4
  /* Declare variable for received character. */
  int ch;
  while (1)
  {
    ch = TopMenu();
  800e68:	080058c0 	call	80058c <TopMenu>
  800e6c:	10803fcc 	andi	r2,r2,255
  800e70:	1080201c 	xori	r2,r2,128
  800e74:	10bfe004 	addi	r2,r2,-128
  800e78:	e0bfff15 	stw	r2,-4(fp)
    if (ch == 'q')
  800e7c:	e0bfff17 	ldw	r2,-4(fp)
  800e80:	10801c58 	cmpnei	r2,r2,113
  800e84:	1000061e 	bne	r2,zero,800ea0 <main+0x48>
    {
      printf( "\nExiting from Board Diagnostics.\n");
  800e88:	010020b4 	movhi	r4,130
  800e8c:	212ec204 	addi	r4,r4,-17656
  800e90:	0802fe40 	call	802fe4 <puts>
      /* Send EOT to nios2-terminal on the other side of the link. */
      printf( "%c", EOT );
  800e94:	01000104 	movi	r4,4
  800e98:	0802f240 	call	802f24 <putchar>
      break;
  800e9c:	00000106 	br	800ea4 <main+0x4c>
    }
  }
  800ea0:	003ff106 	br	800e68 <__alt_data_end+0xff800e68>
  return( 0 );
  800ea4:	0005883a 	mov	r2,zero
}
  800ea8:	e037883a 	mov	sp,fp
  800eac:	dfc00117 	ldw	ra,4(sp)
  800eb0:	df000017 	ldw	fp,0(sp)
  800eb4:	dec00204 	addi	sp,sp,8
  800eb8:	f800283a 	ret

00800ebc <_fclose_r>:
  800ebc:	28003926 	beq	r5,zero,800fa4 <_fclose_r+0xe8>
  800ec0:	defffc04 	addi	sp,sp,-16
  800ec4:	dc400115 	stw	r17,4(sp)
  800ec8:	dc000015 	stw	r16,0(sp)
  800ecc:	dfc00315 	stw	ra,12(sp)
  800ed0:	dc800215 	stw	r18,8(sp)
  800ed4:	2023883a 	mov	r17,r4
  800ed8:	2821883a 	mov	r16,r5
  800edc:	20000226 	beq	r4,zero,800ee8 <_fclose_r+0x2c>
  800ee0:	20800e17 	ldw	r2,56(r4)
  800ee4:	10002726 	beq	r2,zero,800f84 <_fclose_r+0xc8>
  800ee8:	8080030f 	ldh	r2,12(r16)
  800eec:	1000071e 	bne	r2,zero,800f0c <_fclose_r+0x50>
  800ef0:	0005883a 	mov	r2,zero
  800ef4:	dfc00317 	ldw	ra,12(sp)
  800ef8:	dc800217 	ldw	r18,8(sp)
  800efc:	dc400117 	ldw	r17,4(sp)
  800f00:	dc000017 	ldw	r16,0(sp)
  800f04:	dec00404 	addi	sp,sp,16
  800f08:	f800283a 	ret
  800f0c:	8809883a 	mov	r4,r17
  800f10:	800b883a 	mov	r5,r16
  800f14:	0800fc00 	call	800fc0 <__sflush_r>
  800f18:	1025883a 	mov	r18,r2
  800f1c:	80800b17 	ldw	r2,44(r16)
  800f20:	10000426 	beq	r2,zero,800f34 <_fclose_r+0x78>
  800f24:	81400717 	ldw	r5,28(r16)
  800f28:	8809883a 	mov	r4,r17
  800f2c:	103ee83a 	callr	r2
  800f30:	10001616 	blt	r2,zero,800f8c <_fclose_r+0xd0>
  800f34:	8080030b 	ldhu	r2,12(r16)
  800f38:	1080200c 	andi	r2,r2,128
  800f3c:	1000151e 	bne	r2,zero,800f94 <_fclose_r+0xd8>
  800f40:	81400c17 	ldw	r5,48(r16)
  800f44:	28000526 	beq	r5,zero,800f5c <_fclose_r+0xa0>
  800f48:	80801004 	addi	r2,r16,64
  800f4c:	28800226 	beq	r5,r2,800f58 <_fclose_r+0x9c>
  800f50:	8809883a 	mov	r4,r17
  800f54:	08018700 	call	801870 <_free_r>
  800f58:	80000c15 	stw	zero,48(r16)
  800f5c:	81401117 	ldw	r5,68(r16)
  800f60:	28000326 	beq	r5,zero,800f70 <_fclose_r+0xb4>
  800f64:	8809883a 	mov	r4,r17
  800f68:	08018700 	call	801870 <_free_r>
  800f6c:	80001115 	stw	zero,68(r16)
  800f70:	08015b40 	call	8015b4 <__sfp_lock_acquire>
  800f74:	8000030d 	sth	zero,12(r16)
  800f78:	08015b80 	call	8015b8 <__sfp_lock_release>
  800f7c:	9005883a 	mov	r2,r18
  800f80:	003fdc06 	br	800ef4 <__alt_data_end+0xff800ef4>
  800f84:	08015a40 	call	8015a4 <__sinit>
  800f88:	003fd706 	br	800ee8 <__alt_data_end+0xff800ee8>
  800f8c:	04bfffc4 	movi	r18,-1
  800f90:	003fe806 	br	800f34 <__alt_data_end+0xff800f34>
  800f94:	81400417 	ldw	r5,16(r16)
  800f98:	8809883a 	mov	r4,r17
  800f9c:	08018700 	call	801870 <_free_r>
  800fa0:	003fe706 	br	800f40 <__alt_data_end+0xff800f40>
  800fa4:	0005883a 	mov	r2,zero
  800fa8:	f800283a 	ret

00800fac <fclose>:
  800fac:	008020b4 	movhi	r2,130
  800fb0:	10b7f804 	addi	r2,r2,-8224
  800fb4:	200b883a 	mov	r5,r4
  800fb8:	11000017 	ldw	r4,0(r2)
  800fbc:	0800ebc1 	jmpi	800ebc <_fclose_r>

00800fc0 <__sflush_r>:
  800fc0:	2880030b 	ldhu	r2,12(r5)
  800fc4:	defffb04 	addi	sp,sp,-20
  800fc8:	dcc00315 	stw	r19,12(sp)
  800fcc:	dc400115 	stw	r17,4(sp)
  800fd0:	dfc00415 	stw	ra,16(sp)
  800fd4:	dc800215 	stw	r18,8(sp)
  800fd8:	dc000015 	stw	r16,0(sp)
  800fdc:	10c0020c 	andi	r3,r2,8
  800fe0:	2823883a 	mov	r17,r5
  800fe4:	2027883a 	mov	r19,r4
  800fe8:	1800311e 	bne	r3,zero,8010b0 <__sflush_r+0xf0>
  800fec:	28c00117 	ldw	r3,4(r5)
  800ff0:	10820014 	ori	r2,r2,2048
  800ff4:	2880030d 	sth	r2,12(r5)
  800ff8:	00c04b0e 	bge	zero,r3,801128 <__sflush_r+0x168>
  800ffc:	8a000a17 	ldw	r8,40(r17)
  801000:	40002326 	beq	r8,zero,801090 <__sflush_r+0xd0>
  801004:	9c000017 	ldw	r16,0(r19)
  801008:	10c4000c 	andi	r3,r2,4096
  80100c:	98000015 	stw	zero,0(r19)
  801010:	18004826 	beq	r3,zero,801134 <__sflush_r+0x174>
  801014:	89801417 	ldw	r6,80(r17)
  801018:	10c0010c 	andi	r3,r2,4
  80101c:	18000626 	beq	r3,zero,801038 <__sflush_r+0x78>
  801020:	88c00117 	ldw	r3,4(r17)
  801024:	88800c17 	ldw	r2,48(r17)
  801028:	30cdc83a 	sub	r6,r6,r3
  80102c:	10000226 	beq	r2,zero,801038 <__sflush_r+0x78>
  801030:	88800f17 	ldw	r2,60(r17)
  801034:	308dc83a 	sub	r6,r6,r2
  801038:	89400717 	ldw	r5,28(r17)
  80103c:	9809883a 	mov	r4,r19
  801040:	000f883a 	mov	r7,zero
  801044:	403ee83a 	callr	r8
  801048:	00ffffc4 	movi	r3,-1
  80104c:	10c04426 	beq	r2,r3,801160 <__sflush_r+0x1a0>
  801050:	88c0030b 	ldhu	r3,12(r17)
  801054:	89000417 	ldw	r4,16(r17)
  801058:	88000115 	stw	zero,4(r17)
  80105c:	197dffcc 	andi	r5,r3,63487
  801060:	8940030d 	sth	r5,12(r17)
  801064:	89000015 	stw	r4,0(r17)
  801068:	18c4000c 	andi	r3,r3,4096
  80106c:	18002c1e 	bne	r3,zero,801120 <__sflush_r+0x160>
  801070:	89400c17 	ldw	r5,48(r17)
  801074:	9c000015 	stw	r16,0(r19)
  801078:	28000526 	beq	r5,zero,801090 <__sflush_r+0xd0>
  80107c:	88801004 	addi	r2,r17,64
  801080:	28800226 	beq	r5,r2,80108c <__sflush_r+0xcc>
  801084:	9809883a 	mov	r4,r19
  801088:	08018700 	call	801870 <_free_r>
  80108c:	88000c15 	stw	zero,48(r17)
  801090:	0005883a 	mov	r2,zero
  801094:	dfc00417 	ldw	ra,16(sp)
  801098:	dcc00317 	ldw	r19,12(sp)
  80109c:	dc800217 	ldw	r18,8(sp)
  8010a0:	dc400117 	ldw	r17,4(sp)
  8010a4:	dc000017 	ldw	r16,0(sp)
  8010a8:	dec00504 	addi	sp,sp,20
  8010ac:	f800283a 	ret
  8010b0:	2c800417 	ldw	r18,16(r5)
  8010b4:	903ff626 	beq	r18,zero,801090 <__alt_data_end+0xff801090>
  8010b8:	2c000017 	ldw	r16,0(r5)
  8010bc:	108000cc 	andi	r2,r2,3
  8010c0:	2c800015 	stw	r18,0(r5)
  8010c4:	84a1c83a 	sub	r16,r16,r18
  8010c8:	1000131e 	bne	r2,zero,801118 <__sflush_r+0x158>
  8010cc:	28800517 	ldw	r2,20(r5)
  8010d0:	88800215 	stw	r2,8(r17)
  8010d4:	04000316 	blt	zero,r16,8010e4 <__sflush_r+0x124>
  8010d8:	003fed06 	br	801090 <__alt_data_end+0xff801090>
  8010dc:	90a5883a 	add	r18,r18,r2
  8010e0:	043feb0e 	bge	zero,r16,801090 <__alt_data_end+0xff801090>
  8010e4:	88800917 	ldw	r2,36(r17)
  8010e8:	89400717 	ldw	r5,28(r17)
  8010ec:	800f883a 	mov	r7,r16
  8010f0:	900d883a 	mov	r6,r18
  8010f4:	9809883a 	mov	r4,r19
  8010f8:	103ee83a 	callr	r2
  8010fc:	80a1c83a 	sub	r16,r16,r2
  801100:	00bff616 	blt	zero,r2,8010dc <__alt_data_end+0xff8010dc>
  801104:	88c0030b 	ldhu	r3,12(r17)
  801108:	00bfffc4 	movi	r2,-1
  80110c:	18c01014 	ori	r3,r3,64
  801110:	88c0030d 	sth	r3,12(r17)
  801114:	003fdf06 	br	801094 <__alt_data_end+0xff801094>
  801118:	0005883a 	mov	r2,zero
  80111c:	003fec06 	br	8010d0 <__alt_data_end+0xff8010d0>
  801120:	88801415 	stw	r2,80(r17)
  801124:	003fd206 	br	801070 <__alt_data_end+0xff801070>
  801128:	28c00f17 	ldw	r3,60(r5)
  80112c:	00ffb316 	blt	zero,r3,800ffc <__alt_data_end+0xff800ffc>
  801130:	003fd706 	br	801090 <__alt_data_end+0xff801090>
  801134:	89400717 	ldw	r5,28(r17)
  801138:	000d883a 	mov	r6,zero
  80113c:	9809883a 	mov	r4,r19
  801140:	01c00044 	movi	r7,1
  801144:	403ee83a 	callr	r8
  801148:	100d883a 	mov	r6,r2
  80114c:	00bfffc4 	movi	r2,-1
  801150:	30801426 	beq	r6,r2,8011a4 <__sflush_r+0x1e4>
  801154:	8880030b 	ldhu	r2,12(r17)
  801158:	8a000a17 	ldw	r8,40(r17)
  80115c:	003fae06 	br	801018 <__alt_data_end+0xff801018>
  801160:	98c00017 	ldw	r3,0(r19)
  801164:	183fba26 	beq	r3,zero,801050 <__alt_data_end+0xff801050>
  801168:	01000744 	movi	r4,29
  80116c:	19000626 	beq	r3,r4,801188 <__sflush_r+0x1c8>
  801170:	01000584 	movi	r4,22
  801174:	19000426 	beq	r3,r4,801188 <__sflush_r+0x1c8>
  801178:	88c0030b 	ldhu	r3,12(r17)
  80117c:	18c01014 	ori	r3,r3,64
  801180:	88c0030d 	sth	r3,12(r17)
  801184:	003fc306 	br	801094 <__alt_data_end+0xff801094>
  801188:	8880030b 	ldhu	r2,12(r17)
  80118c:	88c00417 	ldw	r3,16(r17)
  801190:	88000115 	stw	zero,4(r17)
  801194:	10bdffcc 	andi	r2,r2,63487
  801198:	8880030d 	sth	r2,12(r17)
  80119c:	88c00015 	stw	r3,0(r17)
  8011a0:	003fb306 	br	801070 <__alt_data_end+0xff801070>
  8011a4:	98800017 	ldw	r2,0(r19)
  8011a8:	103fea26 	beq	r2,zero,801154 <__alt_data_end+0xff801154>
  8011ac:	00c00744 	movi	r3,29
  8011b0:	10c00226 	beq	r2,r3,8011bc <__sflush_r+0x1fc>
  8011b4:	00c00584 	movi	r3,22
  8011b8:	10ffd21e 	bne	r2,r3,801104 <__alt_data_end+0xff801104>
  8011bc:	9c000015 	stw	r16,0(r19)
  8011c0:	0005883a 	mov	r2,zero
  8011c4:	003fb306 	br	801094 <__alt_data_end+0xff801094>

008011c8 <_fflush_r>:
  8011c8:	defffd04 	addi	sp,sp,-12
  8011cc:	dc000115 	stw	r16,4(sp)
  8011d0:	dfc00215 	stw	ra,8(sp)
  8011d4:	2021883a 	mov	r16,r4
  8011d8:	20000226 	beq	r4,zero,8011e4 <_fflush_r+0x1c>
  8011dc:	20800e17 	ldw	r2,56(r4)
  8011e0:	10000c26 	beq	r2,zero,801214 <_fflush_r+0x4c>
  8011e4:	2880030f 	ldh	r2,12(r5)
  8011e8:	1000051e 	bne	r2,zero,801200 <_fflush_r+0x38>
  8011ec:	0005883a 	mov	r2,zero
  8011f0:	dfc00217 	ldw	ra,8(sp)
  8011f4:	dc000117 	ldw	r16,4(sp)
  8011f8:	dec00304 	addi	sp,sp,12
  8011fc:	f800283a 	ret
  801200:	8009883a 	mov	r4,r16
  801204:	dfc00217 	ldw	ra,8(sp)
  801208:	dc000117 	ldw	r16,4(sp)
  80120c:	dec00304 	addi	sp,sp,12
  801210:	0800fc01 	jmpi	800fc0 <__sflush_r>
  801214:	d9400015 	stw	r5,0(sp)
  801218:	08015a40 	call	8015a4 <__sinit>
  80121c:	d9400017 	ldw	r5,0(sp)
  801220:	003ff006 	br	8011e4 <__alt_data_end+0xff8011e4>

00801224 <fflush>:
  801224:	20000526 	beq	r4,zero,80123c <fflush+0x18>
  801228:	008020b4 	movhi	r2,130
  80122c:	10b7f804 	addi	r2,r2,-8224
  801230:	200b883a 	mov	r5,r4
  801234:	11000017 	ldw	r4,0(r2)
  801238:	08011c81 	jmpi	8011c8 <_fflush_r>
  80123c:	008020b4 	movhi	r2,130
  801240:	10b7f704 	addi	r2,r2,-8228
  801244:	11000017 	ldw	r4,0(r2)
  801248:	01402034 	movhi	r5,128
  80124c:	29447204 	addi	r5,r5,4552
  801250:	080210c1 	jmpi	80210c <_fwalk_reent>

00801254 <__fp_lock>:
  801254:	0005883a 	mov	r2,zero
  801258:	f800283a 	ret

0080125c <__fp_unlock>:
  80125c:	0005883a 	mov	r2,zero
  801260:	f800283a 	ret

00801264 <_cleanup_r>:
  801264:	01402034 	movhi	r5,128
  801268:	2943af04 	addi	r5,r5,3772
  80126c:	080210c1 	jmpi	80210c <_fwalk_reent>

00801270 <__sinit.part.1>:
  801270:	defff704 	addi	sp,sp,-36
  801274:	00c02034 	movhi	r3,128
  801278:	dfc00815 	stw	ra,32(sp)
  80127c:	ddc00715 	stw	r23,28(sp)
  801280:	dd800615 	stw	r22,24(sp)
  801284:	dd400515 	stw	r21,20(sp)
  801288:	dd000415 	stw	r20,16(sp)
  80128c:	dcc00315 	stw	r19,12(sp)
  801290:	dc800215 	stw	r18,8(sp)
  801294:	dc400115 	stw	r17,4(sp)
  801298:	dc000015 	stw	r16,0(sp)
  80129c:	18c49904 	addi	r3,r3,4708
  8012a0:	24000117 	ldw	r16,4(r4)
  8012a4:	20c00f15 	stw	r3,60(r4)
  8012a8:	2080bb04 	addi	r2,r4,748
  8012ac:	00c000c4 	movi	r3,3
  8012b0:	20c0b915 	stw	r3,740(r4)
  8012b4:	2080ba15 	stw	r2,744(r4)
  8012b8:	2000b815 	stw	zero,736(r4)
  8012bc:	05c00204 	movi	r23,8
  8012c0:	00800104 	movi	r2,4
  8012c4:	2025883a 	mov	r18,r4
  8012c8:	b80d883a 	mov	r6,r23
  8012cc:	81001704 	addi	r4,r16,92
  8012d0:	000b883a 	mov	r5,zero
  8012d4:	80000015 	stw	zero,0(r16)
  8012d8:	80000115 	stw	zero,4(r16)
  8012dc:	80000215 	stw	zero,8(r16)
  8012e0:	8080030d 	sth	r2,12(r16)
  8012e4:	80001915 	stw	zero,100(r16)
  8012e8:	8000038d 	sth	zero,14(r16)
  8012ec:	80000415 	stw	zero,16(r16)
  8012f0:	80000515 	stw	zero,20(r16)
  8012f4:	80000615 	stw	zero,24(r16)
  8012f8:	0802d340 	call	802d34 <memset>
  8012fc:	05802034 	movhi	r22,128
  801300:	94400217 	ldw	r17,8(r18)
  801304:	05402034 	movhi	r21,128
  801308:	05002034 	movhi	r20,128
  80130c:	04c02034 	movhi	r19,128
  801310:	b58cee04 	addi	r22,r22,13240
  801314:	ad4d0504 	addi	r21,r21,13332
  801318:	a50d2404 	addi	r20,r20,13456
  80131c:	9ccd3b04 	addi	r19,r19,13548
  801320:	85800815 	stw	r22,32(r16)
  801324:	85400915 	stw	r21,36(r16)
  801328:	85000a15 	stw	r20,40(r16)
  80132c:	84c00b15 	stw	r19,44(r16)
  801330:	84000715 	stw	r16,28(r16)
  801334:	00800284 	movi	r2,10
  801338:	8880030d 	sth	r2,12(r17)
  80133c:	00800044 	movi	r2,1
  801340:	89001704 	addi	r4,r17,92
  801344:	b80d883a 	mov	r6,r23
  801348:	000b883a 	mov	r5,zero
  80134c:	88000015 	stw	zero,0(r17)
  801350:	88000115 	stw	zero,4(r17)
  801354:	88000215 	stw	zero,8(r17)
  801358:	88001915 	stw	zero,100(r17)
  80135c:	8880038d 	sth	r2,14(r17)
  801360:	88000415 	stw	zero,16(r17)
  801364:	88000515 	stw	zero,20(r17)
  801368:	88000615 	stw	zero,24(r17)
  80136c:	0802d340 	call	802d34 <memset>
  801370:	94000317 	ldw	r16,12(r18)
  801374:	00800484 	movi	r2,18
  801378:	8c400715 	stw	r17,28(r17)
  80137c:	8d800815 	stw	r22,32(r17)
  801380:	8d400915 	stw	r21,36(r17)
  801384:	8d000a15 	stw	r20,40(r17)
  801388:	8cc00b15 	stw	r19,44(r17)
  80138c:	8080030d 	sth	r2,12(r16)
  801390:	00800084 	movi	r2,2
  801394:	80000015 	stw	zero,0(r16)
  801398:	80000115 	stw	zero,4(r16)
  80139c:	80000215 	stw	zero,8(r16)
  8013a0:	80001915 	stw	zero,100(r16)
  8013a4:	8080038d 	sth	r2,14(r16)
  8013a8:	80000415 	stw	zero,16(r16)
  8013ac:	80000515 	stw	zero,20(r16)
  8013b0:	80000615 	stw	zero,24(r16)
  8013b4:	81001704 	addi	r4,r16,92
  8013b8:	000b883a 	mov	r5,zero
  8013bc:	b80d883a 	mov	r6,r23
  8013c0:	0802d340 	call	802d34 <memset>
  8013c4:	00800044 	movi	r2,1
  8013c8:	84000715 	stw	r16,28(r16)
  8013cc:	85800815 	stw	r22,32(r16)
  8013d0:	85400915 	stw	r21,36(r16)
  8013d4:	85000a15 	stw	r20,40(r16)
  8013d8:	84c00b15 	stw	r19,44(r16)
  8013dc:	90800e15 	stw	r2,56(r18)
  8013e0:	dfc00817 	ldw	ra,32(sp)
  8013e4:	ddc00717 	ldw	r23,28(sp)
  8013e8:	dd800617 	ldw	r22,24(sp)
  8013ec:	dd400517 	ldw	r21,20(sp)
  8013f0:	dd000417 	ldw	r20,16(sp)
  8013f4:	dcc00317 	ldw	r19,12(sp)
  8013f8:	dc800217 	ldw	r18,8(sp)
  8013fc:	dc400117 	ldw	r17,4(sp)
  801400:	dc000017 	ldw	r16,0(sp)
  801404:	dec00904 	addi	sp,sp,36
  801408:	f800283a 	ret

0080140c <__sfmoreglue>:
  80140c:	defffc04 	addi	sp,sp,-16
  801410:	dc400115 	stw	r17,4(sp)
  801414:	2c7fffc4 	addi	r17,r5,-1
  801418:	8c401a24 	muli	r17,r17,104
  80141c:	dc800215 	stw	r18,8(sp)
  801420:	2825883a 	mov	r18,r5
  801424:	89401d04 	addi	r5,r17,116
  801428:	dc000015 	stw	r16,0(sp)
  80142c:	dfc00315 	stw	ra,12(sp)
  801430:	080258c0 	call	80258c <_malloc_r>
  801434:	1021883a 	mov	r16,r2
  801438:	10000726 	beq	r2,zero,801458 <__sfmoreglue+0x4c>
  80143c:	11000304 	addi	r4,r2,12
  801440:	10000015 	stw	zero,0(r2)
  801444:	14800115 	stw	r18,4(r2)
  801448:	11000215 	stw	r4,8(r2)
  80144c:	000b883a 	mov	r5,zero
  801450:	89801a04 	addi	r6,r17,104
  801454:	0802d340 	call	802d34 <memset>
  801458:	8005883a 	mov	r2,r16
  80145c:	dfc00317 	ldw	ra,12(sp)
  801460:	dc800217 	ldw	r18,8(sp)
  801464:	dc400117 	ldw	r17,4(sp)
  801468:	dc000017 	ldw	r16,0(sp)
  80146c:	dec00404 	addi	sp,sp,16
  801470:	f800283a 	ret

00801474 <__sfp>:
  801474:	008020b4 	movhi	r2,130
  801478:	defffb04 	addi	sp,sp,-20
  80147c:	10b7f704 	addi	r2,r2,-8228
  801480:	dc800215 	stw	r18,8(sp)
  801484:	14800017 	ldw	r18,0(r2)
  801488:	dcc00315 	stw	r19,12(sp)
  80148c:	dfc00415 	stw	ra,16(sp)
  801490:	90800e17 	ldw	r2,56(r18)
  801494:	dc400115 	stw	r17,4(sp)
  801498:	dc000015 	stw	r16,0(sp)
  80149c:	2027883a 	mov	r19,r4
  8014a0:	1000021e 	bne	r2,zero,8014ac <__sfp+0x38>
  8014a4:	9009883a 	mov	r4,r18
  8014a8:	08012700 	call	801270 <__sinit.part.1>
  8014ac:	9480b804 	addi	r18,r18,736
  8014b0:	047fffc4 	movi	r17,-1
  8014b4:	91400117 	ldw	r5,4(r18)
  8014b8:	94000217 	ldw	r16,8(r18)
  8014bc:	297fffc4 	addi	r5,r5,-1
  8014c0:	28000a16 	blt	r5,zero,8014ec <__sfp+0x78>
  8014c4:	8080030f 	ldh	r2,12(r16)
  8014c8:	10000c26 	beq	r2,zero,8014fc <__sfp+0x88>
  8014cc:	80c01d04 	addi	r3,r16,116
  8014d0:	00000206 	br	8014dc <__sfp+0x68>
  8014d4:	18bfe60f 	ldh	r2,-104(r3)
  8014d8:	10000826 	beq	r2,zero,8014fc <__sfp+0x88>
  8014dc:	297fffc4 	addi	r5,r5,-1
  8014e0:	1c3ffd04 	addi	r16,r3,-12
  8014e4:	18c01a04 	addi	r3,r3,104
  8014e8:	2c7ffa1e 	bne	r5,r17,8014d4 <__alt_data_end+0xff8014d4>
  8014ec:	90800017 	ldw	r2,0(r18)
  8014f0:	10001d26 	beq	r2,zero,801568 <__sfp+0xf4>
  8014f4:	1025883a 	mov	r18,r2
  8014f8:	003fee06 	br	8014b4 <__alt_data_end+0xff8014b4>
  8014fc:	00bfffc4 	movi	r2,-1
  801500:	8080038d 	sth	r2,14(r16)
  801504:	00800044 	movi	r2,1
  801508:	8080030d 	sth	r2,12(r16)
  80150c:	80001915 	stw	zero,100(r16)
  801510:	80000015 	stw	zero,0(r16)
  801514:	80000215 	stw	zero,8(r16)
  801518:	80000115 	stw	zero,4(r16)
  80151c:	80000415 	stw	zero,16(r16)
  801520:	80000515 	stw	zero,20(r16)
  801524:	80000615 	stw	zero,24(r16)
  801528:	81001704 	addi	r4,r16,92
  80152c:	000b883a 	mov	r5,zero
  801530:	01800204 	movi	r6,8
  801534:	0802d340 	call	802d34 <memset>
  801538:	8005883a 	mov	r2,r16
  80153c:	80000c15 	stw	zero,48(r16)
  801540:	80000d15 	stw	zero,52(r16)
  801544:	80001115 	stw	zero,68(r16)
  801548:	80001215 	stw	zero,72(r16)
  80154c:	dfc00417 	ldw	ra,16(sp)
  801550:	dcc00317 	ldw	r19,12(sp)
  801554:	dc800217 	ldw	r18,8(sp)
  801558:	dc400117 	ldw	r17,4(sp)
  80155c:	dc000017 	ldw	r16,0(sp)
  801560:	dec00504 	addi	sp,sp,20
  801564:	f800283a 	ret
  801568:	9809883a 	mov	r4,r19
  80156c:	01400104 	movi	r5,4
  801570:	080140c0 	call	80140c <__sfmoreglue>
  801574:	90800015 	stw	r2,0(r18)
  801578:	103fde1e 	bne	r2,zero,8014f4 <__alt_data_end+0xff8014f4>
  80157c:	00800304 	movi	r2,12
  801580:	98800015 	stw	r2,0(r19)
  801584:	0005883a 	mov	r2,zero
  801588:	003ff006 	br	80154c <__alt_data_end+0xff80154c>

0080158c <_cleanup>:
  80158c:	008020b4 	movhi	r2,130
  801590:	10b7f704 	addi	r2,r2,-8228
  801594:	11000017 	ldw	r4,0(r2)
  801598:	01402034 	movhi	r5,128
  80159c:	2943af04 	addi	r5,r5,3772
  8015a0:	080210c1 	jmpi	80210c <_fwalk_reent>

008015a4 <__sinit>:
  8015a4:	20800e17 	ldw	r2,56(r4)
  8015a8:	10000126 	beq	r2,zero,8015b0 <__sinit+0xc>
  8015ac:	f800283a 	ret
  8015b0:	08012701 	jmpi	801270 <__sinit.part.1>

008015b4 <__sfp_lock_acquire>:
  8015b4:	f800283a 	ret

008015b8 <__sfp_lock_release>:
  8015b8:	f800283a 	ret

008015bc <__sinit_lock_acquire>:
  8015bc:	f800283a 	ret

008015c0 <__sinit_lock_release>:
  8015c0:	f800283a 	ret

008015c4 <__fp_lock_all>:
  8015c4:	008020b4 	movhi	r2,130
  8015c8:	10b7f804 	addi	r2,r2,-8224
  8015cc:	11000017 	ldw	r4,0(r2)
  8015d0:	01402034 	movhi	r5,128
  8015d4:	29449504 	addi	r5,r5,4692
  8015d8:	08020481 	jmpi	802048 <_fwalk>

008015dc <__fp_unlock_all>:
  8015dc:	008020b4 	movhi	r2,130
  8015e0:	10b7f804 	addi	r2,r2,-8224
  8015e4:	11000017 	ldw	r4,0(r2)
  8015e8:	01402034 	movhi	r5,128
  8015ec:	29449704 	addi	r5,r5,4700
  8015f0:	08020481 	jmpi	802048 <_fwalk>

008015f4 <_fopen_r>:
  8015f4:	defffa04 	addi	sp,sp,-24
  8015f8:	dcc00415 	stw	r19,16(sp)
  8015fc:	2827883a 	mov	r19,r5
  801600:	300b883a 	mov	r5,r6
  801604:	d80d883a 	mov	r6,sp
  801608:	dc800315 	stw	r18,12(sp)
  80160c:	dc400215 	stw	r17,8(sp)
  801610:	dfc00515 	stw	ra,20(sp)
  801614:	dc000115 	stw	r16,4(sp)
  801618:	2025883a 	mov	r18,r4
  80161c:	08087e00 	call	8087e0 <__sflags>
  801620:	1023883a 	mov	r17,r2
  801624:	10002626 	beq	r2,zero,8016c0 <_fopen_r+0xcc>
  801628:	9009883a 	mov	r4,r18
  80162c:	08014740 	call	801474 <__sfp>
  801630:	1021883a 	mov	r16,r2
  801634:	10002226 	beq	r2,zero,8016c0 <_fopen_r+0xcc>
  801638:	d9800017 	ldw	r6,0(sp)
  80163c:	9009883a 	mov	r4,r18
  801640:	980b883a 	mov	r5,r19
  801644:	01c06d84 	movi	r7,438
  801648:	0802e580 	call	802e58 <_open_r>
  80164c:	10001916 	blt	r2,zero,8016b4 <_fopen_r+0xc0>
  801650:	8080038d 	sth	r2,14(r16)
  801654:	00802034 	movhi	r2,128
  801658:	108cee04 	addi	r2,r2,13240
  80165c:	80800815 	stw	r2,32(r16)
  801660:	00802034 	movhi	r2,128
  801664:	108d0504 	addi	r2,r2,13332
  801668:	80800915 	stw	r2,36(r16)
  80166c:	00802034 	movhi	r2,128
  801670:	108d2404 	addi	r2,r2,13456
  801674:	80800a15 	stw	r2,40(r16)
  801678:	00802034 	movhi	r2,128
  80167c:	108d3b04 	addi	r2,r2,13548
  801680:	8440030d 	sth	r17,12(r16)
  801684:	84000715 	stw	r16,28(r16)
  801688:	80800b15 	stw	r2,44(r16)
  80168c:	8c40400c 	andi	r17,r17,256
  801690:	88000d1e 	bne	r17,zero,8016c8 <_fopen_r+0xd4>
  801694:	8005883a 	mov	r2,r16
  801698:	dfc00517 	ldw	ra,20(sp)
  80169c:	dcc00417 	ldw	r19,16(sp)
  8016a0:	dc800317 	ldw	r18,12(sp)
  8016a4:	dc400217 	ldw	r17,8(sp)
  8016a8:	dc000117 	ldw	r16,4(sp)
  8016ac:	dec00604 	addi	sp,sp,24
  8016b0:	f800283a 	ret
  8016b4:	08015b40 	call	8015b4 <__sfp_lock_acquire>
  8016b8:	8000030d 	sth	zero,12(r16)
  8016bc:	08015b80 	call	8015b8 <__sfp_lock_release>
  8016c0:	0005883a 	mov	r2,zero
  8016c4:	003ff406 	br	801698 <__alt_data_end+0xff801698>
  8016c8:	9009883a 	mov	r4,r18
  8016cc:	800b883a 	mov	r5,r16
  8016d0:	000d883a 	mov	r6,zero
  8016d4:	01c00084 	movi	r7,2
  8016d8:	0801b600 	call	801b60 <_fseek_r>
  8016dc:	8005883a 	mov	r2,r16
  8016e0:	003fed06 	br	801698 <__alt_data_end+0xff801698>

008016e4 <fopen>:
  8016e4:	00c020b4 	movhi	r3,130
  8016e8:	18f7f804 	addi	r3,r3,-8224
  8016ec:	2005883a 	mov	r2,r4
  8016f0:	19000017 	ldw	r4,0(r3)
  8016f4:	280d883a 	mov	r6,r5
  8016f8:	100b883a 	mov	r5,r2
  8016fc:	08015f41 	jmpi	8015f4 <_fopen_r>

00801700 <_fprintf_r>:
  801700:	defffe04 	addi	sp,sp,-8
  801704:	2809883a 	mov	r4,r5
  801708:	dfc00015 	stw	ra,0(sp)
  80170c:	d9c00115 	stw	r7,4(sp)
  801710:	300b883a 	mov	r5,r6
  801714:	d9800104 	addi	r6,sp,4
  801718:	0806bd40 	call	806bd4 <__vfprintf_internal>
  80171c:	dfc00017 	ldw	ra,0(sp)
  801720:	dec00204 	addi	sp,sp,8
  801724:	f800283a 	ret

00801728 <fprintf>:
  801728:	defffd04 	addi	sp,sp,-12
  80172c:	dfc00015 	stw	ra,0(sp)
  801730:	d9800115 	stw	r6,4(sp)
  801734:	d9c00215 	stw	r7,8(sp)
  801738:	d9800104 	addi	r6,sp,4
  80173c:	0806bd40 	call	806bd4 <__vfprintf_internal>
  801740:	dfc00017 	ldw	ra,0(sp)
  801744:	dec00304 	addi	sp,sp,12
  801748:	f800283a 	ret

0080174c <_malloc_trim_r>:
  80174c:	defffb04 	addi	sp,sp,-20
  801750:	dcc00315 	stw	r19,12(sp)
  801754:	04c020b4 	movhi	r19,130
  801758:	dc800215 	stw	r18,8(sp)
  80175c:	dc400115 	stw	r17,4(sp)
  801760:	dc000015 	stw	r16,0(sp)
  801764:	dfc00415 	stw	ra,16(sp)
  801768:	2821883a 	mov	r16,r5
  80176c:	9cf1c404 	addi	r19,r19,-14576
  801770:	2025883a 	mov	r18,r4
  801774:	0817cbc0 	call	817cbc <__malloc_lock>
  801778:	98800217 	ldw	r2,8(r19)
  80177c:	14400117 	ldw	r17,4(r2)
  801780:	00bfff04 	movi	r2,-4
  801784:	88a2703a 	and	r17,r17,r2
  801788:	8c21c83a 	sub	r16,r17,r16
  80178c:	8403fbc4 	addi	r16,r16,4079
  801790:	8020d33a 	srli	r16,r16,12
  801794:	0083ffc4 	movi	r2,4095
  801798:	843fffc4 	addi	r16,r16,-1
  80179c:	8020933a 	slli	r16,r16,12
  8017a0:	1400060e 	bge	r2,r16,8017bc <_malloc_trim_r+0x70>
  8017a4:	9009883a 	mov	r4,r18
  8017a8:	000b883a 	mov	r5,zero
  8017ac:	08032700 	call	803270 <_sbrk_r>
  8017b0:	98c00217 	ldw	r3,8(r19)
  8017b4:	1c47883a 	add	r3,r3,r17
  8017b8:	10c00a26 	beq	r2,r3,8017e4 <_malloc_trim_r+0x98>
  8017bc:	9009883a 	mov	r4,r18
  8017c0:	0817cdc0 	call	817cdc <__malloc_unlock>
  8017c4:	0005883a 	mov	r2,zero
  8017c8:	dfc00417 	ldw	ra,16(sp)
  8017cc:	dcc00317 	ldw	r19,12(sp)
  8017d0:	dc800217 	ldw	r18,8(sp)
  8017d4:	dc400117 	ldw	r17,4(sp)
  8017d8:	dc000017 	ldw	r16,0(sp)
  8017dc:	dec00504 	addi	sp,sp,20
  8017e0:	f800283a 	ret
  8017e4:	9009883a 	mov	r4,r18
  8017e8:	040bc83a 	sub	r5,zero,r16
  8017ec:	08032700 	call	803270 <_sbrk_r>
  8017f0:	00ffffc4 	movi	r3,-1
  8017f4:	10c00d26 	beq	r2,r3,80182c <_malloc_trim_r+0xe0>
  8017f8:	00c020b4 	movhi	r3,130
  8017fc:	18ff7104 	addi	r3,r3,-572
  801800:	18800017 	ldw	r2,0(r3)
  801804:	99000217 	ldw	r4,8(r19)
  801808:	8c23c83a 	sub	r17,r17,r16
  80180c:	8c400054 	ori	r17,r17,1
  801810:	1421c83a 	sub	r16,r2,r16
  801814:	24400115 	stw	r17,4(r4)
  801818:	9009883a 	mov	r4,r18
  80181c:	1c000015 	stw	r16,0(r3)
  801820:	0817cdc0 	call	817cdc <__malloc_unlock>
  801824:	00800044 	movi	r2,1
  801828:	003fe706 	br	8017c8 <__alt_data_end+0xff8017c8>
  80182c:	9009883a 	mov	r4,r18
  801830:	000b883a 	mov	r5,zero
  801834:	08032700 	call	803270 <_sbrk_r>
  801838:	99000217 	ldw	r4,8(r19)
  80183c:	014003c4 	movi	r5,15
  801840:	1107c83a 	sub	r3,r2,r4
  801844:	28ffdd0e 	bge	r5,r3,8017bc <__alt_data_end+0xff8017bc>
  801848:	014020b4 	movhi	r5,130
  80184c:	2977f904 	addi	r5,r5,-8220
  801850:	29400017 	ldw	r5,0(r5)
  801854:	18c00054 	ori	r3,r3,1
  801858:	20c00115 	stw	r3,4(r4)
  80185c:	00c020b4 	movhi	r3,130
  801860:	1145c83a 	sub	r2,r2,r5
  801864:	18ff7104 	addi	r3,r3,-572
  801868:	18800015 	stw	r2,0(r3)
  80186c:	003fd306 	br	8017bc <__alt_data_end+0xff8017bc>

00801870 <_free_r>:
  801870:	28004c26 	beq	r5,zero,8019a4 <_free_r+0x134>
  801874:	defffd04 	addi	sp,sp,-12
  801878:	dc400115 	stw	r17,4(sp)
  80187c:	dc000015 	stw	r16,0(sp)
  801880:	2023883a 	mov	r17,r4
  801884:	2821883a 	mov	r16,r5
  801888:	dfc00215 	stw	ra,8(sp)
  80188c:	0817cbc0 	call	817cbc <__malloc_lock>
  801890:	813fff17 	ldw	r4,-4(r16)
  801894:	00bfff84 	movi	r2,-2
  801898:	024020b4 	movhi	r9,130
  80189c:	81bffe04 	addi	r6,r16,-8
  8018a0:	2084703a 	and	r2,r4,r2
  8018a4:	4a71c404 	addi	r9,r9,-14576
  8018a8:	308b883a 	add	r5,r6,r2
  8018ac:	2a000117 	ldw	r8,4(r5)
  8018b0:	49c00217 	ldw	r7,8(r9)
  8018b4:	00ffff04 	movi	r3,-4
  8018b8:	40c6703a 	and	r3,r8,r3
  8018bc:	39405326 	beq	r7,r5,801a0c <_free_r+0x19c>
  8018c0:	28c00115 	stw	r3,4(r5)
  8018c4:	2100004c 	andi	r4,r4,1
  8018c8:	2000091e 	bne	r4,zero,8018f0 <_free_r+0x80>
  8018cc:	81fffe17 	ldw	r7,-8(r16)
  8018d0:	4a000204 	addi	r8,r9,8
  8018d4:	31cdc83a 	sub	r6,r6,r7
  8018d8:	31000217 	ldw	r4,8(r6)
  8018dc:	11c5883a 	add	r2,r2,r7
  8018e0:	22006126 	beq	r4,r8,801a68 <_free_r+0x1f8>
  8018e4:	31c00317 	ldw	r7,12(r6)
  8018e8:	21c00315 	stw	r7,12(r4)
  8018ec:	39000215 	stw	r4,8(r7)
  8018f0:	28c9883a 	add	r4,r5,r3
  8018f4:	21c00117 	ldw	r7,4(r4)
  8018f8:	39c0004c 	andi	r7,r7,1
  8018fc:	38000d1e 	bne	r7,zero,801934 <_free_r+0xc4>
  801900:	29000217 	ldw	r4,8(r5)
  801904:	10c5883a 	add	r2,r2,r3
  801908:	00c020b4 	movhi	r3,130
  80190c:	18f1c604 	addi	r3,r3,-14568
  801910:	20c07526 	beq	r4,r3,801ae8 <_free_r+0x278>
  801914:	29c00317 	ldw	r7,12(r5)
  801918:	11400054 	ori	r5,r2,1
  80191c:	3087883a 	add	r3,r6,r2
  801920:	21c00315 	stw	r7,12(r4)
  801924:	39000215 	stw	r4,8(r7)
  801928:	31400115 	stw	r5,4(r6)
  80192c:	18800015 	stw	r2,0(r3)
  801930:	00000406 	br	801944 <_free_r+0xd4>
  801934:	10c00054 	ori	r3,r2,1
  801938:	30c00115 	stw	r3,4(r6)
  80193c:	3087883a 	add	r3,r6,r2
  801940:	18800015 	stw	r2,0(r3)
  801944:	00c07fc4 	movi	r3,511
  801948:	18801736 	bltu	r3,r2,8019a8 <_free_r+0x138>
  80194c:	1004d0fa 	srli	r2,r2,3
  801950:	01400044 	movi	r5,1
  801954:	49000117 	ldw	r4,4(r9)
  801958:	1087883a 	add	r3,r2,r2
  80195c:	18c7883a 	add	r3,r3,r3
  801960:	1005d0ba 	srai	r2,r2,2
  801964:	18c7883a 	add	r3,r3,r3
  801968:	1a47883a 	add	r3,r3,r9
  80196c:	19c00217 	ldw	r7,8(r3)
  801970:	2884983a 	sll	r2,r5,r2
  801974:	30c00315 	stw	r3,12(r6)
  801978:	31c00215 	stw	r7,8(r6)
  80197c:	1104b03a 	or	r2,r2,r4
  801980:	19800215 	stw	r6,8(r3)
  801984:	48800115 	stw	r2,4(r9)
  801988:	39800315 	stw	r6,12(r7)
  80198c:	8809883a 	mov	r4,r17
  801990:	dfc00217 	ldw	ra,8(sp)
  801994:	dc400117 	ldw	r17,4(sp)
  801998:	dc000017 	ldw	r16,0(sp)
  80199c:	dec00304 	addi	sp,sp,12
  8019a0:	0817cdc1 	jmpi	817cdc <__malloc_unlock>
  8019a4:	f800283a 	ret
  8019a8:	1006d27a 	srli	r3,r2,9
  8019ac:	01000104 	movi	r4,4
  8019b0:	20c04036 	bltu	r4,r3,801ab4 <_free_r+0x244>
  8019b4:	1006d1ba 	srli	r3,r2,6
  8019b8:	19400e04 	addi	r5,r3,56
  8019bc:	2947883a 	add	r3,r5,r5
  8019c0:	18c7883a 	add	r3,r3,r3
  8019c4:	18c7883a 	add	r3,r3,r3
  8019c8:	1a49883a 	add	r4,r3,r9
  8019cc:	20c00217 	ldw	r3,8(r4)
  8019d0:	01c020b4 	movhi	r7,130
  8019d4:	39f1c404 	addi	r7,r7,-14576
  8019d8:	19003b26 	beq	r3,r4,801ac8 <_free_r+0x258>
  8019dc:	01ffff04 	movi	r7,-4
  8019e0:	19400117 	ldw	r5,4(r3)
  8019e4:	29ca703a 	and	r5,r5,r7
  8019e8:	1140022e 	bgeu	r2,r5,8019f4 <_free_r+0x184>
  8019ec:	18c00217 	ldw	r3,8(r3)
  8019f0:	20fffb1e 	bne	r4,r3,8019e0 <__alt_data_end+0xff8019e0>
  8019f4:	18800317 	ldw	r2,12(r3)
  8019f8:	30800315 	stw	r2,12(r6)
  8019fc:	30c00215 	stw	r3,8(r6)
  801a00:	11800215 	stw	r6,8(r2)
  801a04:	19800315 	stw	r6,12(r3)
  801a08:	003fe006 	br	80198c <__alt_data_end+0xff80198c>
  801a0c:	2100004c 	andi	r4,r4,1
  801a10:	1885883a 	add	r2,r3,r2
  801a14:	2000071e 	bne	r4,zero,801a34 <_free_r+0x1c4>
  801a18:	817ffe17 	ldw	r5,-8(r16)
  801a1c:	314dc83a 	sub	r6,r6,r5
  801a20:	30c00317 	ldw	r3,12(r6)
  801a24:	31000217 	ldw	r4,8(r6)
  801a28:	1145883a 	add	r2,r2,r5
  801a2c:	20c00315 	stw	r3,12(r4)
  801a30:	19000215 	stw	r4,8(r3)
  801a34:	10c00054 	ori	r3,r2,1
  801a38:	30c00115 	stw	r3,4(r6)
  801a3c:	00c020b4 	movhi	r3,130
  801a40:	18f7fa04 	addi	r3,r3,-8216
  801a44:	18c00017 	ldw	r3,0(r3)
  801a48:	49800215 	stw	r6,8(r9)
  801a4c:	10ffcf36 	bltu	r2,r3,80198c <__alt_data_end+0xff80198c>
  801a50:	008020b4 	movhi	r2,130
  801a54:	10bf6604 	addi	r2,r2,-616
  801a58:	11400017 	ldw	r5,0(r2)
  801a5c:	8809883a 	mov	r4,r17
  801a60:	080174c0 	call	80174c <_malloc_trim_r>
  801a64:	003fc906 	br	80198c <__alt_data_end+0xff80198c>
  801a68:	28c9883a 	add	r4,r5,r3
  801a6c:	21000117 	ldw	r4,4(r4)
  801a70:	2100004c 	andi	r4,r4,1
  801a74:	20000a1e 	bne	r4,zero,801aa0 <_free_r+0x230>
  801a78:	29000317 	ldw	r4,12(r5)
  801a7c:	29400217 	ldw	r5,8(r5)
  801a80:	10c5883a 	add	r2,r2,r3
  801a84:	10c00054 	ori	r3,r2,1
  801a88:	29000315 	stw	r4,12(r5)
  801a8c:	21400215 	stw	r5,8(r4)
  801a90:	30c00115 	stw	r3,4(r6)
  801a94:	308d883a 	add	r6,r6,r2
  801a98:	30800015 	stw	r2,0(r6)
  801a9c:	003fbb06 	br	80198c <__alt_data_end+0xff80198c>
  801aa0:	10c00054 	ori	r3,r2,1
  801aa4:	30c00115 	stw	r3,4(r6)
  801aa8:	308d883a 	add	r6,r6,r2
  801aac:	30800015 	stw	r2,0(r6)
  801ab0:	003fb606 	br	80198c <__alt_data_end+0xff80198c>
  801ab4:	01000504 	movi	r4,20
  801ab8:	20c01436 	bltu	r4,r3,801b0c <_free_r+0x29c>
  801abc:	194016c4 	addi	r5,r3,91
  801ac0:	2947883a 	add	r3,r5,r5
  801ac4:	003fbe06 	br	8019c0 <__alt_data_end+0xff8019c0>
  801ac8:	280bd0ba 	srai	r5,r5,2
  801acc:	00800044 	movi	r2,1
  801ad0:	39000117 	ldw	r4,4(r7)
  801ad4:	114a983a 	sll	r5,r2,r5
  801ad8:	1805883a 	mov	r2,r3
  801adc:	2908b03a 	or	r4,r5,r4
  801ae0:	39000115 	stw	r4,4(r7)
  801ae4:	003fc406 	br	8019f8 <__alt_data_end+0xff8019f8>
  801ae8:	49800515 	stw	r6,20(r9)
  801aec:	49800415 	stw	r6,16(r9)
  801af0:	10c00054 	ori	r3,r2,1
  801af4:	31000315 	stw	r4,12(r6)
  801af8:	31000215 	stw	r4,8(r6)
  801afc:	30c00115 	stw	r3,4(r6)
  801b00:	308d883a 	add	r6,r6,r2
  801b04:	30800015 	stw	r2,0(r6)
  801b08:	003fa006 	br	80198c <__alt_data_end+0xff80198c>
  801b0c:	01001504 	movi	r4,84
  801b10:	20c00436 	bltu	r4,r3,801b24 <_free_r+0x2b4>
  801b14:	1006d33a 	srli	r3,r2,12
  801b18:	19401b84 	addi	r5,r3,110
  801b1c:	2947883a 	add	r3,r5,r5
  801b20:	003fa706 	br	8019c0 <__alt_data_end+0xff8019c0>
  801b24:	01005504 	movi	r4,340
  801b28:	20c00436 	bltu	r4,r3,801b3c <_free_r+0x2cc>
  801b2c:	1006d3fa 	srli	r3,r2,15
  801b30:	19401dc4 	addi	r5,r3,119
  801b34:	2947883a 	add	r3,r5,r5
  801b38:	003fa106 	br	8019c0 <__alt_data_end+0xff8019c0>
  801b3c:	01015504 	movi	r4,1364
  801b40:	20c00436 	bltu	r4,r3,801b54 <_free_r+0x2e4>
  801b44:	1006d4ba 	srli	r3,r2,18
  801b48:	19401f04 	addi	r5,r3,124
  801b4c:	2947883a 	add	r3,r5,r5
  801b50:	003f9b06 	br	8019c0 <__alt_data_end+0xff8019c0>
  801b54:	00c03f04 	movi	r3,252
  801b58:	01401f84 	movi	r5,126
  801b5c:	003f9806 	br	8019c0 <__alt_data_end+0xff8019c0>

00801b60 <_fseek_r>:
  801b60:	0801b881 	jmpi	801b88 <_fseeko_r>

00801b64 <fseek>:
  801b64:	2007883a 	mov	r3,r4
  801b68:	010020b4 	movhi	r4,130
  801b6c:	2137f804 	addi	r4,r4,-8224
  801b70:	21000017 	ldw	r4,0(r4)
  801b74:	2805883a 	mov	r2,r5
  801b78:	300f883a 	mov	r7,r6
  801b7c:	180b883a 	mov	r5,r3
  801b80:	100d883a 	mov	r6,r2
  801b84:	0801b881 	jmpi	801b88 <_fseeko_r>

00801b88 <_fseeko_r>:
  801b88:	deffe804 	addi	sp,sp,-96
  801b8c:	dd401415 	stw	r21,80(sp)
  801b90:	dc801115 	stw	r18,68(sp)
  801b94:	dc401015 	stw	r17,64(sp)
  801b98:	dc000f15 	stw	r16,60(sp)
  801b9c:	dfc01715 	stw	ra,92(sp)
  801ba0:	ddc01615 	stw	r23,88(sp)
  801ba4:	dd801515 	stw	r22,84(sp)
  801ba8:	dd001315 	stw	r20,76(sp)
  801bac:	dcc01215 	stw	r19,72(sp)
  801bb0:	2023883a 	mov	r17,r4
  801bb4:	2821883a 	mov	r16,r5
  801bb8:	302b883a 	mov	r21,r6
  801bbc:	3825883a 	mov	r18,r7
  801bc0:	20000226 	beq	r4,zero,801bcc <_fseeko_r+0x44>
  801bc4:	20800e17 	ldw	r2,56(r4)
  801bc8:	10005a26 	beq	r2,zero,801d34 <_fseeko_r+0x1ac>
  801bcc:	8080030b 	ldhu	r2,12(r16)
  801bd0:	00c04204 	movi	r3,264
  801bd4:	1080420c 	andi	r2,r2,264
  801bd8:	10c05b26 	beq	r2,r3,801d48 <_fseeko_r+0x1c0>
  801bdc:	85000a17 	ldw	r20,40(r16)
  801be0:	a000f626 	beq	r20,zero,801fbc <_fseeko_r+0x434>
  801be4:	00800044 	movi	r2,1
  801be8:	90803e26 	beq	r18,r2,801ce4 <_fseeko_r+0x15c>
  801bec:	00800084 	movi	r2,2
  801bf0:	90801026 	beq	r18,r2,801c34 <_fseeko_r+0xac>
  801bf4:	90000f26 	beq	r18,zero,801c34 <_fseeko_r+0xac>
  801bf8:	00800584 	movi	r2,22
  801bfc:	88800015 	stw	r2,0(r17)
  801c00:	04ffffc4 	movi	r19,-1
  801c04:	9805883a 	mov	r2,r19
  801c08:	dfc01717 	ldw	ra,92(sp)
  801c0c:	ddc01617 	ldw	r23,88(sp)
  801c10:	dd801517 	ldw	r22,84(sp)
  801c14:	dd401417 	ldw	r21,80(sp)
  801c18:	dd001317 	ldw	r20,76(sp)
  801c1c:	dcc01217 	ldw	r19,72(sp)
  801c20:	dc801117 	ldw	r18,68(sp)
  801c24:	dc401017 	ldw	r17,64(sp)
  801c28:	dc000f17 	ldw	r16,60(sp)
  801c2c:	dec01804 	addi	sp,sp,96
  801c30:	f800283a 	ret
  801c34:	80800417 	ldw	r2,16(r16)
  801c38:	002f883a 	mov	r23,zero
  801c3c:	0027883a 	mov	r19,zero
  801c40:	1000cb26 	beq	r2,zero,801f70 <_fseeko_r+0x3e8>
  801c44:	8080030b 	ldhu	r2,12(r16)
  801c48:	10c2068c 	andi	r3,r2,2074
  801c4c:	1800071e 	bne	r3,zero,801c6c <_fseeko_r+0xe4>
  801c50:	10c1000c 	andi	r3,r2,1024
  801c54:	1800451e 	bne	r3,zero,801d6c <_fseeko_r+0x1e4>
  801c58:	00c02034 	movhi	r3,128
  801c5c:	18cd2404 	addi	r3,r3,13456
  801c60:	a0c0b726 	beq	r20,r3,801f40 <_fseeko_r+0x3b8>
  801c64:	10820014 	ori	r2,r2,2048
  801c68:	8080030d 	sth	r2,12(r16)
  801c6c:	8809883a 	mov	r4,r17
  801c70:	800b883a 	mov	r5,r16
  801c74:	08011c80 	call	8011c8 <_fflush_r>
  801c78:	1027883a 	mov	r19,r2
  801c7c:	103fe01e 	bne	r2,zero,801c00 <__alt_data_end+0xff801c00>
  801c80:	81400717 	ldw	r5,28(r16)
  801c84:	8809883a 	mov	r4,r17
  801c88:	a80d883a 	mov	r6,r21
  801c8c:	900f883a 	mov	r7,r18
  801c90:	a03ee83a 	callr	r20
  801c94:	00ffffc4 	movi	r3,-1
  801c98:	10ffd926 	beq	r2,r3,801c00 <__alt_data_end+0xff801c00>
  801c9c:	81400c17 	ldw	r5,48(r16)
  801ca0:	28000526 	beq	r5,zero,801cb8 <_fseeko_r+0x130>
  801ca4:	80801004 	addi	r2,r16,64
  801ca8:	28800226 	beq	r5,r2,801cb4 <_fseeko_r+0x12c>
  801cac:	8809883a 	mov	r4,r17
  801cb0:	08018700 	call	801870 <_free_r>
  801cb4:	80000c15 	stw	zero,48(r16)
  801cb8:	8080030b 	ldhu	r2,12(r16)
  801cbc:	80c00417 	ldw	r3,16(r16)
  801cc0:	80000115 	stw	zero,4(r16)
  801cc4:	10bdf7cc 	andi	r2,r2,63455
  801cc8:	80c00015 	stw	r3,0(r16)
  801ccc:	8080030d 	sth	r2,12(r16)
  801cd0:	81001704 	addi	r4,r16,92
  801cd4:	000b883a 	mov	r5,zero
  801cd8:	01800204 	movi	r6,8
  801cdc:	0802d340 	call	802d34 <memset>
  801ce0:	003fc806 	br	801c04 <__alt_data_end+0xff801c04>
  801ce4:	8809883a 	mov	r4,r17
  801ce8:	800b883a 	mov	r5,r16
  801cec:	08011c80 	call	8011c8 <_fflush_r>
  801cf0:	8080030b 	ldhu	r2,12(r16)
  801cf4:	10c4000c 	andi	r3,r2,4096
  801cf8:	18008726 	beq	r3,zero,801f18 <_fseeko_r+0x390>
  801cfc:	84c01417 	ldw	r19,80(r16)
  801d00:	10c0010c 	andi	r3,r2,4
  801d04:	1800431e 	bne	r3,zero,801e14 <_fseeko_r+0x28c>
  801d08:	1080020c 	andi	r2,r2,8
  801d0c:	10008026 	beq	r2,zero,801f10 <_fseeko_r+0x388>
  801d10:	80c00017 	ldw	r3,0(r16)
  801d14:	80800417 	ldw	r2,16(r16)
  801d18:	18000226 	beq	r3,zero,801d24 <_fseeko_r+0x19c>
  801d1c:	1887c83a 	sub	r3,r3,r2
  801d20:	98e7883a 	add	r19,r19,r3
  801d24:	aceb883a 	add	r21,r21,r19
  801d28:	05c00044 	movi	r23,1
  801d2c:	0025883a 	mov	r18,zero
  801d30:	003fc306 	br	801c40 <__alt_data_end+0xff801c40>
  801d34:	08015a40 	call	8015a4 <__sinit>
  801d38:	8080030b 	ldhu	r2,12(r16)
  801d3c:	00c04204 	movi	r3,264
  801d40:	1080420c 	andi	r2,r2,264
  801d44:	10ffa51e 	bne	r2,r3,801bdc <__alt_data_end+0xff801bdc>
  801d48:	8809883a 	mov	r4,r17
  801d4c:	800b883a 	mov	r5,r16
  801d50:	08011c80 	call	8011c8 <_fflush_r>
  801d54:	003fa106 	br	801bdc <__alt_data_end+0xff801bdc>
  801d58:	8080030b 	ldhu	r2,12(r16)
  801d5c:	00c10004 	movi	r3,1024
  801d60:	80c01315 	stw	r3,76(r16)
  801d64:	10c4b03a 	or	r2,r2,r3
  801d68:	8080030d 	sth	r2,12(r16)
  801d6c:	9000311e 	bne	r18,zero,801e34 <_fseeko_r+0x2ac>
  801d70:	a82d883a 	mov	r22,r21
  801d74:	b800371e 	bne	r23,zero,801e54 <_fseeko_r+0x2cc>
  801d78:	8080030b 	ldhu	r2,12(r16)
  801d7c:	1084000c 	andi	r2,r2,4096
  801d80:	10007f26 	beq	r2,zero,801f80 <_fseeko_r+0x3f8>
  801d84:	80801417 	ldw	r2,80(r16)
  801d88:	81800117 	ldw	r6,4(r16)
  801d8c:	81400c17 	ldw	r5,48(r16)
  801d90:	11a7c83a 	sub	r19,r2,r6
  801d94:	28008226 	beq	r5,zero,801fa0 <_fseeko_r+0x418>
  801d98:	81c00f17 	ldw	r7,60(r16)
  801d9c:	99e7c83a 	sub	r19,r19,r7
  801da0:	81000e17 	ldw	r4,56(r16)
  801da4:	80800417 	ldw	r2,16(r16)
  801da8:	99a7883a 	add	r19,r19,r6
  801dac:	2087c83a 	sub	r3,r4,r2
  801db0:	98e7c83a 	sub	r19,r19,r3
  801db4:	38c7883a 	add	r3,r7,r3
  801db8:	b4c02b16 	blt	r22,r19,801e68 <_fseeko_r+0x2e0>
  801dbc:	98c9883a 	add	r4,r19,r3
  801dc0:	b100292e 	bgeu	r22,r4,801e68 <_fseeko_r+0x2e0>
  801dc4:	b4e7c83a 	sub	r19,r22,r19
  801dc8:	14c5883a 	add	r2,r2,r19
  801dcc:	1ce7c83a 	sub	r19,r3,r19
  801dd0:	80800015 	stw	r2,0(r16)
  801dd4:	84c00115 	stw	r19,4(r16)
  801dd8:	28000526 	beq	r5,zero,801df0 <_fseeko_r+0x268>
  801ddc:	80801004 	addi	r2,r16,64
  801de0:	28800226 	beq	r5,r2,801dec <_fseeko_r+0x264>
  801de4:	8809883a 	mov	r4,r17
  801de8:	08018700 	call	801870 <_free_r>
  801dec:	80000c15 	stw	zero,48(r16)
  801df0:	8080030b 	ldhu	r2,12(r16)
  801df4:	81001704 	addi	r4,r16,92
  801df8:	000b883a 	mov	r5,zero
  801dfc:	10bff7cc 	andi	r2,r2,65503
  801e00:	8080030d 	sth	r2,12(r16)
  801e04:	01800204 	movi	r6,8
  801e08:	0802d340 	call	802d34 <memset>
  801e0c:	0027883a 	mov	r19,zero
  801e10:	003f7c06 	br	801c04 <__alt_data_end+0xff801c04>
  801e14:	80c00117 	ldw	r3,4(r16)
  801e18:	80800c17 	ldw	r2,48(r16)
  801e1c:	98e7c83a 	sub	r19,r19,r3
  801e20:	10003b26 	beq	r2,zero,801f10 <_fseeko_r+0x388>
  801e24:	80c00f17 	ldw	r3,60(r16)
  801e28:	80800417 	ldw	r2,16(r16)
  801e2c:	98e7c83a 	sub	r19,r19,r3
  801e30:	003fbc06 	br	801d24 <__alt_data_end+0xff801d24>
  801e34:	8140038f 	ldh	r5,14(r16)
  801e38:	8809883a 	mov	r4,r17
  801e3c:	d80d883a 	mov	r6,sp
  801e40:	0801ff00 	call	801ff0 <_fstat_r>
  801e44:	103f891e 	bne	r2,zero,801c6c <__alt_data_end+0xff801c6c>
  801e48:	dd800417 	ldw	r22,16(sp)
  801e4c:	adad883a 	add	r22,r21,r22
  801e50:	b83fc926 	beq	r23,zero,801d78 <__alt_data_end+0xff801d78>
  801e54:	81400c17 	ldw	r5,48(r16)
  801e58:	81800117 	ldw	r6,4(r16)
  801e5c:	28005026 	beq	r5,zero,801fa0 <_fseeko_r+0x418>
  801e60:	81c00f17 	ldw	r7,60(r16)
  801e64:	003fce06 	br	801da0 <__alt_data_end+0xff801da0>
  801e68:	84c01317 	ldw	r19,76(r16)
  801e6c:	81400717 	ldw	r5,28(r16)
  801e70:	8809883a 	mov	r4,r17
  801e74:	04e7c83a 	sub	r19,zero,r19
  801e78:	b4e6703a 	and	r19,r22,r19
  801e7c:	980d883a 	mov	r6,r19
  801e80:	000f883a 	mov	r7,zero
  801e84:	a03ee83a 	callr	r20
  801e88:	00ffffc4 	movi	r3,-1
  801e8c:	10ff7726 	beq	r2,r3,801c6c <__alt_data_end+0xff801c6c>
  801e90:	80800417 	ldw	r2,16(r16)
  801e94:	81400c17 	ldw	r5,48(r16)
  801e98:	80000115 	stw	zero,4(r16)
  801e9c:	80800015 	stw	r2,0(r16)
  801ea0:	28000526 	beq	r5,zero,801eb8 <_fseeko_r+0x330>
  801ea4:	80801004 	addi	r2,r16,64
  801ea8:	28800226 	beq	r5,r2,801eb4 <_fseeko_r+0x32c>
  801eac:	8809883a 	mov	r4,r17
  801eb0:	08018700 	call	801870 <_free_r>
  801eb4:	80000c15 	stw	zero,48(r16)
  801eb8:	8080030b 	ldhu	r2,12(r16)
  801ebc:	b4e7c83a 	sub	r19,r22,r19
  801ec0:	10bff7cc 	andi	r2,r2,65503
  801ec4:	8080030d 	sth	r2,12(r16)
  801ec8:	98000b26 	beq	r19,zero,801ef8 <_fseeko_r+0x370>
  801ecc:	8809883a 	mov	r4,r17
  801ed0:	800b883a 	mov	r5,r16
  801ed4:	08030140 	call	803014 <__srefill_r>
  801ed8:	103f641e 	bne	r2,zero,801c6c <__alt_data_end+0xff801c6c>
  801edc:	80800117 	ldw	r2,4(r16)
  801ee0:	14ff6236 	bltu	r2,r19,801c6c <__alt_data_end+0xff801c6c>
  801ee4:	80c00017 	ldw	r3,0(r16)
  801ee8:	14c5c83a 	sub	r2,r2,r19
  801eec:	80800115 	stw	r2,4(r16)
  801ef0:	1ce7883a 	add	r19,r3,r19
  801ef4:	84c00015 	stw	r19,0(r16)
  801ef8:	81001704 	addi	r4,r16,92
  801efc:	000b883a 	mov	r5,zero
  801f00:	01800204 	movi	r6,8
  801f04:	0802d340 	call	802d34 <memset>
  801f08:	0027883a 	mov	r19,zero
  801f0c:	003f3d06 	br	801c04 <__alt_data_end+0xff801c04>
  801f10:	80800417 	ldw	r2,16(r16)
  801f14:	003f8306 	br	801d24 <__alt_data_end+0xff801d24>
  801f18:	81400717 	ldw	r5,28(r16)
  801f1c:	8809883a 	mov	r4,r17
  801f20:	000d883a 	mov	r6,zero
  801f24:	900f883a 	mov	r7,r18
  801f28:	a03ee83a 	callr	r20
  801f2c:	1027883a 	mov	r19,r2
  801f30:	00bfffc4 	movi	r2,-1
  801f34:	98bf3226 	beq	r19,r2,801c00 <__alt_data_end+0xff801c00>
  801f38:	8080030b 	ldhu	r2,12(r16)
  801f3c:	003f7006 	br	801d00 <__alt_data_end+0xff801d00>
  801f40:	8140038f 	ldh	r5,14(r16)
  801f44:	283f4716 	blt	r5,zero,801c64 <__alt_data_end+0xff801c64>
  801f48:	8809883a 	mov	r4,r17
  801f4c:	d80d883a 	mov	r6,sp
  801f50:	0801ff00 	call	801ff0 <_fstat_r>
  801f54:	1000041e 	bne	r2,zero,801f68 <_fseeko_r+0x3e0>
  801f58:	d8800117 	ldw	r2,4(sp)
  801f5c:	00e00014 	movui	r3,32768
  801f60:	10bc000c 	andi	r2,r2,61440
  801f64:	10ff7c26 	beq	r2,r3,801d58 <__alt_data_end+0xff801d58>
  801f68:	8080030b 	ldhu	r2,12(r16)
  801f6c:	003f3d06 	br	801c64 <__alt_data_end+0xff801c64>
  801f70:	8809883a 	mov	r4,r17
  801f74:	800b883a 	mov	r5,r16
  801f78:	08023d40 	call	8023d4 <__smakebuf_r>
  801f7c:	003f3106 	br	801c44 <__alt_data_end+0xff801c44>
  801f80:	81400717 	ldw	r5,28(r16)
  801f84:	8809883a 	mov	r4,r17
  801f88:	000d883a 	mov	r6,zero
  801f8c:	01c00044 	movi	r7,1
  801f90:	a03ee83a 	callr	r20
  801f94:	00ffffc4 	movi	r3,-1
  801f98:	10ff7b1e 	bne	r2,r3,801d88 <__alt_data_end+0xff801d88>
  801f9c:	003f3306 	br	801c6c <__alt_data_end+0xff801c6c>
  801fa0:	80c00017 	ldw	r3,0(r16)
  801fa4:	80800417 	ldw	r2,16(r16)
  801fa8:	000b883a 	mov	r5,zero
  801fac:	1887c83a 	sub	r3,r3,r2
  801fb0:	98e7c83a 	sub	r19,r19,r3
  801fb4:	30c7883a 	add	r3,r6,r3
  801fb8:	003f7f06 	br	801db8 <__alt_data_end+0xff801db8>
  801fbc:	00800744 	movi	r2,29
  801fc0:	88800015 	stw	r2,0(r17)
  801fc4:	04ffffc4 	movi	r19,-1
  801fc8:	003f0e06 	br	801c04 <__alt_data_end+0xff801c04>

00801fcc <fseeko>:
  801fcc:	2007883a 	mov	r3,r4
  801fd0:	010020b4 	movhi	r4,130
  801fd4:	2137f804 	addi	r4,r4,-8224
  801fd8:	21000017 	ldw	r4,0(r4)
  801fdc:	2805883a 	mov	r2,r5
  801fe0:	300f883a 	mov	r7,r6
  801fe4:	180b883a 	mov	r5,r3
  801fe8:	100d883a 	mov	r6,r2
  801fec:	0801b881 	jmpi	801b88 <_fseeko_r>

00801ff0 <_fstat_r>:
  801ff0:	defffd04 	addi	sp,sp,-12
  801ff4:	dc000015 	stw	r16,0(sp)
  801ff8:	040020b4 	movhi	r16,130
  801ffc:	dc400115 	stw	r17,4(sp)
  802000:	843f6304 	addi	r16,r16,-628
  802004:	2023883a 	mov	r17,r4
  802008:	2809883a 	mov	r4,r5
  80200c:	300b883a 	mov	r5,r6
  802010:	dfc00215 	stw	ra,8(sp)
  802014:	80000015 	stw	zero,0(r16)
  802018:	08176e80 	call	8176e8 <fstat>
  80201c:	00ffffc4 	movi	r3,-1
  802020:	10c00526 	beq	r2,r3,802038 <_fstat_r+0x48>
  802024:	dfc00217 	ldw	ra,8(sp)
  802028:	dc400117 	ldw	r17,4(sp)
  80202c:	dc000017 	ldw	r16,0(sp)
  802030:	dec00304 	addi	sp,sp,12
  802034:	f800283a 	ret
  802038:	80c00017 	ldw	r3,0(r16)
  80203c:	183ff926 	beq	r3,zero,802024 <__alt_data_end+0xff802024>
  802040:	88c00015 	stw	r3,0(r17)
  802044:	003ff706 	br	802024 <__alt_data_end+0xff802024>

00802048 <_fwalk>:
  802048:	defff704 	addi	sp,sp,-36
  80204c:	dd000415 	stw	r20,16(sp)
  802050:	dfc00815 	stw	ra,32(sp)
  802054:	ddc00715 	stw	r23,28(sp)
  802058:	dd800615 	stw	r22,24(sp)
  80205c:	dd400515 	stw	r21,20(sp)
  802060:	dcc00315 	stw	r19,12(sp)
  802064:	dc800215 	stw	r18,8(sp)
  802068:	dc400115 	stw	r17,4(sp)
  80206c:	dc000015 	stw	r16,0(sp)
  802070:	2500b804 	addi	r20,r4,736
  802074:	a0002326 	beq	r20,zero,802104 <_fwalk+0xbc>
  802078:	282b883a 	mov	r21,r5
  80207c:	002f883a 	mov	r23,zero
  802080:	05800044 	movi	r22,1
  802084:	04ffffc4 	movi	r19,-1
  802088:	a4400117 	ldw	r17,4(r20)
  80208c:	a4800217 	ldw	r18,8(r20)
  802090:	8c7fffc4 	addi	r17,r17,-1
  802094:	88000d16 	blt	r17,zero,8020cc <_fwalk+0x84>
  802098:	94000304 	addi	r16,r18,12
  80209c:	94800384 	addi	r18,r18,14
  8020a0:	80c0000b 	ldhu	r3,0(r16)
  8020a4:	8c7fffc4 	addi	r17,r17,-1
  8020a8:	813ffd04 	addi	r4,r16,-12
  8020ac:	b0c0042e 	bgeu	r22,r3,8020c0 <_fwalk+0x78>
  8020b0:	90c0000f 	ldh	r3,0(r18)
  8020b4:	1cc00226 	beq	r3,r19,8020c0 <_fwalk+0x78>
  8020b8:	a83ee83a 	callr	r21
  8020bc:	b8aeb03a 	or	r23,r23,r2
  8020c0:	84001a04 	addi	r16,r16,104
  8020c4:	94801a04 	addi	r18,r18,104
  8020c8:	8cfff51e 	bne	r17,r19,8020a0 <__alt_data_end+0xff8020a0>
  8020cc:	a5000017 	ldw	r20,0(r20)
  8020d0:	a03fed1e 	bne	r20,zero,802088 <__alt_data_end+0xff802088>
  8020d4:	b805883a 	mov	r2,r23
  8020d8:	dfc00817 	ldw	ra,32(sp)
  8020dc:	ddc00717 	ldw	r23,28(sp)
  8020e0:	dd800617 	ldw	r22,24(sp)
  8020e4:	dd400517 	ldw	r21,20(sp)
  8020e8:	dd000417 	ldw	r20,16(sp)
  8020ec:	dcc00317 	ldw	r19,12(sp)
  8020f0:	dc800217 	ldw	r18,8(sp)
  8020f4:	dc400117 	ldw	r17,4(sp)
  8020f8:	dc000017 	ldw	r16,0(sp)
  8020fc:	dec00904 	addi	sp,sp,36
  802100:	f800283a 	ret
  802104:	002f883a 	mov	r23,zero
  802108:	003ff206 	br	8020d4 <__alt_data_end+0xff8020d4>

0080210c <_fwalk_reent>:
  80210c:	defff704 	addi	sp,sp,-36
  802110:	dd400515 	stw	r21,20(sp)
  802114:	dfc00815 	stw	ra,32(sp)
  802118:	ddc00715 	stw	r23,28(sp)
  80211c:	dd800615 	stw	r22,24(sp)
  802120:	dd000415 	stw	r20,16(sp)
  802124:	dcc00315 	stw	r19,12(sp)
  802128:	dc800215 	stw	r18,8(sp)
  80212c:	dc400115 	stw	r17,4(sp)
  802130:	dc000015 	stw	r16,0(sp)
  802134:	2540b804 	addi	r21,r4,736
  802138:	a8002326 	beq	r21,zero,8021c8 <_fwalk_reent+0xbc>
  80213c:	2829883a 	mov	r20,r5
  802140:	202d883a 	mov	r22,r4
  802144:	002f883a 	mov	r23,zero
  802148:	04c00044 	movi	r19,1
  80214c:	04bfffc4 	movi	r18,-1
  802150:	ac400117 	ldw	r17,4(r21)
  802154:	ac000217 	ldw	r16,8(r21)
  802158:	8c7fffc4 	addi	r17,r17,-1
  80215c:	88000c16 	blt	r17,zero,802190 <_fwalk_reent+0x84>
  802160:	84000304 	addi	r16,r16,12
  802164:	80c0000b 	ldhu	r3,0(r16)
  802168:	8c7fffc4 	addi	r17,r17,-1
  80216c:	817ffd04 	addi	r5,r16,-12
  802170:	98c0052e 	bgeu	r19,r3,802188 <_fwalk_reent+0x7c>
  802174:	80c0008f 	ldh	r3,2(r16)
  802178:	b009883a 	mov	r4,r22
  80217c:	1c800226 	beq	r3,r18,802188 <_fwalk_reent+0x7c>
  802180:	a03ee83a 	callr	r20
  802184:	b8aeb03a 	or	r23,r23,r2
  802188:	84001a04 	addi	r16,r16,104
  80218c:	8cbff51e 	bne	r17,r18,802164 <__alt_data_end+0xff802164>
  802190:	ad400017 	ldw	r21,0(r21)
  802194:	a83fee1e 	bne	r21,zero,802150 <__alt_data_end+0xff802150>
  802198:	b805883a 	mov	r2,r23
  80219c:	dfc00817 	ldw	ra,32(sp)
  8021a0:	ddc00717 	ldw	r23,28(sp)
  8021a4:	dd800617 	ldw	r22,24(sp)
  8021a8:	dd400517 	ldw	r21,20(sp)
  8021ac:	dd000417 	ldw	r20,16(sp)
  8021b0:	dcc00317 	ldw	r19,12(sp)
  8021b4:	dc800217 	ldw	r18,8(sp)
  8021b8:	dc400117 	ldw	r17,4(sp)
  8021bc:	dc000017 	ldw	r16,0(sp)
  8021c0:	dec00904 	addi	sp,sp,36
  8021c4:	f800283a 	ret
  8021c8:	002f883a 	mov	r23,zero
  8021cc:	003ff206 	br	802198 <__alt_data_end+0xff802198>

008021d0 <_fwrite_r>:
  8021d0:	defff504 	addi	sp,sp,-44
  8021d4:	dcc00815 	stw	r19,32(sp)
  8021d8:	39a7383a 	mul	r19,r7,r6
  8021dc:	d8800304 	addi	r2,sp,12
  8021e0:	d8800015 	stw	r2,0(sp)
  8021e4:	00800044 	movi	r2,1
  8021e8:	dd000915 	stw	r20,36(sp)
  8021ec:	dc800715 	stw	r18,28(sp)
  8021f0:	dc400615 	stw	r17,24(sp)
  8021f4:	d9400315 	stw	r5,12(sp)
  8021f8:	dfc00a15 	stw	ra,40(sp)
  8021fc:	dcc00415 	stw	r19,16(sp)
  802200:	dcc00215 	stw	r19,8(sp)
  802204:	d8800115 	stw	r2,4(sp)
  802208:	3029883a 	mov	r20,r6
  80220c:	3823883a 	mov	r17,r7
  802210:	2025883a 	mov	r18,r4
  802214:	d9400b17 	ldw	r5,44(sp)
  802218:	20000226 	beq	r4,zero,802224 <_fwrite_r+0x54>
  80221c:	20800e17 	ldw	r2,56(r4)
  802220:	10001a26 	beq	r2,zero,80228c <_fwrite_r+0xbc>
  802224:	2880030b 	ldhu	r2,12(r5)
  802228:	10c8000c 	andi	r3,r2,8192
  80222c:	1800061e 	bne	r3,zero,802248 <_fwrite_r+0x78>
  802230:	29001917 	ldw	r4,100(r5)
  802234:	00f7ffc4 	movi	r3,-8193
  802238:	10880014 	ori	r2,r2,8192
  80223c:	20c6703a 	and	r3,r4,r3
  802240:	2880030d 	sth	r2,12(r5)
  802244:	28c01915 	stw	r3,100(r5)
  802248:	9009883a 	mov	r4,r18
  80224c:	d80d883a 	mov	r6,sp
  802250:	080888c0 	call	80888c <__sfvwrite_r>
  802254:	10000b26 	beq	r2,zero,802284 <_fwrite_r+0xb4>
  802258:	d9000217 	ldw	r4,8(sp)
  80225c:	a00b883a 	mov	r5,r20
  802260:	9909c83a 	sub	r4,r19,r4
  802264:	0814bc00 	call	814bc0 <__udivsi3>
  802268:	dfc00a17 	ldw	ra,40(sp)
  80226c:	dd000917 	ldw	r20,36(sp)
  802270:	dcc00817 	ldw	r19,32(sp)
  802274:	dc800717 	ldw	r18,28(sp)
  802278:	dc400617 	ldw	r17,24(sp)
  80227c:	dec00b04 	addi	sp,sp,44
  802280:	f800283a 	ret
  802284:	8805883a 	mov	r2,r17
  802288:	003ff706 	br	802268 <__alt_data_end+0xff802268>
  80228c:	d9400515 	stw	r5,20(sp)
  802290:	08015a40 	call	8015a4 <__sinit>
  802294:	d9400517 	ldw	r5,20(sp)
  802298:	003fe206 	br	802224 <__alt_data_end+0xff802224>

0080229c <fwrite>:
  80229c:	008020b4 	movhi	r2,130
  8022a0:	10b7f804 	addi	r2,r2,-8224
  8022a4:	2011883a 	mov	r8,r4
  8022a8:	11000017 	ldw	r4,0(r2)
  8022ac:	defffe04 	addi	sp,sp,-8
  8022b0:	2807883a 	mov	r3,r5
  8022b4:	3005883a 	mov	r2,r6
  8022b8:	d9c00015 	stw	r7,0(sp)
  8022bc:	400b883a 	mov	r5,r8
  8022c0:	180d883a 	mov	r6,r3
  8022c4:	100f883a 	mov	r7,r2
  8022c8:	dfc00115 	stw	ra,4(sp)
  8022cc:	08021d00 	call	8021d0 <_fwrite_r>
  8022d0:	dfc00117 	ldw	ra,4(sp)
  8022d4:	dec00204 	addi	sp,sp,8
  8022d8:	f800283a 	ret

008022dc <_getc_r>:
  8022dc:	defffd04 	addi	sp,sp,-12
  8022e0:	dc000115 	stw	r16,4(sp)
  8022e4:	dfc00215 	stw	ra,8(sp)
  8022e8:	2021883a 	mov	r16,r4
  8022ec:	20000226 	beq	r4,zero,8022f8 <_getc_r+0x1c>
  8022f0:	20800e17 	ldw	r2,56(r4)
  8022f4:	10000c26 	beq	r2,zero,802328 <_getc_r+0x4c>
  8022f8:	28800117 	ldw	r2,4(r5)
  8022fc:	10bfffc4 	addi	r2,r2,-1
  802300:	28800115 	stw	r2,4(r5)
  802304:	10000c16 	blt	r2,zero,802338 <_getc_r+0x5c>
  802308:	28800017 	ldw	r2,0(r5)
  80230c:	10c00044 	addi	r3,r2,1
  802310:	28c00015 	stw	r3,0(r5)
  802314:	10800003 	ldbu	r2,0(r2)
  802318:	dfc00217 	ldw	ra,8(sp)
  80231c:	dc000117 	ldw	r16,4(sp)
  802320:	dec00304 	addi	sp,sp,12
  802324:	f800283a 	ret
  802328:	d9400015 	stw	r5,0(sp)
  80232c:	08015a40 	call	8015a4 <__sinit>
  802330:	d9400017 	ldw	r5,0(sp)
  802334:	003ff006 	br	8022f8 <__alt_data_end+0xff8022f8>
  802338:	8009883a 	mov	r4,r16
  80233c:	dfc00217 	ldw	ra,8(sp)
  802340:	dc000117 	ldw	r16,4(sp)
  802344:	dec00304 	addi	sp,sp,12
  802348:	08031e81 	jmpi	8031e8 <__srget_r>

0080234c <getc>:
  80234c:	008020b4 	movhi	r2,130
  802350:	defffd04 	addi	sp,sp,-12
  802354:	10b7f804 	addi	r2,r2,-8224
  802358:	dc400115 	stw	r17,4(sp)
  80235c:	14400017 	ldw	r17,0(r2)
  802360:	dc000015 	stw	r16,0(sp)
  802364:	dfc00215 	stw	ra,8(sp)
  802368:	2021883a 	mov	r16,r4
  80236c:	88000226 	beq	r17,zero,802378 <getc+0x2c>
  802370:	88800e17 	ldw	r2,56(r17)
  802374:	10000d26 	beq	r2,zero,8023ac <getc+0x60>
  802378:	80800117 	ldw	r2,4(r16)
  80237c:	10bfffc4 	addi	r2,r2,-1
  802380:	80800115 	stw	r2,4(r16)
  802384:	10000c16 	blt	r2,zero,8023b8 <getc+0x6c>
  802388:	80800017 	ldw	r2,0(r16)
  80238c:	10c00044 	addi	r3,r2,1
  802390:	80c00015 	stw	r3,0(r16)
  802394:	10800003 	ldbu	r2,0(r2)
  802398:	dfc00217 	ldw	ra,8(sp)
  80239c:	dc400117 	ldw	r17,4(sp)
  8023a0:	dc000017 	ldw	r16,0(sp)
  8023a4:	dec00304 	addi	sp,sp,12
  8023a8:	f800283a 	ret
  8023ac:	8809883a 	mov	r4,r17
  8023b0:	08015a40 	call	8015a4 <__sinit>
  8023b4:	003ff006 	br	802378 <__alt_data_end+0xff802378>
  8023b8:	8809883a 	mov	r4,r17
  8023bc:	800b883a 	mov	r5,r16
  8023c0:	dfc00217 	ldw	ra,8(sp)
  8023c4:	dc400117 	ldw	r17,4(sp)
  8023c8:	dc000017 	ldw	r16,0(sp)
  8023cc:	dec00304 	addi	sp,sp,12
  8023d0:	08031e81 	jmpi	8031e8 <__srget_r>

008023d4 <__smakebuf_r>:
  8023d4:	2880030b 	ldhu	r2,12(r5)
  8023d8:	10c0008c 	andi	r3,r2,2
  8023dc:	1800401e 	bne	r3,zero,8024e0 <__smakebuf_r+0x10c>
  8023e0:	deffec04 	addi	sp,sp,-80
  8023e4:	dc000f15 	stw	r16,60(sp)
  8023e8:	2821883a 	mov	r16,r5
  8023ec:	2940038f 	ldh	r5,14(r5)
  8023f0:	dc401015 	stw	r17,64(sp)
  8023f4:	dfc01315 	stw	ra,76(sp)
  8023f8:	dcc01215 	stw	r19,72(sp)
  8023fc:	dc801115 	stw	r18,68(sp)
  802400:	2023883a 	mov	r17,r4
  802404:	28001b16 	blt	r5,zero,802474 <__smakebuf_r+0xa0>
  802408:	d80d883a 	mov	r6,sp
  80240c:	0801ff00 	call	801ff0 <_fstat_r>
  802410:	10001716 	blt	r2,zero,802470 <__smakebuf_r+0x9c>
  802414:	d8800117 	ldw	r2,4(sp)
  802418:	00e00014 	movui	r3,32768
  80241c:	10bc000c 	andi	r2,r2,61440
  802420:	10c03726 	beq	r2,r3,802500 <__smakebuf_r+0x12c>
  802424:	80c0030b 	ldhu	r3,12(r16)
  802428:	18c20014 	ori	r3,r3,2048
  80242c:	80c0030d 	sth	r3,12(r16)
  802430:	00c80004 	movi	r3,8192
  802434:	10c03c1e 	bne	r2,r3,802528 <__smakebuf_r+0x154>
  802438:	8140038f 	ldh	r5,14(r16)
  80243c:	8809883a 	mov	r4,r17
  802440:	0808d4c0 	call	808d4c <_isatty_r>
  802444:	10004e26 	beq	r2,zero,802580 <__smakebuf_r+0x1ac>
  802448:	8080030b 	ldhu	r2,12(r16)
  80244c:	04c00044 	movi	r19,1
  802450:	80c010c4 	addi	r3,r16,67
  802454:	14c4b03a 	or	r2,r2,r19
  802458:	8080030d 	sth	r2,12(r16)
  80245c:	80c00015 	stw	r3,0(r16)
  802460:	80c00415 	stw	r3,16(r16)
  802464:	84c00515 	stw	r19,20(r16)
  802468:	04810004 	movi	r18,1024
  80246c:	00000706 	br	80248c <__smakebuf_r+0xb8>
  802470:	8080030b 	ldhu	r2,12(r16)
  802474:	10c0200c 	andi	r3,r2,128
  802478:	18001f1e 	bne	r3,zero,8024f8 <__smakebuf_r+0x124>
  80247c:	04810004 	movi	r18,1024
  802480:	10820014 	ori	r2,r2,2048
  802484:	8080030d 	sth	r2,12(r16)
  802488:	0027883a 	mov	r19,zero
  80248c:	8809883a 	mov	r4,r17
  802490:	900b883a 	mov	r5,r18
  802494:	080258c0 	call	80258c <_malloc_r>
  802498:	10002e26 	beq	r2,zero,802554 <__smakebuf_r+0x180>
  80249c:	80c0030b 	ldhu	r3,12(r16)
  8024a0:	01002034 	movhi	r4,128
  8024a4:	21049904 	addi	r4,r4,4708
  8024a8:	89000f15 	stw	r4,60(r17)
  8024ac:	18c02014 	ori	r3,r3,128
  8024b0:	80c0030d 	sth	r3,12(r16)
  8024b4:	80800015 	stw	r2,0(r16)
  8024b8:	80800415 	stw	r2,16(r16)
  8024bc:	84800515 	stw	r18,20(r16)
  8024c0:	98001c1e 	bne	r19,zero,802534 <__smakebuf_r+0x160>
  8024c4:	dfc01317 	ldw	ra,76(sp)
  8024c8:	dcc01217 	ldw	r19,72(sp)
  8024cc:	dc801117 	ldw	r18,68(sp)
  8024d0:	dc401017 	ldw	r17,64(sp)
  8024d4:	dc000f17 	ldw	r16,60(sp)
  8024d8:	dec01404 	addi	sp,sp,80
  8024dc:	f800283a 	ret
  8024e0:	288010c4 	addi	r2,r5,67
  8024e4:	28800015 	stw	r2,0(r5)
  8024e8:	28800415 	stw	r2,16(r5)
  8024ec:	00800044 	movi	r2,1
  8024f0:	28800515 	stw	r2,20(r5)
  8024f4:	f800283a 	ret
  8024f8:	04801004 	movi	r18,64
  8024fc:	003fe006 	br	802480 <__alt_data_end+0xff802480>
  802500:	81000a17 	ldw	r4,40(r16)
  802504:	00c02034 	movhi	r3,128
  802508:	18cd2404 	addi	r3,r3,13456
  80250c:	20ffc51e 	bne	r4,r3,802424 <__alt_data_end+0xff802424>
  802510:	80c0030b 	ldhu	r3,12(r16)
  802514:	01010004 	movi	r4,1024
  802518:	81001315 	stw	r4,76(r16)
  80251c:	1906b03a 	or	r3,r3,r4
  802520:	80c0030d 	sth	r3,12(r16)
  802524:	003fc206 	br	802430 <__alt_data_end+0xff802430>
  802528:	0027883a 	mov	r19,zero
  80252c:	04810004 	movi	r18,1024
  802530:	003fd606 	br	80248c <__alt_data_end+0xff80248c>
  802534:	8140038f 	ldh	r5,14(r16)
  802538:	8809883a 	mov	r4,r17
  80253c:	0808d4c0 	call	808d4c <_isatty_r>
  802540:	103fe026 	beq	r2,zero,8024c4 <__alt_data_end+0xff8024c4>
  802544:	8080030b 	ldhu	r2,12(r16)
  802548:	10800054 	ori	r2,r2,1
  80254c:	8080030d 	sth	r2,12(r16)
  802550:	003fdc06 	br	8024c4 <__alt_data_end+0xff8024c4>
  802554:	8080030b 	ldhu	r2,12(r16)
  802558:	10c0800c 	andi	r3,r2,512
  80255c:	183fd91e 	bne	r3,zero,8024c4 <__alt_data_end+0xff8024c4>
  802560:	10800094 	ori	r2,r2,2
  802564:	80c010c4 	addi	r3,r16,67
  802568:	8080030d 	sth	r2,12(r16)
  80256c:	00800044 	movi	r2,1
  802570:	80c00015 	stw	r3,0(r16)
  802574:	80c00415 	stw	r3,16(r16)
  802578:	80800515 	stw	r2,20(r16)
  80257c:	003fd106 	br	8024c4 <__alt_data_end+0xff8024c4>
  802580:	04c00044 	movi	r19,1
  802584:	04810004 	movi	r18,1024
  802588:	003fc006 	br	80248c <__alt_data_end+0xff80248c>

0080258c <_malloc_r>:
  80258c:	defff504 	addi	sp,sp,-44
  802590:	dc800315 	stw	r18,12(sp)
  802594:	dfc00a15 	stw	ra,40(sp)
  802598:	df000915 	stw	fp,36(sp)
  80259c:	ddc00815 	stw	r23,32(sp)
  8025a0:	dd800715 	stw	r22,28(sp)
  8025a4:	dd400615 	stw	r21,24(sp)
  8025a8:	dd000515 	stw	r20,20(sp)
  8025ac:	dcc00415 	stw	r19,16(sp)
  8025b0:	dc400215 	stw	r17,8(sp)
  8025b4:	dc000115 	stw	r16,4(sp)
  8025b8:	288002c4 	addi	r2,r5,11
  8025bc:	00c00584 	movi	r3,22
  8025c0:	2025883a 	mov	r18,r4
  8025c4:	18802a2e 	bgeu	r3,r2,802670 <_malloc_r+0xe4>
  8025c8:	047ffe04 	movi	r17,-8
  8025cc:	1462703a 	and	r17,r2,r17
  8025d0:	88009e16 	blt	r17,zero,80284c <_malloc_r+0x2c0>
  8025d4:	89409d36 	bltu	r17,r5,80284c <_malloc_r+0x2c0>
  8025d8:	0817cbc0 	call	817cbc <__malloc_lock>
  8025dc:	00807dc4 	movi	r2,503
  8025e0:	14402736 	bltu	r2,r17,802680 <_malloc_r+0xf4>
  8025e4:	8806d0fa 	srli	r3,r17,3
  8025e8:	04c020b4 	movhi	r19,130
  8025ec:	9cf1c404 	addi	r19,r19,-14576
  8025f0:	18c5883a 	add	r2,r3,r3
  8025f4:	1085883a 	add	r2,r2,r2
  8025f8:	1085883a 	add	r2,r2,r2
  8025fc:	9885883a 	add	r2,r19,r2
  802600:	14000317 	ldw	r16,12(r2)
  802604:	80814a26 	beq	r16,r2,802b30 <_malloc_r+0x5a4>
  802608:	80c00117 	ldw	r3,4(r16)
  80260c:	81000317 	ldw	r4,12(r16)
  802610:	00bfff04 	movi	r2,-4
  802614:	1884703a 	and	r2,r3,r2
  802618:	81400217 	ldw	r5,8(r16)
  80261c:	8085883a 	add	r2,r16,r2
  802620:	10c00117 	ldw	r3,4(r2)
  802624:	29000315 	stw	r4,12(r5)
  802628:	21400215 	stw	r5,8(r4)
  80262c:	18c00054 	ori	r3,r3,1
  802630:	10c00115 	stw	r3,4(r2)
  802634:	9009883a 	mov	r4,r18
  802638:	0817cdc0 	call	817cdc <__malloc_unlock>
  80263c:	80800204 	addi	r2,r16,8
  802640:	dfc00a17 	ldw	ra,40(sp)
  802644:	df000917 	ldw	fp,36(sp)
  802648:	ddc00817 	ldw	r23,32(sp)
  80264c:	dd800717 	ldw	r22,28(sp)
  802650:	dd400617 	ldw	r21,24(sp)
  802654:	dd000517 	ldw	r20,20(sp)
  802658:	dcc00417 	ldw	r19,16(sp)
  80265c:	dc800317 	ldw	r18,12(sp)
  802660:	dc400217 	ldw	r17,8(sp)
  802664:	dc000117 	ldw	r16,4(sp)
  802668:	dec00b04 	addi	sp,sp,44
  80266c:	f800283a 	ret
  802670:	04400404 	movi	r17,16
  802674:	89407536 	bltu	r17,r5,80284c <_malloc_r+0x2c0>
  802678:	0817cbc0 	call	817cbc <__malloc_lock>
  80267c:	003fd906 	br	8025e4 <__alt_data_end+0xff8025e4>
  802680:	8806d27a 	srli	r3,r17,9
  802684:	18007526 	beq	r3,zero,80285c <_malloc_r+0x2d0>
  802688:	00800104 	movi	r2,4
  80268c:	10c0ef36 	bltu	r2,r3,802a4c <_malloc_r+0x4c0>
  802690:	8806d1ba 	srli	r3,r17,6
  802694:	19c00e04 	addi	r7,r3,56
  802698:	39cb883a 	add	r5,r7,r7
  80269c:	04c020b4 	movhi	r19,130
  8026a0:	294b883a 	add	r5,r5,r5
  8026a4:	9cf1c404 	addi	r19,r19,-14576
  8026a8:	294b883a 	add	r5,r5,r5
  8026ac:	994b883a 	add	r5,r19,r5
  8026b0:	2c000317 	ldw	r16,12(r5)
  8026b4:	2c000e26 	beq	r5,r16,8026f0 <_malloc_r+0x164>
  8026b8:	80800117 	ldw	r2,4(r16)
  8026bc:	01bfff04 	movi	r6,-4
  8026c0:	010003c4 	movi	r4,15
  8026c4:	1184703a 	and	r2,r2,r6
  8026c8:	1447c83a 	sub	r3,r2,r17
  8026cc:	20c00716 	blt	r4,r3,8026ec <_malloc_r+0x160>
  8026d0:	1800650e 	bge	r3,zero,802868 <_malloc_r+0x2dc>
  8026d4:	84000317 	ldw	r16,12(r16)
  8026d8:	2c000526 	beq	r5,r16,8026f0 <_malloc_r+0x164>
  8026dc:	80800117 	ldw	r2,4(r16)
  8026e0:	1184703a 	and	r2,r2,r6
  8026e4:	1447c83a 	sub	r3,r2,r17
  8026e8:	20fff90e 	bge	r4,r3,8026d0 <__alt_data_end+0xff8026d0>
  8026ec:	39ffffc4 	addi	r7,r7,-1
  8026f0:	38c00044 	addi	r3,r7,1
  8026f4:	018020b4 	movhi	r6,130
  8026f8:	9c000417 	ldw	r16,16(r19)
  8026fc:	31b1c404 	addi	r6,r6,-14576
  802700:	32400204 	addi	r9,r6,8
  802704:	82410326 	beq	r16,r9,802b14 <_malloc_r+0x588>
  802708:	81000117 	ldw	r4,4(r16)
  80270c:	00bfff04 	movi	r2,-4
  802710:	208e703a 	and	r7,r4,r2
  802714:	3c45c83a 	sub	r2,r7,r17
  802718:	010003c4 	movi	r4,15
  80271c:	2080ee16 	blt	r4,r2,802ad8 <_malloc_r+0x54c>
  802720:	32400515 	stw	r9,20(r6)
  802724:	32400415 	stw	r9,16(r6)
  802728:	1000510e 	bge	r2,zero,802870 <_malloc_r+0x2e4>
  80272c:	00807fc4 	movi	r2,511
  802730:	11c0ce36 	bltu	r2,r7,802a6c <_malloc_r+0x4e0>
  802734:	3808d0fa 	srli	r4,r7,3
  802738:	01c00044 	movi	r7,1
  80273c:	30800117 	ldw	r2,4(r6)
  802740:	210b883a 	add	r5,r4,r4
  802744:	294b883a 	add	r5,r5,r5
  802748:	2009d0ba 	srai	r4,r4,2
  80274c:	294b883a 	add	r5,r5,r5
  802750:	298b883a 	add	r5,r5,r6
  802754:	2a000217 	ldw	r8,8(r5)
  802758:	3908983a 	sll	r4,r7,r4
  80275c:	81400315 	stw	r5,12(r16)
  802760:	82000215 	stw	r8,8(r16)
  802764:	2088b03a 	or	r4,r4,r2
  802768:	2c000215 	stw	r16,8(r5)
  80276c:	31000115 	stw	r4,4(r6)
  802770:	44000315 	stw	r16,12(r8)
  802774:	1805d0ba 	srai	r2,r3,2
  802778:	01400044 	movi	r5,1
  80277c:	288a983a 	sll	r5,r5,r2
  802780:	21404336 	bltu	r4,r5,802890 <_malloc_r+0x304>
  802784:	2144703a 	and	r2,r4,r5
  802788:	10000a1e 	bne	r2,zero,8027b4 <_malloc_r+0x228>
  80278c:	00bfff04 	movi	r2,-4
  802790:	294b883a 	add	r5,r5,r5
  802794:	1886703a 	and	r3,r3,r2
  802798:	2144703a 	and	r2,r4,r5
  80279c:	18c00104 	addi	r3,r3,4
  8027a0:	1000041e 	bne	r2,zero,8027b4 <_malloc_r+0x228>
  8027a4:	294b883a 	add	r5,r5,r5
  8027a8:	2144703a 	and	r2,r4,r5
  8027ac:	18c00104 	addi	r3,r3,4
  8027b0:	103ffc26 	beq	r2,zero,8027a4 <__alt_data_end+0xff8027a4>
  8027b4:	023fff04 	movi	r8,-4
  8027b8:	01c003c4 	movi	r7,15
  8027bc:	18c5883a 	add	r2,r3,r3
  8027c0:	1085883a 	add	r2,r2,r2
  8027c4:	1085883a 	add	r2,r2,r2
  8027c8:	9895883a 	add	r10,r19,r2
  8027cc:	52c00304 	addi	r11,r10,12
  8027d0:	1819883a 	mov	r12,r3
  8027d4:	5c000017 	ldw	r16,0(r11)
  8027d8:	59bffd04 	addi	r6,r11,-12
  8027dc:	8180041e 	bne	r16,r6,8027f0 <_malloc_r+0x264>
  8027e0:	0000ce06 	br	802b1c <_malloc_r+0x590>
  8027e4:	2000d70e 	bge	r4,zero,802b44 <_malloc_r+0x5b8>
  8027e8:	84000317 	ldw	r16,12(r16)
  8027ec:	8180cb26 	beq	r16,r6,802b1c <_malloc_r+0x590>
  8027f0:	80800117 	ldw	r2,4(r16)
  8027f4:	1204703a 	and	r2,r2,r8
  8027f8:	1449c83a 	sub	r4,r2,r17
  8027fc:	393ff90e 	bge	r7,r4,8027e4 <__alt_data_end+0xff8027e4>
  802800:	80800317 	ldw	r2,12(r16)
  802804:	80c00217 	ldw	r3,8(r16)
  802808:	89400054 	ori	r5,r17,1
  80280c:	81400115 	stw	r5,4(r16)
  802810:	18800315 	stw	r2,12(r3)
  802814:	10c00215 	stw	r3,8(r2)
  802818:	8463883a 	add	r17,r16,r17
  80281c:	9c400515 	stw	r17,20(r19)
  802820:	9c400415 	stw	r17,16(r19)
  802824:	20800054 	ori	r2,r4,1
  802828:	88800115 	stw	r2,4(r17)
  80282c:	8a400315 	stw	r9,12(r17)
  802830:	8a400215 	stw	r9,8(r17)
  802834:	8923883a 	add	r17,r17,r4
  802838:	89000015 	stw	r4,0(r17)
  80283c:	9009883a 	mov	r4,r18
  802840:	0817cdc0 	call	817cdc <__malloc_unlock>
  802844:	80800204 	addi	r2,r16,8
  802848:	003f7d06 	br	802640 <__alt_data_end+0xff802640>
  80284c:	00800304 	movi	r2,12
  802850:	90800015 	stw	r2,0(r18)
  802854:	0005883a 	mov	r2,zero
  802858:	003f7906 	br	802640 <__alt_data_end+0xff802640>
  80285c:	01401f84 	movi	r5,126
  802860:	01c00fc4 	movi	r7,63
  802864:	003f8d06 	br	80269c <__alt_data_end+0xff80269c>
  802868:	81000317 	ldw	r4,12(r16)
  80286c:	003f6a06 	br	802618 <__alt_data_end+0xff802618>
  802870:	81c5883a 	add	r2,r16,r7
  802874:	10c00117 	ldw	r3,4(r2)
  802878:	9009883a 	mov	r4,r18
  80287c:	18c00054 	ori	r3,r3,1
  802880:	10c00115 	stw	r3,4(r2)
  802884:	0817cdc0 	call	817cdc <__malloc_unlock>
  802888:	80800204 	addi	r2,r16,8
  80288c:	003f6c06 	br	802640 <__alt_data_end+0xff802640>
  802890:	9c000217 	ldw	r16,8(r19)
  802894:	00bfff04 	movi	r2,-4
  802898:	85800117 	ldw	r22,4(r16)
  80289c:	b0ac703a 	and	r22,r22,r2
  8028a0:	b4400336 	bltu	r22,r17,8028b0 <_malloc_r+0x324>
  8028a4:	b445c83a 	sub	r2,r22,r17
  8028a8:	00c003c4 	movi	r3,15
  8028ac:	18805d16 	blt	r3,r2,802a24 <_malloc_r+0x498>
  8028b0:	05c020b4 	movhi	r23,130
  8028b4:	008020b4 	movhi	r2,130
  8028b8:	bdf7f904 	addi	r23,r23,-8220
  8028bc:	10bf6604 	addi	r2,r2,-616
  8028c0:	15400017 	ldw	r21,0(r2)
  8028c4:	b9000017 	ldw	r4,0(r23)
  8028c8:	00ffffc4 	movi	r3,-1
  8028cc:	858d883a 	add	r6,r16,r22
  8028d0:	8d6b883a 	add	r21,r17,r21
  8028d4:	20c0e426 	beq	r4,r3,802c68 <_malloc_r+0x6dc>
  8028d8:	ad4403c4 	addi	r21,r21,4111
  8028dc:	00fc0004 	movi	r3,-4096
  8028e0:	a8ea703a 	and	r21,r21,r3
  8028e4:	9009883a 	mov	r4,r18
  8028e8:	a80b883a 	mov	r5,r21
  8028ec:	d9800015 	stw	r6,0(sp)
  8028f0:	08032700 	call	803270 <_sbrk_r>
  8028f4:	00ffffc4 	movi	r3,-1
  8028f8:	1029883a 	mov	r20,r2
  8028fc:	d9800017 	ldw	r6,0(sp)
  802900:	10c0a426 	beq	r2,r3,802b94 <_malloc_r+0x608>
  802904:	1180a236 	bltu	r2,r6,802b90 <_malloc_r+0x604>
  802908:	070020b4 	movhi	fp,130
  80290c:	e73f7104 	addi	fp,fp,-572
  802910:	e0c00017 	ldw	r3,0(fp)
  802914:	a8c7883a 	add	r3,r21,r3
  802918:	e0c00015 	stw	r3,0(fp)
  80291c:	3500da26 	beq	r6,r20,802c88 <_malloc_r+0x6fc>
  802920:	b9000017 	ldw	r4,0(r23)
  802924:	00bfffc4 	movi	r2,-1
  802928:	2080e426 	beq	r4,r2,802cbc <_malloc_r+0x730>
  80292c:	a185c83a 	sub	r2,r20,r6
  802930:	1885883a 	add	r2,r3,r2
  802934:	e0800015 	stw	r2,0(fp)
  802938:	a0c001cc 	andi	r3,r20,7
  80293c:	1800b526 	beq	r3,zero,802c14 <_malloc_r+0x688>
  802940:	a0e9c83a 	sub	r20,r20,r3
  802944:	00840204 	movi	r2,4104
  802948:	a5000204 	addi	r20,r20,8
  80294c:	10c7c83a 	sub	r3,r2,r3
  802950:	a545883a 	add	r2,r20,r21
  802954:	1083ffcc 	andi	r2,r2,4095
  802958:	18abc83a 	sub	r21,r3,r2
  80295c:	9009883a 	mov	r4,r18
  802960:	a80b883a 	mov	r5,r21
  802964:	08032700 	call	803270 <_sbrk_r>
  802968:	00ffffc4 	movi	r3,-1
  80296c:	10c0d026 	beq	r2,r3,802cb0 <_malloc_r+0x724>
  802970:	1507c83a 	sub	r3,r2,r20
  802974:	a8c7883a 	add	r3,r21,r3
  802978:	18c00054 	ori	r3,r3,1
  80297c:	e0800017 	ldw	r2,0(fp)
  802980:	9d000215 	stw	r20,8(r19)
  802984:	a0c00115 	stw	r3,4(r20)
  802988:	a887883a 	add	r3,r21,r2
  80298c:	e0c00015 	stw	r3,0(fp)
  802990:	84c00e26 	beq	r16,r19,8029cc <_malloc_r+0x440>
  802994:	018003c4 	movi	r6,15
  802998:	3580a02e 	bgeu	r6,r22,802c1c <_malloc_r+0x690>
  80299c:	81400117 	ldw	r5,4(r16)
  8029a0:	013ffe04 	movi	r4,-8
  8029a4:	b0bffd04 	addi	r2,r22,-12
  8029a8:	1104703a 	and	r2,r2,r4
  8029ac:	2900004c 	andi	r4,r5,1
  8029b0:	1108b03a 	or	r4,r2,r4
  8029b4:	81000115 	stw	r4,4(r16)
  8029b8:	01400144 	movi	r5,5
  8029bc:	8089883a 	add	r4,r16,r2
  8029c0:	21400115 	stw	r5,4(r4)
  8029c4:	21400215 	stw	r5,8(r4)
  8029c8:	3080c036 	bltu	r6,r2,802ccc <_malloc_r+0x740>
  8029cc:	008020b4 	movhi	r2,130
  8029d0:	10bf6504 	addi	r2,r2,-620
  8029d4:	11000017 	ldw	r4,0(r2)
  8029d8:	20c0012e 	bgeu	r4,r3,8029e0 <_malloc_r+0x454>
  8029dc:	10c00015 	stw	r3,0(r2)
  8029e0:	008020b4 	movhi	r2,130
  8029e4:	10bf6404 	addi	r2,r2,-624
  8029e8:	11000017 	ldw	r4,0(r2)
  8029ec:	9c000217 	ldw	r16,8(r19)
  8029f0:	20c0012e 	bgeu	r4,r3,8029f8 <_malloc_r+0x46c>
  8029f4:	10c00015 	stw	r3,0(r2)
  8029f8:	80c00117 	ldw	r3,4(r16)
  8029fc:	00bfff04 	movi	r2,-4
  802a00:	1886703a 	and	r3,r3,r2
  802a04:	1c45c83a 	sub	r2,r3,r17
  802a08:	1c400236 	bltu	r3,r17,802a14 <_malloc_r+0x488>
  802a0c:	00c003c4 	movi	r3,15
  802a10:	18800416 	blt	r3,r2,802a24 <_malloc_r+0x498>
  802a14:	9009883a 	mov	r4,r18
  802a18:	0817cdc0 	call	817cdc <__malloc_unlock>
  802a1c:	0005883a 	mov	r2,zero
  802a20:	003f0706 	br	802640 <__alt_data_end+0xff802640>
  802a24:	88c00054 	ori	r3,r17,1
  802a28:	80c00115 	stw	r3,4(r16)
  802a2c:	8463883a 	add	r17,r16,r17
  802a30:	10800054 	ori	r2,r2,1
  802a34:	9c400215 	stw	r17,8(r19)
  802a38:	88800115 	stw	r2,4(r17)
  802a3c:	9009883a 	mov	r4,r18
  802a40:	0817cdc0 	call	817cdc <__malloc_unlock>
  802a44:	80800204 	addi	r2,r16,8
  802a48:	003efd06 	br	802640 <__alt_data_end+0xff802640>
  802a4c:	00800504 	movi	r2,20
  802a50:	10c0482e 	bgeu	r2,r3,802b74 <_malloc_r+0x5e8>
  802a54:	00801504 	movi	r2,84
  802a58:	10c06836 	bltu	r2,r3,802bfc <_malloc_r+0x670>
  802a5c:	8806d33a 	srli	r3,r17,12
  802a60:	19c01b84 	addi	r7,r3,110
  802a64:	39cb883a 	add	r5,r7,r7
  802a68:	003f0c06 	br	80269c <__alt_data_end+0xff80269c>
  802a6c:	3804d27a 	srli	r2,r7,9
  802a70:	01000104 	movi	r4,4
  802a74:	2080422e 	bgeu	r4,r2,802b80 <_malloc_r+0x5f4>
  802a78:	01000504 	movi	r4,20
  802a7c:	20807c36 	bltu	r4,r2,802c70 <_malloc_r+0x6e4>
  802a80:	110016c4 	addi	r4,r2,91
  802a84:	210b883a 	add	r5,r4,r4
  802a88:	294b883a 	add	r5,r5,r5
  802a8c:	294b883a 	add	r5,r5,r5
  802a90:	994b883a 	add	r5,r19,r5
  802a94:	28800217 	ldw	r2,8(r5)
  802a98:	020020b4 	movhi	r8,130
  802a9c:	4231c404 	addi	r8,r8,-14576
  802aa0:	11406326 	beq	r2,r5,802c30 <_malloc_r+0x6a4>
  802aa4:	01bfff04 	movi	r6,-4
  802aa8:	11000117 	ldw	r4,4(r2)
  802aac:	2188703a 	and	r4,r4,r6
  802ab0:	3900022e 	bgeu	r7,r4,802abc <_malloc_r+0x530>
  802ab4:	10800217 	ldw	r2,8(r2)
  802ab8:	28bffb1e 	bne	r5,r2,802aa8 <__alt_data_end+0xff802aa8>
  802abc:	11800317 	ldw	r6,12(r2)
  802ac0:	99000117 	ldw	r4,4(r19)
  802ac4:	81800315 	stw	r6,12(r16)
  802ac8:	80800215 	stw	r2,8(r16)
  802acc:	34000215 	stw	r16,8(r6)
  802ad0:	14000315 	stw	r16,12(r2)
  802ad4:	003f2706 	br	802774 <__alt_data_end+0xff802774>
  802ad8:	88c00054 	ori	r3,r17,1
  802adc:	80c00115 	stw	r3,4(r16)
  802ae0:	8463883a 	add	r17,r16,r17
  802ae4:	34400515 	stw	r17,20(r6)
  802ae8:	34400415 	stw	r17,16(r6)
  802aec:	10c00054 	ori	r3,r2,1
  802af0:	8a400315 	stw	r9,12(r17)
  802af4:	8a400215 	stw	r9,8(r17)
  802af8:	88c00115 	stw	r3,4(r17)
  802afc:	88a3883a 	add	r17,r17,r2
  802b00:	88800015 	stw	r2,0(r17)
  802b04:	9009883a 	mov	r4,r18
  802b08:	0817cdc0 	call	817cdc <__malloc_unlock>
  802b0c:	80800204 	addi	r2,r16,8
  802b10:	003ecb06 	br	802640 <__alt_data_end+0xff802640>
  802b14:	31000117 	ldw	r4,4(r6)
  802b18:	003f1606 	br	802774 <__alt_data_end+0xff802774>
  802b1c:	63000044 	addi	r12,r12,1
  802b20:	608000cc 	andi	r2,r12,3
  802b24:	5ac00204 	addi	r11,r11,8
  802b28:	103f2a1e 	bne	r2,zero,8027d4 <__alt_data_end+0xff8027d4>
  802b2c:	00002106 	br	802bb4 <_malloc_r+0x628>
  802b30:	80800204 	addi	r2,r16,8
  802b34:	84000517 	ldw	r16,20(r16)
  802b38:	143eb31e 	bne	r2,r16,802608 <__alt_data_end+0xff802608>
  802b3c:	18c00084 	addi	r3,r3,2
  802b40:	003eec06 	br	8026f4 <__alt_data_end+0xff8026f4>
  802b44:	8085883a 	add	r2,r16,r2
  802b48:	10c00117 	ldw	r3,4(r2)
  802b4c:	81000317 	ldw	r4,12(r16)
  802b50:	81400217 	ldw	r5,8(r16)
  802b54:	18c00054 	ori	r3,r3,1
  802b58:	10c00115 	stw	r3,4(r2)
  802b5c:	29000315 	stw	r4,12(r5)
  802b60:	21400215 	stw	r5,8(r4)
  802b64:	9009883a 	mov	r4,r18
  802b68:	0817cdc0 	call	817cdc <__malloc_unlock>
  802b6c:	80800204 	addi	r2,r16,8
  802b70:	003eb306 	br	802640 <__alt_data_end+0xff802640>
  802b74:	19c016c4 	addi	r7,r3,91
  802b78:	39cb883a 	add	r5,r7,r7
  802b7c:	003ec706 	br	80269c <__alt_data_end+0xff80269c>
  802b80:	3804d1ba 	srli	r2,r7,6
  802b84:	11000e04 	addi	r4,r2,56
  802b88:	210b883a 	add	r5,r4,r4
  802b8c:	003fbe06 	br	802a88 <__alt_data_end+0xff802a88>
  802b90:	84ff5d26 	beq	r16,r19,802908 <__alt_data_end+0xff802908>
  802b94:	9c000217 	ldw	r16,8(r19)
  802b98:	00bfff04 	movi	r2,-4
  802b9c:	80c00117 	ldw	r3,4(r16)
  802ba0:	1886703a 	and	r3,r3,r2
  802ba4:	003f9706 	br	802a04 <__alt_data_end+0xff802a04>
  802ba8:	52800017 	ldw	r10,0(r10)
  802bac:	18ffffc4 	addi	r3,r3,-1
  802bb0:	50805c1e 	bne	r10,r2,802d24 <_malloc_r+0x798>
  802bb4:	190000cc 	andi	r4,r3,3
  802bb8:	50bffe04 	addi	r2,r10,-8
  802bbc:	203ffa1e 	bne	r4,zero,802ba8 <__alt_data_end+0xff802ba8>
  802bc0:	98800117 	ldw	r2,4(r19)
  802bc4:	0146303a 	nor	r3,zero,r5
  802bc8:	1884703a 	and	r2,r3,r2
  802bcc:	98800115 	stw	r2,4(r19)
  802bd0:	294b883a 	add	r5,r5,r5
  802bd4:	117f2e36 	bltu	r2,r5,802890 <__alt_data_end+0xff802890>
  802bd8:	283f2d26 	beq	r5,zero,802890 <__alt_data_end+0xff802890>
  802bdc:	1146703a 	and	r3,r2,r5
  802be0:	1800521e 	bne	r3,zero,802d2c <_malloc_r+0x7a0>
  802be4:	6007883a 	mov	r3,r12
  802be8:	294b883a 	add	r5,r5,r5
  802bec:	1148703a 	and	r4,r2,r5
  802bf0:	18c00104 	addi	r3,r3,4
  802bf4:	203ffc26 	beq	r4,zero,802be8 <__alt_data_end+0xff802be8>
  802bf8:	003ef006 	br	8027bc <__alt_data_end+0xff8027bc>
  802bfc:	00805504 	movi	r2,340
  802c00:	10c01336 	bltu	r2,r3,802c50 <_malloc_r+0x6c4>
  802c04:	8806d3fa 	srli	r3,r17,15
  802c08:	19c01dc4 	addi	r7,r3,119
  802c0c:	39cb883a 	add	r5,r7,r7
  802c10:	003ea206 	br	80269c <__alt_data_end+0xff80269c>
  802c14:	00c40004 	movi	r3,4096
  802c18:	003f4d06 	br	802950 <__alt_data_end+0xff802950>
  802c1c:	00800044 	movi	r2,1
  802c20:	a0800115 	stw	r2,4(r20)
  802c24:	a021883a 	mov	r16,r20
  802c28:	0007883a 	mov	r3,zero
  802c2c:	003f7506 	br	802a04 <__alt_data_end+0xff802a04>
  802c30:	200bd0ba 	srai	r5,r4,2
  802c34:	01800044 	movi	r6,1
  802c38:	41000117 	ldw	r4,4(r8)
  802c3c:	314a983a 	sll	r5,r6,r5
  802c40:	100d883a 	mov	r6,r2
  802c44:	2908b03a 	or	r4,r5,r4
  802c48:	41000115 	stw	r4,4(r8)
  802c4c:	003f9d06 	br	802ac4 <__alt_data_end+0xff802ac4>
  802c50:	00815504 	movi	r2,1364
  802c54:	10c01336 	bltu	r2,r3,802ca4 <_malloc_r+0x718>
  802c58:	8806d4ba 	srli	r3,r17,18
  802c5c:	19c01f04 	addi	r7,r3,124
  802c60:	39cb883a 	add	r5,r7,r7
  802c64:	003e8d06 	br	80269c <__alt_data_end+0xff80269c>
  802c68:	ad400404 	addi	r21,r21,16
  802c6c:	003f1d06 	br	8028e4 <__alt_data_end+0xff8028e4>
  802c70:	01001504 	movi	r4,84
  802c74:	20801c36 	bltu	r4,r2,802ce8 <_malloc_r+0x75c>
  802c78:	3804d33a 	srli	r2,r7,12
  802c7c:	11001b84 	addi	r4,r2,110
  802c80:	210b883a 	add	r5,r4,r4
  802c84:	003f8006 	br	802a88 <__alt_data_end+0xff802a88>
  802c88:	3083ffcc 	andi	r2,r6,4095
  802c8c:	103f241e 	bne	r2,zero,802920 <__alt_data_end+0xff802920>
  802c90:	99000217 	ldw	r4,8(r19)
  802c94:	ad85883a 	add	r2,r21,r22
  802c98:	10800054 	ori	r2,r2,1
  802c9c:	20800115 	stw	r2,4(r4)
  802ca0:	003f4a06 	br	8029cc <__alt_data_end+0xff8029cc>
  802ca4:	01403f04 	movi	r5,252
  802ca8:	01c01f84 	movi	r7,126
  802cac:	003e7b06 	br	80269c <__alt_data_end+0xff80269c>
  802cb0:	00c00044 	movi	r3,1
  802cb4:	002b883a 	mov	r21,zero
  802cb8:	003f3006 	br	80297c <__alt_data_end+0xff80297c>
  802cbc:	008020b4 	movhi	r2,130
  802cc0:	10b7f904 	addi	r2,r2,-8220
  802cc4:	15000015 	stw	r20,0(r2)
  802cc8:	003f1b06 	br	802938 <__alt_data_end+0xff802938>
  802ccc:	9009883a 	mov	r4,r18
  802cd0:	81400204 	addi	r5,r16,8
  802cd4:	08018700 	call	801870 <_free_r>
  802cd8:	008020b4 	movhi	r2,130
  802cdc:	10bf7104 	addi	r2,r2,-572
  802ce0:	10c00017 	ldw	r3,0(r2)
  802ce4:	003f3906 	br	8029cc <__alt_data_end+0xff8029cc>
  802ce8:	01005504 	movi	r4,340
  802cec:	20800436 	bltu	r4,r2,802d00 <_malloc_r+0x774>
  802cf0:	3804d3fa 	srli	r2,r7,15
  802cf4:	11001dc4 	addi	r4,r2,119
  802cf8:	210b883a 	add	r5,r4,r4
  802cfc:	003f6206 	br	802a88 <__alt_data_end+0xff802a88>
  802d00:	01015504 	movi	r4,1364
  802d04:	20800436 	bltu	r4,r2,802d18 <_malloc_r+0x78c>
  802d08:	3804d4ba 	srli	r2,r7,18
  802d0c:	11001f04 	addi	r4,r2,124
  802d10:	210b883a 	add	r5,r4,r4
  802d14:	003f5c06 	br	802a88 <__alt_data_end+0xff802a88>
  802d18:	01403f04 	movi	r5,252
  802d1c:	01001f84 	movi	r4,126
  802d20:	003f5906 	br	802a88 <__alt_data_end+0xff802a88>
  802d24:	98800117 	ldw	r2,4(r19)
  802d28:	003fa906 	br	802bd0 <__alt_data_end+0xff802bd0>
  802d2c:	6007883a 	mov	r3,r12
  802d30:	003ea206 	br	8027bc <__alt_data_end+0xff8027bc>

00802d34 <memset>:
  802d34:	20c000cc 	andi	r3,r4,3
  802d38:	2005883a 	mov	r2,r4
  802d3c:	18004326 	beq	r3,zero,802e4c <memset+0x118>
  802d40:	31ffffc4 	addi	r7,r6,-1
  802d44:	30004026 	beq	r6,zero,802e48 <memset+0x114>
  802d48:	2813883a 	mov	r9,r5
  802d4c:	200d883a 	mov	r6,r4
  802d50:	2007883a 	mov	r3,r4
  802d54:	00000406 	br	802d68 <memset+0x34>
  802d58:	3a3fffc4 	addi	r8,r7,-1
  802d5c:	31800044 	addi	r6,r6,1
  802d60:	38003926 	beq	r7,zero,802e48 <memset+0x114>
  802d64:	400f883a 	mov	r7,r8
  802d68:	18c00044 	addi	r3,r3,1
  802d6c:	32400005 	stb	r9,0(r6)
  802d70:	1a0000cc 	andi	r8,r3,3
  802d74:	403ff81e 	bne	r8,zero,802d58 <__alt_data_end+0xff802d58>
  802d78:	010000c4 	movi	r4,3
  802d7c:	21c02d2e 	bgeu	r4,r7,802e34 <memset+0x100>
  802d80:	29803fcc 	andi	r6,r5,255
  802d84:	3008923a 	slli	r4,r6,8
  802d88:	218cb03a 	or	r6,r4,r6
  802d8c:	3008943a 	slli	r4,r6,16
  802d90:	218cb03a 	or	r6,r4,r6
  802d94:	010003c4 	movi	r4,15
  802d98:	21c0182e 	bgeu	r4,r7,802dfc <memset+0xc8>
  802d9c:	3b3ffc04 	addi	r12,r7,-16
  802da0:	6018d13a 	srli	r12,r12,4
  802da4:	1a000104 	addi	r8,r3,4
  802da8:	1ac00204 	addi	r11,r3,8
  802dac:	6008913a 	slli	r4,r12,4
  802db0:	1a800304 	addi	r10,r3,12
  802db4:	1813883a 	mov	r9,r3
  802db8:	21000504 	addi	r4,r4,20
  802dbc:	1909883a 	add	r4,r3,r4
  802dc0:	49800015 	stw	r6,0(r9)
  802dc4:	41800015 	stw	r6,0(r8)
  802dc8:	59800015 	stw	r6,0(r11)
  802dcc:	51800015 	stw	r6,0(r10)
  802dd0:	42000404 	addi	r8,r8,16
  802dd4:	4a400404 	addi	r9,r9,16
  802dd8:	5ac00404 	addi	r11,r11,16
  802ddc:	52800404 	addi	r10,r10,16
  802de0:	413ff71e 	bne	r8,r4,802dc0 <__alt_data_end+0xff802dc0>
  802de4:	63000044 	addi	r12,r12,1
  802de8:	6018913a 	slli	r12,r12,4
  802dec:	39c003cc 	andi	r7,r7,15
  802df0:	010000c4 	movi	r4,3
  802df4:	1b07883a 	add	r3,r3,r12
  802df8:	21c00e2e 	bgeu	r4,r7,802e34 <memset+0x100>
  802dfc:	1813883a 	mov	r9,r3
  802e00:	3811883a 	mov	r8,r7
  802e04:	010000c4 	movi	r4,3
  802e08:	49800015 	stw	r6,0(r9)
  802e0c:	423fff04 	addi	r8,r8,-4
  802e10:	4a400104 	addi	r9,r9,4
  802e14:	223ffc36 	bltu	r4,r8,802e08 <__alt_data_end+0xff802e08>
  802e18:	393fff04 	addi	r4,r7,-4
  802e1c:	2008d0ba 	srli	r4,r4,2
  802e20:	39c000cc 	andi	r7,r7,3
  802e24:	21000044 	addi	r4,r4,1
  802e28:	2109883a 	add	r4,r4,r4
  802e2c:	2109883a 	add	r4,r4,r4
  802e30:	1907883a 	add	r3,r3,r4
  802e34:	38000426 	beq	r7,zero,802e48 <memset+0x114>
  802e38:	19cf883a 	add	r7,r3,r7
  802e3c:	19400005 	stb	r5,0(r3)
  802e40:	18c00044 	addi	r3,r3,1
  802e44:	19fffd1e 	bne	r3,r7,802e3c <__alt_data_end+0xff802e3c>
  802e48:	f800283a 	ret
  802e4c:	2007883a 	mov	r3,r4
  802e50:	300f883a 	mov	r7,r6
  802e54:	003fc806 	br	802d78 <__alt_data_end+0xff802d78>

00802e58 <_open_r>:
  802e58:	defffd04 	addi	sp,sp,-12
  802e5c:	dc000015 	stw	r16,0(sp)
  802e60:	040020b4 	movhi	r16,130
  802e64:	dc400115 	stw	r17,4(sp)
  802e68:	843f6304 	addi	r16,r16,-628
  802e6c:	2023883a 	mov	r17,r4
  802e70:	2809883a 	mov	r4,r5
  802e74:	300b883a 	mov	r5,r6
  802e78:	380d883a 	mov	r6,r7
  802e7c:	dfc00215 	stw	ra,8(sp)
  802e80:	80000015 	stw	zero,0(r16)
  802e84:	0817e180 	call	817e18 <open>
  802e88:	00ffffc4 	movi	r3,-1
  802e8c:	10c00526 	beq	r2,r3,802ea4 <_open_r+0x4c>
  802e90:	dfc00217 	ldw	ra,8(sp)
  802e94:	dc400117 	ldw	r17,4(sp)
  802e98:	dc000017 	ldw	r16,0(sp)
  802e9c:	dec00304 	addi	sp,sp,12
  802ea0:	f800283a 	ret
  802ea4:	80c00017 	ldw	r3,0(r16)
  802ea8:	183ff926 	beq	r3,zero,802e90 <__alt_data_end+0xff802e90>
  802eac:	88c00015 	stw	r3,0(r17)
  802eb0:	003ff706 	br	802e90 <__alt_data_end+0xff802e90>

00802eb4 <_printf_r>:
  802eb4:	defffd04 	addi	sp,sp,-12
  802eb8:	dfc00015 	stw	ra,0(sp)
  802ebc:	d9800115 	stw	r6,4(sp)
  802ec0:	d9c00215 	stw	r7,8(sp)
  802ec4:	280d883a 	mov	r6,r5
  802ec8:	21400217 	ldw	r5,8(r4)
  802ecc:	d9c00104 	addi	r7,sp,4
  802ed0:	0804c840 	call	804c84 <___vfprintf_internal_r>
  802ed4:	dfc00017 	ldw	ra,0(sp)
  802ed8:	dec00304 	addi	sp,sp,12
  802edc:	f800283a 	ret

00802ee0 <printf>:
  802ee0:	defffc04 	addi	sp,sp,-16
  802ee4:	dfc00015 	stw	ra,0(sp)
  802ee8:	d9400115 	stw	r5,4(sp)
  802eec:	d9800215 	stw	r6,8(sp)
  802ef0:	d9c00315 	stw	r7,12(sp)
  802ef4:	008020b4 	movhi	r2,130
  802ef8:	10b7f804 	addi	r2,r2,-8224
  802efc:	10800017 	ldw	r2,0(r2)
  802f00:	200b883a 	mov	r5,r4
  802f04:	d9800104 	addi	r6,sp,4
  802f08:	11000217 	ldw	r4,8(r2)
  802f0c:	0806bd40 	call	806bd4 <__vfprintf_internal>
  802f10:	dfc00017 	ldw	ra,0(sp)
  802f14:	dec00404 	addi	sp,sp,16
  802f18:	f800283a 	ret

00802f1c <_putchar_r>:
  802f1c:	21800217 	ldw	r6,8(r4)
  802f20:	080a44c1 	jmpi	80a44c <_putc_r>

00802f24 <putchar>:
  802f24:	008020b4 	movhi	r2,130
  802f28:	10b7f804 	addi	r2,r2,-8224
  802f2c:	200b883a 	mov	r5,r4
  802f30:	11000017 	ldw	r4,0(r2)
  802f34:	21800217 	ldw	r6,8(r4)
  802f38:	080a44c1 	jmpi	80a44c <_putc_r>

00802f3c <_puts_r>:
  802f3c:	defff604 	addi	sp,sp,-40
  802f40:	dc000715 	stw	r16,28(sp)
  802f44:	2021883a 	mov	r16,r4
  802f48:	2809883a 	mov	r4,r5
  802f4c:	dc400815 	stw	r17,32(sp)
  802f50:	dfc00915 	stw	ra,36(sp)
  802f54:	2823883a 	mov	r17,r5
  802f58:	08034f40 	call	8034f4 <strlen>
  802f5c:	81400217 	ldw	r5,8(r16)
  802f60:	11000044 	addi	r4,r2,1
  802f64:	d8800115 	stw	r2,4(sp)
  802f68:	008020b4 	movhi	r2,130
  802f6c:	2980030b 	ldhu	r6,12(r5)
  802f70:	10aecc04 	addi	r2,r2,-17616
  802f74:	d8800215 	stw	r2,8(sp)
  802f78:	00800044 	movi	r2,1
  802f7c:	d8800315 	stw	r2,12(sp)
  802f80:	00800084 	movi	r2,2
  802f84:	d8800515 	stw	r2,20(sp)
  802f88:	dc400015 	stw	r17,0(sp)
  802f8c:	d9000615 	stw	r4,24(sp)
  802f90:	dec00415 	stw	sp,16(sp)
  802f94:	3088000c 	andi	r2,r6,8192
  802f98:	1000061e 	bne	r2,zero,802fb4 <_puts_r+0x78>
  802f9c:	29001917 	ldw	r4,100(r5)
  802fa0:	00b7ffc4 	movi	r2,-8193
  802fa4:	31880014 	ori	r6,r6,8192
  802fa8:	2084703a 	and	r2,r4,r2
  802fac:	2980030d 	sth	r6,12(r5)
  802fb0:	28801915 	stw	r2,100(r5)
  802fb4:	8009883a 	mov	r4,r16
  802fb8:	d9800404 	addi	r6,sp,16
  802fbc:	080888c0 	call	80888c <__sfvwrite_r>
  802fc0:	1000061e 	bne	r2,zero,802fdc <_puts_r+0xa0>
  802fc4:	00800284 	movi	r2,10
  802fc8:	dfc00917 	ldw	ra,36(sp)
  802fcc:	dc400817 	ldw	r17,32(sp)
  802fd0:	dc000717 	ldw	r16,28(sp)
  802fd4:	dec00a04 	addi	sp,sp,40
  802fd8:	f800283a 	ret
  802fdc:	00bfffc4 	movi	r2,-1
  802fe0:	003ff906 	br	802fc8 <__alt_data_end+0xff802fc8>

00802fe4 <puts>:
  802fe4:	008020b4 	movhi	r2,130
  802fe8:	10b7f804 	addi	r2,r2,-8224
  802fec:	200b883a 	mov	r5,r4
  802ff0:	11000017 	ldw	r4,0(r2)
  802ff4:	0802f3c1 	jmpi	802f3c <_puts_r>

00802ff8 <lflush>:
  802ff8:	2080030b 	ldhu	r2,12(r4)
  802ffc:	00c00244 	movi	r3,9
  803000:	1080024c 	andi	r2,r2,9
  803004:	10c00226 	beq	r2,r3,803010 <lflush+0x18>
  803008:	0005883a 	mov	r2,zero
  80300c:	f800283a 	ret
  803010:	08012241 	jmpi	801224 <fflush>

00803014 <__srefill_r>:
  803014:	defffc04 	addi	sp,sp,-16
  803018:	dc400115 	stw	r17,4(sp)
  80301c:	dc000015 	stw	r16,0(sp)
  803020:	dfc00315 	stw	ra,12(sp)
  803024:	dc800215 	stw	r18,8(sp)
  803028:	2023883a 	mov	r17,r4
  80302c:	2821883a 	mov	r16,r5
  803030:	20000226 	beq	r4,zero,80303c <__srefill_r+0x28>
  803034:	20800e17 	ldw	r2,56(r4)
  803038:	10003c26 	beq	r2,zero,80312c <__srefill_r+0x118>
  80303c:	80c0030b 	ldhu	r3,12(r16)
  803040:	1908000c 	andi	r4,r3,8192
  803044:	1805883a 	mov	r2,r3
  803048:	2000071e 	bne	r4,zero,803068 <__srefill_r+0x54>
  80304c:	81001917 	ldw	r4,100(r16)
  803050:	18880014 	ori	r2,r3,8192
  803054:	00f7ffc4 	movi	r3,-8193
  803058:	20c8703a 	and	r4,r4,r3
  80305c:	8080030d 	sth	r2,12(r16)
  803060:	1007883a 	mov	r3,r2
  803064:	81001915 	stw	r4,100(r16)
  803068:	80000115 	stw	zero,4(r16)
  80306c:	1100080c 	andi	r4,r2,32
  803070:	2000571e 	bne	r4,zero,8031d0 <__srefill_r+0x1bc>
  803074:	1100010c 	andi	r4,r2,4
  803078:	20001f26 	beq	r4,zero,8030f8 <__srefill_r+0xe4>
  80307c:	81400c17 	ldw	r5,48(r16)
  803080:	28000826 	beq	r5,zero,8030a4 <__srefill_r+0x90>
  803084:	80801004 	addi	r2,r16,64
  803088:	28800226 	beq	r5,r2,803094 <__srefill_r+0x80>
  80308c:	8809883a 	mov	r4,r17
  803090:	08018700 	call	801870 <_free_r>
  803094:	80800f17 	ldw	r2,60(r16)
  803098:	80000c15 	stw	zero,48(r16)
  80309c:	80800115 	stw	r2,4(r16)
  8030a0:	1000391e 	bne	r2,zero,803188 <__srefill_r+0x174>
  8030a4:	80800417 	ldw	r2,16(r16)
  8030a8:	10004b26 	beq	r2,zero,8031d8 <__srefill_r+0x1c4>
  8030ac:	8480030b 	ldhu	r18,12(r16)
  8030b0:	908000cc 	andi	r2,r18,3
  8030b4:	10001f1e 	bne	r2,zero,803134 <__srefill_r+0x120>
  8030b8:	81800417 	ldw	r6,16(r16)
  8030bc:	80800817 	ldw	r2,32(r16)
  8030c0:	81400717 	ldw	r5,28(r16)
  8030c4:	81c00517 	ldw	r7,20(r16)
  8030c8:	81800015 	stw	r6,0(r16)
  8030cc:	8809883a 	mov	r4,r17
  8030d0:	103ee83a 	callr	r2
  8030d4:	80800115 	stw	r2,4(r16)
  8030d8:	00800e0e 	bge	zero,r2,803114 <__srefill_r+0x100>
  8030dc:	0005883a 	mov	r2,zero
  8030e0:	dfc00317 	ldw	ra,12(sp)
  8030e4:	dc800217 	ldw	r18,8(sp)
  8030e8:	dc400117 	ldw	r17,4(sp)
  8030ec:	dc000017 	ldw	r16,0(sp)
  8030f0:	dec00404 	addi	sp,sp,16
  8030f4:	f800283a 	ret
  8030f8:	1100040c 	andi	r4,r2,16
  8030fc:	20003026 	beq	r4,zero,8031c0 <__srefill_r+0x1ac>
  803100:	1080020c 	andi	r2,r2,8
  803104:	1000241e 	bne	r2,zero,803198 <__srefill_r+0x184>
  803108:	18c00114 	ori	r3,r3,4
  80310c:	80c0030d 	sth	r3,12(r16)
  803110:	003fe406 	br	8030a4 <__alt_data_end+0xff8030a4>
  803114:	80c0030b 	ldhu	r3,12(r16)
  803118:	1000161e 	bne	r2,zero,803174 <__srefill_r+0x160>
  80311c:	18c00814 	ori	r3,r3,32
  803120:	00bfffc4 	movi	r2,-1
  803124:	80c0030d 	sth	r3,12(r16)
  803128:	003fed06 	br	8030e0 <__alt_data_end+0xff8030e0>
  80312c:	08015a40 	call	8015a4 <__sinit>
  803130:	003fc206 	br	80303c <__alt_data_end+0xff80303c>
  803134:	008020b4 	movhi	r2,130
  803138:	10b7f704 	addi	r2,r2,-8228
  80313c:	11000017 	ldw	r4,0(r2)
  803140:	01402034 	movhi	r5,128
  803144:	00800044 	movi	r2,1
  803148:	294bfe04 	addi	r5,r5,12280
  80314c:	8080030d 	sth	r2,12(r16)
  803150:	08020480 	call	802048 <_fwalk>
  803154:	00800244 	movi	r2,9
  803158:	8480030d 	sth	r18,12(r16)
  80315c:	9480024c 	andi	r18,r18,9
  803160:	90bfd51e 	bne	r18,r2,8030b8 <__alt_data_end+0xff8030b8>
  803164:	8809883a 	mov	r4,r17
  803168:	800b883a 	mov	r5,r16
  80316c:	0800fc00 	call	800fc0 <__sflush_r>
  803170:	003fd106 	br	8030b8 <__alt_data_end+0xff8030b8>
  803174:	18c01014 	ori	r3,r3,64
  803178:	80000115 	stw	zero,4(r16)
  80317c:	00bfffc4 	movi	r2,-1
  803180:	80c0030d 	sth	r3,12(r16)
  803184:	003fd606 	br	8030e0 <__alt_data_end+0xff8030e0>
  803188:	80c00e17 	ldw	r3,56(r16)
  80318c:	0005883a 	mov	r2,zero
  803190:	80c00015 	stw	r3,0(r16)
  803194:	003fd206 	br	8030e0 <__alt_data_end+0xff8030e0>
  803198:	8809883a 	mov	r4,r17
  80319c:	800b883a 	mov	r5,r16
  8031a0:	08011c80 	call	8011c8 <_fflush_r>
  8031a4:	10000a1e 	bne	r2,zero,8031d0 <__srefill_r+0x1bc>
  8031a8:	8080030b 	ldhu	r2,12(r16)
  8031ac:	00fffdc4 	movi	r3,-9
  8031b0:	80000215 	stw	zero,8(r16)
  8031b4:	1886703a 	and	r3,r3,r2
  8031b8:	80000615 	stw	zero,24(r16)
  8031bc:	003fd206 	br	803108 <__alt_data_end+0xff803108>
  8031c0:	00800244 	movi	r2,9
  8031c4:	88800015 	stw	r2,0(r17)
  8031c8:	18c01014 	ori	r3,r3,64
  8031cc:	80c0030d 	sth	r3,12(r16)
  8031d0:	00bfffc4 	movi	r2,-1
  8031d4:	003fc206 	br	8030e0 <__alt_data_end+0xff8030e0>
  8031d8:	8809883a 	mov	r4,r17
  8031dc:	800b883a 	mov	r5,r16
  8031e0:	08023d40 	call	8023d4 <__smakebuf_r>
  8031e4:	003fb106 	br	8030ac <__alt_data_end+0xff8030ac>

008031e8 <__srget_r>:
  8031e8:	defffd04 	addi	sp,sp,-12
  8031ec:	dc400115 	stw	r17,4(sp)
  8031f0:	dc000015 	stw	r16,0(sp)
  8031f4:	dfc00215 	stw	ra,8(sp)
  8031f8:	2023883a 	mov	r17,r4
  8031fc:	2821883a 	mov	r16,r5
  803200:	20000226 	beq	r4,zero,80320c <__srget_r+0x24>
  803204:	20800e17 	ldw	r2,56(r4)
  803208:	10001026 	beq	r2,zero,80324c <__srget_r+0x64>
  80320c:	8809883a 	mov	r4,r17
  803210:	800b883a 	mov	r5,r16
  803214:	08030140 	call	803014 <__srefill_r>
  803218:	10000e1e 	bne	r2,zero,803254 <__srget_r+0x6c>
  80321c:	80c00017 	ldw	r3,0(r16)
  803220:	80800117 	ldw	r2,4(r16)
  803224:	19000044 	addi	r4,r3,1
  803228:	10bfffc4 	addi	r2,r2,-1
  80322c:	80800115 	stw	r2,4(r16)
  803230:	81000015 	stw	r4,0(r16)
  803234:	18800003 	ldbu	r2,0(r3)
  803238:	dfc00217 	ldw	ra,8(sp)
  80323c:	dc400117 	ldw	r17,4(sp)
  803240:	dc000017 	ldw	r16,0(sp)
  803244:	dec00304 	addi	sp,sp,12
  803248:	f800283a 	ret
  80324c:	08015a40 	call	8015a4 <__sinit>
  803250:	003fee06 	br	80320c <__alt_data_end+0xff80320c>
  803254:	00bfffc4 	movi	r2,-1
  803258:	003ff706 	br	803238 <__alt_data_end+0xff803238>

0080325c <__srget>:
  80325c:	008020b4 	movhi	r2,130
  803260:	10b7f804 	addi	r2,r2,-8224
  803264:	200b883a 	mov	r5,r4
  803268:	11000017 	ldw	r4,0(r2)
  80326c:	08031e81 	jmpi	8031e8 <__srget_r>

00803270 <_sbrk_r>:
  803270:	defffd04 	addi	sp,sp,-12
  803274:	dc000015 	stw	r16,0(sp)
  803278:	040020b4 	movhi	r16,130
  80327c:	dc400115 	stw	r17,4(sp)
  803280:	843f6304 	addi	r16,r16,-628
  803284:	2023883a 	mov	r17,r4
  803288:	2809883a 	mov	r4,r5
  80328c:	dfc00215 	stw	ra,8(sp)
  803290:	80000015 	stw	zero,0(r16)
  803294:	081811c0 	call	81811c <sbrk>
  803298:	00ffffc4 	movi	r3,-1
  80329c:	10c00526 	beq	r2,r3,8032b4 <_sbrk_r+0x44>
  8032a0:	dfc00217 	ldw	ra,8(sp)
  8032a4:	dc400117 	ldw	r17,4(sp)
  8032a8:	dc000017 	ldw	r16,0(sp)
  8032ac:	dec00304 	addi	sp,sp,12
  8032b0:	f800283a 	ret
  8032b4:	80c00017 	ldw	r3,0(r16)
  8032b8:	183ff926 	beq	r3,zero,8032a0 <__alt_data_end+0xff8032a0>
  8032bc:	88c00015 	stw	r3,0(r17)
  8032c0:	003ff706 	br	8032a0 <__alt_data_end+0xff8032a0>

008032c4 <sscanf>:
  8032c4:	deffe204 	addi	sp,sp,-120
  8032c8:	dfc01b15 	stw	ra,108(sp)
  8032cc:	dc001a15 	stw	r16,104(sp)
  8032d0:	d9801c15 	stw	r6,112(sp)
  8032d4:	d9c01d15 	stw	r7,116(sp)
  8032d8:	00c08104 	movi	r3,516
  8032dc:	2821883a 	mov	r16,r5
  8032e0:	d8c0030d 	sth	r3,12(sp)
  8032e4:	d9000015 	stw	r4,0(sp)
  8032e8:	d9000415 	stw	r4,16(sp)
  8032ec:	08034f40 	call	8034f4 <strlen>
  8032f0:	00c020b4 	movhi	r3,130
  8032f4:	18f7f804 	addi	r3,r3,-8224
  8032f8:	d8800115 	stw	r2,4(sp)
  8032fc:	d8800515 	stw	r2,20(sp)
  803300:	19000017 	ldw	r4,0(r3)
  803304:	00802034 	movhi	r2,128
  803308:	108d0304 	addi	r2,r2,13324
  80330c:	d8800815 	stw	r2,32(sp)
  803310:	d80b883a 	mov	r5,sp
  803314:	800d883a 	mov	r6,r16
  803318:	d9c01c04 	addi	r7,sp,112
  80331c:	00bfffc4 	movi	r2,-1
  803320:	d8000c15 	stw	zero,48(sp)
  803324:	d8001115 	stw	zero,68(sp)
  803328:	d880038d 	sth	r2,14(sp)
  80332c:	080358c0 	call	80358c <__ssvfscanf_r>
  803330:	dfc01b17 	ldw	ra,108(sp)
  803334:	dc001a17 	ldw	r16,104(sp)
  803338:	dec01e04 	addi	sp,sp,120
  80333c:	f800283a 	ret

00803340 <_sscanf_r>:
  803340:	deffe204 	addi	sp,sp,-120
  803344:	dc001b15 	stw	r16,108(sp)
  803348:	2021883a 	mov	r16,r4
  80334c:	dfc01c15 	stw	ra,112(sp)
  803350:	d9c01d15 	stw	r7,116(sp)
  803354:	00808104 	movi	r2,516
  803358:	2809883a 	mov	r4,r5
  80335c:	d9400015 	stw	r5,0(sp)
  803360:	d9400415 	stw	r5,16(sp)
  803364:	d9801a15 	stw	r6,104(sp)
  803368:	d880030d 	sth	r2,12(sp)
  80336c:	08034f40 	call	8034f4 <strlen>
  803370:	d8800115 	stw	r2,4(sp)
  803374:	d8800515 	stw	r2,20(sp)
  803378:	d9801a17 	ldw	r6,104(sp)
  80337c:	00802034 	movhi	r2,128
  803380:	108d0304 	addi	r2,r2,13324
  803384:	d8800815 	stw	r2,32(sp)
  803388:	8009883a 	mov	r4,r16
  80338c:	d80b883a 	mov	r5,sp
  803390:	d9c01d04 	addi	r7,sp,116
  803394:	00bfffc4 	movi	r2,-1
  803398:	d8000c15 	stw	zero,48(sp)
  80339c:	d8001115 	stw	zero,68(sp)
  8033a0:	d880038d 	sth	r2,14(sp)
  8033a4:	080358c0 	call	80358c <__ssvfscanf_r>
  8033a8:	dfc01c17 	ldw	ra,112(sp)
  8033ac:	dc001b17 	ldw	r16,108(sp)
  8033b0:	dec01e04 	addi	sp,sp,120
  8033b4:	f800283a 	ret

008033b8 <__sread>:
  8033b8:	defffe04 	addi	sp,sp,-8
  8033bc:	dc000015 	stw	r16,0(sp)
  8033c0:	2821883a 	mov	r16,r5
  8033c4:	2940038f 	ldh	r5,14(r5)
  8033c8:	dfc00115 	stw	ra,4(sp)
  8033cc:	080a5b80 	call	80a5b8 <_read_r>
  8033d0:	10000716 	blt	r2,zero,8033f0 <__sread+0x38>
  8033d4:	80c01417 	ldw	r3,80(r16)
  8033d8:	1887883a 	add	r3,r3,r2
  8033dc:	80c01415 	stw	r3,80(r16)
  8033e0:	dfc00117 	ldw	ra,4(sp)
  8033e4:	dc000017 	ldw	r16,0(sp)
  8033e8:	dec00204 	addi	sp,sp,8
  8033ec:	f800283a 	ret
  8033f0:	80c0030b 	ldhu	r3,12(r16)
  8033f4:	18fbffcc 	andi	r3,r3,61439
  8033f8:	80c0030d 	sth	r3,12(r16)
  8033fc:	dfc00117 	ldw	ra,4(sp)
  803400:	dc000017 	ldw	r16,0(sp)
  803404:	dec00204 	addi	sp,sp,8
  803408:	f800283a 	ret

0080340c <__seofread>:
  80340c:	0005883a 	mov	r2,zero
  803410:	f800283a 	ret

00803414 <__swrite>:
  803414:	2880030b 	ldhu	r2,12(r5)
  803418:	defffb04 	addi	sp,sp,-20
  80341c:	dcc00315 	stw	r19,12(sp)
  803420:	dc800215 	stw	r18,8(sp)
  803424:	dc400115 	stw	r17,4(sp)
  803428:	dc000015 	stw	r16,0(sp)
  80342c:	dfc00415 	stw	ra,16(sp)
  803430:	10c0400c 	andi	r3,r2,256
  803434:	2821883a 	mov	r16,r5
  803438:	2027883a 	mov	r19,r4
  80343c:	3025883a 	mov	r18,r6
  803440:	3823883a 	mov	r17,r7
  803444:	18000526 	beq	r3,zero,80345c <__swrite+0x48>
  803448:	2940038f 	ldh	r5,14(r5)
  80344c:	000d883a 	mov	r6,zero
  803450:	01c00084 	movi	r7,2
  803454:	0808eb00 	call	808eb0 <_lseek_r>
  803458:	8080030b 	ldhu	r2,12(r16)
  80345c:	8140038f 	ldh	r5,14(r16)
  803460:	10bbffcc 	andi	r2,r2,61439
  803464:	9809883a 	mov	r4,r19
  803468:	900d883a 	mov	r6,r18
  80346c:	880f883a 	mov	r7,r17
  803470:	8080030d 	sth	r2,12(r16)
  803474:	dfc00417 	ldw	ra,16(sp)
  803478:	dcc00317 	ldw	r19,12(sp)
  80347c:	dc800217 	ldw	r18,8(sp)
  803480:	dc400117 	ldw	r17,4(sp)
  803484:	dc000017 	ldw	r16,0(sp)
  803488:	dec00504 	addi	sp,sp,20
  80348c:	0806cb41 	jmpi	806cb4 <_write_r>

00803490 <__sseek>:
  803490:	defffe04 	addi	sp,sp,-8
  803494:	dc000015 	stw	r16,0(sp)
  803498:	2821883a 	mov	r16,r5
  80349c:	2940038f 	ldh	r5,14(r5)
  8034a0:	dfc00115 	stw	ra,4(sp)
  8034a4:	0808eb00 	call	808eb0 <_lseek_r>
  8034a8:	00ffffc4 	movi	r3,-1
  8034ac:	10c00826 	beq	r2,r3,8034d0 <__sseek+0x40>
  8034b0:	80c0030b 	ldhu	r3,12(r16)
  8034b4:	80801415 	stw	r2,80(r16)
  8034b8:	18c40014 	ori	r3,r3,4096
  8034bc:	80c0030d 	sth	r3,12(r16)
  8034c0:	dfc00117 	ldw	ra,4(sp)
  8034c4:	dc000017 	ldw	r16,0(sp)
  8034c8:	dec00204 	addi	sp,sp,8
  8034cc:	f800283a 	ret
  8034d0:	80c0030b 	ldhu	r3,12(r16)
  8034d4:	18fbffcc 	andi	r3,r3,61439
  8034d8:	80c0030d 	sth	r3,12(r16)
  8034dc:	dfc00117 	ldw	ra,4(sp)
  8034e0:	dc000017 	ldw	r16,0(sp)
  8034e4:	dec00204 	addi	sp,sp,8
  8034e8:	f800283a 	ret

008034ec <__sclose>:
  8034ec:	2940038f 	ldh	r5,14(r5)
  8034f0:	0806e641 	jmpi	806e64 <_close_r>

008034f4 <strlen>:
  8034f4:	208000cc 	andi	r2,r4,3
  8034f8:	10002026 	beq	r2,zero,80357c <strlen+0x88>
  8034fc:	20800007 	ldb	r2,0(r4)
  803500:	10002026 	beq	r2,zero,803584 <strlen+0x90>
  803504:	2005883a 	mov	r2,r4
  803508:	00000206 	br	803514 <strlen+0x20>
  80350c:	10c00007 	ldb	r3,0(r2)
  803510:	18001826 	beq	r3,zero,803574 <strlen+0x80>
  803514:	10800044 	addi	r2,r2,1
  803518:	10c000cc 	andi	r3,r2,3
  80351c:	183ffb1e 	bne	r3,zero,80350c <__alt_data_end+0xff80350c>
  803520:	10c00017 	ldw	r3,0(r2)
  803524:	01ffbff4 	movhi	r7,65279
  803528:	39ffbfc4 	addi	r7,r7,-257
  80352c:	00ca303a 	nor	r5,zero,r3
  803530:	01a02074 	movhi	r6,32897
  803534:	19c7883a 	add	r3,r3,r7
  803538:	31a02004 	addi	r6,r6,-32640
  80353c:	1946703a 	and	r3,r3,r5
  803540:	1986703a 	and	r3,r3,r6
  803544:	1800091e 	bne	r3,zero,80356c <strlen+0x78>
  803548:	10800104 	addi	r2,r2,4
  80354c:	10c00017 	ldw	r3,0(r2)
  803550:	19cb883a 	add	r5,r3,r7
  803554:	00c6303a 	nor	r3,zero,r3
  803558:	28c6703a 	and	r3,r5,r3
  80355c:	1986703a 	and	r3,r3,r6
  803560:	183ff926 	beq	r3,zero,803548 <__alt_data_end+0xff803548>
  803564:	00000106 	br	80356c <strlen+0x78>
  803568:	10800044 	addi	r2,r2,1
  80356c:	10c00007 	ldb	r3,0(r2)
  803570:	183ffd1e 	bne	r3,zero,803568 <__alt_data_end+0xff803568>
  803574:	1105c83a 	sub	r2,r2,r4
  803578:	f800283a 	ret
  80357c:	2005883a 	mov	r2,r4
  803580:	003fe706 	br	803520 <__alt_data_end+0xff803520>
  803584:	0005883a 	mov	r2,zero
  803588:	f800283a 	ret

0080358c <__ssvfscanf_r>:
  80358c:	2880030b 	ldhu	r2,12(r5)
  803590:	deff4a04 	addi	sp,sp,-728
  803594:	df00b415 	stw	fp,720(sp)
  803598:	dd80b215 	stw	r22,712(sp)
  80359c:	dfc0b515 	stw	ra,724(sp)
  8035a0:	ddc0b315 	stw	r23,716(sp)
  8035a4:	dd40b115 	stw	r21,708(sp)
  8035a8:	dd00b015 	stw	r20,704(sp)
  8035ac:	dcc0af15 	stw	r19,700(sp)
  8035b0:	dc80ae15 	stw	r18,696(sp)
  8035b4:	dc40ad15 	stw	r17,692(sp)
  8035b8:	dc00ac15 	stw	r16,688(sp)
  8035bc:	10c8000c 	andi	r3,r2,8192
  8035c0:	d9c09c15 	stw	r7,624(sp)
  8035c4:	2839883a 	mov	fp,r5
  8035c8:	202d883a 	mov	r22,r4
  8035cc:	1800061e 	bne	r3,zero,8035e8 <__ssvfscanf_r+0x5c>
  8035d0:	29001917 	ldw	r4,100(r5)
  8035d4:	00f7ffc4 	movi	r3,-8193
  8035d8:	10880014 	ori	r2,r2,8192
  8035dc:	20c6703a 	and	r3,r4,r3
  8035e0:	2880030d 	sth	r2,12(r5)
  8035e4:	28c01915 	stw	r3,100(r5)
  8035e8:	30800003 	ldbu	r2,0(r6)
  8035ec:	0029883a 	mov	r20,zero
  8035f0:	05c020b4 	movhi	r23,130
  8035f4:	d800a115 	stw	zero,644(sp)
  8035f8:	d8009e15 	stw	zero,632(sp)
  8035fc:	d8009f15 	stw	zero,636(sp)
  803600:	d8809b15 	stw	r2,620(sp)
  803604:	bdf7fb04 	addi	r23,r23,-8212
  803608:	a025883a 	mov	r18,r20
  80360c:	34400044 	addi	r17,r6,1
  803610:	10001e26 	beq	r2,zero,80368c <__ssvfscanf_r+0x100>
  803614:	b9000017 	ldw	r4,0(r23)
  803618:	2087883a 	add	r3,r4,r2
  80361c:	18c00043 	ldbu	r3,1(r3)
  803620:	18c0020c 	andi	r3,r3,8
  803624:	18001b26 	beq	r3,zero,803694 <__ssvfscanf_r+0x108>
  803628:	e0800117 	ldw	r2,4(fp)
  80362c:	00800e0e 	bge	zero,r2,803668 <__ssvfscanf_r+0xdc>
  803630:	e0c00017 	ldw	r3,0(fp)
  803634:	b9000017 	ldw	r4,0(r23)
  803638:	18800003 	ldbu	r2,0(r3)
  80363c:	2085883a 	add	r2,r4,r2
  803640:	10800043 	ldbu	r2,1(r2)
  803644:	1080020c 	andi	r2,r2,8
  803648:	10000b26 	beq	r2,zero,803678 <__ssvfscanf_r+0xec>
  80364c:	e0800117 	ldw	r2,4(fp)
  803650:	18c00044 	addi	r3,r3,1
  803654:	e0c00015 	stw	r3,0(fp)
  803658:	10bfffc4 	addi	r2,r2,-1
  80365c:	e0800115 	stw	r2,4(fp)
  803660:	94800044 	addi	r18,r18,1
  803664:	00bff216 	blt	zero,r2,803630 <__alt_data_end+0xff803630>
  803668:	b009883a 	mov	r4,r22
  80366c:	e00b883a 	mov	r5,fp
  803670:	080d1a00 	call	80d1a0 <__ssrefill_r>
  803674:	103fee26 	beq	r2,zero,803630 <__alt_data_end+0xff803630>
  803678:	880d883a 	mov	r6,r17
  80367c:	30800003 	ldbu	r2,0(r6)
  803680:	34400044 	addi	r17,r6,1
  803684:	d8809b15 	stw	r2,620(sp)
  803688:	103fe21e 	bne	r2,zero,803614 <__alt_data_end+0xff803614>
  80368c:	d8809f17 	ldw	r2,636(sp)
  803690:	00009b06 	br	803900 <__ssvfscanf_r+0x374>
  803694:	00c00944 	movi	r3,37
  803698:	10c0a61e 	bne	r2,r3,803934 <__ssvfscanf_r+0x3a8>
  80369c:	31800043 	ldbu	r6,1(r6)
  8036a0:	0021883a 	mov	r16,zero
  8036a4:	002b883a 	mov	r21,zero
  8036a8:	01c01e04 	movi	r7,120
  8036ac:	02801b04 	movi	r10,108
  8036b0:	89400044 	addi	r5,r17,1
  8036b4:	39821336 	bltu	r7,r6,803f04 <__ssvfscanf_r+0x978>
  8036b8:	300490ba 	slli	r2,r6,2
  8036bc:	00c02034 	movhi	r3,128
  8036c0:	18cdb404 	addi	r3,r3,14032
  8036c4:	10c5883a 	add	r2,r2,r3
  8036c8:	10800017 	ldw	r2,0(r2)
  8036cc:	1000683a 	jmp	r2
  8036d0:	008038fc 	xorhi	r2,zero,227
  8036d4:	00803f04 	movi	r2,252
  8036d8:	00803f04 	movi	r2,252
  8036dc:	00803f04 	movi	r2,252
  8036e0:	00803f04 	movi	r2,252
  8036e4:	00803f04 	movi	r2,252
  8036e8:	00803f04 	movi	r2,252
  8036ec:	00803f04 	movi	r2,252
  8036f0:	00803f04 	movi	r2,252
  8036f4:	00803f04 	movi	r2,252
  8036f8:	00803f04 	movi	r2,252
  8036fc:	00803f04 	movi	r2,252
  803700:	00803f04 	movi	r2,252
  803704:	00803f04 	movi	r2,252
  803708:	00803f04 	movi	r2,252
  80370c:	00803f04 	movi	r2,252
  803710:	00803f04 	movi	r2,252
  803714:	00803f04 	movi	r2,252
  803718:	00803f04 	movi	r2,252
  80371c:	00803f04 	movi	r2,252
  803720:	00803f04 	movi	r2,252
  803724:	00803f04 	movi	r2,252
  803728:	00803f04 	movi	r2,252
  80372c:	00803f04 	movi	r2,252
  803730:	00803f04 	movi	r2,252
  803734:	00803f04 	movi	r2,252
  803738:	00803f04 	movi	r2,252
  80373c:	00803f04 	movi	r2,252
  803740:	00803f04 	movi	r2,252
  803744:	00803f04 	movi	r2,252
  803748:	00803f04 	movi	r2,252
  80374c:	00803f04 	movi	r2,252
  803750:	00803f04 	movi	r2,252
  803754:	00803f04 	movi	r2,252
  803758:	00803f04 	movi	r2,252
  80375c:	00803f04 	movi	r2,252
  803760:	00803f04 	movi	r2,252
  803764:	00803930 	cmpltui	r2,zero,228
  803768:	00803f04 	movi	r2,252
  80376c:	00803f04 	movi	r2,252
  803770:	00803f04 	movi	r2,252
  803774:	00803f04 	movi	r2,252
  803778:	00803f50 	cmplti	r2,zero,253
  80377c:	00803f04 	movi	r2,252
  803780:	00803f04 	movi	r2,252
  803784:	00803f04 	movi	r2,252
  803788:	00803f04 	movi	r2,252
  80378c:	00803f04 	movi	r2,252
  803790:	00803ee4 	muli	r2,zero,251
  803794:	00803ee4 	muli	r2,zero,251
  803798:	00803ee4 	muli	r2,zero,251
  80379c:	00803ee4 	muli	r2,zero,251
  8037a0:	00803ee4 	muli	r2,zero,251
  8037a4:	00803ee4 	muli	r2,zero,251
  8037a8:	00803ee4 	muli	r2,zero,251
  8037ac:	00803ee4 	muli	r2,zero,251
  8037b0:	00803ee4 	muli	r2,zero,251
  8037b4:	00803ee4 	muli	r2,zero,251
  8037b8:	00803f04 	movi	r2,252
  8037bc:	00803f04 	movi	r2,252
  8037c0:	00803f04 	movi	r2,252
  8037c4:	00803f04 	movi	r2,252
  8037c8:	00803f04 	movi	r2,252
  8037cc:	00803f04 	movi	r2,252
  8037d0:	00803f04 	movi	r2,252
  8037d4:	00803f04 	movi	r2,252
  8037d8:	00803f04 	movi	r2,252
  8037dc:	00803f04 	movi	r2,252
  8037e0:	00803fa8 	cmpgeui	r2,zero,254
  8037e4:	00803f9c 	xori	r2,zero,254
  8037e8:	00803f04 	movi	r2,252
  8037ec:	00803f9c 	xori	r2,zero,254
  8037f0:	00803f04 	movi	r2,252
  8037f4:	00803f04 	movi	r2,252
  8037f8:	00803f04 	movi	r2,252
  8037fc:	00803f04 	movi	r2,252
  803800:	00803f88 	cmpgei	r2,zero,254
  803804:	00803f04 	movi	r2,252
  803808:	00803f04 	movi	r2,252
  80380c:	00803f64 	muli	r2,zero,253
  803810:	00803f04 	movi	r2,252
  803814:	00803f04 	movi	r2,252
  803818:	00803f04 	movi	r2,252
  80381c:	00803f04 	movi	r2,252
  803820:	00803f04 	movi	r2,252
  803824:	00803f04 	movi	r2,252
  803828:	00803f04 	movi	r2,252
  80382c:	00803f04 	movi	r2,252
  803830:	008040c0 	call	8040c <__alt_mem_sdram_0-0x77fbf4>
  803834:	00803f04 	movi	r2,252
  803838:	00803f04 	movi	r2,252
  80383c:	008040a8 	cmpgeui	r2,zero,258
  803840:	00803f04 	movi	r2,252
  803844:	00803f04 	movi	r2,252
  803848:	00803f04 	movi	r2,252
  80384c:	00803f04 	movi	r2,252
  803850:	00803f04 	movi	r2,252
  803854:	00803f04 	movi	r2,252
  803858:	00803f04 	movi	r2,252
  80385c:	00804098 	cmpnei	r2,zero,258
  803860:	00804078 	rdprs	r2,zero,257
  803864:	00803f9c 	xori	r2,zero,254
  803868:	00803f9c 	xori	r2,zero,254
  80386c:	00803f9c 	xori	r2,zero,254
  803870:	00804064 	muli	r2,zero,257
  803874:	0080396c 	andhi	r2,zero,229
  803878:	00803f04 	movi	r2,252
  80387c:	00803f04 	movi	r2,252
  803880:	00804050 	cmplti	r2,zero,257
  803884:	00803f04 	movi	r2,252
  803888:	00804024 	muli	r2,zero,256
  80388c:	0080401c 	xori	r2,zero,256
  803890:	00803ff8 	rdprs	r2,zero,255
  803894:	00803f04 	movi	r2,252
  803898:	00803f04 	movi	r2,252
  80389c:	00803fec 	andhi	r2,zero,255
  8038a0:	00803f04 	movi	r2,252
  8038a4:	00803fcc 	andi	r2,zero,255
  8038a8:	00803f04 	movi	r2,252
  8038ac:	00803f04 	movi	r2,252
  8038b0:	008040c0 	call	8040c <__alt_mem_sdram_0-0x77fbf4>
  8038b4:	013fff84 	movi	r4,-2
  8038b8:	1104cb1e 	bne	r2,r4,804be8 <__ssvfscanf_r+0x165c>
  8038bc:	a021883a 	mov	r16,r20
  8038c0:	e0800117 	ldw	r2,4(fp)
  8038c4:	00839416 	blt	zero,r2,804718 <__ssvfscanf_r+0x118c>
  8038c8:	b009883a 	mov	r4,r22
  8038cc:	e00b883a 	mov	r5,fp
  8038d0:	080d1a00 	call	80d1a0 <__ssrefill_r>
  8038d4:	10039026 	beq	r2,zero,804718 <__ssvfscanf_r+0x118c>
  8038d8:	8007883a 	mov	r3,r16
  8038dc:	8821883a 	mov	r16,r17
  8038e0:	dc40a017 	ldw	r17,640(sp)
  8038e4:	18039626 	beq	r3,zero,804740 <__ssvfscanf_r+0x11b4>
  8038e8:	dac09f17 	ldw	r11,636(sp)
  8038ec:	58000326 	beq	r11,zero,8038fc <__ssvfscanf_r+0x370>
  8038f0:	e080030b 	ldhu	r2,12(fp)
  8038f4:	1080100c 	andi	r2,r2,64
  8038f8:	1003ee26 	beq	r2,zero,8048b4 <__ssvfscanf_r+0x1328>
  8038fc:	00bfffc4 	movi	r2,-1
  803900:	dfc0b517 	ldw	ra,724(sp)
  803904:	df00b417 	ldw	fp,720(sp)
  803908:	ddc0b317 	ldw	r23,716(sp)
  80390c:	dd80b217 	ldw	r22,712(sp)
  803910:	dd40b117 	ldw	r21,708(sp)
  803914:	dd00b017 	ldw	r20,704(sp)
  803918:	dcc0af17 	ldw	r19,700(sp)
  80391c:	dc80ae17 	ldw	r18,696(sp)
  803920:	dc40ad17 	ldw	r17,692(sp)
  803924:	dc00ac17 	ldw	r16,688(sp)
  803928:	dec0b604 	addi	sp,sp,728
  80392c:	f800283a 	ret
  803930:	2823883a 	mov	r17,r5
  803934:	e0800117 	ldw	r2,4(fp)
  803938:	0084340e 	bge	zero,r2,804a0c <__ssvfscanf_r+0x1480>
  80393c:	e0800017 	ldw	r2,0(fp)
  803940:	88ffffc3 	ldbu	r3,-1(r17)
  803944:	11000003 	ldbu	r4,0(r2)
  803948:	20ff501e 	bne	r4,r3,80368c <__alt_data_end+0xff80368c>
  80394c:	e0c00117 	ldw	r3,4(fp)
  803950:	10800044 	addi	r2,r2,1
  803954:	e0800015 	stw	r2,0(fp)
  803958:	18bfffc4 	addi	r2,r3,-1
  80395c:	e0800115 	stw	r2,4(fp)
  803960:	94800044 	addi	r18,r18,1
  803964:	880d883a 	mov	r6,r17
  803968:	003f4406 	br	80367c <__alt_data_end+0xff80367c>
  80396c:	00802074 	movhi	r2,129
  803970:	10b16404 	addi	r2,r2,-14960
  803974:	2823883a 	mov	r17,r5
  803978:	d880a115 	stw	r2,644(sp)
  80397c:	d8009e15 	stw	zero,632(sp)
  803980:	04c000c4 	movi	r19,3
  803984:	e0800117 	ldw	r2,4(fp)
  803988:	00816c0e 	bge	zero,r2,803f3c <__ssvfscanf_r+0x9b0>
  80398c:	8080100c 	andi	r2,r16,64
  803990:	10007f26 	beq	r2,zero,803b90 <__ssvfscanf_r+0x604>
  803994:	00800084 	movi	r2,2
  803998:	9882df26 	beq	r19,r2,804518 <__ssvfscanf_r+0xf8c>
  80399c:	14c1d50e 	bge	r2,r19,8040f4 <__ssvfscanf_r+0xb68>
  8039a0:	008000c4 	movi	r2,3
  8039a4:	98821926 	beq	r19,r2,80420c <__ssvfscanf_r+0xc80>
  8039a8:	00800104 	movi	r2,4
  8039ac:	9881fc1e 	bne	r19,r2,8041a0 <__ssvfscanf_r+0xc14>
  8039b0:	b009883a 	mov	r4,r22
  8039b4:	0808e7c0 	call	808e7c <_localeconv_r>
  8039b8:	10800017 	ldw	r2,0(r2)
  8039bc:	a93fffc4 	addi	r4,r21,-1
  8039c0:	d880a315 	stw	r2,652(sp)
  8039c4:	00805704 	movi	r2,348
  8039c8:	1102f82e 	bgeu	r2,r4,8045ac <__ssvfscanf_r+0x1020>
  8039cc:	ad7fa8c4 	addi	r21,r21,-349
  8039d0:	dd40a215 	stw	r21,648(sp)
  8039d4:	05405744 	movi	r21,349
  8039d8:	84c1e014 	ori	r19,r16,1920
  8039dc:	0021883a 	mov	r16,zero
  8039e0:	8005883a 	mov	r2,r16
  8039e4:	000d883a 	mov	r6,zero
  8039e8:	0019883a 	mov	r12,zero
  8039ec:	a821883a 	mov	r16,r21
  8039f0:	dc409d15 	stw	r17,628(sp)
  8039f4:	b007883a 	mov	r3,r22
  8039f8:	d800a515 	stw	zero,660(sp)
  8039fc:	d800a415 	stw	zero,656(sp)
  803a00:	d800a015 	stw	zero,640(sp)
  803a04:	dd000104 	addi	r20,sp,4
  803a08:	02c01384 	movi	r11,78
  803a0c:	3023883a 	mov	r17,r6
  803a10:	602d883a 	mov	r22,r12
  803a14:	102b883a 	mov	r21,r2
  803a18:	e1000017 	ldw	r4,0(fp)
  803a1c:	21400003 	ldbu	r5,0(r4)
  803a20:	28bff544 	addi	r2,r5,-43
  803a24:	10803fcc 	andi	r2,r2,255
  803a28:	58812436 	bltu	r11,r2,803ebc <__ssvfscanf_r+0x930>
  803a2c:	100490ba 	slli	r2,r2,2
  803a30:	01802034 	movhi	r6,128
  803a34:	318e9104 	addi	r6,r6,14916
  803a38:	1185883a 	add	r2,r2,r6
  803a3c:	10800017 	ldw	r2,0(r2)
  803a40:	1000683a 	jmp	r2
  803a44:	00803ea8 	cmpgeui	r2,zero,250
  803a48:	00803ebc 	xorhi	r2,zero,250
  803a4c:	00803ea8 	cmpgeui	r2,zero,250
  803a50:	00803ebc 	xorhi	r2,zero,250
  803a54:	00803ebc 	xorhi	r2,zero,250
  803a58:	00803c34 	movhi	r2,240
  803a5c:	00803bd0 	cmplti	r2,zero,239
  803a60:	00803bd0 	cmplti	r2,zero,239
  803a64:	00803bd0 	cmplti	r2,zero,239
  803a68:	00803bd0 	cmplti	r2,zero,239
  803a6c:	00803bd0 	cmplti	r2,zero,239
  803a70:	00803bd0 	cmplti	r2,zero,239
  803a74:	00803bd0 	cmplti	r2,zero,239
  803a78:	00803bd0 	cmplti	r2,zero,239
  803a7c:	00803bd0 	cmplti	r2,zero,239
  803a80:	00803ebc 	xorhi	r2,zero,250
  803a84:	00803ebc 	xorhi	r2,zero,250
  803a88:	00803ebc 	xorhi	r2,zero,250
  803a8c:	00803ebc 	xorhi	r2,zero,250
  803a90:	00803ebc 	xorhi	r2,zero,250
  803a94:	00803ebc 	xorhi	r2,zero,250
  803a98:	00803ebc 	xorhi	r2,zero,250
  803a9c:	00803e98 	cmpnei	r2,zero,250
  803aa0:	00803ebc 	xorhi	r2,zero,250
  803aa4:	00803ebc 	xorhi	r2,zero,250
  803aa8:	00803ebc 	xorhi	r2,zero,250
  803aac:	00803e54 	movui	r2,249
  803ab0:	00803e38 	rdprs	r2,zero,248
  803ab4:	00803ebc 	xorhi	r2,zero,250
  803ab8:	00803ebc 	xorhi	r2,zero,250
  803abc:	00803cd0 	cmplti	r2,zero,243
  803ac0:	00803ebc 	xorhi	r2,zero,250
  803ac4:	00803ebc 	xorhi	r2,zero,250
  803ac8:	00803ebc 	xorhi	r2,zero,250
  803acc:	00803ebc 	xorhi	r2,zero,250
  803ad0:	00803c98 	cmpnei	r2,zero,242
  803ad4:	00803ebc 	xorhi	r2,zero,250
  803ad8:	00803ebc 	xorhi	r2,zero,250
  803adc:	00803ebc 	xorhi	r2,zero,250
  803ae0:	00803ebc 	xorhi	r2,zero,250
  803ae4:	00803ebc 	xorhi	r2,zero,250
  803ae8:	00803c7c 	xorhi	r2,zero,241
  803aec:	00803ebc 	xorhi	r2,zero,250
  803af0:	00803ebc 	xorhi	r2,zero,250
  803af4:	00803ebc 	xorhi	r2,zero,250
  803af8:	00803ebc 	xorhi	r2,zero,250
  803afc:	00803c60 	cmpeqi	r2,zero,241
  803b00:	00803ebc 	xorhi	r2,zero,250
  803b04:	00803ebc 	xorhi	r2,zero,250
  803b08:	00803ebc 	xorhi	r2,zero,250
  803b0c:	00803ebc 	xorhi	r2,zero,250
  803b10:	00803ebc 	xorhi	r2,zero,250
  803b14:	00803ebc 	xorhi	r2,zero,250
  803b18:	00803ebc 	xorhi	r2,zero,250
  803b1c:	00803e98 	cmpnei	r2,zero,250
  803b20:	00803ebc 	xorhi	r2,zero,250
  803b24:	00803ebc 	xorhi	r2,zero,250
  803b28:	00803ebc 	xorhi	r2,zero,250
  803b2c:	00803e54 	movui	r2,249
  803b30:	00803e38 	rdprs	r2,zero,248
  803b34:	00803ebc 	xorhi	r2,zero,250
  803b38:	00803ebc 	xorhi	r2,zero,250
  803b3c:	00803cd0 	cmplti	r2,zero,243
  803b40:	00803ebc 	xorhi	r2,zero,250
  803b44:	00803ebc 	xorhi	r2,zero,250
  803b48:	00803ebc 	xorhi	r2,zero,250
  803b4c:	00803ebc 	xorhi	r2,zero,250
  803b50:	00803c98 	cmpnei	r2,zero,242
  803b54:	00803ebc 	xorhi	r2,zero,250
  803b58:	00803ebc 	xorhi	r2,zero,250
  803b5c:	00803ebc 	xorhi	r2,zero,250
  803b60:	00803ebc 	xorhi	r2,zero,250
  803b64:	00803ebc 	xorhi	r2,zero,250
  803b68:	00803c7c 	xorhi	r2,zero,241
  803b6c:	00803ebc 	xorhi	r2,zero,250
  803b70:	00803ebc 	xorhi	r2,zero,250
  803b74:	00803ebc 	xorhi	r2,zero,250
  803b78:	00803ebc 	xorhi	r2,zero,250
  803b7c:	00803c60 	cmpeqi	r2,zero,241
  803b80:	b009883a 	mov	r4,r22
  803b84:	e00b883a 	mov	r5,fp
  803b88:	080d1a00 	call	80d1a0 <__ssrefill_r>
  803b8c:	103f561e 	bne	r2,zero,8038e8 <__alt_data_end+0xff8038e8>
  803b90:	b9400017 	ldw	r5,0(r23)
  803b94:	e1000017 	ldw	r4,0(fp)
  803b98:	00000206 	br	803ba4 <__ssvfscanf_r+0x618>
  803b9c:	21000044 	addi	r4,r4,1
  803ba0:	e1000015 	stw	r4,0(fp)
  803ba4:	20800003 	ldbu	r2,0(r4)
  803ba8:	2885883a 	add	r2,r5,r2
  803bac:	10800043 	ldbu	r2,1(r2)
  803bb0:	1080020c 	andi	r2,r2,8
  803bb4:	103f7726 	beq	r2,zero,803994 <__alt_data_end+0xff803994>
  803bb8:	e0800117 	ldw	r2,4(fp)
  803bbc:	94800044 	addi	r18,r18,1
  803bc0:	10bfffc4 	addi	r2,r2,-1
  803bc4:	e0800115 	stw	r2,4(fp)
  803bc8:	00bff416 	blt	zero,r2,803b9c <__alt_data_end+0xff803b9c>
  803bcc:	003fec06 	br	803b80 <__alt_data_end+0xff803b80>
  803bd0:	88803fcc 	andi	r2,r17,255
  803bd4:	1080201c 	xori	r2,r2,128
  803bd8:	10bfe004 	addi	r2,r2,-128
  803bdc:	b085883a 	add	r2,r22,r2
  803be0:	10000d1e 	bne	r2,zero,803c18 <__ssvfscanf_r+0x68c>
  803be4:	00bf9fc4 	movi	r2,-385
  803be8:	98a6703a 	and	r19,r19,r2
  803bec:	a1400005 	stb	r5,0(r20)
  803bf0:	a5000044 	addi	r20,r20,1
  803bf4:	e0800117 	ldw	r2,4(fp)
  803bf8:	843fffc4 	addi	r16,r16,-1
  803bfc:	94800044 	addi	r18,r18,1
  803c00:	10bfffc4 	addi	r2,r2,-1
  803c04:	e0800115 	stw	r2,4(fp)
  803c08:	0081300e 	bge	zero,r2,8040cc <__ssvfscanf_r+0xb40>
  803c0c:	21000044 	addi	r4,r4,1
  803c10:	e1000015 	stw	r4,0(fp)
  803c14:	803f801e 	bne	r16,zero,803a18 <__alt_data_end+0xff803a18>
  803c18:	880d883a 	mov	r6,r17
  803c1c:	b019883a 	mov	r12,r22
  803c20:	a821883a 	mov	r16,r21
  803c24:	dc409d17 	ldw	r17,628(sp)
  803c28:	182d883a 	mov	r22,r3
  803c2c:	a8003526 	beq	r21,zero,803d04 <__ssvfscanf_r+0x778>
  803c30:	00025b06 	br	8045a0 <__ssvfscanf_r+0x1014>
  803c34:	9880400c 	andi	r2,r19,256
  803c38:	103fe526 	beq	r2,zero,803bd0 <__alt_data_end+0xff803bd0>
  803c3c:	d980a217 	ldw	r6,648(sp)
  803c40:	00bfdfc4 	movi	r2,-129
  803c44:	98a6703a 	and	r19,r19,r2
  803c48:	ad400044 	addi	r21,r21,1
  803c4c:	303fe926 	beq	r6,zero,803bf4 <__alt_data_end+0xff803bf4>
  803c50:	31bfffc4 	addi	r6,r6,-1
  803c54:	d980a215 	stw	r6,648(sp)
  803c58:	84000044 	addi	r16,r16,1
  803c5c:	003fe506 	br	803bf4 <__alt_data_end+0xff803bf4>
  803c60:	88803fcc 	andi	r2,r17,255
  803c64:	1080201c 	xori	r2,r2,128
  803c68:	10bfe004 	addi	r2,r2,-128
  803c6c:	018001c4 	movi	r6,7
  803c70:	11bfe91e 	bne	r2,r6,803c18 <__alt_data_end+0xff803c18>
  803c74:	04400204 	movi	r17,8
  803c78:	003fdc06 	br	803bec <__alt_data_end+0xff803bec>
  803c7c:	89c03fcc 	andi	r7,r17,255
  803c80:	39c0201c 	xori	r7,r7,128
  803c84:	39ffe004 	addi	r7,r7,-128
  803c88:	00800184 	movi	r2,6
  803c8c:	38bfe21e 	bne	r7,r2,803c18 <__alt_data_end+0xff803c18>
  803c90:	044001c4 	movi	r17,7
  803c94:	003fd506 	br	803bec <__alt_data_end+0xff803bec>
  803c98:	b0013d1e 	bne	r22,zero,804190 <__ssvfscanf_r+0xc04>
  803c9c:	a800031e 	bne	r21,zero,803cac <__ssvfscanf_r+0x720>
  803ca0:	99c1c00c 	andi	r7,r19,1792
  803ca4:	0081c004 	movi	r2,1792
  803ca8:	38836726 	beq	r7,r2,804a48 <__ssvfscanf_r+0x14bc>
  803cac:	88803fcc 	andi	r2,r17,255
  803cb0:	1080201c 	xori	r2,r2,128
  803cb4:	10bfe004 	addi	r2,r2,-128
  803cb8:	01c00044 	movi	r7,1
  803cbc:	11c00226 	beq	r2,r7,803cc8 <__ssvfscanf_r+0x73c>
  803cc0:	01c00104 	movi	r7,4
  803cc4:	11ffd41e 	bne	r2,r7,803c18 <__alt_data_end+0xff803c18>
  803cc8:	8c400044 	addi	r17,r17,1
  803ccc:	003fc706 	br	803bec <__alt_data_end+0xff803bec>
  803cd0:	88803fcc 	andi	r2,r17,255
  803cd4:	1080201c 	xori	r2,r2,128
  803cd8:	10bfe004 	addi	r2,r2,-128
  803cdc:	1001271e 	bne	r2,zero,80417c <__ssvfscanf_r+0xbf0>
  803ce0:	a8022a1e 	bne	r21,zero,80458c <__ssvfscanf_r+0x1000>
  803ce4:	99c1c00c 	andi	r7,r19,1792
  803ce8:	0081c004 	movi	r2,1792
  803cec:	38835226 	beq	r7,r2,804a38 <__ssvfscanf_r+0x14ac>
  803cf0:	880d883a 	mov	r6,r17
  803cf4:	dc409d17 	ldw	r17,628(sp)
  803cf8:	b019883a 	mov	r12,r22
  803cfc:	a821883a 	mov	r16,r21
  803d00:	182d883a 	mov	r22,r3
  803d04:	633fffc4 	addi	r12,r12,-1
  803d08:	00800044 	movi	r2,1
  803d0c:	1303c52e 	bgeu	r2,r12,804c24 <__ssvfscanf_r+0x1698>
  803d10:	30803fcc 	andi	r2,r6,255
  803d14:	1080201c 	xori	r2,r2,128
  803d18:	10bfe004 	addi	r2,r2,-128
  803d1c:	10ffffc4 	addi	r3,r2,-1
  803d20:	01000184 	movi	r4,6
  803d24:	20c01236 	bltu	r4,r3,803d70 <__ssvfscanf_r+0x7e4>
  803d28:	00c00084 	movi	r3,2
  803d2c:	1883c80e 	bge	r3,r2,804c50 <__ssvfscanf_r+0x16c4>
  803d30:	00c000c4 	movi	r3,3
  803d34:	302b883a 	mov	r21,r6
  803d38:	10c00d26 	beq	r2,r3,803d70 <__ssvfscanf_r+0x7e4>
  803d3c:	9525c83a 	sub	r18,r18,r20
  803d40:	a53fffc4 	addi	r20,r20,-1
  803d44:	a1400007 	ldb	r5,0(r20)
  803d48:	e00d883a 	mov	r6,fp
  803d4c:	b009883a 	mov	r4,r22
  803d50:	080d0a80 	call	80d0a8 <_sungetc_r>
  803d54:	a8bfffc4 	addi	r2,r21,-1
  803d58:	10c03fcc 	andi	r3,r2,255
  803d5c:	018000c4 	movi	r6,3
  803d60:	a493883a 	add	r9,r20,r18
  803d64:	102b883a 	mov	r21,r2
  803d68:	30fff536 	bltu	r6,r3,803d40 <__alt_data_end+0xff803d40>
  803d6c:	4825883a 	mov	r18,r9
  803d70:	9880400c 	andi	r2,r19,256
  803d74:	10001626 	beq	r2,zero,803dd0 <__ssvfscanf_r+0x844>
  803d78:	9881000c 	andi	r2,r19,1024
  803d7c:	10039e1e 	bne	r2,zero,804bf8 <__ssvfscanf_r+0x166c>
  803d80:	a17fffc7 	ldb	r5,-1(r20)
  803d84:	00801944 	movi	r2,101
  803d88:	a0ffffc4 	addi	r3,r20,-1
  803d8c:	957fffc4 	addi	r21,r18,-1
  803d90:	28800826 	beq	r5,r2,803db4 <__ssvfscanf_r+0x828>
  803d94:	00801144 	movi	r2,69
  803d98:	28800626 	beq	r5,r2,803db4 <__ssvfscanf_r+0x828>
  803d9c:	b009883a 	mov	r4,r22
  803da0:	e00d883a 	mov	r6,fp
  803da4:	080d0a80 	call	80d0a8 <_sungetc_r>
  803da8:	a17fff87 	ldb	r5,-2(r20)
  803dac:	a0ffff84 	addi	r3,r20,-2
  803db0:	957fff84 	addi	r21,r18,-2
  803db4:	b009883a 	mov	r4,r22
  803db8:	e00d883a 	mov	r6,fp
  803dbc:	d8c0ab15 	stw	r3,684(sp)
  803dc0:	080d0a80 	call	80d0a8 <_sungetc_r>
  803dc4:	d8c0ab17 	ldw	r3,684(sp)
  803dc8:	a825883a 	mov	r18,r21
  803dcc:	1829883a 	mov	r20,r3
  803dd0:	9880040c 	andi	r2,r19,16
  803dd4:	103e281e 	bne	r2,zero,803678 <__alt_data_end+0xff803678>
  803dd8:	a0000005 	stb	zero,0(r20)
  803ddc:	98c1800c 	andi	r3,r19,1536
  803de0:	00810004 	movi	r2,1024
  803de4:	18831c26 	beq	r3,r2,804a58 <__ssvfscanf_r+0x14cc>
  803de8:	d8c0a417 	ldw	r3,656(sp)
  803dec:	1802cf1e 	bne	r3,zero,80492c <__ssvfscanf_r+0x13a0>
  803df0:	b009883a 	mov	r4,r22
  803df4:	d9400104 	addi	r5,sp,4
  803df8:	000d883a 	mov	r6,zero
  803dfc:	080ae840 	call	80ae84 <_strtod_r>
  803e00:	1029883a 	mov	r20,r2
  803e04:	9880004c 	andi	r2,r19,1
  803e08:	10029926 	beq	r2,zero,804870 <__ssvfscanf_r+0x12e4>
  803e0c:	dac09c17 	ldw	r11,624(sp)
  803e10:	58800017 	ldw	r2,0(r11)
  803e14:	5ac00104 	addi	r11,r11,4
  803e18:	dac09c15 	stw	r11,624(sp)
  803e1c:	15000015 	stw	r20,0(r2)
  803e20:	10c00115 	stw	r3,4(r2)
  803e24:	dac09f17 	ldw	r11,636(sp)
  803e28:	880d883a 	mov	r6,r17
  803e2c:	5ac00044 	addi	r11,r11,1
  803e30:	dac09f15 	stw	r11,636(sp)
  803e34:	003e1106 	br	80367c <__alt_data_end+0xff80367c>
  803e38:	89c03fcc 	andi	r7,r17,255
  803e3c:	39c0201c 	xori	r7,r7,128
  803e40:	39ffe004 	addi	r7,r7,-128
  803e44:	00800084 	movi	r2,2
  803e48:	38bf731e 	bne	r7,r2,803c18 <__alt_data_end+0xff803c18>
  803e4c:	044000c4 	movi	r17,3
  803e50:	003f6606 	br	803bec <__alt_data_end+0xff803bec>
  803e54:	9881400c 	andi	r2,r19,1280
  803e58:	01810004 	movi	r6,1024
  803e5c:	11800326 	beq	r2,r6,803e6c <__ssvfscanf_r+0x8e0>
  803e60:	9984703a 	and	r2,r19,r6
  803e64:	103f6c26 	beq	r2,zero,803c18 <__alt_data_end+0xff803c18>
  803e68:	a83fa126 	beq	r21,zero,803cf0 <__alt_data_end+0xff803cf0>
  803e6c:	9880800c 	andi	r2,r19,512
  803e70:	1000041e 	bne	r2,zero,803e84 <__ssvfscanf_r+0x8f8>
  803e74:	d880a017 	ldw	r2,640(sp)
  803e78:	dd00a515 	stw	r20,660(sp)
  803e7c:	a8abc83a 	sub	r21,r21,r2
  803e80:	dd40a415 	stw	r21,656(sp)
  803e84:	01be1fc4 	movi	r6,-1921
  803e88:	99a6703a 	and	r19,r19,r6
  803e8c:	9cc06014 	ori	r19,r19,384
  803e90:	002b883a 	mov	r21,zero
  803e94:	003f5506 	br	803bec <__alt_data_end+0xff803bec>
  803e98:	00800044 	movi	r2,1
  803e9c:	b0bf5e1e 	bne	r22,r2,803c18 <__alt_data_end+0xff803c18>
  803ea0:	05800084 	movi	r22,2
  803ea4:	003f5106 	br	803bec <__alt_data_end+0xff803bec>
  803ea8:	9880200c 	andi	r2,r19,128
  803eac:	103f5a26 	beq	r2,zero,803c18 <__alt_data_end+0xff803c18>
  803eb0:	00bfdfc4 	movi	r2,-129
  803eb4:	98a6703a 	and	r19,r19,r2
  803eb8:	003f4c06 	br	803bec <__alt_data_end+0xff803bec>
  803ebc:	d980a317 	ldw	r6,652(sp)
  803ec0:	29c03fcc 	andi	r7,r5,255
  803ec4:	30800003 	ldbu	r2,0(r6)
  803ec8:	38bf531e 	bne	r7,r2,803c18 <__alt_data_end+0xff803c18>
  803ecc:	9880800c 	andi	r2,r19,512
  803ed0:	103f5126 	beq	r2,zero,803c18 <__alt_data_end+0xff803c18>
  803ed4:	00bf5fc4 	movi	r2,-641
  803ed8:	98a6703a 	and	r19,r19,r2
  803edc:	dd40a015 	stw	r21,640(sp)
  803ee0:	003f4206 	br	803bec <__alt_data_end+0xff803bec>
  803ee4:	88800043 	ldbu	r2,1(r17)
  803ee8:	ad4002a4 	muli	r21,r21,10
  803eec:	2823883a 	mov	r17,r5
  803ef0:	89400044 	addi	r5,r17,1
  803ef4:	a9ab883a 	add	r21,r21,r6
  803ef8:	11803fcc 	andi	r6,r2,255
  803efc:	ad7ff404 	addi	r21,r21,-48
  803f00:	39bded2e 	bgeu	r7,r6,8036b8 <__alt_data_end+0xff8036b8>
  803f04:	2189883a 	add	r4,r4,r6
  803f08:	20800043 	ldbu	r2,1(r4)
  803f0c:	01000044 	movi	r4,1
  803f10:	2823883a 	mov	r17,r5
  803f14:	108000cc 	andi	r2,r2,3
  803f18:	1102d426 	beq	r2,r4,804a6c <__ssvfscanf_r+0x14e0>
  803f1c:	00c02074 	movhi	r3,129
  803f20:	e0800117 	ldw	r2,4(fp)
  803f24:	18f16404 	addi	r3,r3,-14960
  803f28:	02c00284 	movi	r11,10
  803f2c:	d8c0a115 	stw	r3,644(sp)
  803f30:	dac09e15 	stw	r11,632(sp)
  803f34:	04c000c4 	movi	r19,3
  803f38:	00be9416 	blt	zero,r2,80398c <__alt_data_end+0xff80398c>
  803f3c:	b009883a 	mov	r4,r22
  803f40:	e00b883a 	mov	r5,fp
  803f44:	080d1a00 	call	80d1a0 <__ssrefill_r>
  803f48:	103e9026 	beq	r2,zero,80398c <__alt_data_end+0xff80398c>
  803f4c:	003e6606 	br	8038e8 <__alt_data_end+0xff8038e8>
  803f50:	88800043 	ldbu	r2,1(r17)
  803f54:	84000414 	ori	r16,r16,16
  803f58:	2823883a 	mov	r17,r5
  803f5c:	11803fcc 	andi	r6,r2,255
  803f60:	003dd306 	br	8036b0 <__alt_data_end+0xff8036b0>
  803f64:	2823883a 	mov	r17,r5
  803f68:	84000054 	ori	r16,r16,1
  803f6c:	00802074 	movhi	r2,129
  803f70:	10b2ba04 	addi	r2,r2,-13592
  803f74:	02c00204 	movi	r11,8
  803f78:	d880a115 	stw	r2,644(sp)
  803f7c:	dac09e15 	stw	r11,632(sp)
  803f80:	04c000c4 	movi	r19,3
  803f84:	003e7f06 	br	803984 <__alt_data_end+0xff803984>
  803f88:	88800043 	ldbu	r2,1(r17)
  803f8c:	84000094 	ori	r16,r16,2
  803f90:	2823883a 	mov	r17,r5
  803f94:	11803fcc 	andi	r6,r2,255
  803f98:	003dc506 	br	8036b0 <__alt_data_end+0xff8036b0>
  803f9c:	2823883a 	mov	r17,r5
  803fa0:	04c00104 	movi	r19,4
  803fa4:	003e7706 	br	803984 <__alt_data_end+0xff803984>
  803fa8:	2823883a 	mov	r17,r5
  803fac:	84000054 	ori	r16,r16,1
  803fb0:	00802074 	movhi	r2,129
  803fb4:	10b16404 	addi	r2,r2,-14960
  803fb8:	02c00284 	movi	r11,10
  803fbc:	d880a115 	stw	r2,644(sp)
  803fc0:	dac09e15 	stw	r11,632(sp)
  803fc4:	04c000c4 	movi	r19,3
  803fc8:	003e6e06 	br	803984 <__alt_data_end+0xff803984>
  803fcc:	00802074 	movhi	r2,129
  803fd0:	10b2ba04 	addi	r2,r2,-13592
  803fd4:	02c00284 	movi	r11,10
  803fd8:	2823883a 	mov	r17,r5
  803fdc:	d880a115 	stw	r2,644(sp)
  803fe0:	dac09e15 	stw	r11,632(sp)
  803fe4:	04c000c4 	movi	r19,3
  803fe8:	003e6606 	br	803984 <__alt_data_end+0xff803984>
  803fec:	2823883a 	mov	r17,r5
  803ff0:	04c00084 	movi	r19,2
  803ff4:	003e6306 	br	803984 <__alt_data_end+0xff803984>
  803ff8:	2823883a 	mov	r17,r5
  803ffc:	84008814 	ori	r16,r16,544
  804000:	00802074 	movhi	r2,129
  804004:	10b2ba04 	addi	r2,r2,-13592
  804008:	02c00404 	movi	r11,16
  80400c:	d880a115 	stw	r2,644(sp)
  804010:	dac09e15 	stw	r11,632(sp)
  804014:	04c000c4 	movi	r19,3
  804018:	003e5a06 	br	803984 <__alt_data_end+0xff803984>
  80401c:	2823883a 	mov	r17,r5
  804020:	003fd206 	br	803f6c <__alt_data_end+0xff803f6c>
  804024:	8080040c 	andi	r2,r16,16
  804028:	2823883a 	mov	r17,r5
  80402c:	103d921e 	bne	r2,zero,803678 <__alt_data_end+0xff803678>
  804030:	8080010c 	andi	r2,r16,4
  804034:	10029426 	beq	r2,zero,804a88 <__ssvfscanf_r+0x14fc>
  804038:	dac09c17 	ldw	r11,624(sp)
  80403c:	58800017 	ldw	r2,0(r11)
  804040:	5ac00104 	addi	r11,r11,4
  804044:	dac09c15 	stw	r11,624(sp)
  804048:	1480000d 	sth	r18,0(r2)
  80404c:	003d8a06 	br	803678 <__alt_data_end+0xff803678>
  804050:	89800043 	ldbu	r6,1(r17)
  804054:	32828726 	beq	r6,r10,804a74 <__ssvfscanf_r+0x14e8>
  804058:	84000054 	ori	r16,r16,1
  80405c:	2823883a 	mov	r17,r5
  804060:	003d9306 	br	8036b0 <__alt_data_end+0xff8036b0>
  804064:	88800043 	ldbu	r2,1(r17)
  804068:	84000114 	ori	r16,r16,4
  80406c:	2823883a 	mov	r17,r5
  804070:	11803fcc 	andi	r6,r2,255
  804074:	003d8e06 	br	8036b0 <__alt_data_end+0xff8036b0>
  804078:	01002074 	movhi	r4,129
  80407c:	21316404 	addi	r4,r4,-14960
  804080:	02c00284 	movi	r11,10
  804084:	2823883a 	mov	r17,r5
  804088:	d900a115 	stw	r4,644(sp)
  80408c:	dac09e15 	stw	r11,632(sp)
  804090:	04c000c4 	movi	r19,3
  804094:	003e3b06 	br	803984 <__alt_data_end+0xff803984>
  804098:	2823883a 	mov	r17,r5
  80409c:	84001014 	ori	r16,r16,64
  8040a0:	0027883a 	mov	r19,zero
  8040a4:	003e3706 	br	803984 <__alt_data_end+0xff803984>
  8040a8:	d9005884 	addi	r4,sp,354
  8040ac:	080abf00 	call	80abf0 <__sccl>
  8040b0:	1023883a 	mov	r17,r2
  8040b4:	84001014 	ori	r16,r16,64
  8040b8:	04c00044 	movi	r19,1
  8040bc:	003e3106 	br	803984 <__alt_data_end+0xff803984>
  8040c0:	2823883a 	mov	r17,r5
  8040c4:	84008014 	ori	r16,r16,512
  8040c8:	003fcd06 	br	804000 <__alt_data_end+0xff804000>
  8040cc:	1809883a 	mov	r4,r3
  8040d0:	e00b883a 	mov	r5,fp
  8040d4:	d8c0ab15 	stw	r3,684(sp)
  8040d8:	dac0a615 	stw	r11,664(sp)
  8040dc:	080d1a00 	call	80d1a0 <__ssrefill_r>
  8040e0:	d8c0ab17 	ldw	r3,684(sp)
  8040e4:	dac0a617 	ldw	r11,664(sp)
  8040e8:	103ecb1e 	bne	r2,zero,803c18 <__alt_data_end+0xff803c18>
  8040ec:	803e4a1e 	bne	r16,zero,803a18 <__alt_data_end+0xff803a18>
  8040f0:	003ec906 	br	803c18 <__alt_data_end+0xff803c18>
  8040f4:	00800044 	movi	r2,1
  8040f8:	9880291e 	bne	r19,r2,8041a0 <__ssvfscanf_r+0xc14>
  8040fc:	a800011e 	bne	r21,zero,804104 <__ssvfscanf_r+0xb78>
  804100:	057fffc4 	movi	r21,-1
  804104:	8400040c 	andi	r16,r16,16
  804108:	80012c26 	beq	r16,zero,8045bc <__ssvfscanf_r+0x1030>
  80410c:	e1000017 	ldw	r4,0(fp)
  804110:	0021883a 	mov	r16,zero
  804114:	dd005884 	addi	r20,sp,354
  804118:	20800003 	ldbu	r2,0(r4)
  80411c:	a085883a 	add	r2,r20,r2
  804120:	10800007 	ldb	r2,0(r2)
  804124:	10001126 	beq	r2,zero,80416c <__ssvfscanf_r+0xbe0>
  804128:	e0800117 	ldw	r2,4(fp)
  80412c:	21000044 	addi	r4,r4,1
  804130:	84000044 	addi	r16,r16,1
  804134:	10bfffc4 	addi	r2,r2,-1
  804138:	e0800115 	stw	r2,4(fp)
  80413c:	e1000015 	stw	r4,0(fp)
  804140:	ac000b26 	beq	r21,r16,804170 <__ssvfscanf_r+0xbe4>
  804144:	00bff416 	blt	zero,r2,804118 <__alt_data_end+0xff804118>
  804148:	b009883a 	mov	r4,r22
  80414c:	e00b883a 	mov	r5,fp
  804150:	080d1a00 	call	80d1a0 <__ssrefill_r>
  804154:	1000061e 	bne	r2,zero,804170 <__ssvfscanf_r+0xbe4>
  804158:	e1000017 	ldw	r4,0(fp)
  80415c:	20800003 	ldbu	r2,0(r4)
  804160:	a085883a 	add	r2,r20,r2
  804164:	10800007 	ldb	r2,0(r2)
  804168:	103fef1e 	bne	r2,zero,804128 <__alt_data_end+0xff804128>
  80416c:	803d4726 	beq	r16,zero,80368c <__alt_data_end+0xff80368c>
  804170:	9425883a 	add	r18,r18,r16
  804174:	880d883a 	mov	r6,r17
  804178:	003d4006 	br	80367c <__alt_data_end+0xff80367c>
  80417c:	01c000c4 	movi	r7,3
  804180:	11fed126 	beq	r2,r7,803cc8 <__alt_data_end+0xff803cc8>
  804184:	01c00144 	movi	r7,5
  804188:	11fecf26 	beq	r2,r7,803cc8 <__alt_data_end+0xff803cc8>
  80418c:	003ea206 	br	803c18 <__alt_data_end+0xff803c18>
  804190:	00800084 	movi	r2,2
  804194:	b0bec51e 	bne	r22,r2,803cac <__alt_data_end+0xff803cac>
  804198:	058000c4 	movi	r22,3
  80419c:	003e9306 	br	803bec <__alt_data_end+0xff803bec>
  8041a0:	a800011e 	bne	r21,zero,8041a8 <__ssvfscanf_r+0xc1c>
  8041a4:	05400044 	movi	r21,1
  8041a8:	8080004c 	andi	r2,r16,1
  8041ac:	10017d1e 	bne	r2,zero,8047a4 <__ssvfscanf_r+0x1218>
  8041b0:	8400040c 	andi	r16,r16,16
  8041b4:	80020226 	beq	r16,zero,8049c0 <__ssvfscanf_r+0x1434>
  8041b8:	0021883a 	mov	r16,zero
  8041bc:	00000906 	br	8041e4 <__ssvfscanf_r+0xc58>
  8041c0:	e0c00017 	ldw	r3,0(fp)
  8041c4:	b009883a 	mov	r4,r22
  8041c8:	e00b883a 	mov	r5,fp
  8041cc:	1887883a 	add	r3,r3,r2
  8041d0:	e0c00015 	stw	r3,0(fp)
  8041d4:	80a1883a 	add	r16,r16,r2
  8041d8:	a8abc83a 	sub	r21,r21,r2
  8041dc:	080d1a00 	call	80d1a0 <__ssrefill_r>
  8041e0:	1001f41e 	bne	r2,zero,8049b4 <__ssvfscanf_r+0x1428>
  8041e4:	e0800117 	ldw	r2,4(fp)
  8041e8:	157ff516 	blt	r2,r21,8041c0 <__alt_data_end+0xff8041c0>
  8041ec:	e1000017 	ldw	r4,0(fp)
  8041f0:	1545c83a 	sub	r2,r2,r21
  8041f4:	ac21883a 	add	r16,r21,r16
  8041f8:	2547883a 	add	r3,r4,r21
  8041fc:	e0800115 	stw	r2,4(fp)
  804200:	e0c00015 	stw	r3,0(fp)
  804204:	9425883a 	add	r18,r18,r16
  804208:	003fda06 	br	804174 <__alt_data_end+0xff804174>
  80420c:	a8bfffc4 	addi	r2,r21,-1
  804210:	01005704 	movi	r4,348
  804214:	2080e72e 	bgeu	r4,r2,8045b4 <__ssvfscanf_r+0x1028>
  804218:	a9ffa8c4 	addi	r7,r21,-349
  80421c:	05405744 	movi	r21,349
  804220:	85036014 	ori	r20,r16,3456
  804224:	0021883a 	mov	r16,zero
  804228:	8813883a 	mov	r9,r17
  80422c:	8023883a 	mov	r17,r16
  804230:	dc009e17 	ldw	r16,632(sp)
  804234:	dcc00104 	addi	r19,sp,4
  804238:	02001344 	movi	r8,77
  80423c:	02808004 	movi	r10,512
  804240:	01bf7fc4 	movi	r6,-513
  804244:	00ffdfc4 	movi	r3,-129
  804248:	e1000017 	ldw	r4,0(fp)
  80424c:	21400003 	ldbu	r5,0(r4)
  804250:	28bff544 	addi	r2,r5,-43
  804254:	10803fcc 	andi	r2,r2,255
  804258:	40806336 	bltu	r8,r2,8043e8 <__ssvfscanf_r+0xe5c>
  80425c:	100490ba 	slli	r2,r2,2
  804260:	02c02034 	movhi	r11,128
  804264:	5ad09d04 	addi	r11,r11,17012
  804268:	12c5883a 	add	r2,r2,r11
  80426c:	10800017 	ldw	r2,0(r2)
  804270:	1000683a 	jmp	r2
  804274:	00804440 	call	80444 <__alt_mem_sdram_0-0x77fbbc>
  804278:	008043e8 	cmpgeui	r2,zero,271
  80427c:	00804440 	call	80444 <__alt_mem_sdram_0-0x77fbbc>
  804280:	008043e8 	cmpgeui	r2,zero,271
  804284:	008043e8 	cmpgeui	r2,zero,271
  804288:	00804470 	cmpltui	r2,zero,273
  80428c:	00804450 	cmplti	r2,zero,273
  804290:	00804450 	cmplti	r2,zero,273
  804294:	00804450 	cmplti	r2,zero,273
  804298:	00804450 	cmplti	r2,zero,273
  80429c:	00804450 	cmplti	r2,zero,273
  8042a0:	00804450 	cmplti	r2,zero,273
  8042a4:	00804450 	cmplti	r2,zero,273
  8042a8:	008044f8 	rdprs	r2,zero,275
  8042ac:	008044f8 	rdprs	r2,zero,275
  8042b0:	008043e8 	cmpgeui	r2,zero,271
  8042b4:	008043e8 	cmpgeui	r2,zero,271
  8042b8:	008043e8 	cmpgeui	r2,zero,271
  8042bc:	008043e8 	cmpgeui	r2,zero,271
  8042c0:	008043e8 	cmpgeui	r2,zero,271
  8042c4:	008043e8 	cmpgeui	r2,zero,271
  8042c8:	008043e8 	cmpgeui	r2,zero,271
  8042cc:	0080442c 	andhi	r2,zero,272
  8042d0:	0080442c 	andhi	r2,zero,272
  8042d4:	0080442c 	andhi	r2,zero,272
  8042d8:	0080442c 	andhi	r2,zero,272
  8042dc:	0080442c 	andhi	r2,zero,272
  8042e0:	0080442c 	andhi	r2,zero,272
  8042e4:	008043e8 	cmpgeui	r2,zero,271
  8042e8:	008043e8 	cmpgeui	r2,zero,271
  8042ec:	008043e8 	cmpgeui	r2,zero,271
  8042f0:	008043e8 	cmpgeui	r2,zero,271
  8042f4:	008043e8 	cmpgeui	r2,zero,271
  8042f8:	008043e8 	cmpgeui	r2,zero,271
  8042fc:	008043e8 	cmpgeui	r2,zero,271
  804300:	008043e8 	cmpgeui	r2,zero,271
  804304:	008043e8 	cmpgeui	r2,zero,271
  804308:	008043e8 	cmpgeui	r2,zero,271
  80430c:	008043e8 	cmpgeui	r2,zero,271
  804310:	008043e8 	cmpgeui	r2,zero,271
  804314:	008043e8 	cmpgeui	r2,zero,271
  804318:	008043e8 	cmpgeui	r2,zero,271
  80431c:	008043e8 	cmpgeui	r2,zero,271
  804320:	008043e8 	cmpgeui	r2,zero,271
  804324:	008043e8 	cmpgeui	r2,zero,271
  804328:	008043ac 	andhi	r2,zero,270
  80432c:	008043e8 	cmpgeui	r2,zero,271
  804330:	008043e8 	cmpgeui	r2,zero,271
  804334:	008043e8 	cmpgeui	r2,zero,271
  804338:	008043e8 	cmpgeui	r2,zero,271
  80433c:	008043e8 	cmpgeui	r2,zero,271
  804340:	008043e8 	cmpgeui	r2,zero,271
  804344:	008043e8 	cmpgeui	r2,zero,271
  804348:	008043e8 	cmpgeui	r2,zero,271
  80434c:	0080442c 	andhi	r2,zero,272
  804350:	0080442c 	andhi	r2,zero,272
  804354:	0080442c 	andhi	r2,zero,272
  804358:	0080442c 	andhi	r2,zero,272
  80435c:	0080442c 	andhi	r2,zero,272
  804360:	0080442c 	andhi	r2,zero,272
  804364:	008043e8 	cmpgeui	r2,zero,271
  804368:	008043e8 	cmpgeui	r2,zero,271
  80436c:	008043e8 	cmpgeui	r2,zero,271
  804370:	008043e8 	cmpgeui	r2,zero,271
  804374:	008043e8 	cmpgeui	r2,zero,271
  804378:	008043e8 	cmpgeui	r2,zero,271
  80437c:	008043e8 	cmpgeui	r2,zero,271
  804380:	008043e8 	cmpgeui	r2,zero,271
  804384:	008043e8 	cmpgeui	r2,zero,271
  804388:	008043e8 	cmpgeui	r2,zero,271
  80438c:	008043e8 	cmpgeui	r2,zero,271
  804390:	008043e8 	cmpgeui	r2,zero,271
  804394:	008043e8 	cmpgeui	r2,zero,271
  804398:	008043e8 	cmpgeui	r2,zero,271
  80439c:	008043e8 	cmpgeui	r2,zero,271
  8043a0:	008043e8 	cmpgeui	r2,zero,271
  8043a4:	008043e8 	cmpgeui	r2,zero,271
  8043a8:	008043ac 	andhi	r2,zero,270
  8043ac:	a081800c 	andi	r2,r20,1536
  8043b0:	12800d1e 	bne	r2,r10,8043e8 <__ssvfscanf_r+0xe5c>
  8043b4:	a1a8703a 	and	r20,r20,r6
  8043b8:	a5014014 	ori	r20,r20,1280
  8043bc:	04000404 	movi	r16,16
  8043c0:	e0800117 	ldw	r2,4(fp)
  8043c4:	99400005 	stb	r5,0(r19)
  8043c8:	9cc00044 	addi	r19,r19,1
  8043cc:	10bfffc4 	addi	r2,r2,-1
  8043d0:	e0800115 	stw	r2,4(fp)
  8043d4:	0080370e 	bge	zero,r2,8044b4 <__ssvfscanf_r+0xf28>
  8043d8:	21000044 	addi	r4,r4,1
  8043dc:	e1000015 	stw	r4,0(fp)
  8043e0:	ad7fffc4 	addi	r21,r21,-1
  8043e4:	a83f981e 	bne	r21,zero,804248 <__alt_data_end+0xff804248>
  8043e8:	dc009e15 	stw	r16,632(sp)
  8043ec:	a080400c 	andi	r2,r20,256
  8043f0:	8821883a 	mov	r16,r17
  8043f4:	4823883a 	mov	r17,r9
  8043f8:	10000426 	beq	r2,zero,80440c <__ssvfscanf_r+0xe80>
  8043fc:	d8800104 	addi	r2,sp,4
  804400:	14c18736 	bltu	r2,r19,804a20 <__ssvfscanf_r+0x1494>
  804404:	d8c00104 	addi	r3,sp,4
  804408:	1cfca026 	beq	r3,r19,80368c <__alt_data_end+0xff80368c>
  80440c:	a080040c 	andi	r2,r20,16
  804410:	1000d226 	beq	r2,zero,80475c <__ssvfscanf_r+0x11d0>
  804414:	d8800104 	addi	r2,sp,4
  804418:	98a7c83a 	sub	r19,r19,r2
  80441c:	9c27883a 	add	r19,r19,r16
  804420:	94e5883a 	add	r18,r18,r19
  804424:	880d883a 	mov	r6,r17
  804428:	003c9406 	br	80367c <__alt_data_end+0xff80367c>
  80442c:	00800284 	movi	r2,10
  804430:	143fed0e 	bge	r2,r16,8043e8 <__alt_data_end+0xff8043e8>
  804434:	00bd1fc4 	movi	r2,-2945
  804438:	a0a8703a 	and	r20,r20,r2
  80443c:	003fe006 	br	8043c0 <__alt_data_end+0xff8043c0>
  804440:	a080200c 	andi	r2,r20,128
  804444:	103fe826 	beq	r2,zero,8043e8 <__alt_data_end+0xff8043e8>
  804448:	a0e8703a 	and	r20,r20,r3
  80444c:	003fdc06 	br	8043c0 <__alt_data_end+0xff8043c0>
  804450:	02c020b4 	movhi	r11,130
  804454:	8421883a 	add	r16,r16,r16
  804458:	5aeece84 	addi	r11,r11,-17606
  80445c:	5c05883a 	add	r2,r11,r16
  804460:	1400000f 	ldh	r16,0(r2)
  804464:	00bd1fc4 	movi	r2,-2945
  804468:	a0a8703a 	and	r20,r20,r2
  80446c:	003fd406 	br	8043c0 <__alt_data_end+0xff8043c0>
  804470:	a082000c 	andi	r2,r20,2048
  804474:	103fd226 	beq	r2,zero,8043c0 <__alt_data_end+0xff8043c0>
  804478:	8000021e 	bne	r16,zero,804484 <__ssvfscanf_r+0xef8>
  80447c:	a5008014 	ori	r20,r20,512
  804480:	04000204 	movi	r16,8
  804484:	a081000c 	andi	r2,r20,1024
  804488:	10010c1e 	bne	r2,zero,8048bc <__ssvfscanf_r+0x1330>
  80448c:	00bf1fc4 	movi	r2,-897
  804490:	a0a8703a 	and	r20,r20,r2
  804494:	38000226 	beq	r7,zero,8044a0 <__ssvfscanf_r+0xf14>
  804498:	39ffffc4 	addi	r7,r7,-1
  80449c:	ad400044 	addi	r21,r21,1
  8044a0:	e0800117 	ldw	r2,4(fp)
  8044a4:	8c400044 	addi	r17,r17,1
  8044a8:	10bfffc4 	addi	r2,r2,-1
  8044ac:	e0800115 	stw	r2,4(fp)
  8044b0:	00bfc916 	blt	zero,r2,8043d8 <__alt_data_end+0xff8043d8>
  8044b4:	b009883a 	mov	r4,r22
  8044b8:	e00b883a 	mov	r5,fp
  8044bc:	d8c0ab15 	stw	r3,684(sp)
  8044c0:	d980a815 	stw	r6,672(sp)
  8044c4:	d9c0a915 	stw	r7,676(sp)
  8044c8:	da00a615 	stw	r8,664(sp)
  8044cc:	da40aa15 	stw	r9,680(sp)
  8044d0:	da80a715 	stw	r10,668(sp)
  8044d4:	080d1a00 	call	80d1a0 <__ssrefill_r>
  8044d8:	d8c0ab17 	ldw	r3,684(sp)
  8044dc:	d980a817 	ldw	r6,672(sp)
  8044e0:	d9c0a917 	ldw	r7,676(sp)
  8044e4:	da00a617 	ldw	r8,664(sp)
  8044e8:	da40aa17 	ldw	r9,680(sp)
  8044ec:	da80a717 	ldw	r10,668(sp)
  8044f0:	103fbb26 	beq	r2,zero,8043e0 <__alt_data_end+0xff8043e0>
  8044f4:	003fbc06 	br	8043e8 <__alt_data_end+0xff8043e8>
  8044f8:	02c020b4 	movhi	r11,130
  8044fc:	8421883a 	add	r16,r16,r16
  804500:	5aeece84 	addi	r11,r11,-17606
  804504:	5c05883a 	add	r2,r11,r16
  804508:	1400000f 	ldh	r16,0(r2)
  80450c:	00800204 	movi	r2,8
  804510:	143fc816 	blt	r2,r16,804434 <__alt_data_end+0xff804434>
  804514:	003fb406 	br	8043e8 <__alt_data_end+0xff8043e8>
  804518:	a800011e 	bne	r21,zero,804520 <__ssvfscanf_r+0xf94>
  80451c:	057fffc4 	movi	r21,-1
  804520:	8080004c 	andi	r2,r16,1
  804524:	10006f1e 	bne	r2,zero,8046e4 <__ssvfscanf_r+0x1158>
  804528:	8400040c 	andi	r16,r16,16
  80452c:	80004526 	beq	r16,zero,804644 <__ssvfscanf_r+0x10b8>
  804530:	b9400017 	ldw	r5,0(r23)
  804534:	e1000017 	ldw	r4,0(fp)
  804538:	0021883a 	mov	r16,zero
  80453c:	20800003 	ldbu	r2,0(r4)
  804540:	2885883a 	add	r2,r5,r2
  804544:	10800043 	ldbu	r2,1(r2)
  804548:	1080020c 	andi	r2,r2,8
  80454c:	103f081e 	bne	r2,zero,804170 <__alt_data_end+0xff804170>
  804550:	e0800117 	ldw	r2,4(fp)
  804554:	21000044 	addi	r4,r4,1
  804558:	84000044 	addi	r16,r16,1
  80455c:	10bfffc4 	addi	r2,r2,-1
  804560:	e0800115 	stw	r2,4(fp)
  804564:	e1000015 	stw	r4,0(fp)
  804568:	ac3f0126 	beq	r21,r16,804170 <__alt_data_end+0xff804170>
  80456c:	00bff316 	blt	zero,r2,80453c <__alt_data_end+0xff80453c>
  804570:	b009883a 	mov	r4,r22
  804574:	e00b883a 	mov	r5,fp
  804578:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80457c:	103efc1e 	bne	r2,zero,804170 <__alt_data_end+0xff804170>
  804580:	b9400017 	ldw	r5,0(r23)
  804584:	e1000017 	ldw	r4,0(fp)
  804588:	003fec06 	br	80453c <__alt_data_end+0xff80453c>
  80458c:	880d883a 	mov	r6,r17
  804590:	dc409d17 	ldw	r17,628(sp)
  804594:	b019883a 	mov	r12,r22
  804598:	a821883a 	mov	r16,r21
  80459c:	182d883a 	mov	r22,r3
  8045a0:	00bfbfc4 	movi	r2,-257
  8045a4:	98a6703a 	and	r19,r19,r2
  8045a8:	003dd606 	br	803d04 <__alt_data_end+0xff803d04>
  8045ac:	d800a215 	stw	zero,648(sp)
  8045b0:	003d0906 	br	8039d8 <__alt_data_end+0xff8039d8>
  8045b4:	000f883a 	mov	r7,zero
  8045b8:	003f1906 	br	804220 <__alt_data_end+0xff804220>
  8045bc:	dac09c17 	ldw	r11,624(sp)
  8045c0:	a8ffffc4 	addi	r3,r21,-1
  8045c4:	dd005884 	addi	r20,sp,354
  8045c8:	5c000017 	ldw	r16,0(r11)
  8045cc:	59800104 	addi	r6,r11,4
  8045d0:	d9809c15 	stw	r6,624(sp)
  8045d4:	800b883a 	mov	r5,r16
  8045d8:	80eb883a 	add	r21,r16,r3
  8045dc:	00000106 	br	8045e4 <__ssvfscanf_r+0x1058>
  8045e0:	980b883a 	mov	r5,r19
  8045e4:	e0c00017 	ldw	r3,0(fp)
  8045e8:	280d883a 	mov	r6,r5
  8045ec:	18800003 	ldbu	r2,0(r3)
  8045f0:	a085883a 	add	r2,r20,r2
  8045f4:	10800007 	ldb	r2,0(r2)
  8045f8:	1000ec26 	beq	r2,zero,8049ac <__ssvfscanf_r+0x1420>
  8045fc:	e0800117 	ldw	r2,4(fp)
  804600:	19c00044 	addi	r7,r3,1
  804604:	e1c00015 	stw	r7,0(fp)
  804608:	10bfffc4 	addi	r2,r2,-1
  80460c:	e0800115 	stw	r2,4(fp)
  804610:	18800003 	ldbu	r2,0(r3)
  804614:	34c00044 	addi	r19,r6,1
  804618:	28800005 	stb	r2,0(r5)
  80461c:	3540da26 	beq	r6,r21,804988 <__ssvfscanf_r+0x13fc>
  804620:	e0800117 	ldw	r2,4(fp)
  804624:	00bfee16 	blt	zero,r2,8045e0 <__alt_data_end+0xff8045e0>
  804628:	b009883a 	mov	r4,r22
  80462c:	e00b883a 	mov	r5,fp
  804630:	080d1a00 	call	80d1a0 <__ssrefill_r>
  804634:	103fea26 	beq	r2,zero,8045e0 <__alt_data_end+0xff8045e0>
  804638:	9809883a 	mov	r4,r19
  80463c:	84c0d31e 	bne	r16,r19,80498c <__ssvfscanf_r+0x1400>
  804640:	003ca906 	br	8038e8 <__alt_data_end+0xff8038e8>
  804644:	dac09c17 	ldw	r11,624(sp)
  804648:	a8ffffc4 	addi	r3,r21,-1
  80464c:	5cc00017 	ldw	r19,0(r11)
  804650:	59800104 	addi	r6,r11,4
  804654:	d9809c15 	stw	r6,624(sp)
  804658:	98e9883a 	add	r20,r19,r3
  80465c:	980b883a 	mov	r5,r19
  804660:	00000106 	br	804668 <__ssvfscanf_r+0x10dc>
  804664:	a80b883a 	mov	r5,r21
  804668:	e0c00017 	ldw	r3,0(fp)
  80466c:	b9800017 	ldw	r6,0(r23)
  804670:	18800003 	ldbu	r2,0(r3)
  804674:	3085883a 	add	r2,r6,r2
  804678:	10800043 	ldbu	r2,1(r2)
  80467c:	1080020c 	andi	r2,r2,8
  804680:	1000e01e 	bne	r2,zero,804a04 <__ssvfscanf_r+0x1478>
  804684:	e0800117 	ldw	r2,4(fp)
  804688:	19800044 	addi	r6,r3,1
  80468c:	e1800015 	stw	r6,0(fp)
  804690:	10bfffc4 	addi	r2,r2,-1
  804694:	e0800115 	stw	r2,4(fp)
  804698:	18800003 	ldbu	r2,0(r3)
  80469c:	2d400044 	addi	r21,r5,1
  8046a0:	a821883a 	mov	r16,r21
  8046a4:	28800005 	stb	r2,0(r5)
  8046a8:	2d000626 	beq	r5,r20,8046c4 <__ssvfscanf_r+0x1138>
  8046ac:	e0800117 	ldw	r2,4(fp)
  8046b0:	00bfec16 	blt	zero,r2,804664 <__alt_data_end+0xff804664>
  8046b4:	b009883a 	mov	r4,r22
  8046b8:	e00b883a 	mov	r5,fp
  8046bc:	080d1a00 	call	80d1a0 <__ssrefill_r>
  8046c0:	103fe826 	beq	r2,zero,804664 <__alt_data_end+0xff804664>
  8046c4:	dac09f17 	ldw	r11,636(sp)
  8046c8:	84e7c83a 	sub	r19,r16,r19
  8046cc:	80000005 	stb	zero,0(r16)
  8046d0:	5ac00044 	addi	r11,r11,1
  8046d4:	94e5883a 	add	r18,r18,r19
  8046d8:	dac09f15 	stw	r11,636(sp)
  8046dc:	880d883a 	mov	r6,r17
  8046e0:	003be606 	br	80367c <__alt_data_end+0xff80367c>
  8046e4:	d8c09904 	addi	r3,sp,612
  8046e8:	8400040c 	andi	r16,r16,16
  8046ec:	1809883a 	mov	r4,r3
  8046f0:	000b883a 	mov	r5,zero
  8046f4:	01800204 	movi	r6,8
  8046f8:	d8c09d15 	stw	r3,628(sp)
  8046fc:	0802d340 	call	802d34 <memset>
  804700:	80007126 	beq	r16,zero,8048c8 <__ssvfscanf_r+0x133c>
  804704:	dcc09b04 	addi	r19,sp,620
  804708:	0007883a 	mov	r3,zero
  80470c:	dc40a015 	stw	r17,640(sp)
  804710:	8023883a 	mov	r17,r16
  804714:	1821883a 	mov	r16,r3
  804718:	e0800017 	ldw	r2,0(fp)
  80471c:	b8c00017 	ldw	r3,0(r23)
  804720:	10800003 	ldbu	r2,0(r2)
  804724:	1885883a 	add	r2,r3,r2
  804728:	10800043 	ldbu	r2,1(r2)
  80472c:	1080020c 	andi	r2,r2,8
  804730:	1000011e 	bne	r2,zero,804738 <__ssvfscanf_r+0x11ac>
  804734:	a800ff1e 	bne	r21,zero,804b34 <__ssvfscanf_r+0x15a8>
  804738:	8821883a 	mov	r16,r17
  80473c:	dc40a017 	ldw	r17,640(sp)
  804740:	803bcd1e 	bne	r16,zero,803678 <__alt_data_end+0xff803678>
  804744:	dac09f17 	ldw	r11,636(sp)
  804748:	98000015 	stw	zero,0(r19)
  80474c:	880d883a 	mov	r6,r17
  804750:	5ac00044 	addi	r11,r11,1
  804754:	dac09f15 	stw	r11,636(sp)
  804758:	003bc806 	br	80367c <__alt_data_end+0xff80367c>
  80475c:	d9c09e17 	ldw	r7,632(sp)
  804760:	dac0a117 	ldw	r11,644(sp)
  804764:	b009883a 	mov	r4,r22
  804768:	d9400104 	addi	r5,sp,4
  80476c:	000d883a 	mov	r6,zero
  804770:	98000005 	stb	zero,0(r19)
  804774:	583ee83a 	callr	r11
  804778:	a0c0080c 	andi	r3,r20,32
  80477c:	18006326 	beq	r3,zero,80490c <__ssvfscanf_r+0x1380>
  804780:	dac09c17 	ldw	r11,624(sp)
  804784:	58c00017 	ldw	r3,0(r11)
  804788:	5ac00104 	addi	r11,r11,4
  80478c:	dac09c15 	stw	r11,624(sp)
  804790:	18800015 	stw	r2,0(r3)
  804794:	dac09f17 	ldw	r11,636(sp)
  804798:	5ac00044 	addi	r11,r11,1
  80479c:	dac09f15 	stw	r11,636(sp)
  8047a0:	003f1c06 	br	804414 <__alt_data_end+0xff804414>
  8047a4:	d8c09904 	addi	r3,sp,612
  8047a8:	8400040c 	andi	r16,r16,16
  8047ac:	1809883a 	mov	r4,r3
  8047b0:	000b883a 	mov	r5,zero
  8047b4:	01800204 	movi	r6,8
  8047b8:	dc00a015 	stw	r16,640(sp)
  8047bc:	d8c09d15 	stw	r3,628(sp)
  8047c0:	0802d340 	call	802d34 <memset>
  8047c4:	dc00a017 	ldw	r16,640(sp)
  8047c8:	80004b26 	beq	r16,zero,8048f8 <__ssvfscanf_r+0x136c>
  8047cc:	0027883a 	mov	r19,zero
  8047d0:	dc00a017 	ldw	r16,640(sp)
  8047d4:	0029883a 	mov	r20,zero
  8047d8:	dc40a215 	stw	r17,648(sp)
  8047dc:	0808e580 	call	808e58 <__locale_mb_cur_max>
  8047e0:	153c4126 	beq	r2,r20,8038e8 <__alt_data_end+0xff8038e8>
  8047e4:	e0800017 	ldw	r2,0(fp)
  8047e8:	e1000117 	ldw	r4,4(fp)
  8047ec:	dac09d17 	ldw	r11,628(sp)
  8047f0:	12400003 	ldbu	r9,0(r2)
  8047f4:	213fffc4 	addi	r4,r4,-1
  8047f8:	10800044 	addi	r2,r2,1
  8047fc:	d8c00104 	addi	r3,sp,4
  804800:	e1000115 	stw	r4,4(fp)
  804804:	e0800015 	stw	r2,0(fp)
  804808:	a4400044 	addi	r17,r20,1
  80480c:	dac00015 	stw	r11,0(sp)
  804810:	1d29883a 	add	r20,r3,r20
  804814:	180d883a 	mov	r6,r3
  804818:	b009883a 	mov	r4,r22
  80481c:	980b883a 	mov	r5,r19
  804820:	880f883a 	mov	r7,r17
  804824:	a2400005 	stb	r9,0(r20)
  804828:	0808f0c0 	call	808f0c <_mbrtowc_r>
  80482c:	00ffffc4 	movi	r3,-1
  804830:	10fc2d26 	beq	r2,r3,8038e8 <__alt_data_end+0xff8038e8>
  804834:	10004e1e 	bne	r2,zero,804970 <__ssvfscanf_r+0x13e4>
  804838:	8000011e 	bne	r16,zero,804840 <__ssvfscanf_r+0x12b4>
  80483c:	98000015 	stw	zero,0(r19)
  804840:	9465883a 	add	r18,r18,r17
  804844:	ad7fffc4 	addi	r21,r21,-1
  804848:	80004d1e 	bne	r16,zero,804980 <__ssvfscanf_r+0x13f4>
  80484c:	9cc00104 	addi	r19,r19,4
  804850:	0029883a 	mov	r20,zero
  804854:	e0800117 	ldw	r2,4(fp)
  804858:	0080200e 	bge	zero,r2,8048dc <__ssvfscanf_r+0x1350>
  80485c:	a83fdf1e 	bne	r21,zero,8047dc <__alt_data_end+0xff8047dc>
  804860:	dc40a217 	ldw	r17,648(sp)
  804864:	dac0a017 	ldw	r11,640(sp)
  804868:	583d6e26 	beq	r11,zero,803e24 <__alt_data_end+0xff803e24>
  80486c:	003b8206 	br	803678 <__alt_data_end+0xff803678>
  804870:	9a80008c 	andi	r10,r19,2
  804874:	503d651e 	bne	r10,zero,803e0c <__alt_data_end+0xff803e0c>
  804878:	dac09c17 	ldw	r11,624(sp)
  80487c:	180b883a 	mov	r5,r3
  804880:	a009883a 	mov	r4,r20
  804884:	5cc00017 	ldw	r19,0(r11)
  804888:	5c000104 	addi	r16,r11,4
  80488c:	d8c0ab15 	stw	r3,684(sp)
  804890:	080ab7c0 	call	80ab7c <__fpclassifyd>
  804894:	d8c0ab17 	ldw	r3,684(sp)
  804898:	1000a126 	beq	r2,zero,804b20 <__ssvfscanf_r+0x1594>
  80489c:	a009883a 	mov	r4,r20
  8048a0:	180b883a 	mov	r5,r3
  8048a4:	08173500 	call	817350 <__truncdfsf2>
  8048a8:	98800015 	stw	r2,0(r19)
  8048ac:	dc009c15 	stw	r16,624(sp)
  8048b0:	003d5c06 	br	803e24 <__alt_data_end+0xff803e24>
  8048b4:	5805883a 	mov	r2,r11
  8048b8:	003c1106 	br	803900 <__alt_data_end+0xff803900>
  8048bc:	00be9fc4 	movi	r2,-1409
  8048c0:	a0a8703a 	and	r20,r20,r2
  8048c4:	003ebe06 	br	8043c0 <__alt_data_end+0xff8043c0>
  8048c8:	dac09c17 	ldw	r11,624(sp)
  8048cc:	5cc00017 	ldw	r19,0(r11)
  8048d0:	5ac00104 	addi	r11,r11,4
  8048d4:	dac09c15 	stw	r11,624(sp)
  8048d8:	003f8b06 	br	804708 <__alt_data_end+0xff804708>
  8048dc:	b009883a 	mov	r4,r22
  8048e0:	e00b883a 	mov	r5,fp
  8048e4:	080d1a00 	call	80d1a0 <__ssrefill_r>
  8048e8:	103fdc26 	beq	r2,zero,80485c <__alt_data_end+0xff80485c>
  8048ec:	dc40a217 	ldw	r17,648(sp)
  8048f0:	a03fdc26 	beq	r20,zero,804864 <__alt_data_end+0xff804864>
  8048f4:	003bfc06 	br	8038e8 <__alt_data_end+0xff8038e8>
  8048f8:	dac09c17 	ldw	r11,624(sp)
  8048fc:	5cc00017 	ldw	r19,0(r11)
  804900:	5ac00104 	addi	r11,r11,4
  804904:	dac09c15 	stw	r11,624(sp)
  804908:	003fb106 	br	8047d0 <__alt_data_end+0xff8047d0>
  80490c:	a0c0010c 	andi	r3,r20,4
  804910:	18006f26 	beq	r3,zero,804ad0 <__ssvfscanf_r+0x1544>
  804914:	dac09c17 	ldw	r11,624(sp)
  804918:	58c00017 	ldw	r3,0(r11)
  80491c:	5ac00104 	addi	r11,r11,4
  804920:	dac09c15 	stw	r11,624(sp)
  804924:	1880000d 	sth	r2,0(r3)
  804928:	003f9a06 	br	804794 <__alt_data_end+0xff804794>
  80492c:	dac0a517 	ldw	r11,660(sp)
  804930:	000d883a 	mov	r6,zero
  804934:	b009883a 	mov	r4,r22
  804938:	59400044 	addi	r5,r11,1
  80493c:	01c00284 	movi	r7,10
  804940:	080c5900 	call	80c590 <_strtol_r>
  804944:	d8c0a417 	ldw	r3,656(sp)
  804948:	dd00a517 	ldw	r20,660(sp)
  80494c:	10cdc83a 	sub	r6,r2,r3
  804950:	d88055c4 	addi	r2,sp,343
  804954:	a0800136 	bltu	r20,r2,80495c <__ssvfscanf_r+0x13d0>
  804958:	dd005584 	addi	r20,sp,342
  80495c:	014020b4 	movhi	r5,130
  804960:	296ecd04 	addi	r5,r5,-17612
  804964:	a009883a 	mov	r4,r20
  804968:	080ad100 	call	80ad10 <sprintf>
  80496c:	003d2006 	br	803df0 <__alt_data_end+0xff803df0>
  804970:	013fff84 	movi	r4,-2
  804974:	113fb21e 	bne	r2,r4,804840 <__alt_data_end+0xff804840>
  804978:	8829883a 	mov	r20,r17
  80497c:	003fb506 	br	804854 <__alt_data_end+0xff804854>
  804980:	0029883a 	mov	r20,zero
  804984:	003fb306 	br	804854 <__alt_data_end+0xff804854>
  804988:	9809883a 	mov	r4,r19
  80498c:	2421c83a 	sub	r16,r4,r16
  804990:	803b3e26 	beq	r16,zero,80368c <__alt_data_end+0xff80368c>
  804994:	dac09f17 	ldw	r11,636(sp)
  804998:	20000005 	stb	zero,0(r4)
  80499c:	9425883a 	add	r18,r18,r16
  8049a0:	5ac00044 	addi	r11,r11,1
  8049a4:	dac09f15 	stw	r11,636(sp)
  8049a8:	003df206 	br	804174 <__alt_data_end+0xff804174>
  8049ac:	2809883a 	mov	r4,r5
  8049b0:	003ff606 	br	80498c <__alt_data_end+0xff80498c>
  8049b4:	803bcc26 	beq	r16,zero,8038e8 <__alt_data_end+0xff8038e8>
  8049b8:	9425883a 	add	r18,r18,r16
  8049bc:	003ded06 	br	804174 <__alt_data_end+0xff804174>
  8049c0:	dac09c17 	ldw	r11,624(sp)
  8049c4:	df000015 	stw	fp,0(sp)
  8049c8:	b009883a 	mov	r4,r22
  8049cc:	59400017 	ldw	r5,0(r11)
  8049d0:	01800044 	movi	r6,1
  8049d4:	a80f883a 	mov	r7,r21
  8049d8:	080d2100 	call	80d210 <_sfread_r>
  8049dc:	dac09c17 	ldw	r11,624(sp)
  8049e0:	58c00104 	addi	r3,r11,4
  8049e4:	103bc026 	beq	r2,zero,8038e8 <__alt_data_end+0xff8038e8>
  8049e8:	dac09f17 	ldw	r11,636(sp)
  8049ec:	14a5883a 	add	r18,r2,r18
  8049f0:	d8c09c15 	stw	r3,624(sp)
  8049f4:	5ac00044 	addi	r11,r11,1
  8049f8:	dac09f15 	stw	r11,636(sp)
  8049fc:	880d883a 	mov	r6,r17
  804a00:	003b1e06 	br	80367c <__alt_data_end+0xff80367c>
  804a04:	2821883a 	mov	r16,r5
  804a08:	003f2e06 	br	8046c4 <__alt_data_end+0xff8046c4>
  804a0c:	b009883a 	mov	r4,r22
  804a10:	e00b883a 	mov	r5,fp
  804a14:	080d1a00 	call	80d1a0 <__ssrefill_r>
  804a18:	103bc826 	beq	r2,zero,80393c <__alt_data_end+0xff80393c>
  804a1c:	003bb206 	br	8038e8 <__alt_data_end+0xff8038e8>
  804a20:	997fffc7 	ldb	r5,-1(r19)
  804a24:	b009883a 	mov	r4,r22
  804a28:	e00d883a 	mov	r6,fp
  804a2c:	9cffffc4 	addi	r19,r19,-1
  804a30:	080d0a80 	call	80d0a8 <_sungetc_r>
  804a34:	003e7306 	br	804404 <__alt_data_end+0xff804404>
  804a38:	01be1fc4 	movi	r6,-1921
  804a3c:	99a6703a 	and	r19,r19,r6
  804a40:	04400044 	movi	r17,1
  804a44:	003c6906 	br	803bec <__alt_data_end+0xff803bec>
  804a48:	00be1fc4 	movi	r2,-1921
  804a4c:	98a6703a 	and	r19,r19,r2
  804a50:	05800044 	movi	r22,1
  804a54:	003c6506 	br	803bec <__alt_data_end+0xff803bec>
  804a58:	dac0a017 	ldw	r11,640(sp)
  804a5c:	82e1c83a 	sub	r16,r16,r11
  804a60:	040dc83a 	sub	r6,zero,r16
  804a64:	803fba1e 	bne	r16,zero,804950 <__alt_data_end+0xff804950>
  804a68:	003ce106 	br	803df0 <__alt_data_end+0xff803df0>
  804a6c:	8120b03a 	or	r16,r16,r4
  804a70:	003d4f06 	br	803fb0 <__alt_data_end+0xff803fb0>
  804a74:	88800083 	ldbu	r2,2(r17)
  804a78:	84000094 	ori	r16,r16,2
  804a7c:	8c400084 	addi	r17,r17,2
  804a80:	11803fcc 	andi	r6,r2,255
  804a84:	003b0a06 	br	8036b0 <__alt_data_end+0xff8036b0>
  804a88:	8080004c 	andi	r2,r16,1
  804a8c:	10000a1e 	bne	r2,zero,804ab8 <__ssvfscanf_r+0x152c>
  804a90:	8400008c 	andi	r16,r16,2
  804a94:	80000826 	beq	r16,zero,804ab8 <__ssvfscanf_r+0x152c>
  804a98:	dac09c17 	ldw	r11,624(sp)
  804a9c:	9007d7fa 	srai	r3,r18,31
  804aa0:	58800017 	ldw	r2,0(r11)
  804aa4:	5ac00104 	addi	r11,r11,4
  804aa8:	dac09c15 	stw	r11,624(sp)
  804aac:	14800015 	stw	r18,0(r2)
  804ab0:	10c00115 	stw	r3,4(r2)
  804ab4:	003af006 	br	803678 <__alt_data_end+0xff803678>
  804ab8:	dac09c17 	ldw	r11,624(sp)
  804abc:	58800017 	ldw	r2,0(r11)
  804ac0:	5ac00104 	addi	r11,r11,4
  804ac4:	dac09c15 	stw	r11,624(sp)
  804ac8:	14800015 	stw	r18,0(r2)
  804acc:	003aea06 	br	803678 <__alt_data_end+0xff803678>
  804ad0:	a0c0004c 	andi	r3,r20,1
  804ad4:	183f2a1e 	bne	r3,zero,804780 <__alt_data_end+0xff804780>
  804ad8:	a500008c 	andi	r20,r20,2
  804adc:	a03f2826 	beq	r20,zero,804780 <__alt_data_end+0xff804780>
  804ae0:	dac0a117 	ldw	r11,644(sp)
  804ae4:	00802074 	movhi	r2,129
  804ae8:	10b2ba04 	addi	r2,r2,-13592
  804aec:	b009883a 	mov	r4,r22
  804af0:	d9400104 	addi	r5,sp,4
  804af4:	000d883a 	mov	r6,zero
  804af8:	d9c09e17 	ldw	r7,632(sp)
  804afc:	58805f26 	beq	r11,r2,804c7c <__ssvfscanf_r+0x16f0>
  804b00:	080c7f40 	call	80c7f4 <_strtoll_r>
  804b04:	dac09c17 	ldw	r11,624(sp)
  804b08:	59000017 	ldw	r4,0(r11)
  804b0c:	5ac00104 	addi	r11,r11,4
  804b10:	dac09c15 	stw	r11,624(sp)
  804b14:	20800015 	stw	r2,0(r4)
  804b18:	20c00115 	stw	r3,4(r4)
  804b1c:	003f1d06 	br	804794 <__alt_data_end+0xff804794>
  804b20:	0009883a 	mov	r4,zero
  804b24:	080acb00 	call	80acb0 <nanf>
  804b28:	98800015 	stw	r2,0(r19)
  804b2c:	dc009c15 	stw	r16,624(sp)
  804b30:	003cbc06 	br	803e24 <__alt_data_end+0xff803e24>
  804b34:	0808e580 	call	808e58 <__locale_mb_cur_max>
  804b38:	143b6b26 	beq	r2,r16,8038e8 <__alt_data_end+0xff8038e8>
  804b3c:	e0800017 	ldw	r2,0(fp)
  804b40:	e1000117 	ldw	r4,4(fp)
  804b44:	dac09d17 	ldw	r11,628(sp)
  804b48:	12000003 	ldbu	r8,0(r2)
  804b4c:	213fffc4 	addi	r4,r4,-1
  804b50:	10800044 	addi	r2,r2,1
  804b54:	d8c00104 	addi	r3,sp,4
  804b58:	e1000115 	stw	r4,4(fp)
  804b5c:	e0800015 	stw	r2,0(fp)
  804b60:	85000044 	addi	r20,r16,1
  804b64:	dac00015 	stw	r11,0(sp)
  804b68:	1c21883a 	add	r16,r3,r16
  804b6c:	180d883a 	mov	r6,r3
  804b70:	b009883a 	mov	r4,r22
  804b74:	980b883a 	mov	r5,r19
  804b78:	a00f883a 	mov	r7,r20
  804b7c:	82000005 	stb	r8,0(r16)
  804b80:	0808f0c0 	call	808f0c <_mbrtowc_r>
  804b84:	00ffffc4 	movi	r3,-1
  804b88:	10fb5726 	beq	r2,r3,8038e8 <__alt_data_end+0xff8038e8>
  804b8c:	103b491e 	bne	r2,zero,8038b4 <__alt_data_end+0xff8038b4>
  804b90:	98000015 	stw	zero,0(r19)
  804b94:	0009883a 	mov	r4,zero
  804b98:	0808da00 	call	808da0 <iswspace>
  804b9c:	10000c26 	beq	r2,zero,804bd0 <__ssvfscanf_r+0x1644>
  804ba0:	8821883a 	mov	r16,r17
  804ba4:	dc40a017 	ldw	r17,640(sp)
  804ba8:	a03ee526 	beq	r20,zero,804740 <__alt_data_end+0xff804740>
  804bac:	a53fffc4 	addi	r20,r20,-1
  804bb0:	d9400104 	addi	r5,sp,4
  804bb4:	2d05883a 	add	r2,r5,r20
  804bb8:	11400003 	ldbu	r5,0(r2)
  804bbc:	b009883a 	mov	r4,r22
  804bc0:	e00d883a 	mov	r6,fp
  804bc4:	080d0a80 	call	80d0a8 <_sungetc_r>
  804bc8:	a03ff81e 	bne	r20,zero,804bac <__alt_data_end+0xff804bac>
  804bcc:	003edc06 	br	804740 <__alt_data_end+0xff804740>
  804bd0:	9525883a 	add	r18,r18,r20
  804bd4:	ad7fffc4 	addi	r21,r21,-1
  804bd8:	8800051e 	bne	r17,zero,804bf0 <__ssvfscanf_r+0x1664>
  804bdc:	9cc00104 	addi	r19,r19,4
  804be0:	0021883a 	mov	r16,zero
  804be4:	003b3606 	br	8038c0 <__alt_data_end+0xff8038c0>
  804be8:	99000017 	ldw	r4,0(r19)
  804bec:	003fea06 	br	804b98 <__alt_data_end+0xff804b98>
  804bf0:	0021883a 	mov	r16,zero
  804bf4:	003b3206 	br	8038c0 <__alt_data_end+0xff8038c0>
  804bf8:	d8800104 	addi	r2,sp,4
  804bfc:	a02b883a 	mov	r21,r20
  804c00:	153aa22e 	bgeu	r2,r20,80368c <__alt_data_end+0xff80368c>
  804c04:	ad7fffc4 	addi	r21,r21,-1
  804c08:	a9400007 	ldb	r5,0(r21)
  804c0c:	b009883a 	mov	r4,r22
  804c10:	e00d883a 	mov	r6,fp
  804c14:	080d0a80 	call	80d0a8 <_sungetc_r>
  804c18:	d8c00104 	addi	r3,sp,4
  804c1c:	a8fff91e 	bne	r21,r3,804c04 <__alt_data_end+0xff804c04>
  804c20:	003a9a06 	br	80368c <__alt_data_end+0xff80368c>
  804c24:	d8c00104 	addi	r3,sp,4
  804c28:	a02b883a 	mov	r21,r20
  804c2c:	1d3a972e 	bgeu	r3,r20,80368c <__alt_data_end+0xff80368c>
  804c30:	ad7fffc4 	addi	r21,r21,-1
  804c34:	a9400007 	ldb	r5,0(r21)
  804c38:	b009883a 	mov	r4,r22
  804c3c:	e00d883a 	mov	r6,fp
  804c40:	080d0a80 	call	80d0a8 <_sungetc_r>
  804c44:	d9000104 	addi	r4,sp,4
  804c48:	a93ff91e 	bne	r21,r4,804c30 <__alt_data_end+0xff804c30>
  804c4c:	003a8f06 	br	80368c <__alt_data_end+0xff80368c>
  804c50:	d9400104 	addi	r5,sp,4
  804c54:	a021883a 	mov	r16,r20
  804c58:	2d3a8c2e 	bgeu	r5,r20,80368c <__alt_data_end+0xff80368c>
  804c5c:	843fffc4 	addi	r16,r16,-1
  804c60:	81400007 	ldb	r5,0(r16)
  804c64:	b009883a 	mov	r4,r22
  804c68:	e00d883a 	mov	r6,fp
  804c6c:	080d0a80 	call	80d0a8 <_sungetc_r>
  804c70:	dac00104 	addi	r11,sp,4
  804c74:	82fff91e 	bne	r16,r11,804c5c <__alt_data_end+0xff804c5c>
  804c78:	003a8406 	br	80368c <__alt_data_end+0xff80368c>
  804c7c:	080cd740 	call	80cd74 <_strtoull_r>
  804c80:	003fa006 	br	804b04 <__alt_data_end+0xff804b04>

00804c84 <___vfprintf_internal_r>:
  804c84:	deffb604 	addi	sp,sp,-296
  804c88:	dfc04915 	stw	ra,292(sp)
  804c8c:	ddc04715 	stw	r23,284(sp)
  804c90:	dd804615 	stw	r22,280(sp)
  804c94:	282f883a 	mov	r23,r5
  804c98:	202d883a 	mov	r22,r4
  804c9c:	d9802a15 	stw	r6,168(sp)
  804ca0:	d9c02d15 	stw	r7,180(sp)
  804ca4:	df004815 	stw	fp,288(sp)
  804ca8:	dd404515 	stw	r21,276(sp)
  804cac:	dd004415 	stw	r20,272(sp)
  804cb0:	dcc04315 	stw	r19,268(sp)
  804cb4:	dc804215 	stw	r18,264(sp)
  804cb8:	dc404115 	stw	r17,260(sp)
  804cbc:	dc004015 	stw	r16,256(sp)
  804cc0:	0808e7c0 	call	808e7c <_localeconv_r>
  804cc4:	10800017 	ldw	r2,0(r2)
  804cc8:	1009883a 	mov	r4,r2
  804ccc:	d8803515 	stw	r2,212(sp)
  804cd0:	08034f40 	call	8034f4 <strlen>
  804cd4:	d8803815 	stw	r2,224(sp)
  804cd8:	b0000226 	beq	r22,zero,804ce4 <___vfprintf_internal_r+0x60>
  804cdc:	b0800e17 	ldw	r2,56(r22)
  804ce0:	1000e126 	beq	r2,zero,805068 <___vfprintf_internal_r+0x3e4>
  804ce4:	b880030b 	ldhu	r2,12(r23)
  804ce8:	10c8000c 	andi	r3,r2,8192
  804cec:	1800061e 	bne	r3,zero,804d08 <___vfprintf_internal_r+0x84>
  804cf0:	b9001917 	ldw	r4,100(r23)
  804cf4:	00f7ffc4 	movi	r3,-8193
  804cf8:	10880014 	ori	r2,r2,8192
  804cfc:	20c6703a 	and	r3,r4,r3
  804d00:	b880030d 	sth	r2,12(r23)
  804d04:	b8c01915 	stw	r3,100(r23)
  804d08:	10c0020c 	andi	r3,r2,8
  804d0c:	1800a726 	beq	r3,zero,804fac <___vfprintf_internal_r+0x328>
  804d10:	b8c00417 	ldw	r3,16(r23)
  804d14:	1800a526 	beq	r3,zero,804fac <___vfprintf_internal_r+0x328>
  804d18:	1080068c 	andi	r2,r2,26
  804d1c:	00c00284 	movi	r3,10
  804d20:	10c0aa26 	beq	r2,r3,804fcc <___vfprintf_internal_r+0x348>
  804d24:	dac01e04 	addi	r11,sp,120
  804d28:	db001dc4 	addi	r12,sp,119
  804d2c:	d8800404 	addi	r2,sp,16
  804d30:	050020b4 	movhi	r20,130
  804d34:	dac02815 	stw	r11,160(sp)
  804d38:	5b17c83a 	sub	r11,r11,r12
  804d3c:	a52ee784 	addi	r20,r20,-17506
  804d40:	db002915 	stw	r12,164(sp)
  804d44:	d8801e15 	stw	r2,120(sp)
  804d48:	d8002015 	stw	zero,128(sp)
  804d4c:	d8001f15 	stw	zero,124(sp)
  804d50:	d8003315 	stw	zero,204(sp)
  804d54:	d8003715 	stw	zero,220(sp)
  804d58:	d8003915 	stw	zero,228(sp)
  804d5c:	1011883a 	mov	r8,r2
  804d60:	d8003b15 	stw	zero,236(sp)
  804d64:	d8003a15 	stw	zero,232(sp)
  804d68:	d8002f15 	stw	zero,188(sp)
  804d6c:	dac03c15 	stw	r11,240(sp)
  804d70:	db002a17 	ldw	r12,168(sp)
  804d74:	60800007 	ldb	r2,0(r12)
  804d78:	1000be26 	beq	r2,zero,805074 <___vfprintf_internal_r+0x3f0>
  804d7c:	00c00944 	movi	r3,37
  804d80:	10c0bc26 	beq	r2,r3,805074 <___vfprintf_internal_r+0x3f0>
  804d84:	6021883a 	mov	r16,r12
  804d88:	00000106 	br	804d90 <___vfprintf_internal_r+0x10c>
  804d8c:	10c08426 	beq	r2,r3,804fa0 <___vfprintf_internal_r+0x31c>
  804d90:	84000044 	addi	r16,r16,1
  804d94:	80800007 	ldb	r2,0(r16)
  804d98:	103ffc1e 	bne	r2,zero,804d8c <__alt_data_end+0xff804d8c>
  804d9c:	dac02a17 	ldw	r11,168(sp)
  804da0:	82e3c83a 	sub	r17,r16,r11
  804da4:	88000f26 	beq	r17,zero,804de4 <___vfprintf_internal_r+0x160>
  804da8:	d8c02017 	ldw	r3,128(sp)
  804dac:	d8801f17 	ldw	r2,124(sp)
  804db0:	dac02a17 	ldw	r11,168(sp)
  804db4:	1c47883a 	add	r3,r3,r17
  804db8:	10800044 	addi	r2,r2,1
  804dbc:	d8c02015 	stw	r3,128(sp)
  804dc0:	42c00015 	stw	r11,0(r8)
  804dc4:	44400115 	stw	r17,4(r8)
  804dc8:	d8801f15 	stw	r2,124(sp)
  804dcc:	00c001c4 	movi	r3,7
  804dd0:	18809316 	blt	r3,r2,805020 <___vfprintf_internal_r+0x39c>
  804dd4:	42000204 	addi	r8,r8,8
  804dd8:	db002f17 	ldw	r12,188(sp)
  804ddc:	6459883a 	add	r12,r12,r17
  804de0:	db002f15 	stw	r12,188(sp)
  804de4:	80800007 	ldb	r2,0(r16)
  804de8:	10009426 	beq	r2,zero,80503c <___vfprintf_internal_r+0x3b8>
  804dec:	80800044 	addi	r2,r16,1
  804df0:	84000047 	ldb	r16,1(r16)
  804df4:	d8002785 	stb	zero,158(sp)
  804df8:	000d883a 	mov	r6,zero
  804dfc:	027fffc4 	movi	r9,-1
  804e00:	d8002e15 	stw	zero,184(sp)
  804e04:	0023883a 	mov	r17,zero
  804e08:	01001604 	movi	r4,88
  804e0c:	01400244 	movi	r5,9
  804e10:	02800a84 	movi	r10,42
  804e14:	01c01b04 	movi	r7,108
  804e18:	10c00044 	addi	r3,r2,1
  804e1c:	80bff804 	addi	r2,r16,-32
  804e20:	2082cd36 	bltu	r4,r2,805958 <___vfprintf_internal_r+0xcd4>
  804e24:	100490ba 	slli	r2,r2,2
  804e28:	02c02034 	movhi	r11,128
  804e2c:	5ad38f04 	addi	r11,r11,20028
  804e30:	12c5883a 	add	r2,r2,r11
  804e34:	10800017 	ldw	r2,0(r2)
  804e38:	1000683a 	jmp	r2
  804e3c:	00805770 	cmpltui	r2,zero,349
  804e40:	00805958 	cmpnei	r2,zero,357
  804e44:	00805958 	cmpnei	r2,zero,357
  804e48:	008058c0 	call	8058c <__alt_mem_sdram_0-0x77fa74>
  804e4c:	00805958 	cmpnei	r2,zero,357
  804e50:	00805958 	cmpnei	r2,zero,357
  804e54:	00805958 	cmpnei	r2,zero,357
  804e58:	00805958 	cmpnei	r2,zero,357
  804e5c:	00805958 	cmpnei	r2,zero,357
  804e60:	00805958 	cmpnei	r2,zero,357
  804e64:	00805790 	cmplti	r2,zero,350
  804e68:	008057bc 	xorhi	r2,zero,350
  804e6c:	00805958 	cmpnei	r2,zero,357
  804e70:	0080507c 	xorhi	r2,zero,321
  804e74:	0080508c 	andi	r2,zero,322
  804e78:	00805958 	cmpnei	r2,zero,357
  804e7c:	008050cc 	andi	r2,zero,323
  804e80:	008050dc 	xori	r2,zero,323
  804e84:	008050dc 	xori	r2,zero,323
  804e88:	008050dc 	xori	r2,zero,323
  804e8c:	008050dc 	xori	r2,zero,323
  804e90:	008050dc 	xori	r2,zero,323
  804e94:	008050dc 	xori	r2,zero,323
  804e98:	008050dc 	xori	r2,zero,323
  804e9c:	008050dc 	xori	r2,zero,323
  804ea0:	008050dc 	xori	r2,zero,323
  804ea4:	00805958 	cmpnei	r2,zero,357
  804ea8:	00805958 	cmpnei	r2,zero,357
  804eac:	00805958 	cmpnei	r2,zero,357
  804eb0:	00805958 	cmpnei	r2,zero,357
  804eb4:	00805958 	cmpnei	r2,zero,357
  804eb8:	00805958 	cmpnei	r2,zero,357
  804ebc:	00805958 	cmpnei	r2,zero,357
  804ec0:	00805958 	cmpnei	r2,zero,357
  804ec4:	00805958 	cmpnei	r2,zero,357
  804ec8:	00805958 	cmpnei	r2,zero,357
  804ecc:	00805110 	cmplti	r2,zero,324
  804ed0:	00805580 	call	80558 <__alt_mem_sdram_0-0x77faa8>
  804ed4:	00805958 	cmpnei	r2,zero,357
  804ed8:	00805580 	call	80558 <__alt_mem_sdram_0-0x77faa8>
  804edc:	00805958 	cmpnei	r2,zero,357
  804ee0:	00805958 	cmpnei	r2,zero,357
  804ee4:	00805958 	cmpnei	r2,zero,357
  804ee8:	00805958 	cmpnei	r2,zero,357
  804eec:	0080566c 	andhi	r2,zero,345
  804ef0:	00805958 	cmpnei	r2,zero,357
  804ef4:	00805958 	cmpnei	r2,zero,357
  804ef8:	00805514 	movui	r2,340
  804efc:	00805958 	cmpnei	r2,zero,357
  804f00:	00805958 	cmpnei	r2,zero,357
  804f04:	00805958 	cmpnei	r2,zero,357
  804f08:	00805958 	cmpnei	r2,zero,357
  804f0c:	00805958 	cmpnei	r2,zero,357
  804f10:	00805550 	cmplti	r2,zero,341
  804f14:	00805958 	cmpnei	r2,zero,357
  804f18:	00805958 	cmpnei	r2,zero,357
  804f1c:	00805714 	movui	r2,348
  804f20:	00805958 	cmpnei	r2,zero,357
  804f24:	00805958 	cmpnei	r2,zero,357
  804f28:	00805958 	cmpnei	r2,zero,357
  804f2c:	00805958 	cmpnei	r2,zero,357
  804f30:	00805958 	cmpnei	r2,zero,357
  804f34:	00805958 	cmpnei	r2,zero,357
  804f38:	00805958 	cmpnei	r2,zero,357
  804f3c:	00805958 	cmpnei	r2,zero,357
  804f40:	00805958 	cmpnei	r2,zero,357
  804f44:	00805958 	cmpnei	r2,zero,357
  804f48:	008057cc 	andi	r2,zero,351
  804f4c:	0080567c 	xorhi	r2,zero,345
  804f50:	00805580 	call	80558 <__alt_mem_sdram_0-0x77faa8>
  804f54:	00805580 	call	80558 <__alt_mem_sdram_0-0x77faa8>
  804f58:	00805580 	call	80558 <__alt_mem_sdram_0-0x77faa8>
  804f5c:	008056bc 	xorhi	r2,zero,346
  804f60:	0080567c 	xorhi	r2,zero,345
  804f64:	00805958 	cmpnei	r2,zero,357
  804f68:	00805958 	cmpnei	r2,zero,357
  804f6c:	008056cc 	andi	r2,zero,347
  804f70:	00805958 	cmpnei	r2,zero,357
  804f74:	008056e0 	cmpeqi	r2,zero,347
  804f78:	0080591c 	xori	r2,zero,356
  804f7c:	00805624 	muli	r2,zero,344
  804f80:	008058d0 	cmplti	r2,zero,355
  804f84:	00805958 	cmpnei	r2,zero,357
  804f88:	0080580c 	andi	r2,zero,352
  804f8c:	00805958 	cmpnei	r2,zero,357
  804f90:	008058e0 	cmpeqi	r2,zero,355
  804f94:	00805958 	cmpnei	r2,zero,357
  804f98:	00805958 	cmpnei	r2,zero,357
  804f9c:	00805880 	call	80588 <__alt_mem_sdram_0-0x77fa78>
  804fa0:	db002a17 	ldw	r12,168(sp)
  804fa4:	8323c83a 	sub	r17,r16,r12
  804fa8:	003f7e06 	br	804da4 <__alt_data_end+0xff804da4>
  804fac:	b009883a 	mov	r4,r22
  804fb0:	b80b883a 	mov	r5,r23
  804fb4:	0806d100 	call	806d10 <__swsetup_r>
  804fb8:	10000c1e 	bne	r2,zero,804fec <___vfprintf_internal_r+0x368>
  804fbc:	b880030b 	ldhu	r2,12(r23)
  804fc0:	00c00284 	movi	r3,10
  804fc4:	1080068c 	andi	r2,r2,26
  804fc8:	10ff561e 	bne	r2,r3,804d24 <__alt_data_end+0xff804d24>
  804fcc:	b880038f 	ldh	r2,14(r23)
  804fd0:	103f5416 	blt	r2,zero,804d24 <__alt_data_end+0xff804d24>
  804fd4:	d9802a17 	ldw	r6,168(sp)
  804fd8:	d9c02d17 	ldw	r7,180(sp)
  804fdc:	b009883a 	mov	r4,r22
  804fe0:	b80b883a 	mov	r5,r23
  804fe4:	0806bf80 	call	806bf8 <__sbprintf>
  804fe8:	00000106 	br	804ff0 <___vfprintf_internal_r+0x36c>
  804fec:	00bfffc4 	movi	r2,-1
  804ff0:	dfc04917 	ldw	ra,292(sp)
  804ff4:	df004817 	ldw	fp,288(sp)
  804ff8:	ddc04717 	ldw	r23,284(sp)
  804ffc:	dd804617 	ldw	r22,280(sp)
  805000:	dd404517 	ldw	r21,276(sp)
  805004:	dd004417 	ldw	r20,272(sp)
  805008:	dcc04317 	ldw	r19,268(sp)
  80500c:	dc804217 	ldw	r18,264(sp)
  805010:	dc404117 	ldw	r17,260(sp)
  805014:	dc004017 	ldw	r16,256(sp)
  805018:	dec04a04 	addi	sp,sp,296
  80501c:	f800283a 	ret
  805020:	b009883a 	mov	r4,r22
  805024:	b80b883a 	mov	r5,r23
  805028:	d9801e04 	addi	r6,sp,120
  80502c:	08106740 	call	810674 <__sprint_r>
  805030:	1000081e 	bne	r2,zero,805054 <___vfprintf_internal_r+0x3d0>
  805034:	da000404 	addi	r8,sp,16
  805038:	003f6706 	br	804dd8 <__alt_data_end+0xff804dd8>
  80503c:	d8802017 	ldw	r2,128(sp)
  805040:	10000426 	beq	r2,zero,805054 <___vfprintf_internal_r+0x3d0>
  805044:	b009883a 	mov	r4,r22
  805048:	b80b883a 	mov	r5,r23
  80504c:	d9801e04 	addi	r6,sp,120
  805050:	08106740 	call	810674 <__sprint_r>
  805054:	b880030b 	ldhu	r2,12(r23)
  805058:	1080100c 	andi	r2,r2,64
  80505c:	103fe31e 	bne	r2,zero,804fec <__alt_data_end+0xff804fec>
  805060:	d8802f17 	ldw	r2,188(sp)
  805064:	003fe206 	br	804ff0 <__alt_data_end+0xff804ff0>
  805068:	b009883a 	mov	r4,r22
  80506c:	08015a40 	call	8015a4 <__sinit>
  805070:	003f1c06 	br	804ce4 <__alt_data_end+0xff804ce4>
  805074:	dc002a17 	ldw	r16,168(sp)
  805078:	003f5a06 	br	804de4 <__alt_data_end+0xff804de4>
  80507c:	1805883a 	mov	r2,r3
  805080:	8c400114 	ori	r17,r17,4
  805084:	1c000007 	ldb	r16,0(r3)
  805088:	003f6306 	br	804e18 <__alt_data_end+0xff804e18>
  80508c:	1c000007 	ldb	r16,0(r3)
  805090:	18800044 	addi	r2,r3,1
  805094:	8286ad26 	beq	r16,r10,806b4c <___vfprintf_internal_r+0x1ec8>
  805098:	82fff404 	addi	r11,r16,-48
  80509c:	1007883a 	mov	r3,r2
  8050a0:	0013883a 	mov	r9,zero
  8050a4:	2aff5d36 	bltu	r5,r11,804e1c <__alt_data_end+0xff804e1c>
  8050a8:	1c000007 	ldb	r16,0(r3)
  8050ac:	4a4002a4 	muli	r9,r9,10
  8050b0:	18c00044 	addi	r3,r3,1
  8050b4:	5a53883a 	add	r9,r11,r9
  8050b8:	82fff404 	addi	r11,r16,-48
  8050bc:	2afffa2e 	bgeu	r5,r11,8050a8 <__alt_data_end+0xff8050a8>
  8050c0:	483f560e 	bge	r9,zero,804e1c <__alt_data_end+0xff804e1c>
  8050c4:	027fffc4 	movi	r9,-1
  8050c8:	003f5406 	br	804e1c <__alt_data_end+0xff804e1c>
  8050cc:	8c402014 	ori	r17,r17,128
  8050d0:	1805883a 	mov	r2,r3
  8050d4:	1c000007 	ldb	r16,0(r3)
  8050d8:	003f4f06 	br	804e18 <__alt_data_end+0xff804e18>
  8050dc:	1805883a 	mov	r2,r3
  8050e0:	d8002e15 	stw	zero,184(sp)
  8050e4:	82fff404 	addi	r11,r16,-48
  8050e8:	0019883a 	mov	r12,zero
  8050ec:	14000007 	ldb	r16,0(r2)
  8050f0:	630002a4 	muli	r12,r12,10
  8050f4:	18c00044 	addi	r3,r3,1
  8050f8:	1805883a 	mov	r2,r3
  8050fc:	62d9883a 	add	r12,r12,r11
  805100:	82fff404 	addi	r11,r16,-48
  805104:	2afff92e 	bgeu	r5,r11,8050ec <__alt_data_end+0xff8050ec>
  805108:	db002e15 	stw	r12,184(sp)
  80510c:	003f4306 	br	804e1c <__alt_data_end+0xff804e1c>
  805110:	8c400414 	ori	r17,r17,16
  805114:	d8c02a15 	stw	r3,168(sp)
  805118:	d9802785 	stb	r6,158(sp)
  80511c:	8880080c 	andi	r2,r17,32
  805120:	d8c02d17 	ldw	r3,180(sp)
  805124:	10015a26 	beq	r2,zero,805690 <___vfprintf_internal_r+0xa0c>
  805128:	db002d17 	ldw	r12,180(sp)
  80512c:	18800117 	ldw	r2,4(r3)
  805130:	1cc00017 	ldw	r19,0(r3)
  805134:	63000204 	addi	r12,r12,8
  805138:	db002d15 	stw	r12,180(sp)
  80513c:	1039883a 	mov	fp,r2
  805140:	10044516 	blt	r2,zero,806258 <___vfprintf_internal_r+0x15d4>
  805144:	dd402783 	ldbu	r21,158(sp)
  805148:	da403215 	stw	r9,200(sp)
  80514c:	00800044 	movi	r2,1
  805150:	9f06b03a 	or	r3,r19,fp
  805154:	48000216 	blt	r9,zero,805160 <___vfprintf_internal_r+0x4dc>
  805158:	013fdfc4 	movi	r4,-129
  80515c:	8922703a 	and	r17,r17,r4
  805160:	1802071e 	bne	r3,zero,805980 <___vfprintf_internal_r+0xcfc>
  805164:	4802fa26 	beq	r9,zero,805d50 <___vfprintf_internal_r+0x10cc>
  805168:	10803fcc 	andi	r2,r2,255
  80516c:	00c00044 	movi	r3,1
  805170:	10c22926 	beq	r2,r3,805a18 <___vfprintf_internal_r+0xd94>
  805174:	00c00084 	movi	r3,2
  805178:	10c31726 	beq	r2,r3,805dd8 <___vfprintf_internal_r+0x1154>
  80517c:	d8c01e04 	addi	r3,sp,120
  805180:	9808d0fa 	srli	r4,r19,3
  805184:	e00a977a 	slli	r5,fp,29
  805188:	e038d0fa 	srli	fp,fp,3
  80518c:	9cc001cc 	andi	r19,r19,7
  805190:	98800c04 	addi	r2,r19,48
  805194:	18ffffc4 	addi	r3,r3,-1
  805198:	2926b03a 	or	r19,r5,r4
  80519c:	18800005 	stb	r2,0(r3)
  8051a0:	9f08b03a 	or	r4,r19,fp
  8051a4:	203ff61e 	bne	r4,zero,805180 <__alt_data_end+0xff805180>
  8051a8:	8900004c 	andi	r4,r17,1
  8051ac:	d8c03115 	stw	r3,196(sp)
  8051b0:	2003931e 	bne	r4,zero,806000 <___vfprintf_internal_r+0x137c>
  8051b4:	dac02817 	ldw	r11,160(sp)
  8051b8:	58e5c83a 	sub	r18,r11,r3
  8051bc:	9005883a 	mov	r2,r18
  8051c0:	9240010e 	bge	r18,r9,8051c8 <___vfprintf_internal_r+0x544>
  8051c4:	4805883a 	mov	r2,r9
  8051c8:	d8802b15 	stw	r2,172(sp)
  8051cc:	d8003415 	stw	zero,208(sp)
  8051d0:	a8803fcc 	andi	r2,r21,255
  8051d4:	1080201c 	xori	r2,r2,128
  8051d8:	10bfe004 	addi	r2,r2,-128
  8051dc:	10000326 	beq	r2,zero,8051ec <___vfprintf_internal_r+0x568>
  8051e0:	db002b17 	ldw	r12,172(sp)
  8051e4:	63000044 	addi	r12,r12,1
  8051e8:	db002b15 	stw	r12,172(sp)
  8051ec:	88c0008c 	andi	r3,r17,2
  8051f0:	d8c02c15 	stw	r3,176(sp)
  8051f4:	18000326 	beq	r3,zero,805204 <___vfprintf_internal_r+0x580>
  8051f8:	dac02b17 	ldw	r11,172(sp)
  8051fc:	5ac00084 	addi	r11,r11,2
  805200:	dac02b15 	stw	r11,172(sp)
  805204:	8b00210c 	andi	r12,r17,132
  805208:	db003015 	stw	r12,192(sp)
  80520c:	6001da1e 	bne	r12,zero,805978 <___vfprintf_internal_r+0xcf4>
  805210:	dac02e17 	ldw	r11,184(sp)
  805214:	db002b17 	ldw	r12,172(sp)
  805218:	5b39c83a 	sub	fp,r11,r12
  80521c:	0701d60e 	bge	zero,fp,805978 <___vfprintf_internal_r+0xcf4>
  805220:	02400404 	movi	r9,16
  805224:	d8c02017 	ldw	r3,128(sp)
  805228:	d8801f17 	ldw	r2,124(sp)
  80522c:	4f053c0e 	bge	r9,fp,806720 <___vfprintf_internal_r+0x1a9c>
  805230:	014020b4 	movhi	r5,130
  805234:	296eeb84 	addi	r5,r5,-17490
  805238:	d9403615 	stw	r5,216(sp)
  80523c:	482b883a 	mov	r21,r9
  805240:	04c001c4 	movi	r19,7
  805244:	00000306 	br	805254 <___vfprintf_internal_r+0x5d0>
  805248:	e73ffc04 	addi	fp,fp,-16
  80524c:	42000204 	addi	r8,r8,8
  805250:	af00130e 	bge	r21,fp,8052a0 <___vfprintf_internal_r+0x61c>
  805254:	02c020b4 	movhi	r11,130
  805258:	18c00404 	addi	r3,r3,16
  80525c:	10800044 	addi	r2,r2,1
  805260:	5aeeeb84 	addi	r11,r11,-17490
  805264:	42c00015 	stw	r11,0(r8)
  805268:	45400115 	stw	r21,4(r8)
  80526c:	d8c02015 	stw	r3,128(sp)
  805270:	d8801f15 	stw	r2,124(sp)
  805274:	98bff40e 	bge	r19,r2,805248 <__alt_data_end+0xff805248>
  805278:	b009883a 	mov	r4,r22
  80527c:	b80b883a 	mov	r5,r23
  805280:	d9801e04 	addi	r6,sp,120
  805284:	08106740 	call	810674 <__sprint_r>
  805288:	103f721e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  80528c:	e73ffc04 	addi	fp,fp,-16
  805290:	d8c02017 	ldw	r3,128(sp)
  805294:	d8801f17 	ldw	r2,124(sp)
  805298:	da000404 	addi	r8,sp,16
  80529c:	af3fed16 	blt	r21,fp,805254 <__alt_data_end+0xff805254>
  8052a0:	db003617 	ldw	r12,216(sp)
  8052a4:	e0c7883a 	add	r3,fp,r3
  8052a8:	10800044 	addi	r2,r2,1
  8052ac:	43000015 	stw	r12,0(r8)
  8052b0:	47000115 	stw	fp,4(r8)
  8052b4:	d8c02015 	stw	r3,128(sp)
  8052b8:	d8801f15 	stw	r2,124(sp)
  8052bc:	010001c4 	movi	r4,7
  8052c0:	20830e16 	blt	r4,r2,805efc <___vfprintf_internal_r+0x1278>
  8052c4:	d8802787 	ldb	r2,158(sp)
  8052c8:	42000204 	addi	r8,r8,8
  8052cc:	10000c26 	beq	r2,zero,805300 <___vfprintf_internal_r+0x67c>
  8052d0:	d8801f17 	ldw	r2,124(sp)
  8052d4:	d9002784 	addi	r4,sp,158
  8052d8:	18c00044 	addi	r3,r3,1
  8052dc:	10800044 	addi	r2,r2,1
  8052e0:	41000015 	stw	r4,0(r8)
  8052e4:	01000044 	movi	r4,1
  8052e8:	41000115 	stw	r4,4(r8)
  8052ec:	d8c02015 	stw	r3,128(sp)
  8052f0:	d8801f15 	stw	r2,124(sp)
  8052f4:	010001c4 	movi	r4,7
  8052f8:	2082a716 	blt	r4,r2,805d98 <___vfprintf_internal_r+0x1114>
  8052fc:	42000204 	addi	r8,r8,8
  805300:	dac02c17 	ldw	r11,176(sp)
  805304:	58000c26 	beq	r11,zero,805338 <___vfprintf_internal_r+0x6b4>
  805308:	d8801f17 	ldw	r2,124(sp)
  80530c:	d9002704 	addi	r4,sp,156
  805310:	18c00084 	addi	r3,r3,2
  805314:	10800044 	addi	r2,r2,1
  805318:	41000015 	stw	r4,0(r8)
  80531c:	01000084 	movi	r4,2
  805320:	41000115 	stw	r4,4(r8)
  805324:	d8c02015 	stw	r3,128(sp)
  805328:	d8801f15 	stw	r2,124(sp)
  80532c:	010001c4 	movi	r4,7
  805330:	2082a116 	blt	r4,r2,805db8 <___vfprintf_internal_r+0x1134>
  805334:	42000204 	addi	r8,r8,8
  805338:	db003017 	ldw	r12,192(sp)
  80533c:	00802004 	movi	r2,128
  805340:	60820326 	beq	r12,r2,805b50 <___vfprintf_internal_r+0xecc>
  805344:	db003217 	ldw	r12,200(sp)
  805348:	64abc83a 	sub	r21,r12,r18
  80534c:	0540260e 	bge	zero,r21,8053e8 <___vfprintf_internal_r+0x764>
  805350:	07000404 	movi	fp,16
  805354:	d8801f17 	ldw	r2,124(sp)
  805358:	e544570e 	bge	fp,r21,8064b8 <___vfprintf_internal_r+0x1834>
  80535c:	014020b4 	movhi	r5,130
  805360:	296ee784 	addi	r5,r5,-17506
  805364:	d9402c15 	stw	r5,176(sp)
  805368:	04c001c4 	movi	r19,7
  80536c:	00000306 	br	80537c <___vfprintf_internal_r+0x6f8>
  805370:	ad7ffc04 	addi	r21,r21,-16
  805374:	42000204 	addi	r8,r8,8
  805378:	e540110e 	bge	fp,r21,8053c0 <___vfprintf_internal_r+0x73c>
  80537c:	18c00404 	addi	r3,r3,16
  805380:	10800044 	addi	r2,r2,1
  805384:	45000015 	stw	r20,0(r8)
  805388:	47000115 	stw	fp,4(r8)
  80538c:	d8c02015 	stw	r3,128(sp)
  805390:	d8801f15 	stw	r2,124(sp)
  805394:	98bff60e 	bge	r19,r2,805370 <__alt_data_end+0xff805370>
  805398:	b009883a 	mov	r4,r22
  80539c:	b80b883a 	mov	r5,r23
  8053a0:	d9801e04 	addi	r6,sp,120
  8053a4:	08106740 	call	810674 <__sprint_r>
  8053a8:	103f2a1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  8053ac:	ad7ffc04 	addi	r21,r21,-16
  8053b0:	d8c02017 	ldw	r3,128(sp)
  8053b4:	d8801f17 	ldw	r2,124(sp)
  8053b8:	da000404 	addi	r8,sp,16
  8053bc:	e57fef16 	blt	fp,r21,80537c <__alt_data_end+0xff80537c>
  8053c0:	dac02c17 	ldw	r11,176(sp)
  8053c4:	1d47883a 	add	r3,r3,r21
  8053c8:	10800044 	addi	r2,r2,1
  8053cc:	42c00015 	stw	r11,0(r8)
  8053d0:	45400115 	stw	r21,4(r8)
  8053d4:	d8c02015 	stw	r3,128(sp)
  8053d8:	d8801f15 	stw	r2,124(sp)
  8053dc:	010001c4 	movi	r4,7
  8053e0:	20826516 	blt	r4,r2,805d78 <___vfprintf_internal_r+0x10f4>
  8053e4:	42000204 	addi	r8,r8,8
  8053e8:	8880400c 	andi	r2,r17,256
  8053ec:	1001901e 	bne	r2,zero,805a30 <___vfprintf_internal_r+0xdac>
  8053f0:	d8801f17 	ldw	r2,124(sp)
  8053f4:	db003117 	ldw	r12,196(sp)
  8053f8:	1c87883a 	add	r3,r3,r18
  8053fc:	10800044 	addi	r2,r2,1
  805400:	43000015 	stw	r12,0(r8)
  805404:	44800115 	stw	r18,4(r8)
  805408:	d8c02015 	stw	r3,128(sp)
  80540c:	d8801f15 	stw	r2,124(sp)
  805410:	010001c4 	movi	r4,7
  805414:	20824016 	blt	r4,r2,805d18 <___vfprintf_internal_r+0x1094>
  805418:	42000204 	addi	r8,r8,8
  80541c:	8c40010c 	andi	r17,r17,4
  805420:	88003126 	beq	r17,zero,8054e8 <___vfprintf_internal_r+0x864>
  805424:	db002e17 	ldw	r12,184(sp)
  805428:	dac02b17 	ldw	r11,172(sp)
  80542c:	62e1c83a 	sub	r16,r12,r11
  805430:	04002d0e 	bge	zero,r16,8054e8 <___vfprintf_internal_r+0x864>
  805434:	04400404 	movi	r17,16
  805438:	d8801f17 	ldw	r2,124(sp)
  80543c:	8c05150e 	bge	r17,r16,806894 <___vfprintf_internal_r+0x1c10>
  805440:	010020b4 	movhi	r4,130
  805444:	212eeb84 	addi	r4,r4,-17490
  805448:	d9003615 	stw	r4,216(sp)
  80544c:	048001c4 	movi	r18,7
  805450:	00000306 	br	805460 <___vfprintf_internal_r+0x7dc>
  805454:	843ffc04 	addi	r16,r16,-16
  805458:	42000204 	addi	r8,r8,8
  80545c:	8c00130e 	bge	r17,r16,8054ac <___vfprintf_internal_r+0x828>
  805460:	014020b4 	movhi	r5,130
  805464:	18c00404 	addi	r3,r3,16
  805468:	10800044 	addi	r2,r2,1
  80546c:	296eeb84 	addi	r5,r5,-17490
  805470:	41400015 	stw	r5,0(r8)
  805474:	44400115 	stw	r17,4(r8)
  805478:	d8c02015 	stw	r3,128(sp)
  80547c:	d8801f15 	stw	r2,124(sp)
  805480:	90bff40e 	bge	r18,r2,805454 <__alt_data_end+0xff805454>
  805484:	b009883a 	mov	r4,r22
  805488:	b80b883a 	mov	r5,r23
  80548c:	d9801e04 	addi	r6,sp,120
  805490:	08106740 	call	810674 <__sprint_r>
  805494:	103eef1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805498:	843ffc04 	addi	r16,r16,-16
  80549c:	d8c02017 	ldw	r3,128(sp)
  8054a0:	d8801f17 	ldw	r2,124(sp)
  8054a4:	da000404 	addi	r8,sp,16
  8054a8:	8c3fed16 	blt	r17,r16,805460 <__alt_data_end+0xff805460>
  8054ac:	dac03617 	ldw	r11,216(sp)
  8054b0:	1c07883a 	add	r3,r3,r16
  8054b4:	10800044 	addi	r2,r2,1
  8054b8:	42c00015 	stw	r11,0(r8)
  8054bc:	44000115 	stw	r16,4(r8)
  8054c0:	d8c02015 	stw	r3,128(sp)
  8054c4:	d8801f15 	stw	r2,124(sp)
  8054c8:	010001c4 	movi	r4,7
  8054cc:	2080060e 	bge	r4,r2,8054e8 <___vfprintf_internal_r+0x864>
  8054d0:	b009883a 	mov	r4,r22
  8054d4:	b80b883a 	mov	r5,r23
  8054d8:	d9801e04 	addi	r6,sp,120
  8054dc:	08106740 	call	810674 <__sprint_r>
  8054e0:	103edc1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  8054e4:	d8c02017 	ldw	r3,128(sp)
  8054e8:	d8802b17 	ldw	r2,172(sp)
  8054ec:	db002e17 	ldw	r12,184(sp)
  8054f0:	1300010e 	bge	r2,r12,8054f8 <___vfprintf_internal_r+0x874>
  8054f4:	6005883a 	mov	r2,r12
  8054f8:	dac02f17 	ldw	r11,188(sp)
  8054fc:	5897883a 	add	r11,r11,r2
  805500:	dac02f15 	stw	r11,188(sp)
  805504:	18020c1e 	bne	r3,zero,805d38 <___vfprintf_internal_r+0x10b4>
  805508:	d8001f15 	stw	zero,124(sp)
  80550c:	da000404 	addi	r8,sp,16
  805510:	003e1706 	br	804d70 <__alt_data_end+0xff804d70>
  805514:	8c400414 	ori	r17,r17,16
  805518:	d8c02a15 	stw	r3,168(sp)
  80551c:	8880080c 	andi	r2,r17,32
  805520:	10010126 	beq	r2,zero,805928 <___vfprintf_internal_r+0xca4>
  805524:	db002d17 	ldw	r12,180(sp)
  805528:	0005883a 	mov	r2,zero
  80552c:	64c00017 	ldw	r19,0(r12)
  805530:	67000117 	ldw	fp,4(r12)
  805534:	63000204 	addi	r12,r12,8
  805538:	db002d15 	stw	r12,180(sp)
  80553c:	9f06b03a 	or	r3,r19,fp
  805540:	d8002785 	stb	zero,158(sp)
  805544:	da403215 	stw	r9,200(sp)
  805548:	002b883a 	mov	r21,zero
  80554c:	003f0106 	br	805154 <__alt_data_end+0xff805154>
  805550:	8c400414 	ori	r17,r17,16
  805554:	d8c02a15 	stw	r3,168(sp)
  805558:	8880080c 	andi	r2,r17,32
  80555c:	1000e326 	beq	r2,zero,8058ec <___vfprintf_internal_r+0xc68>
  805560:	dac02d17 	ldw	r11,180(sp)
  805564:	00800044 	movi	r2,1
  805568:	5cc00017 	ldw	r19,0(r11)
  80556c:	5f000117 	ldw	fp,4(r11)
  805570:	5ac00204 	addi	r11,r11,8
  805574:	dac02d15 	stw	r11,180(sp)
  805578:	9f06b03a 	or	r3,r19,fp
  80557c:	003ff006 	br	805540 <__alt_data_end+0xff805540>
  805580:	db002d17 	ldw	r12,180(sp)
  805584:	dac02d17 	ldw	r11,180(sp)
  805588:	d8c02a15 	stw	r3,168(sp)
  80558c:	63000017 	ldw	r12,0(r12)
  805590:	5ac00117 	ldw	r11,4(r11)
  805594:	d9802785 	stb	r6,158(sp)
  805598:	6009883a 	mov	r4,r12
  80559c:	580b883a 	mov	r5,r11
  8055a0:	db003715 	stw	r12,220(sp)
  8055a4:	da003f15 	stw	r8,252(sp)
  8055a8:	da403e15 	stw	r9,248(sp)
  8055ac:	dac03915 	stw	r11,228(sp)
  8055b0:	080ab7c0 	call	80ab7c <__fpclassifyd>
  8055b4:	db002d17 	ldw	r12,180(sp)
  8055b8:	04800044 	movi	r18,1
  8055bc:	da003f17 	ldw	r8,252(sp)
  8055c0:	64c00204 	addi	r19,r12,8
  8055c4:	da403e17 	ldw	r9,248(sp)
  8055c8:	d9003717 	ldw	r4,220(sp)
  8055cc:	d9403917 	ldw	r5,228(sp)
  8055d0:	14832b1e 	bne	r2,r18,806280 <___vfprintf_internal_r+0x15fc>
  8055d4:	000d883a 	mov	r6,zero
  8055d8:	000f883a 	mov	r7,zero
  8055dc:	08160800 	call	816080 <__ledf2>
  8055e0:	da003f17 	ldw	r8,252(sp)
  8055e4:	1004b716 	blt	r2,zero,8068c4 <___vfprintf_internal_r+0x1c40>
  8055e8:	dd402783 	ldbu	r21,158(sp)
  8055ec:	008011c4 	movi	r2,71
  8055f0:	14040e0e 	bge	r2,r16,80662c <___vfprintf_internal_r+0x19a8>
  8055f4:	00c020b4 	movhi	r3,130
  8055f8:	18eed804 	addi	r3,r3,-17568
  8055fc:	d8c03115 	stw	r3,196(sp)
  805600:	02c000c4 	movi	r11,3
  805604:	00bfdfc4 	movi	r2,-129
  805608:	dac02b15 	stw	r11,172(sp)
  80560c:	88a2703a 	and	r17,r17,r2
  805610:	dcc02d15 	stw	r19,180(sp)
  805614:	5825883a 	mov	r18,r11
  805618:	d8003215 	stw	zero,200(sp)
  80561c:	d8003415 	stw	zero,208(sp)
  805620:	003eeb06 	br	8051d0 <__alt_data_end+0xff8051d0>
  805624:	db002d17 	ldw	r12,180(sp)
  805628:	00800c04 	movi	r2,48
  80562c:	d8802705 	stb	r2,156(sp)
  805630:	64c00017 	ldw	r19,0(r12)
  805634:	00801e04 	movi	r2,120
  805638:	d8802745 	stb	r2,157(sp)
  80563c:	008020b4 	movhi	r2,130
  805640:	10aee004 	addi	r2,r2,-17536
  805644:	63000104 	addi	r12,r12,4
  805648:	d8c02a15 	stw	r3,168(sp)
  80564c:	d8803b15 	stw	r2,236(sp)
  805650:	0039883a 	mov	fp,zero
  805654:	8c400094 	ori	r17,r17,2
  805658:	db002d15 	stw	r12,180(sp)
  80565c:	00800084 	movi	r2,2
  805660:	04001e04 	movi	r16,120
  805664:	9807883a 	mov	r3,r19
  805668:	003fb506 	br	805540 <__alt_data_end+0xff805540>
  80566c:	8c400214 	ori	r17,r17,8
  805670:	1805883a 	mov	r2,r3
  805674:	1c000007 	ldb	r16,0(r3)
  805678:	003de706 	br	804e18 <__alt_data_end+0xff804e18>
  80567c:	d8c02a15 	stw	r3,168(sp)
  805680:	d9802785 	stb	r6,158(sp)
  805684:	8880080c 	andi	r2,r17,32
  805688:	d8c02d17 	ldw	r3,180(sp)
  80568c:	103ea61e 	bne	r2,zero,805128 <__alt_data_end+0xff805128>
  805690:	8880040c 	andi	r2,r17,16
  805694:	1002221e 	bne	r2,zero,805f20 <___vfprintf_internal_r+0x129c>
  805698:	8880100c 	andi	r2,r17,64
  80569c:	10022026 	beq	r2,zero,805f20 <___vfprintf_internal_r+0x129c>
  8056a0:	1cc0000f 	ldh	r19,0(r3)
  8056a4:	db002d17 	ldw	r12,180(sp)
  8056a8:	9839d7fa 	srai	fp,r19,31
  8056ac:	63000104 	addi	r12,r12,4
  8056b0:	db002d15 	stw	r12,180(sp)
  8056b4:	e005883a 	mov	r2,fp
  8056b8:	003ea106 	br	805140 <__alt_data_end+0xff805140>
  8056bc:	8c401014 	ori	r17,r17,64
  8056c0:	1805883a 	mov	r2,r3
  8056c4:	1c000007 	ldb	r16,0(r3)
  8056c8:	003dd306 	br	804e18 <__alt_data_end+0xff804e18>
  8056cc:	1c000007 	ldb	r16,0(r3)
  8056d0:	81c3e926 	beq	r16,r7,806678 <___vfprintf_internal_r+0x19f4>
  8056d4:	8c400414 	ori	r17,r17,16
  8056d8:	1805883a 	mov	r2,r3
  8056dc:	003dce06 	br	804e18 <__alt_data_end+0xff804e18>
  8056e0:	d8c02a15 	stw	r3,168(sp)
  8056e4:	d9802785 	stb	r6,158(sp)
  8056e8:	8880080c 	andi	r2,r17,32
  8056ec:	10034726 	beq	r2,zero,80640c <___vfprintf_internal_r+0x1788>
  8056f0:	db002d17 	ldw	r12,180(sp)
  8056f4:	dac02f17 	ldw	r11,188(sp)
  8056f8:	60800017 	ldw	r2,0(r12)
  8056fc:	5807d7fa 	srai	r3,r11,31
  805700:	63000104 	addi	r12,r12,4
  805704:	db002d15 	stw	r12,180(sp)
  805708:	12c00015 	stw	r11,0(r2)
  80570c:	10c00115 	stw	r3,4(r2)
  805710:	003d9706 	br	804d70 <__alt_data_end+0xff804d70>
  805714:	030020b4 	movhi	r12,130
  805718:	632edb04 	addi	r12,r12,-17556
  80571c:	d8c02a15 	stw	r3,168(sp)
  805720:	d9802785 	stb	r6,158(sp)
  805724:	db003b15 	stw	r12,236(sp)
  805728:	88c0080c 	andi	r3,r17,32
  80572c:	d8802d17 	ldw	r2,180(sp)
  805730:	18005b26 	beq	r3,zero,8058a0 <___vfprintf_internal_r+0xc1c>
  805734:	dac02d17 	ldw	r11,180(sp)
  805738:	14c00017 	ldw	r19,0(r2)
  80573c:	17000117 	ldw	fp,4(r2)
  805740:	5ac00204 	addi	r11,r11,8
  805744:	dac02d15 	stw	r11,180(sp)
  805748:	8880004c 	andi	r2,r17,1
  80574c:	10022926 	beq	r2,zero,805ff4 <___vfprintf_internal_r+0x1370>
  805750:	9f06b03a 	or	r3,r19,fp
  805754:	18032b26 	beq	r3,zero,806404 <___vfprintf_internal_r+0x1780>
  805758:	00800c04 	movi	r2,48
  80575c:	d8802705 	stb	r2,156(sp)
  805760:	dc002745 	stb	r16,157(sp)
  805764:	8c400094 	ori	r17,r17,2
  805768:	00800084 	movi	r2,2
  80576c:	003f7406 	br	805540 <__alt_data_end+0xff805540>
  805770:	30803fcc 	andi	r2,r6,255
  805774:	1080201c 	xori	r2,r2,128
  805778:	10bfe004 	addi	r2,r2,-128
  80577c:	1003351e 	bne	r2,zero,806454 <___vfprintf_internal_r+0x17d0>
  805780:	1805883a 	mov	r2,r3
  805784:	01800804 	movi	r6,32
  805788:	1c000007 	ldb	r16,0(r3)
  80578c:	003da206 	br	804e18 <__alt_data_end+0xff804e18>
  805790:	dac02d17 	ldw	r11,180(sp)
  805794:	db002d17 	ldw	r12,180(sp)
  805798:	5ac00017 	ldw	r11,0(r11)
  80579c:	dac02e15 	stw	r11,184(sp)
  8057a0:	62c00104 	addi	r11,r12,4
  8057a4:	db002e17 	ldw	r12,184(sp)
  8057a8:	6003ad16 	blt	r12,zero,806660 <___vfprintf_internal_r+0x19dc>
  8057ac:	dac02d15 	stw	r11,180(sp)
  8057b0:	1805883a 	mov	r2,r3
  8057b4:	1c000007 	ldb	r16,0(r3)
  8057b8:	003d9706 	br	804e18 <__alt_data_end+0xff804e18>
  8057bc:	1805883a 	mov	r2,r3
  8057c0:	01800ac4 	movi	r6,43
  8057c4:	1c000007 	ldb	r16,0(r3)
  8057c8:	003d9306 	br	804e18 <__alt_data_end+0xff804e18>
  8057cc:	db002d17 	ldw	r12,180(sp)
  8057d0:	d8c02a15 	stw	r3,168(sp)
  8057d4:	00c00044 	movi	r3,1
  8057d8:	60800017 	ldw	r2,0(r12)
  8057dc:	63000104 	addi	r12,r12,4
  8057e0:	d8c02b15 	stw	r3,172(sp)
  8057e4:	d8002785 	stb	zero,158(sp)
  8057e8:	d8801405 	stb	r2,80(sp)
  8057ec:	db002d15 	stw	r12,180(sp)
  8057f0:	dac01404 	addi	r11,sp,80
  8057f4:	1825883a 	mov	r18,r3
  8057f8:	d8003215 	stw	zero,200(sp)
  8057fc:	d8003415 	stw	zero,208(sp)
  805800:	dac03115 	stw	r11,196(sp)
  805804:	0005883a 	mov	r2,zero
  805808:	003e7806 	br	8051ec <__alt_data_end+0xff8051ec>
  80580c:	dac02d17 	ldw	r11,180(sp)
  805810:	db002d17 	ldw	r12,180(sp)
  805814:	d8c02a15 	stw	r3,168(sp)
  805818:	5ac00017 	ldw	r11,0(r11)
  80581c:	d8002785 	stb	zero,158(sp)
  805820:	64c00104 	addi	r19,r12,4
  805824:	dac03115 	stw	r11,196(sp)
  805828:	5803fe26 	beq	r11,zero,806824 <___vfprintf_internal_r+0x1ba0>
  80582c:	d9003117 	ldw	r4,196(sp)
  805830:	4803b416 	blt	r9,zero,806704 <___vfprintf_internal_r+0x1a80>
  805834:	480d883a 	mov	r6,r9
  805838:	000b883a 	mov	r5,zero
  80583c:	da003f15 	stw	r8,252(sp)
  805840:	da403e15 	stw	r9,248(sp)
  805844:	08091300 	call	809130 <memchr>
  805848:	da003f17 	ldw	r8,252(sp)
  80584c:	da403e17 	ldw	r9,248(sp)
  805850:	10043026 	beq	r2,zero,806914 <___vfprintf_internal_r+0x1c90>
  805854:	d8c03117 	ldw	r3,196(sp)
  805858:	10e5c83a 	sub	r18,r2,r3
  80585c:	4c836b16 	blt	r9,r18,80660c <___vfprintf_internal_r+0x1988>
  805860:	9005883a 	mov	r2,r18
  805864:	9003ac16 	blt	r18,zero,806718 <___vfprintf_internal_r+0x1a94>
  805868:	dd402783 	ldbu	r21,158(sp)
  80586c:	d8802b15 	stw	r2,172(sp)
  805870:	dcc02d15 	stw	r19,180(sp)
  805874:	d8003215 	stw	zero,200(sp)
  805878:	d8003415 	stw	zero,208(sp)
  80587c:	003e5406 	br	8051d0 <__alt_data_end+0xff8051d0>
  805880:	008020b4 	movhi	r2,130
  805884:	10aee004 	addi	r2,r2,-17536
  805888:	d8c02a15 	stw	r3,168(sp)
  80588c:	d8803b15 	stw	r2,236(sp)
  805890:	d9802785 	stb	r6,158(sp)
  805894:	88c0080c 	andi	r3,r17,32
  805898:	d8802d17 	ldw	r2,180(sp)
  80589c:	183fa51e 	bne	r3,zero,805734 <__alt_data_end+0xff805734>
  8058a0:	88c0040c 	andi	r3,r17,16
  8058a4:	1802ee26 	beq	r3,zero,806460 <___vfprintf_internal_r+0x17dc>
  8058a8:	db002d17 	ldw	r12,180(sp)
  8058ac:	14c00017 	ldw	r19,0(r2)
  8058b0:	0039883a 	mov	fp,zero
  8058b4:	63000104 	addi	r12,r12,4
  8058b8:	db002d15 	stw	r12,180(sp)
  8058bc:	003fa206 	br	805748 <__alt_data_end+0xff805748>
  8058c0:	8c400054 	ori	r17,r17,1
  8058c4:	1805883a 	mov	r2,r3
  8058c8:	1c000007 	ldb	r16,0(r3)
  8058cc:	003d5206 	br	804e18 <__alt_data_end+0xff804e18>
  8058d0:	8c400814 	ori	r17,r17,32
  8058d4:	1805883a 	mov	r2,r3
  8058d8:	1c000007 	ldb	r16,0(r3)
  8058dc:	003d4e06 	br	804e18 <__alt_data_end+0xff804e18>
  8058e0:	d8c02a15 	stw	r3,168(sp)
  8058e4:	8880080c 	andi	r2,r17,32
  8058e8:	103f1d1e 	bne	r2,zero,805560 <__alt_data_end+0xff805560>
  8058ec:	8880040c 	andi	r2,r17,16
  8058f0:	1001b81e 	bne	r2,zero,805fd4 <___vfprintf_internal_r+0x1350>
  8058f4:	8880100c 	andi	r2,r17,64
  8058f8:	1001b626 	beq	r2,zero,805fd4 <___vfprintf_internal_r+0x1350>
  8058fc:	dac02d17 	ldw	r11,180(sp)
  805900:	0039883a 	mov	fp,zero
  805904:	00800044 	movi	r2,1
  805908:	5cc0000b 	ldhu	r19,0(r11)
  80590c:	5ac00104 	addi	r11,r11,4
  805910:	dac02d15 	stw	r11,180(sp)
  805914:	9807883a 	mov	r3,r19
  805918:	003f0906 	br	805540 <__alt_data_end+0xff805540>
  80591c:	d8c02a15 	stw	r3,168(sp)
  805920:	8880080c 	andi	r2,r17,32
  805924:	103eff1e 	bne	r2,zero,805524 <__alt_data_end+0xff805524>
  805928:	8880040c 	andi	r2,r17,16
  80592c:	1001a11e 	bne	r2,zero,805fb4 <___vfprintf_internal_r+0x1330>
  805930:	8880100c 	andi	r2,r17,64
  805934:	10019f26 	beq	r2,zero,805fb4 <___vfprintf_internal_r+0x1330>
  805938:	db002d17 	ldw	r12,180(sp)
  80593c:	0039883a 	mov	fp,zero
  805940:	0005883a 	mov	r2,zero
  805944:	64c0000b 	ldhu	r19,0(r12)
  805948:	63000104 	addi	r12,r12,4
  80594c:	db002d15 	stw	r12,180(sp)
  805950:	9807883a 	mov	r3,r19
  805954:	003efa06 	br	805540 <__alt_data_end+0xff805540>
  805958:	d8c02a15 	stw	r3,168(sp)
  80595c:	d9802785 	stb	r6,158(sp)
  805960:	803db626 	beq	r16,zero,80503c <__alt_data_end+0xff80503c>
  805964:	00c00044 	movi	r3,1
  805968:	d8c02b15 	stw	r3,172(sp)
  80596c:	dc001405 	stb	r16,80(sp)
  805970:	d8002785 	stb	zero,158(sp)
  805974:	003f9e06 	br	8057f0 <__alt_data_end+0xff8057f0>
  805978:	d8c02017 	ldw	r3,128(sp)
  80597c:	003e5306 	br	8052cc <__alt_data_end+0xff8052cc>
  805980:	10803fcc 	andi	r2,r2,255
  805984:	00c00044 	movi	r3,1
  805988:	10fdfa1e 	bne	r2,r3,805174 <__alt_data_end+0xff805174>
  80598c:	e000021e 	bne	fp,zero,805998 <___vfprintf_internal_r+0xd14>
  805990:	00800244 	movi	r2,9
  805994:	14c0202e 	bgeu	r2,r19,805a18 <___vfprintf_internal_r+0xd94>
  805998:	dc002b15 	stw	r16,172(sp)
  80599c:	dc402c15 	stw	r17,176(sp)
  8059a0:	9821883a 	mov	r16,r19
  8059a4:	e023883a 	mov	r17,fp
  8059a8:	dc801e04 	addi	r18,sp,120
  8059ac:	4827883a 	mov	r19,r9
  8059b0:	4039883a 	mov	fp,r8
  8059b4:	8009883a 	mov	r4,r16
  8059b8:	880b883a 	mov	r5,r17
  8059bc:	01800284 	movi	r6,10
  8059c0:	000f883a 	mov	r7,zero
  8059c4:	08145140 	call	814514 <__umoddi3>
  8059c8:	10800c04 	addi	r2,r2,48
  8059cc:	94bfffc4 	addi	r18,r18,-1
  8059d0:	8009883a 	mov	r4,r16
  8059d4:	880b883a 	mov	r5,r17
  8059d8:	01800284 	movi	r6,10
  8059dc:	000f883a 	mov	r7,zero
  8059e0:	90800005 	stb	r2,0(r18)
  8059e4:	0813f540 	call	813f54 <__udivdi3>
  8059e8:	1021883a 	mov	r16,r2
  8059ec:	10c4b03a 	or	r2,r2,r3
  8059f0:	1823883a 	mov	r17,r3
  8059f4:	103fef1e 	bne	r2,zero,8059b4 <__alt_data_end+0xff8059b4>
  8059f8:	dac02817 	ldw	r11,160(sp)
  8059fc:	dc803115 	stw	r18,196(sp)
  805a00:	dc002b17 	ldw	r16,172(sp)
  805a04:	dc402c17 	ldw	r17,176(sp)
  805a08:	9813883a 	mov	r9,r19
  805a0c:	e011883a 	mov	r8,fp
  805a10:	5ca5c83a 	sub	r18,r11,r18
  805a14:	003de906 	br	8051bc <__alt_data_end+0xff8051bc>
  805a18:	9cc00c04 	addi	r19,r19,48
  805a1c:	d8c01dc4 	addi	r3,sp,119
  805a20:	dcc01dc5 	stb	r19,119(sp)
  805a24:	dc803c17 	ldw	r18,240(sp)
  805a28:	d8c03115 	stw	r3,196(sp)
  805a2c:	003de306 	br	8051bc <__alt_data_end+0xff8051bc>
  805a30:	00801944 	movi	r2,101
  805a34:	1400710e 	bge	r2,r16,805bfc <___vfprintf_internal_r+0xf78>
  805a38:	d9003717 	ldw	r4,220(sp)
  805a3c:	d9403917 	ldw	r5,228(sp)
  805a40:	000d883a 	mov	r6,zero
  805a44:	000f883a 	mov	r7,zero
  805a48:	d8c03d15 	stw	r3,244(sp)
  805a4c:	da003f15 	stw	r8,252(sp)
  805a50:	0815f1c0 	call	815f1c <__eqdf2>
  805a54:	d8c03d17 	ldw	r3,244(sp)
  805a58:	da003f17 	ldw	r8,252(sp)
  805a5c:	1000ef1e 	bne	r2,zero,805e1c <___vfprintf_internal_r+0x1198>
  805a60:	d8801f17 	ldw	r2,124(sp)
  805a64:	010020b4 	movhi	r4,130
  805a68:	212ee704 	addi	r4,r4,-17508
  805a6c:	18c00044 	addi	r3,r3,1
  805a70:	10800044 	addi	r2,r2,1
  805a74:	41000015 	stw	r4,0(r8)
  805a78:	01000044 	movi	r4,1
  805a7c:	41000115 	stw	r4,4(r8)
  805a80:	d8c02015 	stw	r3,128(sp)
  805a84:	d8801f15 	stw	r2,124(sp)
  805a88:	010001c4 	movi	r4,7
  805a8c:	20828e16 	blt	r4,r2,8064c8 <___vfprintf_internal_r+0x1844>
  805a90:	42000204 	addi	r8,r8,8
  805a94:	d8802617 	ldw	r2,152(sp)
  805a98:	dac03317 	ldw	r11,204(sp)
  805a9c:	12c00216 	blt	r2,r11,805aa8 <___vfprintf_internal_r+0xe24>
  805aa0:	8880004c 	andi	r2,r17,1
  805aa4:	103e5d26 	beq	r2,zero,80541c <__alt_data_end+0xff80541c>
  805aa8:	db003817 	ldw	r12,224(sp)
  805aac:	d8801f17 	ldw	r2,124(sp)
  805ab0:	dac03517 	ldw	r11,212(sp)
  805ab4:	1b07883a 	add	r3,r3,r12
  805ab8:	10800044 	addi	r2,r2,1
  805abc:	42c00015 	stw	r11,0(r8)
  805ac0:	43000115 	stw	r12,4(r8)
  805ac4:	d8c02015 	stw	r3,128(sp)
  805ac8:	d8801f15 	stw	r2,124(sp)
  805acc:	010001c4 	movi	r4,7
  805ad0:	2082ed16 	blt	r4,r2,806688 <___vfprintf_internal_r+0x1a04>
  805ad4:	42000204 	addi	r8,r8,8
  805ad8:	db003317 	ldw	r12,204(sp)
  805adc:	643fffc4 	addi	r16,r12,-1
  805ae0:	043e4e0e 	bge	zero,r16,80541c <__alt_data_end+0xff80541c>
  805ae4:	04800404 	movi	r18,16
  805ae8:	d8801f17 	ldw	r2,124(sp)
  805aec:	94007e0e 	bge	r18,r16,805ce8 <___vfprintf_internal_r+0x1064>
  805af0:	014020b4 	movhi	r5,130
  805af4:	296ee784 	addi	r5,r5,-17506
  805af8:	d9402c15 	stw	r5,176(sp)
  805afc:	054001c4 	movi	r21,7
  805b00:	00000306 	br	805b10 <___vfprintf_internal_r+0xe8c>
  805b04:	42000204 	addi	r8,r8,8
  805b08:	843ffc04 	addi	r16,r16,-16
  805b0c:	9400790e 	bge	r18,r16,805cf4 <___vfprintf_internal_r+0x1070>
  805b10:	18c00404 	addi	r3,r3,16
  805b14:	10800044 	addi	r2,r2,1
  805b18:	45000015 	stw	r20,0(r8)
  805b1c:	44800115 	stw	r18,4(r8)
  805b20:	d8c02015 	stw	r3,128(sp)
  805b24:	d8801f15 	stw	r2,124(sp)
  805b28:	a8bff60e 	bge	r21,r2,805b04 <__alt_data_end+0xff805b04>
  805b2c:	b009883a 	mov	r4,r22
  805b30:	b80b883a 	mov	r5,r23
  805b34:	d9801e04 	addi	r6,sp,120
  805b38:	08106740 	call	810674 <__sprint_r>
  805b3c:	103d451e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805b40:	d8c02017 	ldw	r3,128(sp)
  805b44:	d8801f17 	ldw	r2,124(sp)
  805b48:	da000404 	addi	r8,sp,16
  805b4c:	003fee06 	br	805b08 <__alt_data_end+0xff805b08>
  805b50:	dac02e17 	ldw	r11,184(sp)
  805b54:	db002b17 	ldw	r12,172(sp)
  805b58:	5b2bc83a 	sub	r21,r11,r12
  805b5c:	057df90e 	bge	zero,r21,805344 <__alt_data_end+0xff805344>
  805b60:	07000404 	movi	fp,16
  805b64:	d8801f17 	ldw	r2,124(sp)
  805b68:	e543640e 	bge	fp,r21,8068fc <___vfprintf_internal_r+0x1c78>
  805b6c:	014020b4 	movhi	r5,130
  805b70:	296ee784 	addi	r5,r5,-17506
  805b74:	d9402c15 	stw	r5,176(sp)
  805b78:	04c001c4 	movi	r19,7
  805b7c:	00000306 	br	805b8c <___vfprintf_internal_r+0xf08>
  805b80:	ad7ffc04 	addi	r21,r21,-16
  805b84:	42000204 	addi	r8,r8,8
  805b88:	e540110e 	bge	fp,r21,805bd0 <___vfprintf_internal_r+0xf4c>
  805b8c:	18c00404 	addi	r3,r3,16
  805b90:	10800044 	addi	r2,r2,1
  805b94:	45000015 	stw	r20,0(r8)
  805b98:	47000115 	stw	fp,4(r8)
  805b9c:	d8c02015 	stw	r3,128(sp)
  805ba0:	d8801f15 	stw	r2,124(sp)
  805ba4:	98bff60e 	bge	r19,r2,805b80 <__alt_data_end+0xff805b80>
  805ba8:	b009883a 	mov	r4,r22
  805bac:	b80b883a 	mov	r5,r23
  805bb0:	d9801e04 	addi	r6,sp,120
  805bb4:	08106740 	call	810674 <__sprint_r>
  805bb8:	103d261e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805bbc:	ad7ffc04 	addi	r21,r21,-16
  805bc0:	d8c02017 	ldw	r3,128(sp)
  805bc4:	d8801f17 	ldw	r2,124(sp)
  805bc8:	da000404 	addi	r8,sp,16
  805bcc:	e57fef16 	blt	fp,r21,805b8c <__alt_data_end+0xff805b8c>
  805bd0:	dac02c17 	ldw	r11,176(sp)
  805bd4:	1d47883a 	add	r3,r3,r21
  805bd8:	10800044 	addi	r2,r2,1
  805bdc:	42c00015 	stw	r11,0(r8)
  805be0:	45400115 	stw	r21,4(r8)
  805be4:	d8c02015 	stw	r3,128(sp)
  805be8:	d8801f15 	stw	r2,124(sp)
  805bec:	010001c4 	movi	r4,7
  805bf0:	20819116 	blt	r4,r2,806238 <___vfprintf_internal_r+0x15b4>
  805bf4:	42000204 	addi	r8,r8,8
  805bf8:	003dd206 	br	805344 <__alt_data_end+0xff805344>
  805bfc:	db003317 	ldw	r12,204(sp)
  805c00:	00800044 	movi	r2,1
  805c04:	18c00044 	addi	r3,r3,1
  805c08:	1301530e 	bge	r2,r12,806158 <___vfprintf_internal_r+0x14d4>
  805c0c:	dc001f17 	ldw	r16,124(sp)
  805c10:	dac03117 	ldw	r11,196(sp)
  805c14:	00800044 	movi	r2,1
  805c18:	84000044 	addi	r16,r16,1
  805c1c:	40800115 	stw	r2,4(r8)
  805c20:	42c00015 	stw	r11,0(r8)
  805c24:	d8c02015 	stw	r3,128(sp)
  805c28:	dc001f15 	stw	r16,124(sp)
  805c2c:	008001c4 	movi	r2,7
  805c30:	14016b16 	blt	r2,r16,8061e0 <___vfprintf_internal_r+0x155c>
  805c34:	42000204 	addi	r8,r8,8
  805c38:	db003817 	ldw	r12,224(sp)
  805c3c:	dac03517 	ldw	r11,212(sp)
  805c40:	84000044 	addi	r16,r16,1
  805c44:	1b07883a 	add	r3,r3,r12
  805c48:	42c00015 	stw	r11,0(r8)
  805c4c:	43000115 	stw	r12,4(r8)
  805c50:	d8c02015 	stw	r3,128(sp)
  805c54:	dc001f15 	stw	r16,124(sp)
  805c58:	008001c4 	movi	r2,7
  805c5c:	14016916 	blt	r2,r16,806204 <___vfprintf_internal_r+0x1580>
  805c60:	44800204 	addi	r18,r8,8
  805c64:	d9003717 	ldw	r4,220(sp)
  805c68:	d9403917 	ldw	r5,228(sp)
  805c6c:	000d883a 	mov	r6,zero
  805c70:	000f883a 	mov	r7,zero
  805c74:	d8c03d15 	stw	r3,244(sp)
  805c78:	0815f1c0 	call	815f1c <__eqdf2>
  805c7c:	d8c03d17 	ldw	r3,244(sp)
  805c80:	db003317 	ldw	r12,204(sp)
  805c84:	1000ad26 	beq	r2,zero,805f3c <___vfprintf_internal_r+0x12b8>
  805c88:	dac03117 	ldw	r11,196(sp)
  805c8c:	60bfffc4 	addi	r2,r12,-1
  805c90:	1887883a 	add	r3,r3,r2
  805c94:	59000044 	addi	r4,r11,1
  805c98:	84000044 	addi	r16,r16,1
  805c9c:	90800115 	stw	r2,4(r18)
  805ca0:	91000015 	stw	r4,0(r18)
  805ca4:	d8c02015 	stw	r3,128(sp)
  805ca8:	dc001f15 	stw	r16,124(sp)
  805cac:	008001c4 	movi	r2,7
  805cb0:	14014216 	blt	r2,r16,8061bc <___vfprintf_internal_r+0x1538>
  805cb4:	94800204 	addi	r18,r18,8
  805cb8:	dac03a17 	ldw	r11,232(sp)
  805cbc:	dd4022c4 	addi	r21,sp,139
  805cc0:	84000044 	addi	r16,r16,1
  805cc4:	1ac7883a 	add	r3,r3,r11
  805cc8:	95400015 	stw	r21,0(r18)
  805ccc:	92c00115 	stw	r11,4(r18)
  805cd0:	d8c02015 	stw	r3,128(sp)
  805cd4:	dc001f15 	stw	r16,124(sp)
  805cd8:	008001c4 	movi	r2,7
  805cdc:	14000e16 	blt	r2,r16,805d18 <___vfprintf_internal_r+0x1094>
  805ce0:	92000204 	addi	r8,r18,8
  805ce4:	003dcd06 	br	80541c <__alt_data_end+0xff80541c>
  805ce8:	010020b4 	movhi	r4,130
  805cec:	212ee784 	addi	r4,r4,-17506
  805cf0:	d9002c15 	stw	r4,176(sp)
  805cf4:	dac02c17 	ldw	r11,176(sp)
  805cf8:	1c07883a 	add	r3,r3,r16
  805cfc:	44000115 	stw	r16,4(r8)
  805d00:	42c00015 	stw	r11,0(r8)
  805d04:	10800044 	addi	r2,r2,1
  805d08:	d8c02015 	stw	r3,128(sp)
  805d0c:	d8801f15 	stw	r2,124(sp)
  805d10:	010001c4 	movi	r4,7
  805d14:	20bdc00e 	bge	r4,r2,805418 <__alt_data_end+0xff805418>
  805d18:	b009883a 	mov	r4,r22
  805d1c:	b80b883a 	mov	r5,r23
  805d20:	d9801e04 	addi	r6,sp,120
  805d24:	08106740 	call	810674 <__sprint_r>
  805d28:	103cca1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805d2c:	d8c02017 	ldw	r3,128(sp)
  805d30:	da000404 	addi	r8,sp,16
  805d34:	003db906 	br	80541c <__alt_data_end+0xff80541c>
  805d38:	b009883a 	mov	r4,r22
  805d3c:	b80b883a 	mov	r5,r23
  805d40:	d9801e04 	addi	r6,sp,120
  805d44:	08106740 	call	810674 <__sprint_r>
  805d48:	103def26 	beq	r2,zero,805508 <__alt_data_end+0xff805508>
  805d4c:	003cc106 	br	805054 <__alt_data_end+0xff805054>
  805d50:	10803fcc 	andi	r2,r2,255
  805d54:	1000651e 	bne	r2,zero,805eec <___vfprintf_internal_r+0x1268>
  805d58:	8880004c 	andi	r2,r17,1
  805d5c:	10013226 	beq	r2,zero,806228 <___vfprintf_internal_r+0x15a4>
  805d60:	00800c04 	movi	r2,48
  805d64:	d8c01dc4 	addi	r3,sp,119
  805d68:	d8801dc5 	stb	r2,119(sp)
  805d6c:	dc803c17 	ldw	r18,240(sp)
  805d70:	d8c03115 	stw	r3,196(sp)
  805d74:	003d1106 	br	8051bc <__alt_data_end+0xff8051bc>
  805d78:	b009883a 	mov	r4,r22
  805d7c:	b80b883a 	mov	r5,r23
  805d80:	d9801e04 	addi	r6,sp,120
  805d84:	08106740 	call	810674 <__sprint_r>
  805d88:	103cb21e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805d8c:	d8c02017 	ldw	r3,128(sp)
  805d90:	da000404 	addi	r8,sp,16
  805d94:	003d9406 	br	8053e8 <__alt_data_end+0xff8053e8>
  805d98:	b009883a 	mov	r4,r22
  805d9c:	b80b883a 	mov	r5,r23
  805da0:	d9801e04 	addi	r6,sp,120
  805da4:	08106740 	call	810674 <__sprint_r>
  805da8:	103caa1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805dac:	d8c02017 	ldw	r3,128(sp)
  805db0:	da000404 	addi	r8,sp,16
  805db4:	003d5206 	br	805300 <__alt_data_end+0xff805300>
  805db8:	b009883a 	mov	r4,r22
  805dbc:	b80b883a 	mov	r5,r23
  805dc0:	d9801e04 	addi	r6,sp,120
  805dc4:	08106740 	call	810674 <__sprint_r>
  805dc8:	103ca21e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805dcc:	d8c02017 	ldw	r3,128(sp)
  805dd0:	da000404 	addi	r8,sp,16
  805dd4:	003d5806 	br	805338 <__alt_data_end+0xff805338>
  805dd8:	d9403b17 	ldw	r5,236(sp)
  805ddc:	d8c01e04 	addi	r3,sp,120
  805de0:	988003cc 	andi	r2,r19,15
  805de4:	e008973a 	slli	r4,fp,28
  805de8:	2885883a 	add	r2,r5,r2
  805dec:	9826d13a 	srli	r19,r19,4
  805df0:	10800003 	ldbu	r2,0(r2)
  805df4:	e038d13a 	srli	fp,fp,4
  805df8:	18ffffc4 	addi	r3,r3,-1
  805dfc:	24e6b03a 	or	r19,r4,r19
  805e00:	18800005 	stb	r2,0(r3)
  805e04:	9f04b03a 	or	r2,r19,fp
  805e08:	103ff51e 	bne	r2,zero,805de0 <__alt_data_end+0xff805de0>
  805e0c:	db002817 	ldw	r12,160(sp)
  805e10:	d8c03115 	stw	r3,196(sp)
  805e14:	60e5c83a 	sub	r18,r12,r3
  805e18:	003ce806 	br	8051bc <__alt_data_end+0xff8051bc>
  805e1c:	dc002617 	ldw	r16,152(sp)
  805e20:	0401b10e 	bge	zero,r16,8064e8 <___vfprintf_internal_r+0x1864>
  805e24:	db003117 	ldw	r12,196(sp)
  805e28:	dac03317 	ldw	r11,204(sp)
  805e2c:	62e1883a 	add	r16,r12,r11
  805e30:	db003417 	ldw	r12,208(sp)
  805e34:	5825883a 	mov	r18,r11
  805e38:	62c0010e 	bge	r12,r11,805e40 <___vfprintf_internal_r+0x11bc>
  805e3c:	6025883a 	mov	r18,r12
  805e40:	04800b0e 	bge	zero,r18,805e70 <___vfprintf_internal_r+0x11ec>
  805e44:	d8801f17 	ldw	r2,124(sp)
  805e48:	dac03117 	ldw	r11,196(sp)
  805e4c:	1c87883a 	add	r3,r3,r18
  805e50:	10800044 	addi	r2,r2,1
  805e54:	42c00015 	stw	r11,0(r8)
  805e58:	44800115 	stw	r18,4(r8)
  805e5c:	d8c02015 	stw	r3,128(sp)
  805e60:	d8801f15 	stw	r2,124(sp)
  805e64:	010001c4 	movi	r4,7
  805e68:	20824f16 	blt	r4,r2,8067a8 <___vfprintf_internal_r+0x1b24>
  805e6c:	42000204 	addi	r8,r8,8
  805e70:	90024b16 	blt	r18,zero,8067a0 <___vfprintf_internal_r+0x1b1c>
  805e74:	db003417 	ldw	r12,208(sp)
  805e78:	64a5c83a 	sub	r18,r12,r18
  805e7c:	0480730e 	bge	zero,r18,80604c <___vfprintf_internal_r+0x13c8>
  805e80:	05400404 	movi	r21,16
  805e84:	d8801f17 	ldw	r2,124(sp)
  805e88:	ac817d0e 	bge	r21,r18,806480 <___vfprintf_internal_r+0x17fc>
  805e8c:	014020b4 	movhi	r5,130
  805e90:	296ee784 	addi	r5,r5,-17506
  805e94:	d9402c15 	stw	r5,176(sp)
  805e98:	070001c4 	movi	fp,7
  805e9c:	00000306 	br	805eac <___vfprintf_internal_r+0x1228>
  805ea0:	42000204 	addi	r8,r8,8
  805ea4:	94bffc04 	addi	r18,r18,-16
  805ea8:	ac81780e 	bge	r21,r18,80648c <___vfprintf_internal_r+0x1808>
  805eac:	18c00404 	addi	r3,r3,16
  805eb0:	10800044 	addi	r2,r2,1
  805eb4:	45000015 	stw	r20,0(r8)
  805eb8:	45400115 	stw	r21,4(r8)
  805ebc:	d8c02015 	stw	r3,128(sp)
  805ec0:	d8801f15 	stw	r2,124(sp)
  805ec4:	e0bff60e 	bge	fp,r2,805ea0 <__alt_data_end+0xff805ea0>
  805ec8:	b009883a 	mov	r4,r22
  805ecc:	b80b883a 	mov	r5,r23
  805ed0:	d9801e04 	addi	r6,sp,120
  805ed4:	08106740 	call	810674 <__sprint_r>
  805ed8:	103c5e1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805edc:	d8c02017 	ldw	r3,128(sp)
  805ee0:	d8801f17 	ldw	r2,124(sp)
  805ee4:	da000404 	addi	r8,sp,16
  805ee8:	003fee06 	br	805ea4 <__alt_data_end+0xff805ea4>
  805eec:	dac01e04 	addi	r11,sp,120
  805ef0:	0025883a 	mov	r18,zero
  805ef4:	dac03115 	stw	r11,196(sp)
  805ef8:	003cb006 	br	8051bc <__alt_data_end+0xff8051bc>
  805efc:	b009883a 	mov	r4,r22
  805f00:	b80b883a 	mov	r5,r23
  805f04:	d9801e04 	addi	r6,sp,120
  805f08:	08106740 	call	810674 <__sprint_r>
  805f0c:	103c511e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805f10:	d8c02017 	ldw	r3,128(sp)
  805f14:	d8802787 	ldb	r2,158(sp)
  805f18:	da000404 	addi	r8,sp,16
  805f1c:	003ceb06 	br	8052cc <__alt_data_end+0xff8052cc>
  805f20:	1cc00017 	ldw	r19,0(r3)
  805f24:	dac02d17 	ldw	r11,180(sp)
  805f28:	9839d7fa 	srai	fp,r19,31
  805f2c:	5ac00104 	addi	r11,r11,4
  805f30:	dac02d15 	stw	r11,180(sp)
  805f34:	e005883a 	mov	r2,fp
  805f38:	003c8106 	br	805140 <__alt_data_end+0xff805140>
  805f3c:	657fffc4 	addi	r21,r12,-1
  805f40:	057f5d0e 	bge	zero,r21,805cb8 <__alt_data_end+0xff805cb8>
  805f44:	07000404 	movi	fp,16
  805f48:	e540900e 	bge	fp,r21,80618c <___vfprintf_internal_r+0x1508>
  805f4c:	010020b4 	movhi	r4,130
  805f50:	212ee784 	addi	r4,r4,-17506
  805f54:	d9002c15 	stw	r4,176(sp)
  805f58:	01c001c4 	movi	r7,7
  805f5c:	00000306 	br	805f6c <___vfprintf_internal_r+0x12e8>
  805f60:	94800204 	addi	r18,r18,8
  805f64:	ad7ffc04 	addi	r21,r21,-16
  805f68:	e5408b0e 	bge	fp,r21,806198 <___vfprintf_internal_r+0x1514>
  805f6c:	18c00404 	addi	r3,r3,16
  805f70:	84000044 	addi	r16,r16,1
  805f74:	95000015 	stw	r20,0(r18)
  805f78:	97000115 	stw	fp,4(r18)
  805f7c:	d8c02015 	stw	r3,128(sp)
  805f80:	dc001f15 	stw	r16,124(sp)
  805f84:	3c3ff60e 	bge	r7,r16,805f60 <__alt_data_end+0xff805f60>
  805f88:	b009883a 	mov	r4,r22
  805f8c:	b80b883a 	mov	r5,r23
  805f90:	d9801e04 	addi	r6,sp,120
  805f94:	d9c03d15 	stw	r7,244(sp)
  805f98:	08106740 	call	810674 <__sprint_r>
  805f9c:	d9c03d17 	ldw	r7,244(sp)
  805fa0:	103c2c1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  805fa4:	d8c02017 	ldw	r3,128(sp)
  805fa8:	dc001f17 	ldw	r16,124(sp)
  805fac:	dc800404 	addi	r18,sp,16
  805fb0:	003fec06 	br	805f64 <__alt_data_end+0xff805f64>
  805fb4:	dac02d17 	ldw	r11,180(sp)
  805fb8:	0039883a 	mov	fp,zero
  805fbc:	0005883a 	mov	r2,zero
  805fc0:	5cc00017 	ldw	r19,0(r11)
  805fc4:	5ac00104 	addi	r11,r11,4
  805fc8:	dac02d15 	stw	r11,180(sp)
  805fcc:	9807883a 	mov	r3,r19
  805fd0:	003d5b06 	br	805540 <__alt_data_end+0xff805540>
  805fd4:	db002d17 	ldw	r12,180(sp)
  805fd8:	0039883a 	mov	fp,zero
  805fdc:	00800044 	movi	r2,1
  805fe0:	64c00017 	ldw	r19,0(r12)
  805fe4:	63000104 	addi	r12,r12,4
  805fe8:	db002d15 	stw	r12,180(sp)
  805fec:	9807883a 	mov	r3,r19
  805ff0:	003d5306 	br	805540 <__alt_data_end+0xff805540>
  805ff4:	00800084 	movi	r2,2
  805ff8:	9f06b03a 	or	r3,r19,fp
  805ffc:	003d5006 	br	805540 <__alt_data_end+0xff805540>
  806000:	10803fcc 	andi	r2,r2,255
  806004:	1080201c 	xori	r2,r2,128
  806008:	10bfe004 	addi	r2,r2,-128
  80600c:	01000c04 	movi	r4,48
  806010:	1101a526 	beq	r2,r4,8066a8 <___vfprintf_internal_r+0x1a24>
  806014:	dac03117 	ldw	r11,196(sp)
  806018:	db002817 	ldw	r12,160(sp)
  80601c:	193fffc5 	stb	r4,-1(r3)
  806020:	5affffc4 	addi	r11,r11,-1
  806024:	dac03115 	stw	r11,196(sp)
  806028:	62e5c83a 	sub	r18,r12,r11
  80602c:	003c6306 	br	8051bc <__alt_data_end+0xff8051bc>
  806030:	b009883a 	mov	r4,r22
  806034:	b80b883a 	mov	r5,r23
  806038:	d9801e04 	addi	r6,sp,120
  80603c:	08106740 	call	810674 <__sprint_r>
  806040:	103c041e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  806044:	d8c02017 	ldw	r3,128(sp)
  806048:	da000404 	addi	r8,sp,16
  80604c:	db003117 	ldw	r12,196(sp)
  806050:	dac03417 	ldw	r11,208(sp)
  806054:	d8802617 	ldw	r2,152(sp)
  806058:	62e5883a 	add	r18,r12,r11
  80605c:	db003317 	ldw	r12,204(sp)
  806060:	13000216 	blt	r2,r12,80606c <___vfprintf_internal_r+0x13e8>
  806064:	8900004c 	andi	r4,r17,1
  806068:	20000c26 	beq	r4,zero,80609c <___vfprintf_internal_r+0x1418>
  80606c:	dac03817 	ldw	r11,224(sp)
  806070:	d9001f17 	ldw	r4,124(sp)
  806074:	db003517 	ldw	r12,212(sp)
  806078:	1ac7883a 	add	r3,r3,r11
  80607c:	21000044 	addi	r4,r4,1
  806080:	43000015 	stw	r12,0(r8)
  806084:	42c00115 	stw	r11,4(r8)
  806088:	d8c02015 	stw	r3,128(sp)
  80608c:	d9001f15 	stw	r4,124(sp)
  806090:	014001c4 	movi	r5,7
  806094:	2901cc16 	blt	r5,r4,8067c8 <___vfprintf_internal_r+0x1b44>
  806098:	42000204 	addi	r8,r8,8
  80609c:	dac03317 	ldw	r11,204(sp)
  8060a0:	8489c83a 	sub	r4,r16,r18
  8060a4:	5885c83a 	sub	r2,r11,r2
  8060a8:	1021883a 	mov	r16,r2
  8060ac:	2080010e 	bge	r4,r2,8060b4 <___vfprintf_internal_r+0x1430>
  8060b0:	2021883a 	mov	r16,r4
  8060b4:	04000a0e 	bge	zero,r16,8060e0 <___vfprintf_internal_r+0x145c>
  8060b8:	d9001f17 	ldw	r4,124(sp)
  8060bc:	1c07883a 	add	r3,r3,r16
  8060c0:	44800015 	stw	r18,0(r8)
  8060c4:	21000044 	addi	r4,r4,1
  8060c8:	44000115 	stw	r16,4(r8)
  8060cc:	d8c02015 	stw	r3,128(sp)
  8060d0:	d9001f15 	stw	r4,124(sp)
  8060d4:	014001c4 	movi	r5,7
  8060d8:	2901e316 	blt	r5,r4,806868 <___vfprintf_internal_r+0x1be4>
  8060dc:	42000204 	addi	r8,r8,8
  8060e0:	8001df16 	blt	r16,zero,806860 <___vfprintf_internal_r+0x1bdc>
  8060e4:	1421c83a 	sub	r16,r2,r16
  8060e8:	043ccc0e 	bge	zero,r16,80541c <__alt_data_end+0xff80541c>
  8060ec:	04800404 	movi	r18,16
  8060f0:	d8801f17 	ldw	r2,124(sp)
  8060f4:	943efc0e 	bge	r18,r16,805ce8 <__alt_data_end+0xff805ce8>
  8060f8:	014020b4 	movhi	r5,130
  8060fc:	296ee784 	addi	r5,r5,-17506
  806100:	d9402c15 	stw	r5,176(sp)
  806104:	054001c4 	movi	r21,7
  806108:	00000306 	br	806118 <___vfprintf_internal_r+0x1494>
  80610c:	42000204 	addi	r8,r8,8
  806110:	843ffc04 	addi	r16,r16,-16
  806114:	943ef70e 	bge	r18,r16,805cf4 <__alt_data_end+0xff805cf4>
  806118:	18c00404 	addi	r3,r3,16
  80611c:	10800044 	addi	r2,r2,1
  806120:	45000015 	stw	r20,0(r8)
  806124:	44800115 	stw	r18,4(r8)
  806128:	d8c02015 	stw	r3,128(sp)
  80612c:	d8801f15 	stw	r2,124(sp)
  806130:	a8bff60e 	bge	r21,r2,80610c <__alt_data_end+0xff80610c>
  806134:	b009883a 	mov	r4,r22
  806138:	b80b883a 	mov	r5,r23
  80613c:	d9801e04 	addi	r6,sp,120
  806140:	08106740 	call	810674 <__sprint_r>
  806144:	103bc31e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  806148:	d8c02017 	ldw	r3,128(sp)
  80614c:	d8801f17 	ldw	r2,124(sp)
  806150:	da000404 	addi	r8,sp,16
  806154:	003fee06 	br	806110 <__alt_data_end+0xff806110>
  806158:	8888703a 	and	r4,r17,r2
  80615c:	203eab1e 	bne	r4,zero,805c0c <__alt_data_end+0xff805c0c>
  806160:	dc001f17 	ldw	r16,124(sp)
  806164:	db003117 	ldw	r12,196(sp)
  806168:	40800115 	stw	r2,4(r8)
  80616c:	84000044 	addi	r16,r16,1
  806170:	43000015 	stw	r12,0(r8)
  806174:	d8c02015 	stw	r3,128(sp)
  806178:	dc001f15 	stw	r16,124(sp)
  80617c:	008001c4 	movi	r2,7
  806180:	14000e16 	blt	r2,r16,8061bc <___vfprintf_internal_r+0x1538>
  806184:	44800204 	addi	r18,r8,8
  806188:	003ecb06 	br	805cb8 <__alt_data_end+0xff805cb8>
  80618c:	008020b4 	movhi	r2,130
  806190:	10aee784 	addi	r2,r2,-17506
  806194:	d8802c15 	stw	r2,176(sp)
  806198:	dac02c17 	ldw	r11,176(sp)
  80619c:	1d47883a 	add	r3,r3,r21
  8061a0:	84000044 	addi	r16,r16,1
  8061a4:	92c00015 	stw	r11,0(r18)
  8061a8:	95400115 	stw	r21,4(r18)
  8061ac:	d8c02015 	stw	r3,128(sp)
  8061b0:	dc001f15 	stw	r16,124(sp)
  8061b4:	008001c4 	movi	r2,7
  8061b8:	143ebe0e 	bge	r2,r16,805cb4 <__alt_data_end+0xff805cb4>
  8061bc:	b009883a 	mov	r4,r22
  8061c0:	b80b883a 	mov	r5,r23
  8061c4:	d9801e04 	addi	r6,sp,120
  8061c8:	08106740 	call	810674 <__sprint_r>
  8061cc:	103ba11e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  8061d0:	d8c02017 	ldw	r3,128(sp)
  8061d4:	dc001f17 	ldw	r16,124(sp)
  8061d8:	dc800404 	addi	r18,sp,16
  8061dc:	003eb606 	br	805cb8 <__alt_data_end+0xff805cb8>
  8061e0:	b009883a 	mov	r4,r22
  8061e4:	b80b883a 	mov	r5,r23
  8061e8:	d9801e04 	addi	r6,sp,120
  8061ec:	08106740 	call	810674 <__sprint_r>
  8061f0:	103b981e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  8061f4:	d8c02017 	ldw	r3,128(sp)
  8061f8:	dc001f17 	ldw	r16,124(sp)
  8061fc:	da000404 	addi	r8,sp,16
  806200:	003e8d06 	br	805c38 <__alt_data_end+0xff805c38>
  806204:	b009883a 	mov	r4,r22
  806208:	b80b883a 	mov	r5,r23
  80620c:	d9801e04 	addi	r6,sp,120
  806210:	08106740 	call	810674 <__sprint_r>
  806214:	103b8f1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  806218:	d8c02017 	ldw	r3,128(sp)
  80621c:	dc001f17 	ldw	r16,124(sp)
  806220:	dc800404 	addi	r18,sp,16
  806224:	003e8f06 	br	805c64 <__alt_data_end+0xff805c64>
  806228:	db001e04 	addi	r12,sp,120
  80622c:	0025883a 	mov	r18,zero
  806230:	db003115 	stw	r12,196(sp)
  806234:	003be106 	br	8051bc <__alt_data_end+0xff8051bc>
  806238:	b009883a 	mov	r4,r22
  80623c:	b80b883a 	mov	r5,r23
  806240:	d9801e04 	addi	r6,sp,120
  806244:	08106740 	call	810674 <__sprint_r>
  806248:	103b821e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  80624c:	d8c02017 	ldw	r3,128(sp)
  806250:	da000404 	addi	r8,sp,16
  806254:	003c3b06 	br	805344 <__alt_data_end+0xff805344>
  806258:	04e7c83a 	sub	r19,zero,r19
  80625c:	9804c03a 	cmpne	r2,r19,zero
  806260:	0739c83a 	sub	fp,zero,fp
  806264:	e0b9c83a 	sub	fp,fp,r2
  806268:	05400b44 	movi	r21,45
  80626c:	dd402785 	stb	r21,158(sp)
  806270:	da403215 	stw	r9,200(sp)
  806274:	00800044 	movi	r2,1
  806278:	9f06b03a 	or	r3,r19,fp
  80627c:	003bb506 	br	805154 <__alt_data_end+0xff805154>
  806280:	da003f15 	stw	r8,252(sp)
  806284:	da403e15 	stw	r9,248(sp)
  806288:	080ab7c0 	call	80ab7c <__fpclassifyd>
  80628c:	da003f17 	ldw	r8,252(sp)
  806290:	da403e17 	ldw	r9,248(sp)
  806294:	1000ce26 	beq	r2,zero,8065d0 <___vfprintf_internal_r+0x194c>
  806298:	057ff7c4 	movi	r21,-33
  80629c:	00bfffc4 	movi	r2,-1
  8062a0:	856a703a 	and	r21,r16,r21
  8062a4:	4881e826 	beq	r9,r2,806a48 <___vfprintf_internal_r+0x1dc4>
  8062a8:	008011c4 	movi	r2,71
  8062ac:	a881e326 	beq	r21,r2,806a3c <___vfprintf_internal_r+0x1db8>
  8062b0:	db003917 	ldw	r12,228(sp)
  8062b4:	8ac04014 	ori	r11,r17,256
  8062b8:	dac02d15 	stw	r11,180(sp)
  8062bc:	6001ed16 	blt	r12,zero,806a74 <___vfprintf_internal_r+0x1df0>
  8062c0:	dc803917 	ldw	r18,228(sp)
  8062c4:	d8002b05 	stb	zero,172(sp)
  8062c8:	00801984 	movi	r2,102
  8062cc:	80811826 	beq	r16,r2,806730 <___vfprintf_internal_r+0x1aac>
  8062d0:	00801184 	movi	r2,70
  8062d4:	80811626 	beq	r16,r2,806730 <___vfprintf_internal_r+0x1aac>
  8062d8:	00801144 	movi	r2,69
  8062dc:	a881e926 	beq	r21,r2,806a84 <___vfprintf_internal_r+0x1e00>
  8062e0:	4839883a 	mov	fp,r9
  8062e4:	d8802604 	addi	r2,sp,152
  8062e8:	d8800115 	stw	r2,4(sp)
  8062ec:	d9403717 	ldw	r5,220(sp)
  8062f0:	d8802504 	addi	r2,sp,148
  8062f4:	d8800215 	stw	r2,8(sp)
  8062f8:	d8802104 	addi	r2,sp,132
  8062fc:	df000015 	stw	fp,0(sp)
  806300:	d8800315 	stw	r2,12(sp)
  806304:	b009883a 	mov	r4,r22
  806308:	900d883a 	mov	r6,r18
  80630c:	01c00084 	movi	r7,2
  806310:	da003f15 	stw	r8,252(sp)
  806314:	da403e15 	stw	r9,248(sp)
  806318:	08070b80 	call	8070b8 <_dtoa_r>
  80631c:	d8803115 	stw	r2,196(sp)
  806320:	008019c4 	movi	r2,103
  806324:	da003f17 	ldw	r8,252(sp)
  806328:	da403e17 	ldw	r9,248(sp)
  80632c:	80800226 	beq	r16,r2,806338 <___vfprintf_internal_r+0x16b4>
  806330:	008011c4 	movi	r2,71
  806334:	8081101e 	bne	r16,r2,806778 <___vfprintf_internal_r+0x1af4>
  806338:	8880004c 	andi	r2,r17,1
  80633c:	1001dd26 	beq	r2,zero,806ab4 <___vfprintf_internal_r+0x1e30>
  806340:	db003117 	ldw	r12,196(sp)
  806344:	6715883a 	add	r10,r12,fp
  806348:	d9003717 	ldw	r4,220(sp)
  80634c:	900b883a 	mov	r5,r18
  806350:	000d883a 	mov	r6,zero
  806354:	000f883a 	mov	r7,zero
  806358:	da003f15 	stw	r8,252(sp)
  80635c:	da403e15 	stw	r9,248(sp)
  806360:	da803d15 	stw	r10,244(sp)
  806364:	0815f1c0 	call	815f1c <__eqdf2>
  806368:	da003f17 	ldw	r8,252(sp)
  80636c:	da403e17 	ldw	r9,248(sp)
  806370:	da803d17 	ldw	r10,244(sp)
  806374:	10016526 	beq	r2,zero,80690c <___vfprintf_internal_r+0x1c88>
  806378:	d8802117 	ldw	r2,132(sp)
  80637c:	1280062e 	bgeu	r2,r10,806398 <___vfprintf_internal_r+0x1714>
  806380:	01000c04 	movi	r4,48
  806384:	10c00044 	addi	r3,r2,1
  806388:	d8c02115 	stw	r3,132(sp)
  80638c:	11000005 	stb	r4,0(r2)
  806390:	d8802117 	ldw	r2,132(sp)
  806394:	12bffb36 	bltu	r2,r10,806384 <__alt_data_end+0xff806384>
  806398:	db003117 	ldw	r12,196(sp)
  80639c:	1305c83a 	sub	r2,r2,r12
  8063a0:	d8803315 	stw	r2,204(sp)
  8063a4:	008011c4 	movi	r2,71
  8063a8:	a8814d26 	beq	r21,r2,8068e0 <___vfprintf_internal_r+0x1c5c>
  8063ac:	00801944 	movi	r2,101
  8063b0:	1402060e 	bge	r2,r16,806bcc <___vfprintf_internal_r+0x1f48>
  8063b4:	00801984 	movi	r2,102
  8063b8:	8081b426 	beq	r16,r2,806a8c <___vfprintf_internal_r+0x1e08>
  8063bc:	db002617 	ldw	r12,152(sp)
  8063c0:	db003415 	stw	r12,208(sp)
  8063c4:	db003417 	ldw	r12,208(sp)
  8063c8:	dac03317 	ldw	r11,204(sp)
  8063cc:	62c1a016 	blt	r12,r11,806a50 <___vfprintf_internal_r+0x1dcc>
  8063d0:	8c40004c 	andi	r17,r17,1
  8063d4:	8801bf1e 	bne	r17,zero,806ad4 <___vfprintf_internal_r+0x1e50>
  8063d8:	6005883a 	mov	r2,r12
  8063dc:	6001b316 	blt	r12,zero,806aac <___vfprintf_internal_r+0x1e28>
  8063e0:	dc803417 	ldw	r18,208(sp)
  8063e4:	df002b07 	ldb	fp,172(sp)
  8063e8:	e0012e1e 	bne	fp,zero,8068a4 <___vfprintf_internal_r+0x1c20>
  8063ec:	dc402d17 	ldw	r17,180(sp)
  8063f0:	dd402783 	ldbu	r21,158(sp)
  8063f4:	d8802b15 	stw	r2,172(sp)
  8063f8:	dcc02d15 	stw	r19,180(sp)
  8063fc:	d8003215 	stw	zero,200(sp)
  806400:	003b7306 	br	8051d0 <__alt_data_end+0xff8051d0>
  806404:	00800084 	movi	r2,2
  806408:	003c4d06 	br	805540 <__alt_data_end+0xff805540>
  80640c:	8880040c 	andi	r2,r17,16
  806410:	1000091e 	bne	r2,zero,806438 <___vfprintf_internal_r+0x17b4>
  806414:	8c40100c 	andi	r17,r17,64
  806418:	88000726 	beq	r17,zero,806438 <___vfprintf_internal_r+0x17b4>
  80641c:	db002d17 	ldw	r12,180(sp)
  806420:	dac02f17 	ldw	r11,188(sp)
  806424:	60800017 	ldw	r2,0(r12)
  806428:	63000104 	addi	r12,r12,4
  80642c:	db002d15 	stw	r12,180(sp)
  806430:	12c0000d 	sth	r11,0(r2)
  806434:	003a4e06 	br	804d70 <__alt_data_end+0xff804d70>
  806438:	db002d17 	ldw	r12,180(sp)
  80643c:	dac02f17 	ldw	r11,188(sp)
  806440:	60800017 	ldw	r2,0(r12)
  806444:	63000104 	addi	r12,r12,4
  806448:	db002d15 	stw	r12,180(sp)
  80644c:	12c00015 	stw	r11,0(r2)
  806450:	003a4706 	br	804d70 <__alt_data_end+0xff804d70>
  806454:	1c000007 	ldb	r16,0(r3)
  806458:	1805883a 	mov	r2,r3
  80645c:	003a6e06 	br	804e18 <__alt_data_end+0xff804e18>
  806460:	88c0100c 	andi	r3,r17,64
  806464:	18006b26 	beq	r3,zero,806614 <___vfprintf_internal_r+0x1990>
  806468:	dac02d17 	ldw	r11,180(sp)
  80646c:	14c0000b 	ldhu	r19,0(r2)
  806470:	0039883a 	mov	fp,zero
  806474:	5ac00104 	addi	r11,r11,4
  806478:	dac02d15 	stw	r11,180(sp)
  80647c:	003cb206 	br	805748 <__alt_data_end+0xff805748>
  806480:	010020b4 	movhi	r4,130
  806484:	212ee784 	addi	r4,r4,-17506
  806488:	d9002c15 	stw	r4,176(sp)
  80648c:	dac02c17 	ldw	r11,176(sp)
  806490:	1c87883a 	add	r3,r3,r18
  806494:	10800044 	addi	r2,r2,1
  806498:	42c00015 	stw	r11,0(r8)
  80649c:	44800115 	stw	r18,4(r8)
  8064a0:	d8c02015 	stw	r3,128(sp)
  8064a4:	d8801f15 	stw	r2,124(sp)
  8064a8:	010001c4 	movi	r4,7
  8064ac:	20bee016 	blt	r4,r2,806030 <__alt_data_end+0xff806030>
  8064b0:	42000204 	addi	r8,r8,8
  8064b4:	003ee506 	br	80604c <__alt_data_end+0xff80604c>
  8064b8:	010020b4 	movhi	r4,130
  8064bc:	212ee784 	addi	r4,r4,-17506
  8064c0:	d9002c15 	stw	r4,176(sp)
  8064c4:	003bbe06 	br	8053c0 <__alt_data_end+0xff8053c0>
  8064c8:	b009883a 	mov	r4,r22
  8064cc:	b80b883a 	mov	r5,r23
  8064d0:	d9801e04 	addi	r6,sp,120
  8064d4:	08106740 	call	810674 <__sprint_r>
  8064d8:	103ade1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  8064dc:	d8c02017 	ldw	r3,128(sp)
  8064e0:	da000404 	addi	r8,sp,16
  8064e4:	003d6b06 	br	805a94 <__alt_data_end+0xff805a94>
  8064e8:	d8801f17 	ldw	r2,124(sp)
  8064ec:	030020b4 	movhi	r12,130
  8064f0:	01000044 	movi	r4,1
  8064f4:	18c00044 	addi	r3,r3,1
  8064f8:	10800044 	addi	r2,r2,1
  8064fc:	632ee704 	addi	r12,r12,-17508
  806500:	41000115 	stw	r4,4(r8)
  806504:	43000015 	stw	r12,0(r8)
  806508:	d8c02015 	stw	r3,128(sp)
  80650c:	d8801f15 	stw	r2,124(sp)
  806510:	010001c4 	movi	r4,7
  806514:	20804916 	blt	r4,r2,80663c <___vfprintf_internal_r+0x19b8>
  806518:	42000204 	addi	r8,r8,8
  80651c:	8000041e 	bne	r16,zero,806530 <___vfprintf_internal_r+0x18ac>
  806520:	dac03317 	ldw	r11,204(sp)
  806524:	5800021e 	bne	r11,zero,806530 <___vfprintf_internal_r+0x18ac>
  806528:	8880004c 	andi	r2,r17,1
  80652c:	103bbb26 	beq	r2,zero,80541c <__alt_data_end+0xff80541c>
  806530:	db003817 	ldw	r12,224(sp)
  806534:	d8801f17 	ldw	r2,124(sp)
  806538:	dac03517 	ldw	r11,212(sp)
  80653c:	1b07883a 	add	r3,r3,r12
  806540:	10800044 	addi	r2,r2,1
  806544:	42c00015 	stw	r11,0(r8)
  806548:	43000115 	stw	r12,4(r8)
  80654c:	d8c02015 	stw	r3,128(sp)
  806550:	d8801f15 	stw	r2,124(sp)
  806554:	010001c4 	movi	r4,7
  806558:	20812e16 	blt	r4,r2,806a14 <___vfprintf_internal_r+0x1d90>
  80655c:	42000204 	addi	r8,r8,8
  806560:	0421c83a 	sub	r16,zero,r16
  806564:	04005c0e 	bge	zero,r16,8066d8 <___vfprintf_internal_r+0x1a54>
  806568:	04800404 	movi	r18,16
  80656c:	94009f0e 	bge	r18,r16,8067ec <___vfprintf_internal_r+0x1b68>
  806570:	010020b4 	movhi	r4,130
  806574:	212ee784 	addi	r4,r4,-17506
  806578:	d9002c15 	stw	r4,176(sp)
  80657c:	054001c4 	movi	r21,7
  806580:	00000306 	br	806590 <___vfprintf_internal_r+0x190c>
  806584:	42000204 	addi	r8,r8,8
  806588:	843ffc04 	addi	r16,r16,-16
  80658c:	94009a0e 	bge	r18,r16,8067f8 <___vfprintf_internal_r+0x1b74>
  806590:	18c00404 	addi	r3,r3,16
  806594:	10800044 	addi	r2,r2,1
  806598:	45000015 	stw	r20,0(r8)
  80659c:	44800115 	stw	r18,4(r8)
  8065a0:	d8c02015 	stw	r3,128(sp)
  8065a4:	d8801f15 	stw	r2,124(sp)
  8065a8:	a8bff60e 	bge	r21,r2,806584 <__alt_data_end+0xff806584>
  8065ac:	b009883a 	mov	r4,r22
  8065b0:	b80b883a 	mov	r5,r23
  8065b4:	d9801e04 	addi	r6,sp,120
  8065b8:	08106740 	call	810674 <__sprint_r>
  8065bc:	103aa51e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  8065c0:	d8c02017 	ldw	r3,128(sp)
  8065c4:	d8801f17 	ldw	r2,124(sp)
  8065c8:	da000404 	addi	r8,sp,16
  8065cc:	003fee06 	br	806588 <__alt_data_end+0xff806588>
  8065d0:	008011c4 	movi	r2,71
  8065d4:	1400be16 	blt	r2,r16,8068d0 <___vfprintf_internal_r+0x1c4c>
  8065d8:	030020b4 	movhi	r12,130
  8065dc:	632ed904 	addi	r12,r12,-17564
  8065e0:	db003115 	stw	r12,196(sp)
  8065e4:	00c000c4 	movi	r3,3
  8065e8:	00bfdfc4 	movi	r2,-129
  8065ec:	d8c02b15 	stw	r3,172(sp)
  8065f0:	88a2703a 	and	r17,r17,r2
  8065f4:	dd402783 	ldbu	r21,158(sp)
  8065f8:	dcc02d15 	stw	r19,180(sp)
  8065fc:	1825883a 	mov	r18,r3
  806600:	d8003215 	stw	zero,200(sp)
  806604:	d8003415 	stw	zero,208(sp)
  806608:	003af106 	br	8051d0 <__alt_data_end+0xff8051d0>
  80660c:	4825883a 	mov	r18,r9
  806610:	003c9306 	br	805860 <__alt_data_end+0xff805860>
  806614:	db002d17 	ldw	r12,180(sp)
  806618:	14c00017 	ldw	r19,0(r2)
  80661c:	0039883a 	mov	fp,zero
  806620:	63000104 	addi	r12,r12,4
  806624:	db002d15 	stw	r12,180(sp)
  806628:	003c4706 	br	805748 <__alt_data_end+0xff805748>
  80662c:	008020b4 	movhi	r2,130
  806630:	10aed704 	addi	r2,r2,-17572
  806634:	d8803115 	stw	r2,196(sp)
  806638:	003bf106 	br	805600 <__alt_data_end+0xff805600>
  80663c:	b009883a 	mov	r4,r22
  806640:	b80b883a 	mov	r5,r23
  806644:	d9801e04 	addi	r6,sp,120
  806648:	08106740 	call	810674 <__sprint_r>
  80664c:	103a811e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  806650:	dc002617 	ldw	r16,152(sp)
  806654:	d8c02017 	ldw	r3,128(sp)
  806658:	da000404 	addi	r8,sp,16
  80665c:	003faf06 	br	80651c <__alt_data_end+0xff80651c>
  806660:	db002e17 	ldw	r12,184(sp)
  806664:	1805883a 	mov	r2,r3
  806668:	dac02d15 	stw	r11,180(sp)
  80666c:	0319c83a 	sub	r12,zero,r12
  806670:	db002e15 	stw	r12,184(sp)
  806674:	003a8206 	br	805080 <__alt_data_end+0xff805080>
  806678:	18800044 	addi	r2,r3,1
  80667c:	8c400814 	ori	r17,r17,32
  806680:	1c000047 	ldb	r16,1(r3)
  806684:	0039e406 	br	804e18 <__alt_data_end+0xff804e18>
  806688:	b009883a 	mov	r4,r22
  80668c:	b80b883a 	mov	r5,r23
  806690:	d9801e04 	addi	r6,sp,120
  806694:	08106740 	call	810674 <__sprint_r>
  806698:	103a6e1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  80669c:	d8c02017 	ldw	r3,128(sp)
  8066a0:	da000404 	addi	r8,sp,16
  8066a4:	003d0c06 	br	805ad8 <__alt_data_end+0xff805ad8>
  8066a8:	db002817 	ldw	r12,160(sp)
  8066ac:	d8c03117 	ldw	r3,196(sp)
  8066b0:	60e5c83a 	sub	r18,r12,r3
  8066b4:	003ac106 	br	8051bc <__alt_data_end+0xff8051bc>
  8066b8:	b009883a 	mov	r4,r22
  8066bc:	b80b883a 	mov	r5,r23
  8066c0:	d9801e04 	addi	r6,sp,120
  8066c4:	08106740 	call	810674 <__sprint_r>
  8066c8:	103a621e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  8066cc:	d8c02017 	ldw	r3,128(sp)
  8066d0:	d8801f17 	ldw	r2,124(sp)
  8066d4:	da000404 	addi	r8,sp,16
  8066d8:	db003317 	ldw	r12,204(sp)
  8066dc:	dac03117 	ldw	r11,196(sp)
  8066e0:	10800044 	addi	r2,r2,1
  8066e4:	1b07883a 	add	r3,r3,r12
  8066e8:	42c00015 	stw	r11,0(r8)
  8066ec:	43000115 	stw	r12,4(r8)
  8066f0:	d8c02015 	stw	r3,128(sp)
  8066f4:	d8801f15 	stw	r2,124(sp)
  8066f8:	010001c4 	movi	r4,7
  8066fc:	20bb460e 	bge	r4,r2,805418 <__alt_data_end+0xff805418>
  806700:	003d8506 	br	805d18 <__alt_data_end+0xff805d18>
  806704:	da003f15 	stw	r8,252(sp)
  806708:	08034f40 	call	8034f4 <strlen>
  80670c:	1025883a 	mov	r18,r2
  806710:	da003f17 	ldw	r8,252(sp)
  806714:	903c540e 	bge	r18,zero,805868 <__alt_data_end+0xff805868>
  806718:	0005883a 	mov	r2,zero
  80671c:	003c5206 	br	805868 <__alt_data_end+0xff805868>
  806720:	010020b4 	movhi	r4,130
  806724:	212eeb84 	addi	r4,r4,-17490
  806728:	d9003615 	stw	r4,216(sp)
  80672c:	003adc06 	br	8052a0 <__alt_data_end+0xff8052a0>
  806730:	d8802604 	addi	r2,sp,152
  806734:	d8800115 	stw	r2,4(sp)
  806738:	d9403717 	ldw	r5,220(sp)
  80673c:	d8802504 	addi	r2,sp,148
  806740:	d8800215 	stw	r2,8(sp)
  806744:	d8802104 	addi	r2,sp,132
  806748:	da400015 	stw	r9,0(sp)
  80674c:	d8800315 	stw	r2,12(sp)
  806750:	b009883a 	mov	r4,r22
  806754:	900d883a 	mov	r6,r18
  806758:	01c000c4 	movi	r7,3
  80675c:	da003f15 	stw	r8,252(sp)
  806760:	da403e15 	stw	r9,248(sp)
  806764:	08070b80 	call	8070b8 <_dtoa_r>
  806768:	da403e17 	ldw	r9,248(sp)
  80676c:	da003f17 	ldw	r8,252(sp)
  806770:	d8803115 	stw	r2,196(sp)
  806774:	4839883a 	mov	fp,r9
  806778:	dac03117 	ldw	r11,196(sp)
  80677c:	00801184 	movi	r2,70
  806780:	5f15883a 	add	r10,r11,fp
  806784:	a8bef01e 	bne	r21,r2,806348 <__alt_data_end+0xff806348>
  806788:	59000007 	ldb	r4,0(r11)
  80678c:	00800c04 	movi	r2,48
  806790:	2080d526 	beq	r4,r2,806ae8 <___vfprintf_internal_r+0x1e64>
  806794:	d8c02617 	ldw	r3,152(sp)
  806798:	50d5883a 	add	r10,r10,r3
  80679c:	003eea06 	br	806348 <__alt_data_end+0xff806348>
  8067a0:	0025883a 	mov	r18,zero
  8067a4:	003db306 	br	805e74 <__alt_data_end+0xff805e74>
  8067a8:	b009883a 	mov	r4,r22
  8067ac:	b80b883a 	mov	r5,r23
  8067b0:	d9801e04 	addi	r6,sp,120
  8067b4:	08106740 	call	810674 <__sprint_r>
  8067b8:	103a261e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  8067bc:	d8c02017 	ldw	r3,128(sp)
  8067c0:	da000404 	addi	r8,sp,16
  8067c4:	003daa06 	br	805e70 <__alt_data_end+0xff805e70>
  8067c8:	b009883a 	mov	r4,r22
  8067cc:	b80b883a 	mov	r5,r23
  8067d0:	d9801e04 	addi	r6,sp,120
  8067d4:	08106740 	call	810674 <__sprint_r>
  8067d8:	103a1e1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  8067dc:	d8802617 	ldw	r2,152(sp)
  8067e0:	d8c02017 	ldw	r3,128(sp)
  8067e4:	da000404 	addi	r8,sp,16
  8067e8:	003e2c06 	br	80609c <__alt_data_end+0xff80609c>
  8067ec:	030020b4 	movhi	r12,130
  8067f0:	632ee784 	addi	r12,r12,-17506
  8067f4:	db002c15 	stw	r12,176(sp)
  8067f8:	dac02c17 	ldw	r11,176(sp)
  8067fc:	1c07883a 	add	r3,r3,r16
  806800:	10800044 	addi	r2,r2,1
  806804:	42c00015 	stw	r11,0(r8)
  806808:	44000115 	stw	r16,4(r8)
  80680c:	d8c02015 	stw	r3,128(sp)
  806810:	d8801f15 	stw	r2,124(sp)
  806814:	010001c4 	movi	r4,7
  806818:	20bfa716 	blt	r4,r2,8066b8 <__alt_data_end+0xff8066b8>
  80681c:	42000204 	addi	r8,r8,8
  806820:	003fad06 	br	8066d8 <__alt_data_end+0xff8066d8>
  806824:	00800184 	movi	r2,6
  806828:	1240012e 	bgeu	r2,r9,806830 <___vfprintf_internal_r+0x1bac>
  80682c:	1013883a 	mov	r9,r2
  806830:	4825883a 	mov	r18,r9
  806834:	4805883a 	mov	r2,r9
  806838:	4800c216 	blt	r9,zero,806b44 <___vfprintf_internal_r+0x1ec0>
  80683c:	d8802b15 	stw	r2,172(sp)
  806840:	008020b4 	movhi	r2,130
  806844:	10aee504 	addi	r2,r2,-17516
  806848:	d8803115 	stw	r2,196(sp)
  80684c:	dcc02d15 	stw	r19,180(sp)
  806850:	d8003215 	stw	zero,200(sp)
  806854:	d8003415 	stw	zero,208(sp)
  806858:	0005883a 	mov	r2,zero
  80685c:	003a6306 	br	8051ec <__alt_data_end+0xff8051ec>
  806860:	0021883a 	mov	r16,zero
  806864:	003e1f06 	br	8060e4 <__alt_data_end+0xff8060e4>
  806868:	b009883a 	mov	r4,r22
  80686c:	b80b883a 	mov	r5,r23
  806870:	d9801e04 	addi	r6,sp,120
  806874:	08106740 	call	810674 <__sprint_r>
  806878:	1039f61e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  80687c:	d8802617 	ldw	r2,152(sp)
  806880:	db003317 	ldw	r12,204(sp)
  806884:	d8c02017 	ldw	r3,128(sp)
  806888:	da000404 	addi	r8,sp,16
  80688c:	6085c83a 	sub	r2,r12,r2
  806890:	003e1306 	br	8060e0 <__alt_data_end+0xff8060e0>
  806894:	030020b4 	movhi	r12,130
  806898:	632eeb84 	addi	r12,r12,-17490
  80689c:	db003615 	stw	r12,216(sp)
  8068a0:	003b0206 	br	8054ac <__alt_data_end+0xff8054ac>
  8068a4:	00c00b44 	movi	r3,45
  8068a8:	d8802b15 	stw	r2,172(sp)
  8068ac:	dc402d17 	ldw	r17,180(sp)
  8068b0:	d8c02785 	stb	r3,158(sp)
  8068b4:	dcc02d15 	stw	r19,180(sp)
  8068b8:	d8003215 	stw	zero,200(sp)
  8068bc:	00800b44 	movi	r2,45
  8068c0:	003a4706 	br	8051e0 <__alt_data_end+0xff8051e0>
  8068c4:	05400b44 	movi	r21,45
  8068c8:	dd402785 	stb	r21,158(sp)
  8068cc:	003b4706 	br	8055ec <__alt_data_end+0xff8055ec>
  8068d0:	008020b4 	movhi	r2,130
  8068d4:	10aeda04 	addi	r2,r2,-17560
  8068d8:	d8803115 	stw	r2,196(sp)
  8068dc:	003f4106 	br	8065e4 <__alt_data_end+0xff8065e4>
  8068e0:	d8c02617 	ldw	r3,152(sp)
  8068e4:	00bfff44 	movi	r2,-3
  8068e8:	18801116 	blt	r3,r2,806930 <___vfprintf_internal_r+0x1cac>
  8068ec:	48c01016 	blt	r9,r3,806930 <___vfprintf_internal_r+0x1cac>
  8068f0:	d8c03415 	stw	r3,208(sp)
  8068f4:	040019c4 	movi	r16,103
  8068f8:	003eb206 	br	8063c4 <__alt_data_end+0xff8063c4>
  8068fc:	010020b4 	movhi	r4,130
  806900:	212ee784 	addi	r4,r4,-17506
  806904:	d9002c15 	stw	r4,176(sp)
  806908:	003cb106 	br	805bd0 <__alt_data_end+0xff805bd0>
  80690c:	5005883a 	mov	r2,r10
  806910:	003ea106 	br	806398 <__alt_data_end+0xff806398>
  806914:	da402b15 	stw	r9,172(sp)
  806918:	dd402783 	ldbu	r21,158(sp)
  80691c:	4825883a 	mov	r18,r9
  806920:	dcc02d15 	stw	r19,180(sp)
  806924:	d8003215 	stw	zero,200(sp)
  806928:	d8003415 	stw	zero,208(sp)
  80692c:	003a2806 	br	8051d0 <__alt_data_end+0xff8051d0>
  806930:	843fff84 	addi	r16,r16,-2
  806934:	1f3fffc4 	addi	fp,r3,-1
  806938:	df002615 	stw	fp,152(sp)
  80693c:	dc0022c5 	stb	r16,139(sp)
  806940:	e0009816 	blt	fp,zero,806ba4 <___vfprintf_internal_r+0x1f20>
  806944:	00800ac4 	movi	r2,43
  806948:	d8802305 	stb	r2,140(sp)
  80694c:	00800244 	movi	r2,9
  806950:	1700750e 	bge	r2,fp,806b28 <___vfprintf_internal_r+0x1ea4>
  806954:	dd4022c4 	addi	r21,sp,139
  806958:	dc002c15 	stw	r16,176(sp)
  80695c:	4025883a 	mov	r18,r8
  806960:	a821883a 	mov	r16,r21
  806964:	e009883a 	mov	r4,fp
  806968:	01400284 	movi	r5,10
  80696c:	0814b640 	call	814b64 <__modsi3>
  806970:	10800c04 	addi	r2,r2,48
  806974:	843fffc4 	addi	r16,r16,-1
  806978:	e009883a 	mov	r4,fp
  80697c:	01400284 	movi	r5,10
  806980:	80800005 	stb	r2,0(r16)
  806984:	0814b100 	call	814b10 <__divsi3>
  806988:	1039883a 	mov	fp,r2
  80698c:	00800244 	movi	r2,9
  806990:	173ff416 	blt	r2,fp,806964 <__alt_data_end+0xff806964>
  806994:	9011883a 	mov	r8,r18
  806998:	e0800c04 	addi	r2,fp,48
  80699c:	8025883a 	mov	r18,r16
  8069a0:	913fffc4 	addi	r4,r18,-1
  8069a4:	90bfffc5 	stb	r2,-1(r18)
  8069a8:	dc002c17 	ldw	r16,176(sp)
  8069ac:	2540852e 	bgeu	r4,r21,806bc4 <___vfprintf_internal_r+0x1f40>
  8069b0:	d9402384 	addi	r5,sp,142
  8069b4:	2c8bc83a 	sub	r5,r5,r18
  8069b8:	d8c02344 	addi	r3,sp,141
  8069bc:	a94b883a 	add	r5,r21,r5
  8069c0:	00000106 	br	8069c8 <___vfprintf_internal_r+0x1d44>
  8069c4:	20800003 	ldbu	r2,0(r4)
  8069c8:	18800005 	stb	r2,0(r3)
  8069cc:	18c00044 	addi	r3,r3,1
  8069d0:	21000044 	addi	r4,r4,1
  8069d4:	197ffb1e 	bne	r3,r5,8069c4 <__alt_data_end+0xff8069c4>
  8069d8:	d8802304 	addi	r2,sp,140
  8069dc:	1485c83a 	sub	r2,r2,r18
  8069e0:	d8c02344 	addi	r3,sp,141
  8069e4:	1885883a 	add	r2,r3,r2
  8069e8:	dac03317 	ldw	r11,204(sp)
  8069ec:	156bc83a 	sub	r21,r2,r21
  8069f0:	dd403a15 	stw	r21,232(sp)
  8069f4:	00800044 	movi	r2,1
  8069f8:	5d65883a 	add	r18,r11,r21
  8069fc:	12c0660e 	bge	r2,r11,806b98 <___vfprintf_internal_r+0x1f14>
  806a00:	94800044 	addi	r18,r18,1
  806a04:	9005883a 	mov	r2,r18
  806a08:	90006116 	blt	r18,zero,806b90 <___vfprintf_internal_r+0x1f0c>
  806a0c:	d8003415 	stw	zero,208(sp)
  806a10:	003e7406 	br	8063e4 <__alt_data_end+0xff8063e4>
  806a14:	b009883a 	mov	r4,r22
  806a18:	b80b883a 	mov	r5,r23
  806a1c:	d9801e04 	addi	r6,sp,120
  806a20:	08106740 	call	810674 <__sprint_r>
  806a24:	10398b1e 	bne	r2,zero,805054 <__alt_data_end+0xff805054>
  806a28:	dc002617 	ldw	r16,152(sp)
  806a2c:	d8c02017 	ldw	r3,128(sp)
  806a30:	d8801f17 	ldw	r2,124(sp)
  806a34:	da000404 	addi	r8,sp,16
  806a38:	003ec906 	br	806560 <__alt_data_end+0xff806560>
  806a3c:	483e1c1e 	bne	r9,zero,8062b0 <__alt_data_end+0xff8062b0>
  806a40:	9013883a 	mov	r9,r18
  806a44:	003e1a06 	br	8062b0 <__alt_data_end+0xff8062b0>
  806a48:	02400184 	movi	r9,6
  806a4c:	003e1806 	br	8062b0 <__alt_data_end+0xff8062b0>
  806a50:	d8c03417 	ldw	r3,208(sp)
  806a54:	00c04b0e 	bge	zero,r3,806b84 <___vfprintf_internal_r+0x1f00>
  806a58:	04800044 	movi	r18,1
  806a5c:	dac03317 	ldw	r11,204(sp)
  806a60:	92e5883a 	add	r18,r18,r11
  806a64:	9005883a 	mov	r2,r18
  806a68:	903e5e0e 	bge	r18,zero,8063e4 <__alt_data_end+0xff8063e4>
  806a6c:	0005883a 	mov	r2,zero
  806a70:	003e5c06 	br	8063e4 <__alt_data_end+0xff8063e4>
  806a74:	00c00b44 	movi	r3,45
  806a78:	64a0003c 	xorhi	r18,r12,32768
  806a7c:	d8c02b05 	stb	r3,172(sp)
  806a80:	003e1106 	br	8062c8 <__alt_data_end+0xff8062c8>
  806a84:	4f000044 	addi	fp,r9,1
  806a88:	003e1606 	br	8062e4 <__alt_data_end+0xff8062e4>
  806a8c:	d8c02617 	ldw	r3,152(sp)
  806a90:	d8c03415 	stw	r3,208(sp)
  806a94:	00c0350e 	bge	zero,r3,806b6c <___vfprintf_internal_r+0x1ee8>
  806a98:	4800081e 	bne	r9,zero,806abc <___vfprintf_internal_r+0x1e38>
  806a9c:	8c40004c 	andi	r17,r17,1
  806aa0:	8800061e 	bne	r17,zero,806abc <___vfprintf_internal_r+0x1e38>
  806aa4:	1805883a 	mov	r2,r3
  806aa8:	183e4d0e 	bge	r3,zero,8063e0 <__alt_data_end+0xff8063e0>
  806aac:	0005883a 	mov	r2,zero
  806ab0:	003e4b06 	br	8063e0 <__alt_data_end+0xff8063e0>
  806ab4:	d8802117 	ldw	r2,132(sp)
  806ab8:	003e3706 	br	806398 <__alt_data_end+0xff806398>
  806abc:	dac03417 	ldw	r11,208(sp)
  806ac0:	4a400044 	addi	r9,r9,1
  806ac4:	5a65883a 	add	r18,r11,r9
  806ac8:	9005883a 	mov	r2,r18
  806acc:	903e450e 	bge	r18,zero,8063e4 <__alt_data_end+0xff8063e4>
  806ad0:	003fe606 	br	806a6c <__alt_data_end+0xff806a6c>
  806ad4:	db003417 	ldw	r12,208(sp)
  806ad8:	64800044 	addi	r18,r12,1
  806adc:	9005883a 	mov	r2,r18
  806ae0:	903e400e 	bge	r18,zero,8063e4 <__alt_data_end+0xff8063e4>
  806ae4:	003fe106 	br	806a6c <__alt_data_end+0xff806a6c>
  806ae8:	d9003717 	ldw	r4,220(sp)
  806aec:	900b883a 	mov	r5,r18
  806af0:	000d883a 	mov	r6,zero
  806af4:	000f883a 	mov	r7,zero
  806af8:	da003f15 	stw	r8,252(sp)
  806afc:	da403e15 	stw	r9,248(sp)
  806b00:	da803d15 	stw	r10,244(sp)
  806b04:	0815f1c0 	call	815f1c <__eqdf2>
  806b08:	da003f17 	ldw	r8,252(sp)
  806b0c:	da403e17 	ldw	r9,248(sp)
  806b10:	da803d17 	ldw	r10,244(sp)
  806b14:	103f1f26 	beq	r2,zero,806794 <__alt_data_end+0xff806794>
  806b18:	00800044 	movi	r2,1
  806b1c:	1707c83a 	sub	r3,r2,fp
  806b20:	d8c02615 	stw	r3,152(sp)
  806b24:	003f1c06 	br	806798 <__alt_data_end+0xff806798>
  806b28:	00800c04 	movi	r2,48
  806b2c:	e0c00c04 	addi	r3,fp,48
  806b30:	d8802345 	stb	r2,141(sp)
  806b34:	d8c02385 	stb	r3,142(sp)
  806b38:	d88023c4 	addi	r2,sp,143
  806b3c:	dd4022c4 	addi	r21,sp,139
  806b40:	003fa906 	br	8069e8 <__alt_data_end+0xff8069e8>
  806b44:	0005883a 	mov	r2,zero
  806b48:	003f3c06 	br	80683c <__alt_data_end+0xff80683c>
  806b4c:	dac02d17 	ldw	r11,180(sp)
  806b50:	5a400017 	ldw	r9,0(r11)
  806b54:	5ac00104 	addi	r11,r11,4
  806b58:	dac02d15 	stw	r11,180(sp)
  806b5c:	483ec80e 	bge	r9,zero,806680 <__alt_data_end+0xff806680>
  806b60:	027fffc4 	movi	r9,-1
  806b64:	1c000047 	ldb	r16,1(r3)
  806b68:	0038ab06 	br	804e18 <__alt_data_end+0xff804e18>
  806b6c:	4800111e 	bne	r9,zero,806bb4 <___vfprintf_internal_r+0x1f30>
  806b70:	8c40004c 	andi	r17,r17,1
  806b74:	88000f1e 	bne	r17,zero,806bb4 <___vfprintf_internal_r+0x1f30>
  806b78:	00800044 	movi	r2,1
  806b7c:	1025883a 	mov	r18,r2
  806b80:	003e1806 	br	8063e4 <__alt_data_end+0xff8063e4>
  806b84:	04800084 	movi	r18,2
  806b88:	90e5c83a 	sub	r18,r18,r3
  806b8c:	003fb306 	br	806a5c <__alt_data_end+0xff806a5c>
  806b90:	0005883a 	mov	r2,zero
  806b94:	003f9d06 	br	806a0c <__alt_data_end+0xff806a0c>
  806b98:	88a2703a 	and	r17,r17,r2
  806b9c:	883f9926 	beq	r17,zero,806a04 <__alt_data_end+0xff806a04>
  806ba0:	003f9706 	br	806a00 <__alt_data_end+0xff806a00>
  806ba4:	00800b44 	movi	r2,45
  806ba8:	0739c83a 	sub	fp,zero,fp
  806bac:	d8802305 	stb	r2,140(sp)
  806bb0:	003f6606 	br	80694c <__alt_data_end+0xff80694c>
  806bb4:	4c800084 	addi	r18,r9,2
  806bb8:	9005883a 	mov	r2,r18
  806bbc:	903e090e 	bge	r18,zero,8063e4 <__alt_data_end+0xff8063e4>
  806bc0:	003faa06 	br	806a6c <__alt_data_end+0xff806a6c>
  806bc4:	d8802344 	addi	r2,sp,141
  806bc8:	003f8706 	br	8069e8 <__alt_data_end+0xff8069e8>
  806bcc:	d8c02617 	ldw	r3,152(sp)
  806bd0:	003f5806 	br	806934 <__alt_data_end+0xff806934>

00806bd4 <__vfprintf_internal>:
  806bd4:	2007883a 	mov	r3,r4
  806bd8:	010020b4 	movhi	r4,130
  806bdc:	2137f804 	addi	r4,r4,-8224
  806be0:	21000017 	ldw	r4,0(r4)
  806be4:	2805883a 	mov	r2,r5
  806be8:	300f883a 	mov	r7,r6
  806bec:	180b883a 	mov	r5,r3
  806bf0:	100d883a 	mov	r6,r2
  806bf4:	0804c841 	jmpi	804c84 <___vfprintf_internal_r>

00806bf8 <__sbprintf>:
  806bf8:	2880030b 	ldhu	r2,12(r5)
  806bfc:	2ac01917 	ldw	r11,100(r5)
  806c00:	2a80038b 	ldhu	r10,14(r5)
  806c04:	2a400717 	ldw	r9,28(r5)
  806c08:	2a000917 	ldw	r8,36(r5)
  806c0c:	defee204 	addi	sp,sp,-1144
  806c10:	00c10004 	movi	r3,1024
  806c14:	dc011a15 	stw	r16,1128(sp)
  806c18:	10bfff4c 	andi	r2,r2,65533
  806c1c:	2821883a 	mov	r16,r5
  806c20:	d8cb883a 	add	r5,sp,r3
  806c24:	dc811c15 	stw	r18,1136(sp)
  806c28:	dc411b15 	stw	r17,1132(sp)
  806c2c:	dfc11d15 	stw	ra,1140(sp)
  806c30:	2025883a 	mov	r18,r4
  806c34:	d881030d 	sth	r2,1036(sp)
  806c38:	dac11915 	stw	r11,1124(sp)
  806c3c:	da81038d 	sth	r10,1038(sp)
  806c40:	da410715 	stw	r9,1052(sp)
  806c44:	da010915 	stw	r8,1060(sp)
  806c48:	dec10015 	stw	sp,1024(sp)
  806c4c:	dec10415 	stw	sp,1040(sp)
  806c50:	d8c10215 	stw	r3,1032(sp)
  806c54:	d8c10515 	stw	r3,1044(sp)
  806c58:	d8010615 	stw	zero,1048(sp)
  806c5c:	0804c840 	call	804c84 <___vfprintf_internal_r>
  806c60:	1023883a 	mov	r17,r2
  806c64:	10000416 	blt	r2,zero,806c78 <__sbprintf+0x80>
  806c68:	9009883a 	mov	r4,r18
  806c6c:	d9410004 	addi	r5,sp,1024
  806c70:	08011c80 	call	8011c8 <_fflush_r>
  806c74:	10000d1e 	bne	r2,zero,806cac <__sbprintf+0xb4>
  806c78:	d8c1030b 	ldhu	r3,1036(sp)
  806c7c:	18c0100c 	andi	r3,r3,64
  806c80:	18000326 	beq	r3,zero,806c90 <__sbprintf+0x98>
  806c84:	8080030b 	ldhu	r2,12(r16)
  806c88:	10801014 	ori	r2,r2,64
  806c8c:	8080030d 	sth	r2,12(r16)
  806c90:	8805883a 	mov	r2,r17
  806c94:	dfc11d17 	ldw	ra,1140(sp)
  806c98:	dc811c17 	ldw	r18,1136(sp)
  806c9c:	dc411b17 	ldw	r17,1132(sp)
  806ca0:	dc011a17 	ldw	r16,1128(sp)
  806ca4:	dec11e04 	addi	sp,sp,1144
  806ca8:	f800283a 	ret
  806cac:	047fffc4 	movi	r17,-1
  806cb0:	003ff106 	br	806c78 <__alt_data_end+0xff806c78>

00806cb4 <_write_r>:
  806cb4:	defffd04 	addi	sp,sp,-12
  806cb8:	dc000015 	stw	r16,0(sp)
  806cbc:	040020b4 	movhi	r16,130
  806cc0:	dc400115 	stw	r17,4(sp)
  806cc4:	843f6304 	addi	r16,r16,-628
  806cc8:	2023883a 	mov	r17,r4
  806ccc:	2809883a 	mov	r4,r5
  806cd0:	300b883a 	mov	r5,r6
  806cd4:	380d883a 	mov	r6,r7
  806cd8:	dfc00215 	stw	ra,8(sp)
  806cdc:	80000015 	stw	zero,0(r16)
  806ce0:	081824c0 	call	81824c <write>
  806ce4:	00ffffc4 	movi	r3,-1
  806ce8:	10c00526 	beq	r2,r3,806d00 <_write_r+0x4c>
  806cec:	dfc00217 	ldw	ra,8(sp)
  806cf0:	dc400117 	ldw	r17,4(sp)
  806cf4:	dc000017 	ldw	r16,0(sp)
  806cf8:	dec00304 	addi	sp,sp,12
  806cfc:	f800283a 	ret
  806d00:	80c00017 	ldw	r3,0(r16)
  806d04:	183ff926 	beq	r3,zero,806cec <__alt_data_end+0xff806cec>
  806d08:	88c00015 	stw	r3,0(r17)
  806d0c:	003ff706 	br	806cec <__alt_data_end+0xff806cec>

00806d10 <__swsetup_r>:
  806d10:	008020b4 	movhi	r2,130
  806d14:	defffd04 	addi	sp,sp,-12
  806d18:	10b7f804 	addi	r2,r2,-8224
  806d1c:	dc400115 	stw	r17,4(sp)
  806d20:	2023883a 	mov	r17,r4
  806d24:	11000017 	ldw	r4,0(r2)
  806d28:	dc000015 	stw	r16,0(sp)
  806d2c:	dfc00215 	stw	ra,8(sp)
  806d30:	2821883a 	mov	r16,r5
  806d34:	20000226 	beq	r4,zero,806d40 <__swsetup_r+0x30>
  806d38:	20c00e17 	ldw	r3,56(r4)
  806d3c:	18003126 	beq	r3,zero,806e04 <__swsetup_r+0xf4>
  806d40:	8080030b 	ldhu	r2,12(r16)
  806d44:	10c0020c 	andi	r3,r2,8
  806d48:	100d883a 	mov	r6,r2
  806d4c:	18000f26 	beq	r3,zero,806d8c <__swsetup_r+0x7c>
  806d50:	80c00417 	ldw	r3,16(r16)
  806d54:	18001526 	beq	r3,zero,806dac <__swsetup_r+0x9c>
  806d58:	1100004c 	andi	r4,r2,1
  806d5c:	20001c1e 	bne	r4,zero,806dd0 <__swsetup_r+0xc0>
  806d60:	1080008c 	andi	r2,r2,2
  806d64:	1000291e 	bne	r2,zero,806e0c <__swsetup_r+0xfc>
  806d68:	80800517 	ldw	r2,20(r16)
  806d6c:	80800215 	stw	r2,8(r16)
  806d70:	18001c26 	beq	r3,zero,806de4 <__swsetup_r+0xd4>
  806d74:	0005883a 	mov	r2,zero
  806d78:	dfc00217 	ldw	ra,8(sp)
  806d7c:	dc400117 	ldw	r17,4(sp)
  806d80:	dc000017 	ldw	r16,0(sp)
  806d84:	dec00304 	addi	sp,sp,12
  806d88:	f800283a 	ret
  806d8c:	3080040c 	andi	r2,r6,16
  806d90:	10002e26 	beq	r2,zero,806e4c <__swsetup_r+0x13c>
  806d94:	3080010c 	andi	r2,r6,4
  806d98:	10001e1e 	bne	r2,zero,806e14 <__swsetup_r+0x104>
  806d9c:	80c00417 	ldw	r3,16(r16)
  806da0:	30800214 	ori	r2,r6,8
  806da4:	8080030d 	sth	r2,12(r16)
  806da8:	183feb1e 	bne	r3,zero,806d58 <__alt_data_end+0xff806d58>
  806dac:	1140a00c 	andi	r5,r2,640
  806db0:	01008004 	movi	r4,512
  806db4:	293fe826 	beq	r5,r4,806d58 <__alt_data_end+0xff806d58>
  806db8:	8809883a 	mov	r4,r17
  806dbc:	800b883a 	mov	r5,r16
  806dc0:	08023d40 	call	8023d4 <__smakebuf_r>
  806dc4:	8080030b 	ldhu	r2,12(r16)
  806dc8:	80c00417 	ldw	r3,16(r16)
  806dcc:	003fe206 	br	806d58 <__alt_data_end+0xff806d58>
  806dd0:	80800517 	ldw	r2,20(r16)
  806dd4:	80000215 	stw	zero,8(r16)
  806dd8:	0085c83a 	sub	r2,zero,r2
  806ddc:	80800615 	stw	r2,24(r16)
  806de0:	183fe41e 	bne	r3,zero,806d74 <__alt_data_end+0xff806d74>
  806de4:	80c0030b 	ldhu	r3,12(r16)
  806de8:	0005883a 	mov	r2,zero
  806dec:	1900200c 	andi	r4,r3,128
  806df0:	203fe126 	beq	r4,zero,806d78 <__alt_data_end+0xff806d78>
  806df4:	18c01014 	ori	r3,r3,64
  806df8:	80c0030d 	sth	r3,12(r16)
  806dfc:	00bfffc4 	movi	r2,-1
  806e00:	003fdd06 	br	806d78 <__alt_data_end+0xff806d78>
  806e04:	08015a40 	call	8015a4 <__sinit>
  806e08:	003fcd06 	br	806d40 <__alt_data_end+0xff806d40>
  806e0c:	0005883a 	mov	r2,zero
  806e10:	003fd606 	br	806d6c <__alt_data_end+0xff806d6c>
  806e14:	81400c17 	ldw	r5,48(r16)
  806e18:	28000626 	beq	r5,zero,806e34 <__swsetup_r+0x124>
  806e1c:	80801004 	addi	r2,r16,64
  806e20:	28800326 	beq	r5,r2,806e30 <__swsetup_r+0x120>
  806e24:	8809883a 	mov	r4,r17
  806e28:	08018700 	call	801870 <_free_r>
  806e2c:	8180030b 	ldhu	r6,12(r16)
  806e30:	80000c15 	stw	zero,48(r16)
  806e34:	80c00417 	ldw	r3,16(r16)
  806e38:	00bff6c4 	movi	r2,-37
  806e3c:	118c703a 	and	r6,r2,r6
  806e40:	80000115 	stw	zero,4(r16)
  806e44:	80c00015 	stw	r3,0(r16)
  806e48:	003fd506 	br	806da0 <__alt_data_end+0xff806da0>
  806e4c:	00800244 	movi	r2,9
  806e50:	88800015 	stw	r2,0(r17)
  806e54:	30801014 	ori	r2,r6,64
  806e58:	8080030d 	sth	r2,12(r16)
  806e5c:	00bfffc4 	movi	r2,-1
  806e60:	003fc506 	br	806d78 <__alt_data_end+0xff806d78>

00806e64 <_close_r>:
  806e64:	defffd04 	addi	sp,sp,-12
  806e68:	dc000015 	stw	r16,0(sp)
  806e6c:	040020b4 	movhi	r16,130
  806e70:	dc400115 	stw	r17,4(sp)
  806e74:	843f6304 	addi	r16,r16,-628
  806e78:	2023883a 	mov	r17,r4
  806e7c:	2809883a 	mov	r4,r5
  806e80:	dfc00215 	stw	ra,8(sp)
  806e84:	80000015 	stw	zero,0(r16)
  806e88:	081759c0 	call	81759c <close>
  806e8c:	00ffffc4 	movi	r3,-1
  806e90:	10c00526 	beq	r2,r3,806ea8 <_close_r+0x44>
  806e94:	dfc00217 	ldw	ra,8(sp)
  806e98:	dc400117 	ldw	r17,4(sp)
  806e9c:	dc000017 	ldw	r16,0(sp)
  806ea0:	dec00304 	addi	sp,sp,12
  806ea4:	f800283a 	ret
  806ea8:	80c00017 	ldw	r3,0(r16)
  806eac:	183ff926 	beq	r3,zero,806e94 <__alt_data_end+0xff806e94>
  806eb0:	88c00015 	stw	r3,0(r17)
  806eb4:	003ff706 	br	806e94 <__alt_data_end+0xff806e94>

00806eb8 <quorem>:
  806eb8:	defff704 	addi	sp,sp,-36
  806ebc:	dc800215 	stw	r18,8(sp)
  806ec0:	20800417 	ldw	r2,16(r4)
  806ec4:	2c800417 	ldw	r18,16(r5)
  806ec8:	dfc00815 	stw	ra,32(sp)
  806ecc:	ddc00715 	stw	r23,28(sp)
  806ed0:	dd800615 	stw	r22,24(sp)
  806ed4:	dd400515 	stw	r21,20(sp)
  806ed8:	dd000415 	stw	r20,16(sp)
  806edc:	dcc00315 	stw	r19,12(sp)
  806ee0:	dc400115 	stw	r17,4(sp)
  806ee4:	dc000015 	stw	r16,0(sp)
  806ee8:	14807116 	blt	r2,r18,8070b0 <quorem+0x1f8>
  806eec:	94bfffc4 	addi	r18,r18,-1
  806ef0:	94ad883a 	add	r22,r18,r18
  806ef4:	b5ad883a 	add	r22,r22,r22
  806ef8:	2c400504 	addi	r17,r5,20
  806efc:	8da9883a 	add	r20,r17,r22
  806f00:	25400504 	addi	r21,r4,20
  806f04:	282f883a 	mov	r23,r5
  806f08:	adad883a 	add	r22,r21,r22
  806f0c:	a1400017 	ldw	r5,0(r20)
  806f10:	2021883a 	mov	r16,r4
  806f14:	b1000017 	ldw	r4,0(r22)
  806f18:	29400044 	addi	r5,r5,1
  806f1c:	0814bc00 	call	814bc0 <__udivsi3>
  806f20:	1027883a 	mov	r19,r2
  806f24:	10002c26 	beq	r2,zero,806fd8 <quorem+0x120>
  806f28:	a813883a 	mov	r9,r21
  806f2c:	8811883a 	mov	r8,r17
  806f30:	0009883a 	mov	r4,zero
  806f34:	000d883a 	mov	r6,zero
  806f38:	41c00017 	ldw	r7,0(r8)
  806f3c:	49400017 	ldw	r5,0(r9)
  806f40:	42000104 	addi	r8,r8,4
  806f44:	38bfffcc 	andi	r2,r7,65535
  806f48:	14c5383a 	mul	r2,r2,r19
  806f4c:	380ed43a 	srli	r7,r7,16
  806f50:	28ffffcc 	andi	r3,r5,65535
  806f54:	2085883a 	add	r2,r4,r2
  806f58:	1008d43a 	srli	r4,r2,16
  806f5c:	3ccf383a 	mul	r7,r7,r19
  806f60:	198d883a 	add	r6,r3,r6
  806f64:	10ffffcc 	andi	r3,r2,65535
  806f68:	30c7c83a 	sub	r3,r6,r3
  806f6c:	280ad43a 	srli	r5,r5,16
  806f70:	21c9883a 	add	r4,r4,r7
  806f74:	180dd43a 	srai	r6,r3,16
  806f78:	20bfffcc 	andi	r2,r4,65535
  806f7c:	288bc83a 	sub	r5,r5,r2
  806f80:	298b883a 	add	r5,r5,r6
  806f84:	280e943a 	slli	r7,r5,16
  806f88:	18ffffcc 	andi	r3,r3,65535
  806f8c:	2008d43a 	srli	r4,r4,16
  806f90:	38ceb03a 	or	r7,r7,r3
  806f94:	49c00015 	stw	r7,0(r9)
  806f98:	280dd43a 	srai	r6,r5,16
  806f9c:	4a400104 	addi	r9,r9,4
  806fa0:	a23fe52e 	bgeu	r20,r8,806f38 <__alt_data_end+0xff806f38>
  806fa4:	b0800017 	ldw	r2,0(r22)
  806fa8:	10000b1e 	bne	r2,zero,806fd8 <quorem+0x120>
  806fac:	b0bfff04 	addi	r2,r22,-4
  806fb0:	a880082e 	bgeu	r21,r2,806fd4 <quorem+0x11c>
  806fb4:	b0ffff17 	ldw	r3,-4(r22)
  806fb8:	18000326 	beq	r3,zero,806fc8 <quorem+0x110>
  806fbc:	00000506 	br	806fd4 <quorem+0x11c>
  806fc0:	10c00017 	ldw	r3,0(r2)
  806fc4:	1800031e 	bne	r3,zero,806fd4 <quorem+0x11c>
  806fc8:	10bfff04 	addi	r2,r2,-4
  806fcc:	94bfffc4 	addi	r18,r18,-1
  806fd0:	a8bffb36 	bltu	r21,r2,806fc0 <__alt_data_end+0xff806fc0>
  806fd4:	84800415 	stw	r18,16(r16)
  806fd8:	8009883a 	mov	r4,r16
  806fdc:	b80b883a 	mov	r5,r23
  806fe0:	0809d800 	call	809d80 <__mcmp>
  806fe4:	10002616 	blt	r2,zero,807080 <quorem+0x1c8>
  806fe8:	9cc00044 	addi	r19,r19,1
  806fec:	a80d883a 	mov	r6,r21
  806ff0:	000b883a 	mov	r5,zero
  806ff4:	31000017 	ldw	r4,0(r6)
  806ff8:	88800017 	ldw	r2,0(r17)
  806ffc:	31800104 	addi	r6,r6,4
  807000:	20ffffcc 	andi	r3,r4,65535
  807004:	194b883a 	add	r5,r3,r5
  807008:	10ffffcc 	andi	r3,r2,65535
  80700c:	28c7c83a 	sub	r3,r5,r3
  807010:	1004d43a 	srli	r2,r2,16
  807014:	2008d43a 	srli	r4,r4,16
  807018:	180bd43a 	srai	r5,r3,16
  80701c:	18ffffcc 	andi	r3,r3,65535
  807020:	2089c83a 	sub	r4,r4,r2
  807024:	2149883a 	add	r4,r4,r5
  807028:	2004943a 	slli	r2,r4,16
  80702c:	8c400104 	addi	r17,r17,4
  807030:	200bd43a 	srai	r5,r4,16
  807034:	10c6b03a 	or	r3,r2,r3
  807038:	30ffff15 	stw	r3,-4(r6)
  80703c:	a47fed2e 	bgeu	r20,r17,806ff4 <__alt_data_end+0xff806ff4>
  807040:	9485883a 	add	r2,r18,r18
  807044:	1085883a 	add	r2,r2,r2
  807048:	a887883a 	add	r3,r21,r2
  80704c:	18800017 	ldw	r2,0(r3)
  807050:	10000b1e 	bne	r2,zero,807080 <quorem+0x1c8>
  807054:	18bfff04 	addi	r2,r3,-4
  807058:	a880082e 	bgeu	r21,r2,80707c <quorem+0x1c4>
  80705c:	18ffff17 	ldw	r3,-4(r3)
  807060:	18000326 	beq	r3,zero,807070 <quorem+0x1b8>
  807064:	00000506 	br	80707c <quorem+0x1c4>
  807068:	10c00017 	ldw	r3,0(r2)
  80706c:	1800031e 	bne	r3,zero,80707c <quorem+0x1c4>
  807070:	10bfff04 	addi	r2,r2,-4
  807074:	94bfffc4 	addi	r18,r18,-1
  807078:	a8bffb36 	bltu	r21,r2,807068 <__alt_data_end+0xff807068>
  80707c:	84800415 	stw	r18,16(r16)
  807080:	9805883a 	mov	r2,r19
  807084:	dfc00817 	ldw	ra,32(sp)
  807088:	ddc00717 	ldw	r23,28(sp)
  80708c:	dd800617 	ldw	r22,24(sp)
  807090:	dd400517 	ldw	r21,20(sp)
  807094:	dd000417 	ldw	r20,16(sp)
  807098:	dcc00317 	ldw	r19,12(sp)
  80709c:	dc800217 	ldw	r18,8(sp)
  8070a0:	dc400117 	ldw	r17,4(sp)
  8070a4:	dc000017 	ldw	r16,0(sp)
  8070a8:	dec00904 	addi	sp,sp,36
  8070ac:	f800283a 	ret
  8070b0:	0005883a 	mov	r2,zero
  8070b4:	003ff306 	br	807084 <__alt_data_end+0xff807084>

008070b8 <_dtoa_r>:
  8070b8:	20801017 	ldw	r2,64(r4)
  8070bc:	deffde04 	addi	sp,sp,-136
  8070c0:	dd401d15 	stw	r21,116(sp)
  8070c4:	dcc01b15 	stw	r19,108(sp)
  8070c8:	dc801a15 	stw	r18,104(sp)
  8070cc:	dc401915 	stw	r17,100(sp)
  8070d0:	dc001815 	stw	r16,96(sp)
  8070d4:	dfc02115 	stw	ra,132(sp)
  8070d8:	df002015 	stw	fp,128(sp)
  8070dc:	ddc01f15 	stw	r23,124(sp)
  8070e0:	dd801e15 	stw	r22,120(sp)
  8070e4:	dd001c15 	stw	r20,112(sp)
  8070e8:	d9c00315 	stw	r7,12(sp)
  8070ec:	2021883a 	mov	r16,r4
  8070f0:	302b883a 	mov	r21,r6
  8070f4:	2825883a 	mov	r18,r5
  8070f8:	dc402417 	ldw	r17,144(sp)
  8070fc:	3027883a 	mov	r19,r6
  807100:	10000826 	beq	r2,zero,807124 <_dtoa_r+0x6c>
  807104:	21801117 	ldw	r6,68(r4)
  807108:	00c00044 	movi	r3,1
  80710c:	100b883a 	mov	r5,r2
  807110:	1986983a 	sll	r3,r3,r6
  807114:	11800115 	stw	r6,4(r2)
  807118:	10c00215 	stw	r3,8(r2)
  80711c:	08095540 	call	809554 <_Bfree>
  807120:	80001015 	stw	zero,64(r16)
  807124:	a8002d16 	blt	r21,zero,8071dc <_dtoa_r+0x124>
  807128:	88000015 	stw	zero,0(r17)
  80712c:	a8dffc2c 	andhi	r3,r21,32752
  807130:	009ffc34 	movhi	r2,32752
  807134:	18801b26 	beq	r3,r2,8071a4 <_dtoa_r+0xec>
  807138:	9009883a 	mov	r4,r18
  80713c:	980b883a 	mov	r5,r19
  807140:	000d883a 	mov	r6,zero
  807144:	000f883a 	mov	r7,zero
  807148:	0815f1c0 	call	815f1c <__eqdf2>
  80714c:	10002a1e 	bne	r2,zero,8071f8 <_dtoa_r+0x140>
  807150:	d8c02317 	ldw	r3,140(sp)
  807154:	d9002517 	ldw	r4,148(sp)
  807158:	00800044 	movi	r2,1
  80715c:	18800015 	stw	r2,0(r3)
  807160:	2001a226 	beq	r4,zero,8077ec <_dtoa_r+0x734>
  807164:	008020b4 	movhi	r2,130
  807168:	10aee744 	addi	r2,r2,-17507
  80716c:	20800015 	stw	r2,0(r4)
  807170:	10bfffc4 	addi	r2,r2,-1
  807174:	dfc02117 	ldw	ra,132(sp)
  807178:	df002017 	ldw	fp,128(sp)
  80717c:	ddc01f17 	ldw	r23,124(sp)
  807180:	dd801e17 	ldw	r22,120(sp)
  807184:	dd401d17 	ldw	r21,116(sp)
  807188:	dd001c17 	ldw	r20,112(sp)
  80718c:	dcc01b17 	ldw	r19,108(sp)
  807190:	dc801a17 	ldw	r18,104(sp)
  807194:	dc401917 	ldw	r17,100(sp)
  807198:	dc001817 	ldw	r16,96(sp)
  80719c:	dec02204 	addi	sp,sp,136
  8071a0:	f800283a 	ret
  8071a4:	d8c02317 	ldw	r3,140(sp)
  8071a8:	0089c3c4 	movi	r2,9999
  8071ac:	18800015 	stw	r2,0(r3)
  8071b0:	90017c26 	beq	r18,zero,8077a4 <_dtoa_r+0x6ec>
  8071b4:	008020b4 	movhi	r2,130
  8071b8:	10af9304 	addi	r2,r2,-16820
  8071bc:	d9002517 	ldw	r4,148(sp)
  8071c0:	203fec26 	beq	r4,zero,807174 <__alt_data_end+0xff807174>
  8071c4:	10c000c7 	ldb	r3,3(r2)
  8071c8:	18017d1e 	bne	r3,zero,8077c0 <_dtoa_r+0x708>
  8071cc:	10c000c4 	addi	r3,r2,3
  8071d0:	d9802517 	ldw	r6,148(sp)
  8071d4:	30c00015 	stw	r3,0(r6)
  8071d8:	003fe606 	br	807174 <__alt_data_end+0xff807174>
  8071dc:	04e00034 	movhi	r19,32768
  8071e0:	9cffffc4 	addi	r19,r19,-1
  8071e4:	00800044 	movi	r2,1
  8071e8:	ace6703a 	and	r19,r21,r19
  8071ec:	88800015 	stw	r2,0(r17)
  8071f0:	982b883a 	mov	r21,r19
  8071f4:	003fcd06 	br	80712c <__alt_data_end+0xff80712c>
  8071f8:	d8800204 	addi	r2,sp,8
  8071fc:	a822d53a 	srli	r17,r21,20
  807200:	d8800015 	stw	r2,0(sp)
  807204:	8009883a 	mov	r4,r16
  807208:	900b883a 	mov	r5,r18
  80720c:	980d883a 	mov	r6,r19
  807210:	d9c00104 	addi	r7,sp,4
  807214:	080a0f40 	call	80a0f4 <__d2b>
  807218:	1039883a 	mov	fp,r2
  80721c:	88016a1e 	bne	r17,zero,8077c8 <_dtoa_r+0x710>
  807220:	dd000217 	ldw	r20,8(sp)
  807224:	dc400117 	ldw	r17,4(sp)
  807228:	00befbc4 	movi	r2,-1041
  80722c:	a463883a 	add	r17,r20,r17
  807230:	8882ea16 	blt	r17,r2,807ddc <_dtoa_r+0xd24>
  807234:	00bf0384 	movi	r2,-1010
  807238:	1445c83a 	sub	r2,r2,r17
  80723c:	89010484 	addi	r4,r17,1042
  807240:	a8aa983a 	sll	r21,r21,r2
  807244:	9108d83a 	srl	r4,r18,r4
  807248:	a908b03a 	or	r4,r21,r4
  80724c:	08172ac0 	call	8172ac <__floatunsidf>
  807250:	017f8434 	movhi	r5,65040
  807254:	01800044 	movi	r6,1
  807258:	1009883a 	mov	r4,r2
  80725c:	194b883a 	add	r5,r3,r5
  807260:	8c7fffc4 	addi	r17,r17,-1
  807264:	d9800f15 	stw	r6,60(sp)
  807268:	000d883a 	mov	r6,zero
  80726c:	01cffe34 	movhi	r7,16376
  807270:	08168840 	call	816884 <__subdf3>
  807274:	0198dbf4 	movhi	r6,25455
  807278:	01cff4f4 	movhi	r7,16339
  80727c:	1009883a 	mov	r4,r2
  807280:	180b883a 	mov	r5,r3
  807284:	3190d844 	addi	r6,r6,17249
  807288:	39e1e9c4 	addi	r7,r7,-30809
  80728c:	08161600 	call	816160 <__muldf3>
  807290:	01a2d874 	movhi	r6,35681
  807294:	01cff1f4 	movhi	r7,16327
  807298:	180b883a 	mov	r5,r3
  80729c:	31b22cc4 	addi	r6,r6,-14157
  8072a0:	39e28a04 	addi	r7,r7,-30168
  8072a4:	1009883a 	mov	r4,r2
  8072a8:	0814db40 	call	814db4 <__adddf3>
  8072ac:	8809883a 	mov	r4,r17
  8072b0:	102d883a 	mov	r22,r2
  8072b4:	182b883a 	mov	r21,r3
  8072b8:	08171dc0 	call	8171dc <__floatsidf>
  8072bc:	019427f4 	movhi	r6,20639
  8072c0:	01cff4f4 	movhi	r7,16339
  8072c4:	1009883a 	mov	r4,r2
  8072c8:	180b883a 	mov	r5,r3
  8072cc:	319e7ec4 	addi	r6,r6,31227
  8072d0:	39d104c4 	addi	r7,r7,17427
  8072d4:	08161600 	call	816160 <__muldf3>
  8072d8:	b009883a 	mov	r4,r22
  8072dc:	a80b883a 	mov	r5,r21
  8072e0:	100d883a 	mov	r6,r2
  8072e4:	180f883a 	mov	r7,r3
  8072e8:	0814db40 	call	814db4 <__adddf3>
  8072ec:	1009883a 	mov	r4,r2
  8072f0:	180b883a 	mov	r5,r3
  8072f4:	102d883a 	mov	r22,r2
  8072f8:	182b883a 	mov	r21,r3
  8072fc:	08171540 	call	817154 <__fixdfsi>
  807300:	b009883a 	mov	r4,r22
  807304:	a80b883a 	mov	r5,r21
  807308:	000d883a 	mov	r6,zero
  80730c:	000f883a 	mov	r7,zero
  807310:	d8800515 	stw	r2,20(sp)
  807314:	08160800 	call	816080 <__ledf2>
  807318:	10023116 	blt	r2,zero,807be0 <_dtoa_r+0xb28>
  80731c:	d8c00517 	ldw	r3,20(sp)
  807320:	00800584 	movi	r2,22
  807324:	10c21f36 	bltu	r2,r3,807ba4 <_dtoa_r+0xaec>
  807328:	180490fa 	slli	r2,r3,3
  80732c:	00c020b4 	movhi	r3,130
  807330:	18efae04 	addi	r3,r3,-16712
  807334:	1885883a 	add	r2,r3,r2
  807338:	11000017 	ldw	r4,0(r2)
  80733c:	11400117 	ldw	r5,4(r2)
  807340:	900d883a 	mov	r6,r18
  807344:	980f883a 	mov	r7,r19
  807348:	0815fa00 	call	815fa0 <__gedf2>
  80734c:	0082a70e 	bge	zero,r2,807dec <_dtoa_r+0xd34>
  807350:	d9000517 	ldw	r4,20(sp)
  807354:	d8000d15 	stw	zero,52(sp)
  807358:	213fffc4 	addi	r4,r4,-1
  80735c:	d9000515 	stw	r4,20(sp)
  807360:	a463c83a 	sub	r17,r20,r17
  807364:	8dbfffc4 	addi	r22,r17,-1
  807368:	b0021916 	blt	r22,zero,807bd0 <_dtoa_r+0xb18>
  80736c:	d8000815 	stw	zero,32(sp)
  807370:	d8800517 	ldw	r2,20(sp)
  807374:	10020e16 	blt	r2,zero,807bb0 <_dtoa_r+0xaf8>
  807378:	b0ad883a 	add	r22,r22,r2
  80737c:	d8800a15 	stw	r2,40(sp)
  807380:	d8000915 	stw	zero,36(sp)
  807384:	d8c00317 	ldw	r3,12(sp)
  807388:	00800244 	movi	r2,9
  80738c:	10c11a36 	bltu	r2,r3,8077f8 <_dtoa_r+0x740>
  807390:	00800144 	movi	r2,5
  807394:	10c4fc0e 	bge	r2,r3,808788 <_dtoa_r+0x16d0>
  807398:	18ffff04 	addi	r3,r3,-4
  80739c:	d8c00315 	stw	r3,12(sp)
  8073a0:	0029883a 	mov	r20,zero
  8073a4:	d9800317 	ldw	r6,12(sp)
  8073a8:	008000c4 	movi	r2,3
  8073ac:	3083bd26 	beq	r6,r2,8082a4 <_dtoa_r+0x11ec>
  8073b0:	1183670e 	bge	r2,r6,808150 <_dtoa_r+0x1098>
  8073b4:	d8c00317 	ldw	r3,12(sp)
  8073b8:	00800104 	movi	r2,4
  8073bc:	1882e726 	beq	r3,r2,807f5c <_dtoa_r+0xea4>
  8073c0:	00800144 	movi	r2,5
  8073c4:	1884f21e 	bne	r3,r2,808790 <_dtoa_r+0x16d8>
  8073c8:	00800044 	movi	r2,1
  8073cc:	d8800b15 	stw	r2,44(sp)
  8073d0:	d8c02217 	ldw	r3,136(sp)
  8073d4:	d9000517 	ldw	r4,20(sp)
  8073d8:	1907883a 	add	r3,r3,r4
  8073dc:	19800044 	addi	r6,r3,1
  8073e0:	d8c00c15 	stw	r3,48(sp)
  8073e4:	d9800615 	stw	r6,24(sp)
  8073e8:	0183c30e 	bge	zero,r6,8082f8 <_dtoa_r+0x1240>
  8073ec:	d9800617 	ldw	r6,24(sp)
  8073f0:	3023883a 	mov	r17,r6
  8073f4:	80001115 	stw	zero,68(r16)
  8073f8:	008005c4 	movi	r2,23
  8073fc:	1184f62e 	bgeu	r2,r6,8087d8 <_dtoa_r+0x1720>
  807400:	00c00044 	movi	r3,1
  807404:	00800104 	movi	r2,4
  807408:	1085883a 	add	r2,r2,r2
  80740c:	11000504 	addi	r4,r2,20
  807410:	180b883a 	mov	r5,r3
  807414:	18c00044 	addi	r3,r3,1
  807418:	313ffb2e 	bgeu	r6,r4,807408 <__alt_data_end+0xff807408>
  80741c:	81401115 	stw	r5,68(r16)
  807420:	8009883a 	mov	r4,r16
  807424:	08094ac0 	call	8094ac <_Balloc>
  807428:	d8800715 	stw	r2,28(sp)
  80742c:	80801015 	stw	r2,64(r16)
  807430:	00800384 	movi	r2,14
  807434:	1440fd36 	bltu	r2,r17,80782c <_dtoa_r+0x774>
  807438:	a000fc26 	beq	r20,zero,80782c <_dtoa_r+0x774>
  80743c:	d8800517 	ldw	r2,20(sp)
  807440:	0083b90e 	bge	zero,r2,808328 <_dtoa_r+0x1270>
  807444:	d8c00517 	ldw	r3,20(sp)
  807448:	108003cc 	andi	r2,r2,15
  80744c:	100490fa 	slli	r2,r2,3
  807450:	182fd13a 	srai	r23,r3,4
  807454:	00c020b4 	movhi	r3,130
  807458:	18efae04 	addi	r3,r3,-16712
  80745c:	1885883a 	add	r2,r3,r2
  807460:	b8c0040c 	andi	r3,r23,16
  807464:	12c00017 	ldw	r11,0(r2)
  807468:	12800117 	ldw	r10,4(r2)
  80746c:	18039726 	beq	r3,zero,8082cc <_dtoa_r+0x1214>
  807470:	008020b4 	movhi	r2,130
  807474:	10afa404 	addi	r2,r2,-16752
  807478:	11800817 	ldw	r6,32(r2)
  80747c:	11c00917 	ldw	r7,36(r2)
  807480:	9009883a 	mov	r4,r18
  807484:	980b883a 	mov	r5,r19
  807488:	da801615 	stw	r10,88(sp)
  80748c:	dac01515 	stw	r11,84(sp)
  807490:	08156500 	call	815650 <__divdf3>
  807494:	da801617 	ldw	r10,88(sp)
  807498:	dac01517 	ldw	r11,84(sp)
  80749c:	bdc003cc 	andi	r23,r23,15
  8074a0:	044000c4 	movi	r17,3
  8074a4:	d8800e15 	stw	r2,56(sp)
  8074a8:	182b883a 	mov	r21,r3
  8074ac:	b8001126 	beq	r23,zero,8074f4 <_dtoa_r+0x43c>
  8074b0:	050020b4 	movhi	r20,130
  8074b4:	a52fa404 	addi	r20,r20,-16752
  8074b8:	5805883a 	mov	r2,r11
  8074bc:	5007883a 	mov	r3,r10
  8074c0:	b980004c 	andi	r6,r23,1
  8074c4:	1009883a 	mov	r4,r2
  8074c8:	b82fd07a 	srai	r23,r23,1
  8074cc:	180b883a 	mov	r5,r3
  8074d0:	30000426 	beq	r6,zero,8074e4 <_dtoa_r+0x42c>
  8074d4:	a1800017 	ldw	r6,0(r20)
  8074d8:	a1c00117 	ldw	r7,4(r20)
  8074dc:	8c400044 	addi	r17,r17,1
  8074e0:	08161600 	call	816160 <__muldf3>
  8074e4:	a5000204 	addi	r20,r20,8
  8074e8:	b83ff51e 	bne	r23,zero,8074c0 <__alt_data_end+0xff8074c0>
  8074ec:	1017883a 	mov	r11,r2
  8074f0:	1815883a 	mov	r10,r3
  8074f4:	d9000e17 	ldw	r4,56(sp)
  8074f8:	a80b883a 	mov	r5,r21
  8074fc:	580d883a 	mov	r6,r11
  807500:	500f883a 	mov	r7,r10
  807504:	08156500 	call	815650 <__divdf3>
  807508:	1029883a 	mov	r20,r2
  80750c:	182b883a 	mov	r21,r3
  807510:	d9800d17 	ldw	r6,52(sp)
  807514:	30000626 	beq	r6,zero,807530 <_dtoa_r+0x478>
  807518:	a009883a 	mov	r4,r20
  80751c:	a80b883a 	mov	r5,r21
  807520:	000d883a 	mov	r6,zero
  807524:	01cffc34 	movhi	r7,16368
  807528:	08160800 	call	816080 <__ledf2>
  80752c:	10043216 	blt	r2,zero,8085f8 <_dtoa_r+0x1540>
  807530:	8809883a 	mov	r4,r17
  807534:	08171dc0 	call	8171dc <__floatsidf>
  807538:	1009883a 	mov	r4,r2
  80753c:	180b883a 	mov	r5,r3
  807540:	a00d883a 	mov	r6,r20
  807544:	a80f883a 	mov	r7,r21
  807548:	08161600 	call	816160 <__muldf3>
  80754c:	000d883a 	mov	r6,zero
  807550:	1009883a 	mov	r4,r2
  807554:	180b883a 	mov	r5,r3
  807558:	01d00734 	movhi	r7,16412
  80755c:	0814db40 	call	814db4 <__adddf3>
  807560:	1023883a 	mov	r17,r2
  807564:	d9800617 	ldw	r6,24(sp)
  807568:	00bf3034 	movhi	r2,64704
  80756c:	1885883a 	add	r2,r3,r2
  807570:	d8800e15 	stw	r2,56(sp)
  807574:	30032e26 	beq	r6,zero,808230 <_dtoa_r+0x1178>
  807578:	d8c00517 	ldw	r3,20(sp)
  80757c:	da800617 	ldw	r10,24(sp)
  807580:	d8c01215 	stw	r3,72(sp)
  807584:	d9000b17 	ldw	r4,44(sp)
  807588:	2003b026 	beq	r4,zero,80844c <_dtoa_r+0x1394>
  80758c:	50bfffc4 	addi	r2,r10,-1
  807590:	100490fa 	slli	r2,r2,3
  807594:	00c020b4 	movhi	r3,130
  807598:	18efae04 	addi	r3,r3,-16712
  80759c:	1885883a 	add	r2,r3,r2
  8075a0:	11800017 	ldw	r6,0(r2)
  8075a4:	11c00117 	ldw	r7,4(r2)
  8075a8:	d8800717 	ldw	r2,28(sp)
  8075ac:	0009883a 	mov	r4,zero
  8075b0:	014ff834 	movhi	r5,16352
  8075b4:	da801615 	stw	r10,88(sp)
  8075b8:	15c00044 	addi	r23,r2,1
  8075bc:	08156500 	call	815650 <__divdf3>
  8075c0:	d9c00e17 	ldw	r7,56(sp)
  8075c4:	880d883a 	mov	r6,r17
  8075c8:	1009883a 	mov	r4,r2
  8075cc:	180b883a 	mov	r5,r3
  8075d0:	08168840 	call	816884 <__subdf3>
  8075d4:	a80b883a 	mov	r5,r21
  8075d8:	a009883a 	mov	r4,r20
  8075dc:	d8c01015 	stw	r3,64(sp)
  8075e0:	d8800e15 	stw	r2,56(sp)
  8075e4:	08171540 	call	817154 <__fixdfsi>
  8075e8:	1009883a 	mov	r4,r2
  8075ec:	d8801715 	stw	r2,92(sp)
  8075f0:	08171dc0 	call	8171dc <__floatsidf>
  8075f4:	a009883a 	mov	r4,r20
  8075f8:	a80b883a 	mov	r5,r21
  8075fc:	100d883a 	mov	r6,r2
  807600:	180f883a 	mov	r7,r3
  807604:	08168840 	call	816884 <__subdf3>
  807608:	da001717 	ldw	r8,92(sp)
  80760c:	1829883a 	mov	r20,r3
  807610:	d8c00717 	ldw	r3,28(sp)
  807614:	d9000e17 	ldw	r4,56(sp)
  807618:	d9401017 	ldw	r5,64(sp)
  80761c:	42000c04 	addi	r8,r8,48
  807620:	1023883a 	mov	r17,r2
  807624:	1a000005 	stb	r8,0(r3)
  807628:	880d883a 	mov	r6,r17
  80762c:	a00f883a 	mov	r7,r20
  807630:	402b883a 	mov	r21,r8
  807634:	0815fa00 	call	815fa0 <__gedf2>
  807638:	00844516 	blt	zero,r2,808750 <_dtoa_r+0x1698>
  80763c:	0009883a 	mov	r4,zero
  807640:	014ffc34 	movhi	r5,16368
  807644:	880d883a 	mov	r6,r17
  807648:	a00f883a 	mov	r7,r20
  80764c:	08168840 	call	816884 <__subdf3>
  807650:	d9000e17 	ldw	r4,56(sp)
  807654:	d9401017 	ldw	r5,64(sp)
  807658:	100d883a 	mov	r6,r2
  80765c:	180f883a 	mov	r7,r3
  807660:	0815fa00 	call	815fa0 <__gedf2>
  807664:	da801617 	ldw	r10,88(sp)
  807668:	00843616 	blt	zero,r2,808744 <_dtoa_r+0x168c>
  80766c:	00800044 	movi	r2,1
  807670:	12806e0e 	bge	r2,r10,80782c <_dtoa_r+0x774>
  807674:	d9000717 	ldw	r4,28(sp)
  807678:	dd801315 	stw	r22,76(sp)
  80767c:	dc001115 	stw	r16,68(sp)
  807680:	2295883a 	add	r10,r4,r10
  807684:	dcc01415 	stw	r19,80(sp)
  807688:	502d883a 	mov	r22,r10
  80768c:	dcc01017 	ldw	r19,64(sp)
  807690:	b821883a 	mov	r16,r23
  807694:	dc801015 	stw	r18,64(sp)
  807698:	dc800e17 	ldw	r18,56(sp)
  80769c:	00000906 	br	8076c4 <_dtoa_r+0x60c>
  8076a0:	08168840 	call	816884 <__subdf3>
  8076a4:	1009883a 	mov	r4,r2
  8076a8:	180b883a 	mov	r5,r3
  8076ac:	900d883a 	mov	r6,r18
  8076b0:	980f883a 	mov	r7,r19
  8076b4:	08160800 	call	816080 <__ledf2>
  8076b8:	10040e16 	blt	r2,zero,8086f4 <_dtoa_r+0x163c>
  8076bc:	b821883a 	mov	r16,r23
  8076c0:	bd841026 	beq	r23,r22,808704 <_dtoa_r+0x164c>
  8076c4:	9009883a 	mov	r4,r18
  8076c8:	980b883a 	mov	r5,r19
  8076cc:	000d883a 	mov	r6,zero
  8076d0:	01d00934 	movhi	r7,16420
  8076d4:	08161600 	call	816160 <__muldf3>
  8076d8:	000d883a 	mov	r6,zero
  8076dc:	01d00934 	movhi	r7,16420
  8076e0:	8809883a 	mov	r4,r17
  8076e4:	a00b883a 	mov	r5,r20
  8076e8:	1025883a 	mov	r18,r2
  8076ec:	1827883a 	mov	r19,r3
  8076f0:	08161600 	call	816160 <__muldf3>
  8076f4:	180b883a 	mov	r5,r3
  8076f8:	1009883a 	mov	r4,r2
  8076fc:	1823883a 	mov	r17,r3
  807700:	1029883a 	mov	r20,r2
  807704:	08171540 	call	817154 <__fixdfsi>
  807708:	1009883a 	mov	r4,r2
  80770c:	102b883a 	mov	r21,r2
  807710:	08171dc0 	call	8171dc <__floatsidf>
  807714:	a009883a 	mov	r4,r20
  807718:	880b883a 	mov	r5,r17
  80771c:	100d883a 	mov	r6,r2
  807720:	180f883a 	mov	r7,r3
  807724:	08168840 	call	816884 <__subdf3>
  807728:	ad400c04 	addi	r21,r21,48
  80772c:	1009883a 	mov	r4,r2
  807730:	180b883a 	mov	r5,r3
  807734:	900d883a 	mov	r6,r18
  807738:	980f883a 	mov	r7,r19
  80773c:	85400005 	stb	r21,0(r16)
  807740:	1023883a 	mov	r17,r2
  807744:	1829883a 	mov	r20,r3
  807748:	08160800 	call	816080 <__ledf2>
  80774c:	bdc00044 	addi	r23,r23,1
  807750:	0009883a 	mov	r4,zero
  807754:	014ffc34 	movhi	r5,16368
  807758:	880d883a 	mov	r6,r17
  80775c:	a00f883a 	mov	r7,r20
  807760:	103fcf0e 	bge	r2,zero,8076a0 <__alt_data_end+0xff8076a0>
  807764:	d9801217 	ldw	r6,72(sp)
  807768:	dc001117 	ldw	r16,68(sp)
  80776c:	d9800515 	stw	r6,20(sp)
  807770:	8009883a 	mov	r4,r16
  807774:	e00b883a 	mov	r5,fp
  807778:	08095540 	call	809554 <_Bfree>
  80777c:	d8c00517 	ldw	r3,20(sp)
  807780:	d9002317 	ldw	r4,140(sp)
  807784:	d9802517 	ldw	r6,148(sp)
  807788:	b8000005 	stb	zero,0(r23)
  80778c:	18800044 	addi	r2,r3,1
  807790:	20800015 	stw	r2,0(r4)
  807794:	30027226 	beq	r6,zero,808160 <_dtoa_r+0x10a8>
  807798:	35c00015 	stw	r23,0(r6)
  80779c:	d8800717 	ldw	r2,28(sp)
  8077a0:	003e7406 	br	807174 <__alt_data_end+0xff807174>
  8077a4:	00800434 	movhi	r2,16
  8077a8:	10bfffc4 	addi	r2,r2,-1
  8077ac:	a8aa703a 	and	r21,r21,r2
  8077b0:	a83e801e 	bne	r21,zero,8071b4 <__alt_data_end+0xff8071b4>
  8077b4:	008020b4 	movhi	r2,130
  8077b8:	10af9004 	addi	r2,r2,-16832
  8077bc:	003e7f06 	br	8071bc <__alt_data_end+0xff8071bc>
  8077c0:	10c00204 	addi	r3,r2,8
  8077c4:	003e8206 	br	8071d0 <__alt_data_end+0xff8071d0>
  8077c8:	01400434 	movhi	r5,16
  8077cc:	297fffc4 	addi	r5,r5,-1
  8077d0:	994a703a 	and	r5,r19,r5
  8077d4:	9009883a 	mov	r4,r18
  8077d8:	8c7f0044 	addi	r17,r17,-1023
  8077dc:	294ffc34 	orhi	r5,r5,16368
  8077e0:	dd000217 	ldw	r20,8(sp)
  8077e4:	d8000f15 	stw	zero,60(sp)
  8077e8:	003e9f06 	br	807268 <__alt_data_end+0xff807268>
  8077ec:	008020b4 	movhi	r2,130
  8077f0:	10aee704 	addi	r2,r2,-17508
  8077f4:	003e5f06 	br	807174 <__alt_data_end+0xff807174>
  8077f8:	80001115 	stw	zero,68(r16)
  8077fc:	8009883a 	mov	r4,r16
  807800:	000b883a 	mov	r5,zero
  807804:	08094ac0 	call	8094ac <_Balloc>
  807808:	01bfffc4 	movi	r6,-1
  80780c:	d8800715 	stw	r2,28(sp)
  807810:	80801015 	stw	r2,64(r16)
  807814:	00800044 	movi	r2,1
  807818:	d9800c15 	stw	r6,48(sp)
  80781c:	d8800b15 	stw	r2,44(sp)
  807820:	d9800615 	stw	r6,24(sp)
  807824:	d8002215 	stw	zero,136(sp)
  807828:	d8000315 	stw	zero,12(sp)
  80782c:	d8800117 	ldw	r2,4(sp)
  807830:	10008e16 	blt	r2,zero,807a6c <_dtoa_r+0x9b4>
  807834:	d9000517 	ldw	r4,20(sp)
  807838:	00c00384 	movi	r3,14
  80783c:	19008b16 	blt	r3,r4,807a6c <_dtoa_r+0x9b4>
  807840:	200490fa 	slli	r2,r4,3
  807844:	00c020b4 	movhi	r3,130
  807848:	d9802217 	ldw	r6,136(sp)
  80784c:	18efae04 	addi	r3,r3,-16712
  807850:	1885883a 	add	r2,r3,r2
  807854:	14400017 	ldw	r17,0(r2)
  807858:	15000117 	ldw	r20,4(r2)
  80785c:	3001c716 	blt	r6,zero,807f7c <_dtoa_r+0xec4>
  807860:	880d883a 	mov	r6,r17
  807864:	a00f883a 	mov	r7,r20
  807868:	9009883a 	mov	r4,r18
  80786c:	980b883a 	mov	r5,r19
  807870:	08156500 	call	815650 <__divdf3>
  807874:	180b883a 	mov	r5,r3
  807878:	1009883a 	mov	r4,r2
  80787c:	08171540 	call	817154 <__fixdfsi>
  807880:	1009883a 	mov	r4,r2
  807884:	102d883a 	mov	r22,r2
  807888:	08171dc0 	call	8171dc <__floatsidf>
  80788c:	1009883a 	mov	r4,r2
  807890:	180b883a 	mov	r5,r3
  807894:	880d883a 	mov	r6,r17
  807898:	a00f883a 	mov	r7,r20
  80789c:	08161600 	call	816160 <__muldf3>
  8078a0:	9009883a 	mov	r4,r18
  8078a4:	980b883a 	mov	r5,r19
  8078a8:	100d883a 	mov	r6,r2
  8078ac:	180f883a 	mov	r7,r3
  8078b0:	08168840 	call	816884 <__subdf3>
  8078b4:	d9000717 	ldw	r4,28(sp)
  8078b8:	d9800617 	ldw	r6,24(sp)
  8078bc:	180b883a 	mov	r5,r3
  8078c0:	b0c00c04 	addi	r3,r22,48
  8078c4:	20c00005 	stb	r3,0(r4)
  8078c8:	25c00044 	addi	r23,r4,1
  8078cc:	01000044 	movi	r4,1
  8078d0:	1011883a 	mov	r8,r2
  8078d4:	2807883a 	mov	r3,r5
  8078d8:	31003d26 	beq	r6,r4,8079d0 <_dtoa_r+0x918>
  8078dc:	000d883a 	mov	r6,zero
  8078e0:	01d00934 	movhi	r7,16420
  8078e4:	1009883a 	mov	r4,r2
  8078e8:	08161600 	call	816160 <__muldf3>
  8078ec:	1009883a 	mov	r4,r2
  8078f0:	180b883a 	mov	r5,r3
  8078f4:	000d883a 	mov	r6,zero
  8078f8:	000f883a 	mov	r7,zero
  8078fc:	1027883a 	mov	r19,r2
  807900:	182b883a 	mov	r21,r3
  807904:	0815f1c0 	call	815f1c <__eqdf2>
  807908:	103f9926 	beq	r2,zero,807770 <__alt_data_end+0xff807770>
  80790c:	d8c00617 	ldw	r3,24(sp)
  807910:	d9000717 	ldw	r4,28(sp)
  807914:	b825883a 	mov	r18,r23
  807918:	18bfffc4 	addi	r2,r3,-1
  80791c:	20ad883a 	add	r22,r4,r2
  807920:	dc000315 	stw	r16,12(sp)
  807924:	00000a06 	br	807950 <_dtoa_r+0x898>
  807928:	08161600 	call	816160 <__muldf3>
  80792c:	1009883a 	mov	r4,r2
  807930:	180b883a 	mov	r5,r3
  807934:	000d883a 	mov	r6,zero
  807938:	000f883a 	mov	r7,zero
  80793c:	1027883a 	mov	r19,r2
  807940:	182b883a 	mov	r21,r3
  807944:	b825883a 	mov	r18,r23
  807948:	0815f1c0 	call	815f1c <__eqdf2>
  80794c:	10022626 	beq	r2,zero,8081e8 <_dtoa_r+0x1130>
  807950:	880d883a 	mov	r6,r17
  807954:	a00f883a 	mov	r7,r20
  807958:	9809883a 	mov	r4,r19
  80795c:	a80b883a 	mov	r5,r21
  807960:	08156500 	call	815650 <__divdf3>
  807964:	180b883a 	mov	r5,r3
  807968:	1009883a 	mov	r4,r2
  80796c:	08171540 	call	817154 <__fixdfsi>
  807970:	1009883a 	mov	r4,r2
  807974:	1021883a 	mov	r16,r2
  807978:	08171dc0 	call	8171dc <__floatsidf>
  80797c:	1009883a 	mov	r4,r2
  807980:	180b883a 	mov	r5,r3
  807984:	880d883a 	mov	r6,r17
  807988:	a00f883a 	mov	r7,r20
  80798c:	08161600 	call	816160 <__muldf3>
  807990:	9809883a 	mov	r4,r19
  807994:	a80b883a 	mov	r5,r21
  807998:	100d883a 	mov	r6,r2
  80799c:	180f883a 	mov	r7,r3
  8079a0:	08168840 	call	816884 <__subdf3>
  8079a4:	82000c04 	addi	r8,r16,48
  8079a8:	92000005 	stb	r8,0(r18)
  8079ac:	1009883a 	mov	r4,r2
  8079b0:	180b883a 	mov	r5,r3
  8079b4:	000d883a 	mov	r6,zero
  8079b8:	01d00934 	movhi	r7,16420
  8079bc:	1011883a 	mov	r8,r2
  8079c0:	bdc00044 	addi	r23,r23,1
  8079c4:	95bfd81e 	bne	r18,r22,807928 <__alt_data_end+0xff807928>
  8079c8:	802d883a 	mov	r22,r16
  8079cc:	dc000317 	ldw	r16,12(sp)
  8079d0:	4009883a 	mov	r4,r8
  8079d4:	180b883a 	mov	r5,r3
  8079d8:	400d883a 	mov	r6,r8
  8079dc:	180f883a 	mov	r7,r3
  8079e0:	0814db40 	call	814db4 <__adddf3>
  8079e4:	8809883a 	mov	r4,r17
  8079e8:	a00b883a 	mov	r5,r20
  8079ec:	100d883a 	mov	r6,r2
  8079f0:	180f883a 	mov	r7,r3
  8079f4:	1027883a 	mov	r19,r2
  8079f8:	1825883a 	mov	r18,r3
  8079fc:	08160800 	call	816080 <__ledf2>
  807a00:	10000816 	blt	r2,zero,807a24 <_dtoa_r+0x96c>
  807a04:	8809883a 	mov	r4,r17
  807a08:	a00b883a 	mov	r5,r20
  807a0c:	980d883a 	mov	r6,r19
  807a10:	900f883a 	mov	r7,r18
  807a14:	0815f1c0 	call	815f1c <__eqdf2>
  807a18:	103f551e 	bne	r2,zero,807770 <__alt_data_end+0xff807770>
  807a1c:	b580004c 	andi	r22,r22,1
  807a20:	b03f5326 	beq	r22,zero,807770 <__alt_data_end+0xff807770>
  807a24:	bd7fffc3 	ldbu	r21,-1(r23)
  807a28:	b8bfffc4 	addi	r2,r23,-1
  807a2c:	1007883a 	mov	r3,r2
  807a30:	01400e44 	movi	r5,57
  807a34:	d9800717 	ldw	r6,28(sp)
  807a38:	00000506 	br	807a50 <_dtoa_r+0x998>
  807a3c:	18ffffc4 	addi	r3,r3,-1
  807a40:	30825e26 	beq	r6,r2,8083bc <_dtoa_r+0x1304>
  807a44:	1d400003 	ldbu	r21,0(r3)
  807a48:	102f883a 	mov	r23,r2
  807a4c:	10bfffc4 	addi	r2,r2,-1
  807a50:	a9003fcc 	andi	r4,r21,255
  807a54:	2100201c 	xori	r4,r4,128
  807a58:	213fe004 	addi	r4,r4,-128
  807a5c:	217ff726 	beq	r4,r5,807a3c <__alt_data_end+0xff807a3c>
  807a60:	aa000044 	addi	r8,r21,1
  807a64:	12000005 	stb	r8,0(r2)
  807a68:	003f4106 	br	807770 <__alt_data_end+0xff807770>
  807a6c:	d8c00b17 	ldw	r3,44(sp)
  807a70:	18006726 	beq	r3,zero,807c10 <_dtoa_r+0xb58>
  807a74:	d9000317 	ldw	r4,12(sp)
  807a78:	00c00044 	movi	r3,1
  807a7c:	19016a0e 	bge	r3,r4,808028 <_dtoa_r+0xf70>
  807a80:	d8800617 	ldw	r2,24(sp)
  807a84:	d8c00917 	ldw	r3,36(sp)
  807a88:	157fffc4 	addi	r21,r2,-1
  807a8c:	1d420716 	blt	r3,r21,8082ac <_dtoa_r+0x11f4>
  807a90:	1d6bc83a 	sub	r21,r3,r21
  807a94:	d8800617 	ldw	r2,24(sp)
  807a98:	1002c716 	blt	r2,zero,8085b8 <_dtoa_r+0x1500>
  807a9c:	dd000817 	ldw	r20,32(sp)
  807aa0:	d8800617 	ldw	r2,24(sp)
  807aa4:	d9800817 	ldw	r6,32(sp)
  807aa8:	8009883a 	mov	r4,r16
  807aac:	01400044 	movi	r5,1
  807ab0:	308d883a 	add	r6,r6,r2
  807ab4:	d9800815 	stw	r6,32(sp)
  807ab8:	b0ad883a 	add	r22,r22,r2
  807abc:	08098b80 	call	8098b8 <__i2b>
  807ac0:	1023883a 	mov	r17,r2
  807ac4:	a0000826 	beq	r20,zero,807ae8 <_dtoa_r+0xa30>
  807ac8:	0580070e 	bge	zero,r22,807ae8 <_dtoa_r+0xa30>
  807acc:	b005883a 	mov	r2,r22
  807ad0:	a5812016 	blt	r20,r22,807f54 <_dtoa_r+0xe9c>
  807ad4:	d8c00817 	ldw	r3,32(sp)
  807ad8:	a0a9c83a 	sub	r20,r20,r2
  807adc:	b0adc83a 	sub	r22,r22,r2
  807ae0:	1887c83a 	sub	r3,r3,r2
  807ae4:	d8c00815 	stw	r3,32(sp)
  807ae8:	d9000917 	ldw	r4,36(sp)
  807aec:	0100140e 	bge	zero,r4,807b40 <_dtoa_r+0xa88>
  807af0:	d9800b17 	ldw	r6,44(sp)
  807af4:	3001e526 	beq	r6,zero,80828c <_dtoa_r+0x11d4>
  807af8:	05400e0e 	bge	zero,r21,807b34 <_dtoa_r+0xa7c>
  807afc:	880b883a 	mov	r5,r17
  807b00:	8009883a 	mov	r4,r16
  807b04:	a80d883a 	mov	r6,r21
  807b08:	0809af00 	call	809af0 <__pow5mult>
  807b0c:	e00d883a 	mov	r6,fp
  807b10:	8009883a 	mov	r4,r16
  807b14:	100b883a 	mov	r5,r2
  807b18:	1023883a 	mov	r17,r2
  807b1c:	08098f40 	call	8098f4 <__multiply>
  807b20:	102f883a 	mov	r23,r2
  807b24:	e00b883a 	mov	r5,fp
  807b28:	8009883a 	mov	r4,r16
  807b2c:	08095540 	call	809554 <_Bfree>
  807b30:	b839883a 	mov	fp,r23
  807b34:	d8800917 	ldw	r2,36(sp)
  807b38:	154dc83a 	sub	r6,r2,r21
  807b3c:	3001281e 	bne	r6,zero,807fe0 <_dtoa_r+0xf28>
  807b40:	05c00044 	movi	r23,1
  807b44:	8009883a 	mov	r4,r16
  807b48:	b80b883a 	mov	r5,r23
  807b4c:	08098b80 	call	8098b8 <__i2b>
  807b50:	d8c00a17 	ldw	r3,40(sp)
  807b54:	102b883a 	mov	r21,r2
  807b58:	00c0310e 	bge	zero,r3,807c20 <_dtoa_r+0xb68>
  807b5c:	8009883a 	mov	r4,r16
  807b60:	100b883a 	mov	r5,r2
  807b64:	180d883a 	mov	r6,r3
  807b68:	0809af00 	call	809af0 <__pow5mult>
  807b6c:	d9000317 	ldw	r4,12(sp)
  807b70:	102b883a 	mov	r21,r2
  807b74:	b9011f0e 	bge	r23,r4,807ff4 <_dtoa_r+0xf3c>
  807b78:	0027883a 	mov	r19,zero
  807b7c:	a8800417 	ldw	r2,16(r21)
  807b80:	10800104 	addi	r2,r2,4
  807b84:	1085883a 	add	r2,r2,r2
  807b88:	1085883a 	add	r2,r2,r2
  807b8c:	a885883a 	add	r2,r21,r2
  807b90:	11000017 	ldw	r4,0(r2)
  807b94:	08097a00 	call	8097a0 <__hi0bits>
  807b98:	00c00804 	movi	r3,32
  807b9c:	1885c83a 	sub	r2,r3,r2
  807ba0:	00002506 	br	807c38 <_dtoa_r+0xb80>
  807ba4:	01800044 	movi	r6,1
  807ba8:	d9800d15 	stw	r6,52(sp)
  807bac:	003dec06 	br	807360 <__alt_data_end+0xff807360>
  807bb0:	d8c00817 	ldw	r3,32(sp)
  807bb4:	d9000517 	ldw	r4,20(sp)
  807bb8:	d8000a15 	stw	zero,40(sp)
  807bbc:	1907c83a 	sub	r3,r3,r4
  807bc0:	010dc83a 	sub	r6,zero,r4
  807bc4:	d8c00815 	stw	r3,32(sp)
  807bc8:	d9800915 	stw	r6,36(sp)
  807bcc:	003ded06 	br	807384 <__alt_data_end+0xff807384>
  807bd0:	05adc83a 	sub	r22,zero,r22
  807bd4:	dd800815 	stw	r22,32(sp)
  807bd8:	002d883a 	mov	r22,zero
  807bdc:	003de406 	br	807370 <__alt_data_end+0xff807370>
  807be0:	d9000517 	ldw	r4,20(sp)
  807be4:	08171dc0 	call	8171dc <__floatsidf>
  807be8:	1009883a 	mov	r4,r2
  807bec:	180b883a 	mov	r5,r3
  807bf0:	b00d883a 	mov	r6,r22
  807bf4:	a80f883a 	mov	r7,r21
  807bf8:	0815f1c0 	call	815f1c <__eqdf2>
  807bfc:	103dc726 	beq	r2,zero,80731c <__alt_data_end+0xff80731c>
  807c00:	d8800517 	ldw	r2,20(sp)
  807c04:	10bfffc4 	addi	r2,r2,-1
  807c08:	d8800515 	stw	r2,20(sp)
  807c0c:	003dc306 	br	80731c <__alt_data_end+0xff80731c>
  807c10:	dd400917 	ldw	r21,36(sp)
  807c14:	dd000817 	ldw	r20,32(sp)
  807c18:	0023883a 	mov	r17,zero
  807c1c:	003fa906 	br	807ac4 <__alt_data_end+0xff807ac4>
  807c20:	d9800317 	ldw	r6,12(sp)
  807c24:	b981670e 	bge	r23,r6,8081c4 <_dtoa_r+0x110c>
  807c28:	0027883a 	mov	r19,zero
  807c2c:	d8c00a17 	ldw	r3,40(sp)
  807c30:	183fd21e 	bne	r3,zero,807b7c <__alt_data_end+0xff807b7c>
  807c34:	00800044 	movi	r2,1
  807c38:	1585883a 	add	r2,r2,r22
  807c3c:	108007cc 	andi	r2,r2,31
  807c40:	10005f26 	beq	r2,zero,807dc0 <_dtoa_r+0xd08>
  807c44:	00c00804 	movi	r3,32
  807c48:	1887c83a 	sub	r3,r3,r2
  807c4c:	01000104 	movi	r4,4
  807c50:	20c2dd0e 	bge	r4,r3,8087c8 <_dtoa_r+0x1710>
  807c54:	d9000817 	ldw	r4,32(sp)
  807c58:	00c00704 	movi	r3,28
  807c5c:	1885c83a 	sub	r2,r3,r2
  807c60:	2089883a 	add	r4,r4,r2
  807c64:	d9000815 	stw	r4,32(sp)
  807c68:	a0a9883a 	add	r20,r20,r2
  807c6c:	b0ad883a 	add	r22,r22,r2
  807c70:	d8800817 	ldw	r2,32(sp)
  807c74:	0080050e 	bge	zero,r2,807c8c <_dtoa_r+0xbd4>
  807c78:	e00b883a 	mov	r5,fp
  807c7c:	8009883a 	mov	r4,r16
  807c80:	100d883a 	mov	r6,r2
  807c84:	0809c300 	call	809c30 <__lshift>
  807c88:	1039883a 	mov	fp,r2
  807c8c:	0580050e 	bge	zero,r22,807ca4 <_dtoa_r+0xbec>
  807c90:	a80b883a 	mov	r5,r21
  807c94:	8009883a 	mov	r4,r16
  807c98:	b00d883a 	mov	r6,r22
  807c9c:	0809c300 	call	809c30 <__lshift>
  807ca0:	102b883a 	mov	r21,r2
  807ca4:	d8c00d17 	ldw	r3,52(sp)
  807ca8:	1801161e 	bne	r3,zero,808104 <_dtoa_r+0x104c>
  807cac:	d8c00617 	ldw	r3,24(sp)
  807cb0:	00c12d0e 	bge	zero,r3,808168 <_dtoa_r+0x10b0>
  807cb4:	d8c00b17 	ldw	r3,44(sp)
  807cb8:	1800571e 	bne	r3,zero,807e18 <_dtoa_r+0xd60>
  807cbc:	dc800717 	ldw	r18,28(sp)
  807cc0:	dcc00617 	ldw	r19,24(sp)
  807cc4:	9029883a 	mov	r20,r18
  807cc8:	00000206 	br	807cd4 <_dtoa_r+0xc1c>
  807ccc:	080957c0 	call	80957c <__multadd>
  807cd0:	1039883a 	mov	fp,r2
  807cd4:	e009883a 	mov	r4,fp
  807cd8:	a80b883a 	mov	r5,r21
  807cdc:	0806eb80 	call	806eb8 <quorem>
  807ce0:	10800c04 	addi	r2,r2,48
  807ce4:	90800005 	stb	r2,0(r18)
  807ce8:	94800044 	addi	r18,r18,1
  807cec:	9507c83a 	sub	r3,r18,r20
  807cf0:	8009883a 	mov	r4,r16
  807cf4:	e00b883a 	mov	r5,fp
  807cf8:	01800284 	movi	r6,10
  807cfc:	000f883a 	mov	r7,zero
  807d00:	1cfff216 	blt	r3,r19,807ccc <__alt_data_end+0xff807ccc>
  807d04:	1011883a 	mov	r8,r2
  807d08:	d8800617 	ldw	r2,24(sp)
  807d0c:	00822e0e 	bge	zero,r2,8085c8 <_dtoa_r+0x1510>
  807d10:	d9000717 	ldw	r4,28(sp)
  807d14:	0025883a 	mov	r18,zero
  807d18:	20af883a 	add	r23,r4,r2
  807d1c:	e00b883a 	mov	r5,fp
  807d20:	01800044 	movi	r6,1
  807d24:	8009883a 	mov	r4,r16
  807d28:	da001715 	stw	r8,92(sp)
  807d2c:	0809c300 	call	809c30 <__lshift>
  807d30:	1009883a 	mov	r4,r2
  807d34:	a80b883a 	mov	r5,r21
  807d38:	1039883a 	mov	fp,r2
  807d3c:	0809d800 	call	809d80 <__mcmp>
  807d40:	da001717 	ldw	r8,92(sp)
  807d44:	00816e0e 	bge	zero,r2,808300 <_dtoa_r+0x1248>
  807d48:	b93fffc3 	ldbu	r4,-1(r23)
  807d4c:	b8bfffc4 	addi	r2,r23,-1
  807d50:	1007883a 	mov	r3,r2
  807d54:	01800e44 	movi	r6,57
  807d58:	d9c00717 	ldw	r7,28(sp)
  807d5c:	00000506 	br	807d74 <_dtoa_r+0xcbc>
  807d60:	18ffffc4 	addi	r3,r3,-1
  807d64:	38811926 	beq	r7,r2,8081cc <_dtoa_r+0x1114>
  807d68:	19000003 	ldbu	r4,0(r3)
  807d6c:	102f883a 	mov	r23,r2
  807d70:	10bfffc4 	addi	r2,r2,-1
  807d74:	21403fcc 	andi	r5,r4,255
  807d78:	2940201c 	xori	r5,r5,128
  807d7c:	297fe004 	addi	r5,r5,-128
  807d80:	29bff726 	beq	r5,r6,807d60 <__alt_data_end+0xff807d60>
  807d84:	21000044 	addi	r4,r4,1
  807d88:	11000005 	stb	r4,0(r2)
  807d8c:	8009883a 	mov	r4,r16
  807d90:	a80b883a 	mov	r5,r21
  807d94:	08095540 	call	809554 <_Bfree>
  807d98:	883e7526 	beq	r17,zero,807770 <__alt_data_end+0xff807770>
  807d9c:	90000426 	beq	r18,zero,807db0 <_dtoa_r+0xcf8>
  807da0:	94400326 	beq	r18,r17,807db0 <_dtoa_r+0xcf8>
  807da4:	8009883a 	mov	r4,r16
  807da8:	900b883a 	mov	r5,r18
  807dac:	08095540 	call	809554 <_Bfree>
  807db0:	8009883a 	mov	r4,r16
  807db4:	880b883a 	mov	r5,r17
  807db8:	08095540 	call	809554 <_Bfree>
  807dbc:	003e6c06 	br	807770 <__alt_data_end+0xff807770>
  807dc0:	00800704 	movi	r2,28
  807dc4:	d9800817 	ldw	r6,32(sp)
  807dc8:	a0a9883a 	add	r20,r20,r2
  807dcc:	b0ad883a 	add	r22,r22,r2
  807dd0:	308d883a 	add	r6,r6,r2
  807dd4:	d9800815 	stw	r6,32(sp)
  807dd8:	003fa506 	br	807c70 <__alt_data_end+0xff807c70>
  807ddc:	013efb84 	movi	r4,-1042
  807de0:	246bc83a 	sub	r21,r4,r17
  807de4:	9548983a 	sll	r4,r18,r21
  807de8:	003d1806 	br	80724c <__alt_data_end+0xff80724c>
  807dec:	d8000d15 	stw	zero,52(sp)
  807df0:	003d5b06 	br	807360 <__alt_data_end+0xff807360>
  807df4:	880b883a 	mov	r5,r17
  807df8:	8009883a 	mov	r4,r16
  807dfc:	01800284 	movi	r6,10
  807e00:	000f883a 	mov	r7,zero
  807e04:	080957c0 	call	80957c <__multadd>
  807e08:	1023883a 	mov	r17,r2
  807e0c:	d8800c17 	ldw	r2,48(sp)
  807e10:	0082550e 	bge	zero,r2,808768 <_dtoa_r+0x16b0>
  807e14:	d8800615 	stw	r2,24(sp)
  807e18:	0500050e 	bge	zero,r20,807e30 <_dtoa_r+0xd78>
  807e1c:	880b883a 	mov	r5,r17
  807e20:	8009883a 	mov	r4,r16
  807e24:	a00d883a 	mov	r6,r20
  807e28:	0809c300 	call	809c30 <__lshift>
  807e2c:	1023883a 	mov	r17,r2
  807e30:	98016a1e 	bne	r19,zero,8083dc <_dtoa_r+0x1324>
  807e34:	8829883a 	mov	r20,r17
  807e38:	d9000617 	ldw	r4,24(sp)
  807e3c:	dcc00717 	ldw	r19,28(sp)
  807e40:	9480004c 	andi	r18,r18,1
  807e44:	20bfffc4 	addi	r2,r4,-1
  807e48:	9885883a 	add	r2,r19,r2
  807e4c:	d8800415 	stw	r2,16(sp)
  807e50:	dc800615 	stw	r18,24(sp)
  807e54:	e009883a 	mov	r4,fp
  807e58:	a80b883a 	mov	r5,r21
  807e5c:	0806eb80 	call	806eb8 <quorem>
  807e60:	e009883a 	mov	r4,fp
  807e64:	880b883a 	mov	r5,r17
  807e68:	102f883a 	mov	r23,r2
  807e6c:	0809d800 	call	809d80 <__mcmp>
  807e70:	8009883a 	mov	r4,r16
  807e74:	a80b883a 	mov	r5,r21
  807e78:	a00d883a 	mov	r6,r20
  807e7c:	102d883a 	mov	r22,r2
  807e80:	0809de00 	call	809de0 <__mdiff>
  807e84:	1007883a 	mov	r3,r2
  807e88:	10800317 	ldw	r2,12(r2)
  807e8c:	bc800c04 	addi	r18,r23,48
  807e90:	1000971e 	bne	r2,zero,8080f0 <_dtoa_r+0x1038>
  807e94:	180b883a 	mov	r5,r3
  807e98:	e009883a 	mov	r4,fp
  807e9c:	d8c01515 	stw	r3,84(sp)
  807ea0:	0809d800 	call	809d80 <__mcmp>
  807ea4:	d8c01517 	ldw	r3,84(sp)
  807ea8:	8009883a 	mov	r4,r16
  807eac:	d8801515 	stw	r2,84(sp)
  807eb0:	180b883a 	mov	r5,r3
  807eb4:	08095540 	call	809554 <_Bfree>
  807eb8:	d8801517 	ldw	r2,84(sp)
  807ebc:	1000041e 	bne	r2,zero,807ed0 <_dtoa_r+0xe18>
  807ec0:	d9800317 	ldw	r6,12(sp)
  807ec4:	3000021e 	bne	r6,zero,807ed0 <_dtoa_r+0xe18>
  807ec8:	d8c00617 	ldw	r3,24(sp)
  807ecc:	18007626 	beq	r3,zero,8080a8 <_dtoa_r+0xff0>
  807ed0:	b0005b16 	blt	r22,zero,808040 <_dtoa_r+0xf88>
  807ed4:	b000041e 	bne	r22,zero,807ee8 <_dtoa_r+0xe30>
  807ed8:	d9000317 	ldw	r4,12(sp)
  807edc:	2000021e 	bne	r4,zero,807ee8 <_dtoa_r+0xe30>
  807ee0:	d8c00617 	ldw	r3,24(sp)
  807ee4:	18005626 	beq	r3,zero,808040 <_dtoa_r+0xf88>
  807ee8:	00814d16 	blt	zero,r2,808420 <_dtoa_r+0x1368>
  807eec:	d8c00417 	ldw	r3,16(sp)
  807ef0:	9d800044 	addi	r22,r19,1
  807ef4:	9c800005 	stb	r18,0(r19)
  807ef8:	b02f883a 	mov	r23,r22
  807efc:	98c14c26 	beq	r19,r3,808430 <_dtoa_r+0x1378>
  807f00:	e00b883a 	mov	r5,fp
  807f04:	8009883a 	mov	r4,r16
  807f08:	01800284 	movi	r6,10
  807f0c:	000f883a 	mov	r7,zero
  807f10:	080957c0 	call	80957c <__multadd>
  807f14:	1039883a 	mov	fp,r2
  807f18:	8d006d26 	beq	r17,r20,8080d0 <_dtoa_r+0x1018>
  807f1c:	880b883a 	mov	r5,r17
  807f20:	01800284 	movi	r6,10
  807f24:	000f883a 	mov	r7,zero
  807f28:	8009883a 	mov	r4,r16
  807f2c:	080957c0 	call	80957c <__multadd>
  807f30:	a00b883a 	mov	r5,r20
  807f34:	8009883a 	mov	r4,r16
  807f38:	01800284 	movi	r6,10
  807f3c:	000f883a 	mov	r7,zero
  807f40:	1023883a 	mov	r17,r2
  807f44:	080957c0 	call	80957c <__multadd>
  807f48:	1029883a 	mov	r20,r2
  807f4c:	b027883a 	mov	r19,r22
  807f50:	003fc006 	br	807e54 <__alt_data_end+0xff807e54>
  807f54:	a005883a 	mov	r2,r20
  807f58:	003ede06 	br	807ad4 <__alt_data_end+0xff807ad4>
  807f5c:	01000044 	movi	r4,1
  807f60:	d9000b15 	stw	r4,44(sp)
  807f64:	d9802217 	ldw	r6,136(sp)
  807f68:	0180dc0e 	bge	zero,r6,8082dc <_dtoa_r+0x1224>
  807f6c:	3023883a 	mov	r17,r6
  807f70:	d9800c15 	stw	r6,48(sp)
  807f74:	d9800615 	stw	r6,24(sp)
  807f78:	003d1e06 	br	8073f4 <__alt_data_end+0xff8073f4>
  807f7c:	d8800617 	ldw	r2,24(sp)
  807f80:	00be3716 	blt	zero,r2,807860 <__alt_data_end+0xff807860>
  807f84:	1000be1e 	bne	r2,zero,808280 <_dtoa_r+0x11c8>
  807f88:	8809883a 	mov	r4,r17
  807f8c:	a00b883a 	mov	r5,r20
  807f90:	000d883a 	mov	r6,zero
  807f94:	01d00534 	movhi	r7,16404
  807f98:	08161600 	call	816160 <__muldf3>
  807f9c:	1009883a 	mov	r4,r2
  807fa0:	180b883a 	mov	r5,r3
  807fa4:	900d883a 	mov	r6,r18
  807fa8:	980f883a 	mov	r7,r19
  807fac:	0815fa00 	call	815fa0 <__gedf2>
  807fb0:	002b883a 	mov	r21,zero
  807fb4:	0023883a 	mov	r17,zero
  807fb8:	10007a16 	blt	r2,zero,8081a4 <_dtoa_r+0x10ec>
  807fbc:	d9002217 	ldw	r4,136(sp)
  807fc0:	ddc00717 	ldw	r23,28(sp)
  807fc4:	0108303a 	nor	r4,zero,r4
  807fc8:	d9000515 	stw	r4,20(sp)
  807fcc:	8009883a 	mov	r4,r16
  807fd0:	a80b883a 	mov	r5,r21
  807fd4:	08095540 	call	809554 <_Bfree>
  807fd8:	883f751e 	bne	r17,zero,807db0 <__alt_data_end+0xff807db0>
  807fdc:	003de406 	br	807770 <__alt_data_end+0xff807770>
  807fe0:	e00b883a 	mov	r5,fp
  807fe4:	8009883a 	mov	r4,r16
  807fe8:	0809af00 	call	809af0 <__pow5mult>
  807fec:	1039883a 	mov	fp,r2
  807ff0:	003ed306 	br	807b40 <__alt_data_end+0xff807b40>
  807ff4:	903ee01e 	bne	r18,zero,807b78 <__alt_data_end+0xff807b78>
  807ff8:	00800434 	movhi	r2,16
  807ffc:	10bfffc4 	addi	r2,r2,-1
  808000:	9884703a 	and	r2,r19,r2
  808004:	103f081e 	bne	r2,zero,807c28 <__alt_data_end+0xff807c28>
  808008:	9cdffc2c 	andhi	r19,r19,32752
  80800c:	983f0626 	beq	r19,zero,807c28 <__alt_data_end+0xff807c28>
  808010:	d8800817 	ldw	r2,32(sp)
  808014:	b5800044 	addi	r22,r22,1
  808018:	04c00044 	movi	r19,1
  80801c:	10800044 	addi	r2,r2,1
  808020:	d8800815 	stw	r2,32(sp)
  808024:	003f0106 	br	807c2c <__alt_data_end+0xff807c2c>
  808028:	d9800f17 	ldw	r6,60(sp)
  80802c:	30016826 	beq	r6,zero,8085d0 <_dtoa_r+0x1518>
  808030:	10810cc4 	addi	r2,r2,1075
  808034:	dd400917 	ldw	r21,36(sp)
  808038:	dd000817 	ldw	r20,32(sp)
  80803c:	003e9906 	br	807aa4 <__alt_data_end+0xff807aa4>
  808040:	9011883a 	mov	r8,r18
  808044:	4007883a 	mov	r3,r8
  808048:	e02d883a 	mov	r22,fp
  80804c:	0080100e 	bge	zero,r2,808090 <_dtoa_r+0xfd8>
  808050:	01800044 	movi	r6,1
  808054:	8009883a 	mov	r4,r16
  808058:	e00b883a 	mov	r5,fp
  80805c:	da001515 	stw	r8,84(sp)
  808060:	da001715 	stw	r8,92(sp)
  808064:	0809c300 	call	809c30 <__lshift>
  808068:	1009883a 	mov	r4,r2
  80806c:	a80b883a 	mov	r5,r21
  808070:	102d883a 	mov	r22,r2
  808074:	0809d800 	call	809d80 <__mcmp>
  808078:	d8c01517 	ldw	r3,84(sp)
  80807c:	da001717 	ldw	r8,92(sp)
  808080:	0081a50e 	bge	zero,r2,808718 <_dtoa_r+0x1660>
  808084:	00800e44 	movi	r2,57
  808088:	40817b26 	beq	r8,r2,808678 <_dtoa_r+0x15c0>
  80808c:	40c00044 	addi	r3,r8,1
  808090:	8825883a 	mov	r18,r17
  808094:	9dc00044 	addi	r23,r19,1
  808098:	98c00005 	stb	r3,0(r19)
  80809c:	a023883a 	mov	r17,r20
  8080a0:	b039883a 	mov	fp,r22
  8080a4:	003f3906 	br	807d8c <__alt_data_end+0xff807d8c>
  8080a8:	00800e44 	movi	r2,57
  8080ac:	9011883a 	mov	r8,r18
  8080b0:	90817226 	beq	r18,r2,80867c <_dtoa_r+0x15c4>
  8080b4:	0580010e 	bge	zero,r22,8080bc <_dtoa_r+0x1004>
  8080b8:	ba000c44 	addi	r8,r23,49
  8080bc:	8825883a 	mov	r18,r17
  8080c0:	9dc00044 	addi	r23,r19,1
  8080c4:	9a000005 	stb	r8,0(r19)
  8080c8:	a023883a 	mov	r17,r20
  8080cc:	003f2f06 	br	807d8c <__alt_data_end+0xff807d8c>
  8080d0:	880b883a 	mov	r5,r17
  8080d4:	8009883a 	mov	r4,r16
  8080d8:	01800284 	movi	r6,10
  8080dc:	000f883a 	mov	r7,zero
  8080e0:	080957c0 	call	80957c <__multadd>
  8080e4:	1023883a 	mov	r17,r2
  8080e8:	1029883a 	mov	r20,r2
  8080ec:	003f9706 	br	807f4c <__alt_data_end+0xff807f4c>
  8080f0:	8009883a 	mov	r4,r16
  8080f4:	180b883a 	mov	r5,r3
  8080f8:	08095540 	call	809554 <_Bfree>
  8080fc:	00800044 	movi	r2,1
  808100:	003f7306 	br	807ed0 <__alt_data_end+0xff807ed0>
  808104:	e009883a 	mov	r4,fp
  808108:	a80b883a 	mov	r5,r21
  80810c:	0809d800 	call	809d80 <__mcmp>
  808110:	103ee60e 	bge	r2,zero,807cac <__alt_data_end+0xff807cac>
  808114:	8009883a 	mov	r4,r16
  808118:	e00b883a 	mov	r5,fp
  80811c:	01800284 	movi	r6,10
  808120:	000f883a 	mov	r7,zero
  808124:	080957c0 	call	80957c <__multadd>
  808128:	d9000517 	ldw	r4,20(sp)
  80812c:	d9800b17 	ldw	r6,44(sp)
  808130:	1039883a 	mov	fp,r2
  808134:	213fffc4 	addi	r4,r4,-1
  808138:	d9000515 	stw	r4,20(sp)
  80813c:	303f2d1e 	bne	r6,zero,807df4 <__alt_data_end+0xff807df4>
  808140:	d9000c17 	ldw	r4,48(sp)
  808144:	0101780e 	bge	zero,r4,808728 <_dtoa_r+0x1670>
  808148:	d9000615 	stw	r4,24(sp)
  80814c:	003edb06 	br	807cbc <__alt_data_end+0xff807cbc>
  808150:	00800084 	movi	r2,2
  808154:	30818e1e 	bne	r6,r2,808790 <_dtoa_r+0x16d8>
  808158:	d8000b15 	stw	zero,44(sp)
  80815c:	003f8106 	br	807f64 <__alt_data_end+0xff807f64>
  808160:	d8800717 	ldw	r2,28(sp)
  808164:	003c0306 	br	807174 <__alt_data_end+0xff807174>
  808168:	d9000317 	ldw	r4,12(sp)
  80816c:	00800084 	movi	r2,2
  808170:	113ed00e 	bge	r2,r4,807cb4 <__alt_data_end+0xff807cb4>
  808174:	d8c00617 	ldw	r3,24(sp)
  808178:	183f901e 	bne	r3,zero,807fbc <__alt_data_end+0xff807fbc>
  80817c:	a80b883a 	mov	r5,r21
  808180:	8009883a 	mov	r4,r16
  808184:	01800144 	movi	r6,5
  808188:	000f883a 	mov	r7,zero
  80818c:	080957c0 	call	80957c <__multadd>
  808190:	e009883a 	mov	r4,fp
  808194:	100b883a 	mov	r5,r2
  808198:	102b883a 	mov	r21,r2
  80819c:	0809d800 	call	809d80 <__mcmp>
  8081a0:	00bf860e 	bge	zero,r2,807fbc <__alt_data_end+0xff807fbc>
  8081a4:	d9800717 	ldw	r6,28(sp)
  8081a8:	00800c44 	movi	r2,49
  8081ac:	30800005 	stb	r2,0(r6)
  8081b0:	d8800517 	ldw	r2,20(sp)
  8081b4:	35c00044 	addi	r23,r6,1
  8081b8:	10800044 	addi	r2,r2,1
  8081bc:	d8800515 	stw	r2,20(sp)
  8081c0:	003f8206 	br	807fcc <__alt_data_end+0xff807fcc>
  8081c4:	903e981e 	bne	r18,zero,807c28 <__alt_data_end+0xff807c28>
  8081c8:	003f8b06 	br	807ff8 <__alt_data_end+0xff807ff8>
  8081cc:	d9800517 	ldw	r6,20(sp)
  8081d0:	d8c00717 	ldw	r3,28(sp)
  8081d4:	00800c44 	movi	r2,49
  8081d8:	31800044 	addi	r6,r6,1
  8081dc:	d9800515 	stw	r6,20(sp)
  8081e0:	18800005 	stb	r2,0(r3)
  8081e4:	003ee906 	br	807d8c <__alt_data_end+0xff807d8c>
  8081e8:	dc000317 	ldw	r16,12(sp)
  8081ec:	003d6006 	br	807770 <__alt_data_end+0xff807770>
  8081f0:	8809883a 	mov	r4,r17
  8081f4:	08171dc0 	call	8171dc <__floatsidf>
  8081f8:	a009883a 	mov	r4,r20
  8081fc:	a80b883a 	mov	r5,r21
  808200:	100d883a 	mov	r6,r2
  808204:	180f883a 	mov	r7,r3
  808208:	08161600 	call	816160 <__muldf3>
  80820c:	1009883a 	mov	r4,r2
  808210:	180b883a 	mov	r5,r3
  808214:	000d883a 	mov	r6,zero
  808218:	01d00734 	movhi	r7,16412
  80821c:	0814db40 	call	814db4 <__adddf3>
  808220:	1023883a 	mov	r17,r2
  808224:	00bf3034 	movhi	r2,64704
  808228:	1885883a 	add	r2,r3,r2
  80822c:	d8800e15 	stw	r2,56(sp)
  808230:	a009883a 	mov	r4,r20
  808234:	a80b883a 	mov	r5,r21
  808238:	000d883a 	mov	r6,zero
  80823c:	01d00534 	movhi	r7,16404
  808240:	08168840 	call	816884 <__subdf3>
  808244:	d9c00e17 	ldw	r7,56(sp)
  808248:	1009883a 	mov	r4,r2
  80824c:	180b883a 	mov	r5,r3
  808250:	880d883a 	mov	r6,r17
  808254:	102b883a 	mov	r21,r2
  808258:	1829883a 	mov	r20,r3
  80825c:	0815fa00 	call	815fa0 <__gedf2>
  808260:	00807716 	blt	zero,r2,808440 <_dtoa_r+0x1388>
  808264:	d8800e17 	ldw	r2,56(sp)
  808268:	a809883a 	mov	r4,r21
  80826c:	a00b883a 	mov	r5,r20
  808270:	11e0003c 	xorhi	r7,r2,32768
  808274:	880d883a 	mov	r6,r17
  808278:	08160800 	call	816080 <__ledf2>
  80827c:	103d6b0e 	bge	r2,zero,80782c <__alt_data_end+0xff80782c>
  808280:	002b883a 	mov	r21,zero
  808284:	0023883a 	mov	r17,zero
  808288:	003f4c06 	br	807fbc <__alt_data_end+0xff807fbc>
  80828c:	d9800917 	ldw	r6,36(sp)
  808290:	e00b883a 	mov	r5,fp
  808294:	8009883a 	mov	r4,r16
  808298:	0809af00 	call	809af0 <__pow5mult>
  80829c:	1039883a 	mov	fp,r2
  8082a0:	003e2706 	br	807b40 <__alt_data_end+0xff807b40>
  8082a4:	d8000b15 	stw	zero,44(sp)
  8082a8:	003c4906 	br	8073d0 <__alt_data_end+0xff8073d0>
  8082ac:	d9000917 	ldw	r4,36(sp)
  8082b0:	d9800a17 	ldw	r6,40(sp)
  8082b4:	dd400915 	stw	r21,36(sp)
  8082b8:	a905c83a 	sub	r2,r21,r4
  8082bc:	308d883a 	add	r6,r6,r2
  8082c0:	d9800a15 	stw	r6,40(sp)
  8082c4:	002b883a 	mov	r21,zero
  8082c8:	003df206 	br	807a94 <__alt_data_end+0xff807a94>
  8082cc:	dc800e15 	stw	r18,56(sp)
  8082d0:	982b883a 	mov	r21,r19
  8082d4:	04400084 	movi	r17,2
  8082d8:	003c7406 	br	8074ac <__alt_data_end+0xff8074ac>
  8082dc:	04400044 	movi	r17,1
  8082e0:	dc400c15 	stw	r17,48(sp)
  8082e4:	dc400615 	stw	r17,24(sp)
  8082e8:	dc402215 	stw	r17,136(sp)
  8082ec:	80001115 	stw	zero,68(r16)
  8082f0:	000b883a 	mov	r5,zero
  8082f4:	003c4a06 	br	807420 <__alt_data_end+0xff807420>
  8082f8:	3023883a 	mov	r17,r6
  8082fc:	003ffb06 	br	8082ec <__alt_data_end+0xff8082ec>
  808300:	1000021e 	bne	r2,zero,80830c <_dtoa_r+0x1254>
  808304:	4200004c 	andi	r8,r8,1
  808308:	403e8f1e 	bne	r8,zero,807d48 <__alt_data_end+0xff807d48>
  80830c:	01000c04 	movi	r4,48
  808310:	00000106 	br	808318 <_dtoa_r+0x1260>
  808314:	102f883a 	mov	r23,r2
  808318:	b8bfffc4 	addi	r2,r23,-1
  80831c:	10c00007 	ldb	r3,0(r2)
  808320:	193ffc26 	beq	r3,r4,808314 <__alt_data_end+0xff808314>
  808324:	003e9906 	br	807d8c <__alt_data_end+0xff807d8c>
  808328:	d9000517 	ldw	r4,20(sp)
  80832c:	012fc83a 	sub	r23,zero,r4
  808330:	b800ad26 	beq	r23,zero,8085e8 <_dtoa_r+0x1530>
  808334:	b88003cc 	andi	r2,r23,15
  808338:	100490fa 	slli	r2,r2,3
  80833c:	00c020b4 	movhi	r3,130
  808340:	18efae04 	addi	r3,r3,-16712
  808344:	1885883a 	add	r2,r3,r2
  808348:	11800017 	ldw	r6,0(r2)
  80834c:	11c00117 	ldw	r7,4(r2)
  808350:	b82fd13a 	srai	r23,r23,4
  808354:	9009883a 	mov	r4,r18
  808358:	980b883a 	mov	r5,r19
  80835c:	08161600 	call	816160 <__muldf3>
  808360:	1029883a 	mov	r20,r2
  808364:	182b883a 	mov	r21,r3
  808368:	b800f426 	beq	r23,zero,80873c <_dtoa_r+0x1684>
  80836c:	020020b4 	movhi	r8,130
  808370:	422fa404 	addi	r8,r8,-16752
  808374:	8029883a 	mov	r20,r16
  808378:	04400084 	movi	r17,2
  80837c:	4021883a 	mov	r16,r8
  808380:	b980004c 	andi	r6,r23,1
  808384:	1009883a 	mov	r4,r2
  808388:	b82fd07a 	srai	r23,r23,1
  80838c:	180b883a 	mov	r5,r3
  808390:	30000426 	beq	r6,zero,8083a4 <_dtoa_r+0x12ec>
  808394:	81800017 	ldw	r6,0(r16)
  808398:	81c00117 	ldw	r7,4(r16)
  80839c:	8c400044 	addi	r17,r17,1
  8083a0:	08161600 	call	816160 <__muldf3>
  8083a4:	84000204 	addi	r16,r16,8
  8083a8:	b83ff51e 	bne	r23,zero,808380 <__alt_data_end+0xff808380>
  8083ac:	a021883a 	mov	r16,r20
  8083b0:	182b883a 	mov	r21,r3
  8083b4:	1029883a 	mov	r20,r2
  8083b8:	003c5506 	br	807510 <__alt_data_end+0xff807510>
  8083bc:	d9800517 	ldw	r6,20(sp)
  8083c0:	d9000717 	ldw	r4,28(sp)
  8083c4:	00c00c04 	movi	r3,48
  8083c8:	31800044 	addi	r6,r6,1
  8083cc:	d9800515 	stw	r6,20(sp)
  8083d0:	20c00005 	stb	r3,0(r4)
  8083d4:	02000c44 	movi	r8,49
  8083d8:	003da206 	br	807a64 <__alt_data_end+0xff807a64>
  8083dc:	89400117 	ldw	r5,4(r17)
  8083e0:	8009883a 	mov	r4,r16
  8083e4:	08094ac0 	call	8094ac <_Balloc>
  8083e8:	89800417 	ldw	r6,16(r17)
  8083ec:	11000304 	addi	r4,r2,12
  8083f0:	89400304 	addi	r5,r17,12
  8083f4:	31800084 	addi	r6,r6,2
  8083f8:	318d883a 	add	r6,r6,r6
  8083fc:	318d883a 	add	r6,r6,r6
  808400:	1027883a 	mov	r19,r2
  808404:	08092180 	call	809218 <memcpy>
  808408:	8009883a 	mov	r4,r16
  80840c:	980b883a 	mov	r5,r19
  808410:	01800044 	movi	r6,1
  808414:	0809c300 	call	809c30 <__lshift>
  808418:	1029883a 	mov	r20,r2
  80841c:	003e8606 	br	807e38 <__alt_data_end+0xff807e38>
  808420:	00800e44 	movi	r2,57
  808424:	90809526 	beq	r18,r2,80867c <_dtoa_r+0x15c4>
  808428:	92000044 	addi	r8,r18,1
  80842c:	003f2306 	br	8080bc <__alt_data_end+0xff8080bc>
  808430:	9011883a 	mov	r8,r18
  808434:	8825883a 	mov	r18,r17
  808438:	a023883a 	mov	r17,r20
  80843c:	003e3706 	br	807d1c <__alt_data_end+0xff807d1c>
  808440:	002b883a 	mov	r21,zero
  808444:	0023883a 	mov	r17,zero
  808448:	003f5606 	br	8081a4 <__alt_data_end+0xff8081a4>
  80844c:	51bfffc4 	addi	r6,r10,-1
  808450:	300490fa 	slli	r2,r6,3
  808454:	00c020b4 	movhi	r3,130
  808458:	18efae04 	addi	r3,r3,-16712
  80845c:	1885883a 	add	r2,r3,r2
  808460:	d9c00e17 	ldw	r7,56(sp)
  808464:	11000017 	ldw	r4,0(r2)
  808468:	11400117 	ldw	r5,4(r2)
  80846c:	d8800717 	ldw	r2,28(sp)
  808470:	d9801015 	stw	r6,64(sp)
  808474:	880d883a 	mov	r6,r17
  808478:	da801615 	stw	r10,88(sp)
  80847c:	15c00044 	addi	r23,r2,1
  808480:	08161600 	call	816160 <__muldf3>
  808484:	a80b883a 	mov	r5,r21
  808488:	a009883a 	mov	r4,r20
  80848c:	d8c01115 	stw	r3,68(sp)
  808490:	d8800e15 	stw	r2,56(sp)
  808494:	08171540 	call	817154 <__fixdfsi>
  808498:	1009883a 	mov	r4,r2
  80849c:	1023883a 	mov	r17,r2
  8084a0:	08171dc0 	call	8171dc <__floatsidf>
  8084a4:	a009883a 	mov	r4,r20
  8084a8:	a80b883a 	mov	r5,r21
  8084ac:	100d883a 	mov	r6,r2
  8084b0:	180f883a 	mov	r7,r3
  8084b4:	08168840 	call	816884 <__subdf3>
  8084b8:	1813883a 	mov	r9,r3
  8084bc:	d8c00717 	ldw	r3,28(sp)
  8084c0:	8c400c04 	addi	r17,r17,48
  8084c4:	1011883a 	mov	r8,r2
  8084c8:	1c400005 	stb	r17,0(r3)
  8084cc:	da801617 	ldw	r10,88(sp)
  8084d0:	00800044 	movi	r2,1
  8084d4:	50802326 	beq	r10,r2,808564 <_dtoa_r+0x14ac>
  8084d8:	d8800717 	ldw	r2,28(sp)
  8084dc:	b82b883a 	mov	r21,r23
  8084e0:	dc001315 	stw	r16,76(sp)
  8084e4:	12a9883a 	add	r20,r2,r10
  8084e8:	4807883a 	mov	r3,r9
  8084ec:	4005883a 	mov	r2,r8
  8084f0:	dc801415 	stw	r18,80(sp)
  8084f4:	000d883a 	mov	r6,zero
  8084f8:	01d00934 	movhi	r7,16420
  8084fc:	1009883a 	mov	r4,r2
  808500:	180b883a 	mov	r5,r3
  808504:	08161600 	call	816160 <__muldf3>
  808508:	180b883a 	mov	r5,r3
  80850c:	1009883a 	mov	r4,r2
  808510:	1821883a 	mov	r16,r3
  808514:	1025883a 	mov	r18,r2
  808518:	08171540 	call	817154 <__fixdfsi>
  80851c:	1009883a 	mov	r4,r2
  808520:	1023883a 	mov	r17,r2
  808524:	08171dc0 	call	8171dc <__floatsidf>
  808528:	9009883a 	mov	r4,r18
  80852c:	800b883a 	mov	r5,r16
  808530:	100d883a 	mov	r6,r2
  808534:	180f883a 	mov	r7,r3
  808538:	8c400c04 	addi	r17,r17,48
  80853c:	08168840 	call	816884 <__subdf3>
  808540:	ad400044 	addi	r21,r21,1
  808544:	ac7fffc5 	stb	r17,-1(r21)
  808548:	ad3fea1e 	bne	r21,r20,8084f4 <__alt_data_end+0xff8084f4>
  80854c:	1813883a 	mov	r9,r3
  808550:	d8c01017 	ldw	r3,64(sp)
  808554:	dc001317 	ldw	r16,76(sp)
  808558:	dc801417 	ldw	r18,80(sp)
  80855c:	1011883a 	mov	r8,r2
  808560:	b8ef883a 	add	r23,r23,r3
  808564:	d9000e17 	ldw	r4,56(sp)
  808568:	d9401117 	ldw	r5,68(sp)
  80856c:	000d883a 	mov	r6,zero
  808570:	01cff834 	movhi	r7,16352
  808574:	da001715 	stw	r8,92(sp)
  808578:	da401515 	stw	r9,84(sp)
  80857c:	0814db40 	call	814db4 <__adddf3>
  808580:	da001717 	ldw	r8,92(sp)
  808584:	da401517 	ldw	r9,84(sp)
  808588:	1009883a 	mov	r4,r2
  80858c:	400d883a 	mov	r6,r8
  808590:	480f883a 	mov	r7,r9
  808594:	180b883a 	mov	r5,r3
  808598:	08160800 	call	816080 <__ledf2>
  80859c:	da001717 	ldw	r8,92(sp)
  8085a0:	da401517 	ldw	r9,84(sp)
  8085a4:	10003b0e 	bge	r2,zero,808694 <_dtoa_r+0x15dc>
  8085a8:	d9001217 	ldw	r4,72(sp)
  8085ac:	bd7fffc3 	ldbu	r21,-1(r23)
  8085b0:	d9000515 	stw	r4,20(sp)
  8085b4:	003d1c06 	br	807a28 <__alt_data_end+0xff807a28>
  8085b8:	d8c00817 	ldw	r3,32(sp)
  8085bc:	18a9c83a 	sub	r20,r3,r2
  8085c0:	0005883a 	mov	r2,zero
  8085c4:	003d3706 	br	807aa4 <__alt_data_end+0xff807aa4>
  8085c8:	00800044 	movi	r2,1
  8085cc:	003dd006 	br	807d10 <__alt_data_end+0xff807d10>
  8085d0:	d8c00217 	ldw	r3,8(sp)
  8085d4:	00800d84 	movi	r2,54
  8085d8:	dd400917 	ldw	r21,36(sp)
  8085dc:	10c5c83a 	sub	r2,r2,r3
  8085e0:	dd000817 	ldw	r20,32(sp)
  8085e4:	003d2f06 	br	807aa4 <__alt_data_end+0xff807aa4>
  8085e8:	9029883a 	mov	r20,r18
  8085ec:	982b883a 	mov	r21,r19
  8085f0:	04400084 	movi	r17,2
  8085f4:	003bc606 	br	807510 <__alt_data_end+0xff807510>
  8085f8:	d8800617 	ldw	r2,24(sp)
  8085fc:	103efc26 	beq	r2,zero,8081f0 <__alt_data_end+0xff8081f0>
  808600:	d8c00c17 	ldw	r3,48(sp)
  808604:	00fc890e 	bge	zero,r3,80782c <__alt_data_end+0xff80782c>
  808608:	a80b883a 	mov	r5,r21
  80860c:	a009883a 	mov	r4,r20
  808610:	000d883a 	mov	r6,zero
  808614:	01d00934 	movhi	r7,16420
  808618:	08161600 	call	816160 <__muldf3>
  80861c:	89000044 	addi	r4,r17,1
  808620:	1029883a 	mov	r20,r2
  808624:	182b883a 	mov	r21,r3
  808628:	08171dc0 	call	8171dc <__floatsidf>
  80862c:	a009883a 	mov	r4,r20
  808630:	a80b883a 	mov	r5,r21
  808634:	100d883a 	mov	r6,r2
  808638:	180f883a 	mov	r7,r3
  80863c:	08161600 	call	816160 <__muldf3>
  808640:	1009883a 	mov	r4,r2
  808644:	180b883a 	mov	r5,r3
  808648:	000d883a 	mov	r6,zero
  80864c:	01d00734 	movhi	r7,16412
  808650:	0814db40 	call	814db4 <__adddf3>
  808654:	d9000517 	ldw	r4,20(sp)
  808658:	1023883a 	mov	r17,r2
  80865c:	00bf3034 	movhi	r2,64704
  808660:	213fffc4 	addi	r4,r4,-1
  808664:	1885883a 	add	r2,r3,r2
  808668:	d9001215 	stw	r4,72(sp)
  80866c:	d8800e15 	stw	r2,56(sp)
  808670:	da800c17 	ldw	r10,48(sp)
  808674:	003bc306 	br	807584 <__alt_data_end+0xff807584>
  808678:	b039883a 	mov	fp,r22
  80867c:	01000e44 	movi	r4,57
  808680:	8825883a 	mov	r18,r17
  808684:	9dc00044 	addi	r23,r19,1
  808688:	99000005 	stb	r4,0(r19)
  80868c:	a023883a 	mov	r17,r20
  808690:	003dae06 	br	807d4c <__alt_data_end+0xff807d4c>
  808694:	d9800e17 	ldw	r6,56(sp)
  808698:	d9c01117 	ldw	r7,68(sp)
  80869c:	0009883a 	mov	r4,zero
  8086a0:	014ff834 	movhi	r5,16352
  8086a4:	da001715 	stw	r8,92(sp)
  8086a8:	da401515 	stw	r9,84(sp)
  8086ac:	08168840 	call	816884 <__subdf3>
  8086b0:	da001717 	ldw	r8,92(sp)
  8086b4:	da401517 	ldw	r9,84(sp)
  8086b8:	1009883a 	mov	r4,r2
  8086bc:	180b883a 	mov	r5,r3
  8086c0:	400d883a 	mov	r6,r8
  8086c4:	480f883a 	mov	r7,r9
  8086c8:	0815fa00 	call	815fa0 <__gedf2>
  8086cc:	00bc570e 	bge	zero,r2,80782c <__alt_data_end+0xff80782c>
  8086d0:	01000c04 	movi	r4,48
  8086d4:	00000106 	br	8086dc <_dtoa_r+0x1624>
  8086d8:	102f883a 	mov	r23,r2
  8086dc:	b8bfffc4 	addi	r2,r23,-1
  8086e0:	10c00007 	ldb	r3,0(r2)
  8086e4:	193ffc26 	beq	r3,r4,8086d8 <__alt_data_end+0xff8086d8>
  8086e8:	d9801217 	ldw	r6,72(sp)
  8086ec:	d9800515 	stw	r6,20(sp)
  8086f0:	003c1f06 	br	807770 <__alt_data_end+0xff807770>
  8086f4:	d8801217 	ldw	r2,72(sp)
  8086f8:	dc001117 	ldw	r16,68(sp)
  8086fc:	d8800515 	stw	r2,20(sp)
  808700:	003cc906 	br	807a28 <__alt_data_end+0xff807a28>
  808704:	dd801317 	ldw	r22,76(sp)
  808708:	dc001117 	ldw	r16,68(sp)
  80870c:	dcc01417 	ldw	r19,80(sp)
  808710:	dc801017 	ldw	r18,64(sp)
  808714:	003c4506 	br	80782c <__alt_data_end+0xff80782c>
  808718:	103e5d1e 	bne	r2,zero,808090 <__alt_data_end+0xff808090>
  80871c:	4080004c 	andi	r2,r8,1
  808720:	103e5b26 	beq	r2,zero,808090 <__alt_data_end+0xff808090>
  808724:	003e5706 	br	808084 <__alt_data_end+0xff808084>
  808728:	d8c00317 	ldw	r3,12(sp)
  80872c:	00800084 	movi	r2,2
  808730:	10c00a16 	blt	r2,r3,80875c <_dtoa_r+0x16a4>
  808734:	d9000c17 	ldw	r4,48(sp)
  808738:	003e8306 	br	808148 <__alt_data_end+0xff808148>
  80873c:	04400084 	movi	r17,2
  808740:	003b7306 	br	807510 <__alt_data_end+0xff807510>
  808744:	d9801217 	ldw	r6,72(sp)
  808748:	d9800515 	stw	r6,20(sp)
  80874c:	003cb606 	br	807a28 <__alt_data_end+0xff807a28>
  808750:	d9001217 	ldw	r4,72(sp)
  808754:	d9000515 	stw	r4,20(sp)
  808758:	003c0506 	br	807770 <__alt_data_end+0xff807770>
  80875c:	d9800c17 	ldw	r6,48(sp)
  808760:	d9800615 	stw	r6,24(sp)
  808764:	003e8306 	br	808174 <__alt_data_end+0xff808174>
  808768:	d9800317 	ldw	r6,12(sp)
  80876c:	00800084 	movi	r2,2
  808770:	11800216 	blt	r2,r6,80877c <_dtoa_r+0x16c4>
  808774:	d8800c17 	ldw	r2,48(sp)
  808778:	003da606 	br	807e14 <__alt_data_end+0xff807e14>
  80877c:	d8800c17 	ldw	r2,48(sp)
  808780:	d8800615 	stw	r2,24(sp)
  808784:	003e7b06 	br	808174 <__alt_data_end+0xff808174>
  808788:	05000044 	movi	r20,1
  80878c:	003b0506 	br	8073a4 <__alt_data_end+0xff8073a4>
  808790:	8009883a 	mov	r4,r16
  808794:	80001115 	stw	zero,68(r16)
  808798:	000b883a 	mov	r5,zero
  80879c:	08094ac0 	call	8094ac <_Balloc>
  8087a0:	d8800715 	stw	r2,28(sp)
  8087a4:	d8c00717 	ldw	r3,28(sp)
  8087a8:	00bfffc4 	movi	r2,-1
  8087ac:	01000044 	movi	r4,1
  8087b0:	d8800c15 	stw	r2,48(sp)
  8087b4:	80c01015 	stw	r3,64(r16)
  8087b8:	d9000b15 	stw	r4,44(sp)
  8087bc:	d8800615 	stw	r2,24(sp)
  8087c0:	d8002215 	stw	zero,136(sp)
  8087c4:	003c1906 	br	80782c <__alt_data_end+0xff80782c>
  8087c8:	193d2926 	beq	r3,r4,807c70 <__alt_data_end+0xff807c70>
  8087cc:	00c00f04 	movi	r3,60
  8087d0:	1885c83a 	sub	r2,r3,r2
  8087d4:	003d7b06 	br	807dc4 <__alt_data_end+0xff807dc4>
  8087d8:	000b883a 	mov	r5,zero
  8087dc:	003b1006 	br	807420 <__alt_data_end+0xff807420>

008087e0 <__sflags>:
  8087e0:	28800007 	ldb	r2,0(r5)
  8087e4:	00c01c84 	movi	r3,114
  8087e8:	10c02426 	beq	r2,r3,80887c <__sflags+0x9c>
  8087ec:	00c01dc4 	movi	r3,119
  8087f0:	10c01e26 	beq	r2,r3,80886c <__sflags+0x8c>
  8087f4:	00c01844 	movi	r3,97
  8087f8:	10c00426 	beq	r2,r3,80880c <__sflags+0x2c>
  8087fc:	00800584 	movi	r2,22
  808800:	20800015 	stw	r2,0(r4)
  808804:	0005883a 	mov	r2,zero
  808808:	f800283a 	ret
  80880c:	02c08204 	movi	r11,520
  808810:	01000044 	movi	r4,1
  808814:	00804204 	movi	r2,264
  808818:	01c00ac4 	movi	r7,43
  80881c:	02bff8c4 	movi	r10,-29
  808820:	027fff04 	movi	r9,-4
  808824:	02001e04 	movi	r8,120
  808828:	29400044 	addi	r5,r5,1
  80882c:	28c00007 	ldb	r3,0(r5)
  808830:	18000626 	beq	r3,zero,80884c <__sflags+0x6c>
  808834:	19c00826 	beq	r3,r7,808858 <__sflags+0x78>
  808838:	1a3ffb1e 	bne	r3,r8,808828 <__alt_data_end+0xff808828>
  80883c:	29400044 	addi	r5,r5,1
  808840:	28c00007 	ldb	r3,0(r5)
  808844:	21020014 	ori	r4,r4,2048
  808848:	183ffa1e 	bne	r3,zero,808834 <__alt_data_end+0xff808834>
  80884c:	22c8b03a 	or	r4,r4,r11
  808850:	31000015 	stw	r4,0(r6)
  808854:	f800283a 	ret
  808858:	1284703a 	and	r2,r2,r10
  80885c:	2248703a 	and	r4,r4,r9
  808860:	10800414 	ori	r2,r2,16
  808864:	21000094 	ori	r4,r4,2
  808868:	003fef06 	br	808828 <__alt_data_end+0xff808828>
  80886c:	02c18004 	movi	r11,1536
  808870:	01000044 	movi	r4,1
  808874:	00800204 	movi	r2,8
  808878:	003fe706 	br	808818 <__alt_data_end+0xff808818>
  80887c:	0017883a 	mov	r11,zero
  808880:	0009883a 	mov	r4,zero
  808884:	00800104 	movi	r2,4
  808888:	003fe306 	br	808818 <__alt_data_end+0xff808818>

0080888c <__sfvwrite_r>:
  80888c:	30800217 	ldw	r2,8(r6)
  808890:	10006726 	beq	r2,zero,808a30 <__sfvwrite_r+0x1a4>
  808894:	defff404 	addi	sp,sp,-48
  808898:	dd000615 	stw	r20,24(sp)
  80889c:	2029883a 	mov	r20,r4
  8088a0:	2900030b 	ldhu	r4,12(r5)
  8088a4:	ddc00915 	stw	r23,36(sp)
  8088a8:	dc000215 	stw	r16,8(sp)
  8088ac:	dfc00b15 	stw	ra,44(sp)
  8088b0:	df000a15 	stw	fp,40(sp)
  8088b4:	dd800815 	stw	r22,32(sp)
  8088b8:	dd400715 	stw	r21,28(sp)
  8088bc:	dcc00515 	stw	r19,20(sp)
  8088c0:	dc800415 	stw	r18,16(sp)
  8088c4:	dc400315 	stw	r17,12(sp)
  8088c8:	2080020c 	andi	r2,r4,8
  8088cc:	2821883a 	mov	r16,r5
  8088d0:	302f883a 	mov	r23,r6
  8088d4:	10002726 	beq	r2,zero,808974 <__sfvwrite_r+0xe8>
  8088d8:	28800417 	ldw	r2,16(r5)
  8088dc:	10002526 	beq	r2,zero,808974 <__sfvwrite_r+0xe8>
  8088e0:	2080008c 	andi	r2,r4,2
  8088e4:	bc400017 	ldw	r17,0(r23)
  8088e8:	10002a26 	beq	r2,zero,808994 <__sfvwrite_r+0x108>
  8088ec:	05600034 	movhi	r21,32768
  8088f0:	0027883a 	mov	r19,zero
  8088f4:	0025883a 	mov	r18,zero
  8088f8:	ad7f0004 	addi	r21,r21,-1024
  8088fc:	980d883a 	mov	r6,r19
  808900:	a009883a 	mov	r4,r20
  808904:	90004626 	beq	r18,zero,808a20 <__sfvwrite_r+0x194>
  808908:	900f883a 	mov	r7,r18
  80890c:	81400717 	ldw	r5,28(r16)
  808910:	ac80022e 	bgeu	r21,r18,80891c <__sfvwrite_r+0x90>
  808914:	01e00034 	movhi	r7,32768
  808918:	39ff0004 	addi	r7,r7,-1024
  80891c:	80800917 	ldw	r2,36(r16)
  808920:	103ee83a 	callr	r2
  808924:	0080520e 	bge	zero,r2,808a70 <__sfvwrite_r+0x1e4>
  808928:	b8c00217 	ldw	r3,8(r23)
  80892c:	98a7883a 	add	r19,r19,r2
  808930:	90a5c83a 	sub	r18,r18,r2
  808934:	1885c83a 	sub	r2,r3,r2
  808938:	b8800215 	stw	r2,8(r23)
  80893c:	103fef1e 	bne	r2,zero,8088fc <__alt_data_end+0xff8088fc>
  808940:	0005883a 	mov	r2,zero
  808944:	dfc00b17 	ldw	ra,44(sp)
  808948:	df000a17 	ldw	fp,40(sp)
  80894c:	ddc00917 	ldw	r23,36(sp)
  808950:	dd800817 	ldw	r22,32(sp)
  808954:	dd400717 	ldw	r21,28(sp)
  808958:	dd000617 	ldw	r20,24(sp)
  80895c:	dcc00517 	ldw	r19,20(sp)
  808960:	dc800417 	ldw	r18,16(sp)
  808964:	dc400317 	ldw	r17,12(sp)
  808968:	dc000217 	ldw	r16,8(sp)
  80896c:	dec00c04 	addi	sp,sp,48
  808970:	f800283a 	ret
  808974:	a009883a 	mov	r4,r20
  808978:	800b883a 	mov	r5,r16
  80897c:	0806d100 	call	806d10 <__swsetup_r>
  808980:	1000ec1e 	bne	r2,zero,808d34 <__sfvwrite_r+0x4a8>
  808984:	8100030b 	ldhu	r4,12(r16)
  808988:	bc400017 	ldw	r17,0(r23)
  80898c:	2080008c 	andi	r2,r4,2
  808990:	103fd61e 	bne	r2,zero,8088ec <__alt_data_end+0xff8088ec>
  808994:	2080004c 	andi	r2,r4,1
  808998:	10003a1e 	bne	r2,zero,808a84 <__sfvwrite_r+0x1f8>
  80899c:	0039883a 	mov	fp,zero
  8089a0:	0025883a 	mov	r18,zero
  8089a4:	90001a26 	beq	r18,zero,808a10 <__sfvwrite_r+0x184>
  8089a8:	2080800c 	andi	r2,r4,512
  8089ac:	85800217 	ldw	r22,8(r16)
  8089b0:	10007626 	beq	r2,zero,808b8c <__sfvwrite_r+0x300>
  8089b4:	b027883a 	mov	r19,r22
  8089b8:	95809436 	bltu	r18,r22,808c0c <__sfvwrite_r+0x380>
  8089bc:	2081200c 	andi	r2,r4,1152
  8089c0:	10009f1e 	bne	r2,zero,808c40 <__sfvwrite_r+0x3b4>
  8089c4:	81000017 	ldw	r4,0(r16)
  8089c8:	e00b883a 	mov	r5,fp
  8089cc:	980d883a 	mov	r6,r19
  8089d0:	08093500 	call	809350 <memmove>
  8089d4:	81000217 	ldw	r4,8(r16)
  8089d8:	81400017 	ldw	r5,0(r16)
  8089dc:	9005883a 	mov	r2,r18
  8089e0:	2587c83a 	sub	r3,r4,r22
  8089e4:	2ce7883a 	add	r19,r5,r19
  8089e8:	80c00215 	stw	r3,8(r16)
  8089ec:	84c00015 	stw	r19,0(r16)
  8089f0:	b8c00217 	ldw	r3,8(r23)
  8089f4:	e0b9883a 	add	fp,fp,r2
  8089f8:	90a5c83a 	sub	r18,r18,r2
  8089fc:	1885c83a 	sub	r2,r3,r2
  808a00:	b8800215 	stw	r2,8(r23)
  808a04:	103fce26 	beq	r2,zero,808940 <__alt_data_end+0xff808940>
  808a08:	8100030b 	ldhu	r4,12(r16)
  808a0c:	903fe61e 	bne	r18,zero,8089a8 <__alt_data_end+0xff8089a8>
  808a10:	8f000017 	ldw	fp,0(r17)
  808a14:	8c800117 	ldw	r18,4(r17)
  808a18:	8c400204 	addi	r17,r17,8
  808a1c:	003fe106 	br	8089a4 <__alt_data_end+0xff8089a4>
  808a20:	8cc00017 	ldw	r19,0(r17)
  808a24:	8c800117 	ldw	r18,4(r17)
  808a28:	8c400204 	addi	r17,r17,8
  808a2c:	003fb306 	br	8088fc <__alt_data_end+0xff8088fc>
  808a30:	0005883a 	mov	r2,zero
  808a34:	f800283a 	ret
  808a38:	00a00034 	movhi	r2,32768
  808a3c:	10bfffc4 	addi	r2,r2,-1
  808a40:	9009883a 	mov	r4,r18
  808a44:	1480012e 	bgeu	r2,r18,808a4c <__sfvwrite_r+0x1c0>
  808a48:	1009883a 	mov	r4,r2
  808a4c:	980b883a 	mov	r5,r19
  808a50:	0814b100 	call	814b10 <__divsi3>
  808a54:	81400717 	ldw	r5,28(r16)
  808a58:	80c00917 	ldw	r3,36(r16)
  808a5c:	988f383a 	mul	r7,r19,r2
  808a60:	a009883a 	mov	r4,r20
  808a64:	e00d883a 	mov	r6,fp
  808a68:	183ee83a 	callr	r3
  808a6c:	00bfe016 	blt	zero,r2,8089f0 <__alt_data_end+0xff8089f0>
  808a70:	8080030b 	ldhu	r2,12(r16)
  808a74:	10801014 	ori	r2,r2,64
  808a78:	8080030d 	sth	r2,12(r16)
  808a7c:	00bfffc4 	movi	r2,-1
  808a80:	003fb006 	br	808944 <__alt_data_end+0xff808944>
  808a84:	0027883a 	mov	r19,zero
  808a88:	0011883a 	mov	r8,zero
  808a8c:	0039883a 	mov	fp,zero
  808a90:	0025883a 	mov	r18,zero
  808a94:	90001f26 	beq	r18,zero,808b14 <__sfvwrite_r+0x288>
  808a98:	40006026 	beq	r8,zero,808c1c <__sfvwrite_r+0x390>
  808a9c:	982b883a 	mov	r21,r19
  808aa0:	94c0012e 	bgeu	r18,r19,808aa8 <__sfvwrite_r+0x21c>
  808aa4:	902b883a 	mov	r21,r18
  808aa8:	81000017 	ldw	r4,0(r16)
  808aac:	80800417 	ldw	r2,16(r16)
  808ab0:	a82d883a 	mov	r22,r21
  808ab4:	81800217 	ldw	r6,8(r16)
  808ab8:	81c00517 	ldw	r7,20(r16)
  808abc:	1100022e 	bgeu	r2,r4,808ac8 <__sfvwrite_r+0x23c>
  808ac0:	31c7883a 	add	r3,r6,r7
  808ac4:	1d401816 	blt	r3,r21,808b28 <__sfvwrite_r+0x29c>
  808ac8:	a9c04416 	blt	r21,r7,808bdc <__sfvwrite_r+0x350>
  808acc:	80800917 	ldw	r2,36(r16)
  808ad0:	81400717 	ldw	r5,28(r16)
  808ad4:	a009883a 	mov	r4,r20
  808ad8:	da000115 	stw	r8,4(sp)
  808adc:	e00d883a 	mov	r6,fp
  808ae0:	103ee83a 	callr	r2
  808ae4:	102d883a 	mov	r22,r2
  808ae8:	da000117 	ldw	r8,4(sp)
  808aec:	00bfe00e 	bge	zero,r2,808a70 <__alt_data_end+0xff808a70>
  808af0:	9da7c83a 	sub	r19,r19,r22
  808af4:	98001f26 	beq	r19,zero,808b74 <__sfvwrite_r+0x2e8>
  808af8:	b8800217 	ldw	r2,8(r23)
  808afc:	e5b9883a 	add	fp,fp,r22
  808b00:	95a5c83a 	sub	r18,r18,r22
  808b04:	15adc83a 	sub	r22,r2,r22
  808b08:	bd800215 	stw	r22,8(r23)
  808b0c:	b03f8c26 	beq	r22,zero,808940 <__alt_data_end+0xff808940>
  808b10:	903fe11e 	bne	r18,zero,808a98 <__alt_data_end+0xff808a98>
  808b14:	8f000017 	ldw	fp,0(r17)
  808b18:	8c800117 	ldw	r18,4(r17)
  808b1c:	0011883a 	mov	r8,zero
  808b20:	8c400204 	addi	r17,r17,8
  808b24:	003fdb06 	br	808a94 <__alt_data_end+0xff808a94>
  808b28:	180d883a 	mov	r6,r3
  808b2c:	e00b883a 	mov	r5,fp
  808b30:	da000115 	stw	r8,4(sp)
  808b34:	d8c00015 	stw	r3,0(sp)
  808b38:	08093500 	call	809350 <memmove>
  808b3c:	d8c00017 	ldw	r3,0(sp)
  808b40:	80800017 	ldw	r2,0(r16)
  808b44:	a009883a 	mov	r4,r20
  808b48:	800b883a 	mov	r5,r16
  808b4c:	10c5883a 	add	r2,r2,r3
  808b50:	80800015 	stw	r2,0(r16)
  808b54:	d8c00015 	stw	r3,0(sp)
  808b58:	08011c80 	call	8011c8 <_fflush_r>
  808b5c:	d8c00017 	ldw	r3,0(sp)
  808b60:	da000117 	ldw	r8,4(sp)
  808b64:	103fc21e 	bne	r2,zero,808a70 <__alt_data_end+0xff808a70>
  808b68:	182d883a 	mov	r22,r3
  808b6c:	9da7c83a 	sub	r19,r19,r22
  808b70:	983fe11e 	bne	r19,zero,808af8 <__alt_data_end+0xff808af8>
  808b74:	a009883a 	mov	r4,r20
  808b78:	800b883a 	mov	r5,r16
  808b7c:	08011c80 	call	8011c8 <_fflush_r>
  808b80:	103fbb1e 	bne	r2,zero,808a70 <__alt_data_end+0xff808a70>
  808b84:	0011883a 	mov	r8,zero
  808b88:	003fdb06 	br	808af8 <__alt_data_end+0xff808af8>
  808b8c:	81000017 	ldw	r4,0(r16)
  808b90:	80800417 	ldw	r2,16(r16)
  808b94:	11000236 	bltu	r2,r4,808ba0 <__sfvwrite_r+0x314>
  808b98:	84c00517 	ldw	r19,20(r16)
  808b9c:	94ffa62e 	bgeu	r18,r19,808a38 <__alt_data_end+0xff808a38>
  808ba0:	9027883a 	mov	r19,r18
  808ba4:	b480012e 	bgeu	r22,r18,808bac <__sfvwrite_r+0x320>
  808ba8:	b027883a 	mov	r19,r22
  808bac:	e00b883a 	mov	r5,fp
  808bb0:	980d883a 	mov	r6,r19
  808bb4:	08093500 	call	809350 <memmove>
  808bb8:	80800217 	ldw	r2,8(r16)
  808bbc:	80c00017 	ldw	r3,0(r16)
  808bc0:	14c5c83a 	sub	r2,r2,r19
  808bc4:	1cc7883a 	add	r3,r3,r19
  808bc8:	80800215 	stw	r2,8(r16)
  808bcc:	80c00015 	stw	r3,0(r16)
  808bd0:	10004326 	beq	r2,zero,808ce0 <__sfvwrite_r+0x454>
  808bd4:	9805883a 	mov	r2,r19
  808bd8:	003f8506 	br	8089f0 <__alt_data_end+0xff8089f0>
  808bdc:	a80d883a 	mov	r6,r21
  808be0:	e00b883a 	mov	r5,fp
  808be4:	da000115 	stw	r8,4(sp)
  808be8:	08093500 	call	809350 <memmove>
  808bec:	80800217 	ldw	r2,8(r16)
  808bf0:	80c00017 	ldw	r3,0(r16)
  808bf4:	da000117 	ldw	r8,4(sp)
  808bf8:	1545c83a 	sub	r2,r2,r21
  808bfc:	1d6b883a 	add	r21,r3,r21
  808c00:	80800215 	stw	r2,8(r16)
  808c04:	85400015 	stw	r21,0(r16)
  808c08:	003fb906 	br	808af0 <__alt_data_end+0xff808af0>
  808c0c:	81000017 	ldw	r4,0(r16)
  808c10:	902d883a 	mov	r22,r18
  808c14:	9027883a 	mov	r19,r18
  808c18:	003f6b06 	br	8089c8 <__alt_data_end+0xff8089c8>
  808c1c:	e009883a 	mov	r4,fp
  808c20:	01400284 	movi	r5,10
  808c24:	900d883a 	mov	r6,r18
  808c28:	08091300 	call	809130 <memchr>
  808c2c:	10003e26 	beq	r2,zero,808d28 <__sfvwrite_r+0x49c>
  808c30:	10800044 	addi	r2,r2,1
  808c34:	1727c83a 	sub	r19,r2,fp
  808c38:	02000044 	movi	r8,1
  808c3c:	003f9706 	br	808a9c <__alt_data_end+0xff808a9c>
  808c40:	80800517 	ldw	r2,20(r16)
  808c44:	81400417 	ldw	r5,16(r16)
  808c48:	80c00017 	ldw	r3,0(r16)
  808c4c:	10a7883a 	add	r19,r2,r2
  808c50:	9885883a 	add	r2,r19,r2
  808c54:	1026d7fa 	srli	r19,r2,31
  808c58:	196bc83a 	sub	r21,r3,r5
  808c5c:	a9800044 	addi	r6,r21,1
  808c60:	9885883a 	add	r2,r19,r2
  808c64:	1027d07a 	srai	r19,r2,1
  808c68:	3485883a 	add	r2,r6,r18
  808c6c:	980d883a 	mov	r6,r19
  808c70:	9880022e 	bgeu	r19,r2,808c7c <__sfvwrite_r+0x3f0>
  808c74:	1027883a 	mov	r19,r2
  808c78:	100d883a 	mov	r6,r2
  808c7c:	2101000c 	andi	r4,r4,1024
  808c80:	20001c26 	beq	r4,zero,808cf4 <__sfvwrite_r+0x468>
  808c84:	a009883a 	mov	r4,r20
  808c88:	300b883a 	mov	r5,r6
  808c8c:	080258c0 	call	80258c <_malloc_r>
  808c90:	102d883a 	mov	r22,r2
  808c94:	10002926 	beq	r2,zero,808d3c <__sfvwrite_r+0x4b0>
  808c98:	81400417 	ldw	r5,16(r16)
  808c9c:	1009883a 	mov	r4,r2
  808ca0:	a80d883a 	mov	r6,r21
  808ca4:	08092180 	call	809218 <memcpy>
  808ca8:	8080030b 	ldhu	r2,12(r16)
  808cac:	00fedfc4 	movi	r3,-1153
  808cb0:	10c4703a 	and	r2,r2,r3
  808cb4:	10802014 	ori	r2,r2,128
  808cb8:	8080030d 	sth	r2,12(r16)
  808cbc:	b549883a 	add	r4,r22,r21
  808cc0:	9d4bc83a 	sub	r5,r19,r21
  808cc4:	85800415 	stw	r22,16(r16)
  808cc8:	84c00515 	stw	r19,20(r16)
  808ccc:	81000015 	stw	r4,0(r16)
  808cd0:	902d883a 	mov	r22,r18
  808cd4:	81400215 	stw	r5,8(r16)
  808cd8:	9027883a 	mov	r19,r18
  808cdc:	003f3a06 	br	8089c8 <__alt_data_end+0xff8089c8>
  808ce0:	a009883a 	mov	r4,r20
  808ce4:	800b883a 	mov	r5,r16
  808ce8:	08011c80 	call	8011c8 <_fflush_r>
  808cec:	103fb926 	beq	r2,zero,808bd4 <__alt_data_end+0xff808bd4>
  808cf0:	003f5f06 	br	808a70 <__alt_data_end+0xff808a70>
  808cf4:	a009883a 	mov	r4,r20
  808cf8:	080a6140 	call	80a614 <_realloc_r>
  808cfc:	102d883a 	mov	r22,r2
  808d00:	103fee1e 	bne	r2,zero,808cbc <__alt_data_end+0xff808cbc>
  808d04:	81400417 	ldw	r5,16(r16)
  808d08:	a009883a 	mov	r4,r20
  808d0c:	08018700 	call	801870 <_free_r>
  808d10:	8080030b 	ldhu	r2,12(r16)
  808d14:	00ffdfc4 	movi	r3,-129
  808d18:	1884703a 	and	r2,r3,r2
  808d1c:	00c00304 	movi	r3,12
  808d20:	a0c00015 	stw	r3,0(r20)
  808d24:	003f5306 	br	808a74 <__alt_data_end+0xff808a74>
  808d28:	94c00044 	addi	r19,r18,1
  808d2c:	02000044 	movi	r8,1
  808d30:	003f5a06 	br	808a9c <__alt_data_end+0xff808a9c>
  808d34:	00bfffc4 	movi	r2,-1
  808d38:	003f0206 	br	808944 <__alt_data_end+0xff808944>
  808d3c:	00800304 	movi	r2,12
  808d40:	a0800015 	stw	r2,0(r20)
  808d44:	8080030b 	ldhu	r2,12(r16)
  808d48:	003f4a06 	br	808a74 <__alt_data_end+0xff808a74>

00808d4c <_isatty_r>:
  808d4c:	defffd04 	addi	sp,sp,-12
  808d50:	dc000015 	stw	r16,0(sp)
  808d54:	040020b4 	movhi	r16,130
  808d58:	dc400115 	stw	r17,4(sp)
  808d5c:	843f6304 	addi	r16,r16,-628
  808d60:	2023883a 	mov	r17,r4
  808d64:	2809883a 	mov	r4,r5
  808d68:	dfc00215 	stw	ra,8(sp)
  808d6c:	80000015 	stw	zero,0(r16)
  808d70:	08179980 	call	817998 <isatty>
  808d74:	00ffffc4 	movi	r3,-1
  808d78:	10c00526 	beq	r2,r3,808d90 <_isatty_r+0x44>
  808d7c:	dfc00217 	ldw	ra,8(sp)
  808d80:	dc400117 	ldw	r17,4(sp)
  808d84:	dc000017 	ldw	r16,0(sp)
  808d88:	dec00304 	addi	sp,sp,12
  808d8c:	f800283a 	ret
  808d90:	80c00017 	ldw	r3,0(r16)
  808d94:	183ff926 	beq	r3,zero,808d7c <__alt_data_end+0xff808d7c>
  808d98:	88c00015 	stw	r3,0(r17)
  808d9c:	003ff706 	br	808d7c <__alt_data_end+0xff808d7c>

00808da0 <iswspace>:
  808da0:	00803fc4 	movi	r2,255
  808da4:	11000836 	bltu	r2,r4,808dc8 <iswspace+0x28>
  808da8:	008020b4 	movhi	r2,130
  808dac:	10b7fb04 	addi	r2,r2,-8212
  808db0:	10800017 	ldw	r2,0(r2)
  808db4:	1109883a 	add	r4,r2,r4
  808db8:	20800043 	ldbu	r2,1(r4)
  808dbc:	1080020c 	andi	r2,r2,8
  808dc0:	10803fcc 	andi	r2,r2,255
  808dc4:	f800283a 	ret
  808dc8:	0005883a 	mov	r2,zero
  808dcc:	f800283a 	ret

00808dd0 <_setlocale_r>:
  808dd0:	30001b26 	beq	r6,zero,808e40 <_setlocale_r+0x70>
  808dd4:	014020b4 	movhi	r5,130
  808dd8:	defffe04 	addi	sp,sp,-8
  808ddc:	296f9404 	addi	r5,r5,-16816
  808de0:	3009883a 	mov	r4,r6
  808de4:	dc000015 	stw	r16,0(sp)
  808de8:	dfc00115 	stw	ra,4(sp)
  808dec:	3021883a 	mov	r16,r6
  808df0:	080ad7c0 	call	80ad7c <strcmp>
  808df4:	1000061e 	bne	r2,zero,808e10 <_setlocale_r+0x40>
  808df8:	008020b4 	movhi	r2,130
  808dfc:	10aecb04 	addi	r2,r2,-17620
  808e00:	dfc00117 	ldw	ra,4(sp)
  808e04:	dc000017 	ldw	r16,0(sp)
  808e08:	dec00204 	addi	sp,sp,8
  808e0c:	f800283a 	ret
  808e10:	014020b4 	movhi	r5,130
  808e14:	296ecb04 	addi	r5,r5,-17620
  808e18:	8009883a 	mov	r4,r16
  808e1c:	080ad7c0 	call	80ad7c <strcmp>
  808e20:	103ff526 	beq	r2,zero,808df8 <__alt_data_end+0xff808df8>
  808e24:	014020b4 	movhi	r5,130
  808e28:	296edf04 	addi	r5,r5,-17540
  808e2c:	8009883a 	mov	r4,r16
  808e30:	080ad7c0 	call	80ad7c <strcmp>
  808e34:	103ff026 	beq	r2,zero,808df8 <__alt_data_end+0xff808df8>
  808e38:	0005883a 	mov	r2,zero
  808e3c:	003ff006 	br	808e00 <__alt_data_end+0xff808e00>
  808e40:	008020b4 	movhi	r2,130
  808e44:	10aecb04 	addi	r2,r2,-17620
  808e48:	f800283a 	ret

00808e4c <__locale_charset>:
  808e4c:	008020b4 	movhi	r2,130
  808e50:	10b2ce04 	addi	r2,r2,-13512
  808e54:	f800283a 	ret

00808e58 <__locale_mb_cur_max>:
  808e58:	008020b4 	movhi	r2,130
  808e5c:	10b7fc04 	addi	r2,r2,-8208
  808e60:	10800017 	ldw	r2,0(r2)
  808e64:	f800283a 	ret

00808e68 <__locale_msgcharset>:
  808e68:	008020b4 	movhi	r2,130
  808e6c:	10b2c604 	addi	r2,r2,-13544
  808e70:	f800283a 	ret

00808e74 <__locale_cjk_lang>:
  808e74:	0005883a 	mov	r2,zero
  808e78:	f800283a 	ret

00808e7c <_localeconv_r>:
  808e7c:	008020b4 	movhi	r2,130
  808e80:	10b2d604 	addi	r2,r2,-13480
  808e84:	f800283a 	ret

00808e88 <setlocale>:
  808e88:	00c020b4 	movhi	r3,130
  808e8c:	18f7f804 	addi	r3,r3,-8224
  808e90:	2005883a 	mov	r2,r4
  808e94:	19000017 	ldw	r4,0(r3)
  808e98:	280d883a 	mov	r6,r5
  808e9c:	100b883a 	mov	r5,r2
  808ea0:	0808dd01 	jmpi	808dd0 <_setlocale_r>

00808ea4 <localeconv>:
  808ea4:	008020b4 	movhi	r2,130
  808ea8:	10b2d604 	addi	r2,r2,-13480
  808eac:	f800283a 	ret

00808eb0 <_lseek_r>:
  808eb0:	defffd04 	addi	sp,sp,-12
  808eb4:	dc000015 	stw	r16,0(sp)
  808eb8:	040020b4 	movhi	r16,130
  808ebc:	dc400115 	stw	r17,4(sp)
  808ec0:	843f6304 	addi	r16,r16,-628
  808ec4:	2023883a 	mov	r17,r4
  808ec8:	2809883a 	mov	r4,r5
  808ecc:	300b883a 	mov	r5,r6
  808ed0:	380d883a 	mov	r6,r7
  808ed4:	dfc00215 	stw	ra,8(sp)
  808ed8:	80000015 	stw	zero,0(r16)
  808edc:	0817b700 	call	817b70 <lseek>
  808ee0:	00ffffc4 	movi	r3,-1
  808ee4:	10c00526 	beq	r2,r3,808efc <_lseek_r+0x4c>
  808ee8:	dfc00217 	ldw	ra,8(sp)
  808eec:	dc400117 	ldw	r17,4(sp)
  808ef0:	dc000017 	ldw	r16,0(sp)
  808ef4:	dec00304 	addi	sp,sp,12
  808ef8:	f800283a 	ret
  808efc:	80c00017 	ldw	r3,0(r16)
  808f00:	183ff926 	beq	r3,zero,808ee8 <__alt_data_end+0xff808ee8>
  808f04:	88c00015 	stw	r3,0(r17)
  808f08:	003ff706 	br	808ee8 <__alt_data_end+0xff808ee8>

00808f0c <_mbrtowc_r>:
  808f0c:	defff704 	addi	sp,sp,-36
  808f10:	008020b4 	movhi	r2,130
  808f14:	dc800715 	stw	r18,28(sp)
  808f18:	dc400615 	stw	r17,24(sp)
  808f1c:	dc000515 	stw	r16,20(sp)
  808f20:	10b7fd04 	addi	r2,r2,-8204
  808f24:	dfc00815 	stw	ra,32(sp)
  808f28:	2021883a 	mov	r16,r4
  808f2c:	dc400917 	ldw	r17,36(sp)
  808f30:	14800017 	ldw	r18,0(r2)
  808f34:	30001626 	beq	r6,zero,808f90 <_mbrtowc_r+0x84>
  808f38:	d9400215 	stw	r5,8(sp)
  808f3c:	d9800315 	stw	r6,12(sp)
  808f40:	d9c00415 	stw	r7,16(sp)
  808f44:	0808e4c0 	call	808e4c <__locale_charset>
  808f48:	d9400217 	ldw	r5,8(sp)
  808f4c:	d9800317 	ldw	r6,12(sp)
  808f50:	d9c00417 	ldw	r7,16(sp)
  808f54:	d8800015 	stw	r2,0(sp)
  808f58:	dc400115 	stw	r17,4(sp)
  808f5c:	8009883a 	mov	r4,r16
  808f60:	903ee83a 	callr	r18
  808f64:	00ffffc4 	movi	r3,-1
  808f68:	10c0031e 	bne	r2,r3,808f78 <_mbrtowc_r+0x6c>
  808f6c:	88000015 	stw	zero,0(r17)
  808f70:	00c02284 	movi	r3,138
  808f74:	80c00015 	stw	r3,0(r16)
  808f78:	dfc00817 	ldw	ra,32(sp)
  808f7c:	dc800717 	ldw	r18,28(sp)
  808f80:	dc400617 	ldw	r17,24(sp)
  808f84:	dc000517 	ldw	r16,20(sp)
  808f88:	dec00904 	addi	sp,sp,36
  808f8c:	f800283a 	ret
  808f90:	0808e4c0 	call	808e4c <__locale_charset>
  808f94:	018020b4 	movhi	r6,130
  808f98:	31aedf04 	addi	r6,r6,-17540
  808f9c:	d8800015 	stw	r2,0(sp)
  808fa0:	dc400115 	stw	r17,4(sp)
  808fa4:	8009883a 	mov	r4,r16
  808fa8:	000b883a 	mov	r5,zero
  808fac:	01c00044 	movi	r7,1
  808fb0:	903ee83a 	callr	r18
  808fb4:	003feb06 	br	808f64 <__alt_data_end+0xff808f64>

00808fb8 <mbrtowc>:
  808fb8:	defff704 	addi	sp,sp,-36
  808fbc:	008020b4 	movhi	r2,130
  808fc0:	dc800415 	stw	r18,16(sp)
  808fc4:	dc400315 	stw	r17,12(sp)
  808fc8:	dc000215 	stw	r16,8(sp)
  808fcc:	10b7f804 	addi	r2,r2,-8224
  808fd0:	dfc00815 	stw	ra,32(sp)
  808fd4:	dd400715 	stw	r21,28(sp)
  808fd8:	dd000615 	stw	r20,24(sp)
  808fdc:	dcc00515 	stw	r19,20(sp)
  808fe0:	2821883a 	mov	r16,r5
  808fe4:	3825883a 	mov	r18,r7
  808fe8:	14400017 	ldw	r17,0(r2)
  808fec:	28001b26 	beq	r5,zero,80905c <mbrtowc+0xa4>
  808ff0:	008020b4 	movhi	r2,130
  808ff4:	10b7fd04 	addi	r2,r2,-8204
  808ff8:	15400017 	ldw	r21,0(r2)
  808ffc:	2029883a 	mov	r20,r4
  809000:	3027883a 	mov	r19,r6
  809004:	0808e4c0 	call	808e4c <__locale_charset>
  809008:	d8800015 	stw	r2,0(sp)
  80900c:	dc800115 	stw	r18,4(sp)
  809010:	8809883a 	mov	r4,r17
  809014:	a00b883a 	mov	r5,r20
  809018:	800d883a 	mov	r6,r16
  80901c:	980f883a 	mov	r7,r19
  809020:	a83ee83a 	callr	r21
  809024:	00ffffc4 	movi	r3,-1
  809028:	10c0031e 	bne	r2,r3,809038 <mbrtowc+0x80>
  80902c:	90000015 	stw	zero,0(r18)
  809030:	00c02284 	movi	r3,138
  809034:	88c00015 	stw	r3,0(r17)
  809038:	dfc00817 	ldw	ra,32(sp)
  80903c:	dd400717 	ldw	r21,28(sp)
  809040:	dd000617 	ldw	r20,24(sp)
  809044:	dcc00517 	ldw	r19,20(sp)
  809048:	dc800417 	ldw	r18,16(sp)
  80904c:	dc400317 	ldw	r17,12(sp)
  809050:	dc000217 	ldw	r16,8(sp)
  809054:	dec00904 	addi	sp,sp,36
  809058:	f800283a 	ret
  80905c:	008020b4 	movhi	r2,130
  809060:	10b7fd04 	addi	r2,r2,-8204
  809064:	14000017 	ldw	r16,0(r2)
  809068:	0808e4c0 	call	808e4c <__locale_charset>
  80906c:	018020b4 	movhi	r6,130
  809070:	31aedf04 	addi	r6,r6,-17540
  809074:	d8800015 	stw	r2,0(sp)
  809078:	dc800115 	stw	r18,4(sp)
  80907c:	8809883a 	mov	r4,r17
  809080:	000b883a 	mov	r5,zero
  809084:	01c00044 	movi	r7,1
  809088:	803ee83a 	callr	r16
  80908c:	003fe506 	br	809024 <__alt_data_end+0xff809024>

00809090 <__ascii_mbtowc>:
  809090:	deffff04 	addi	sp,sp,-4
  809094:	28000826 	beq	r5,zero,8090b8 <__ascii_mbtowc+0x28>
  809098:	30000926 	beq	r6,zero,8090c0 <__ascii_mbtowc+0x30>
  80909c:	38000b26 	beq	r7,zero,8090cc <__ascii_mbtowc+0x3c>
  8090a0:	30800003 	ldbu	r2,0(r6)
  8090a4:	28800015 	stw	r2,0(r5)
  8090a8:	30800003 	ldbu	r2,0(r6)
  8090ac:	1004c03a 	cmpne	r2,r2,zero
  8090b0:	dec00104 	addi	sp,sp,4
  8090b4:	f800283a 	ret
  8090b8:	d80b883a 	mov	r5,sp
  8090bc:	303ff71e 	bne	r6,zero,80909c <__alt_data_end+0xff80909c>
  8090c0:	0005883a 	mov	r2,zero
  8090c4:	dec00104 	addi	sp,sp,4
  8090c8:	f800283a 	ret
  8090cc:	00bfff84 	movi	r2,-2
  8090d0:	003ff706 	br	8090b0 <__alt_data_end+0xff8090b0>

008090d4 <_mbtowc_r>:
  8090d4:	008020b4 	movhi	r2,130
  8090d8:	defff804 	addi	sp,sp,-32
  8090dc:	10b7fd04 	addi	r2,r2,-8204
  8090e0:	dfc00715 	stw	ra,28(sp)
  8090e4:	dc000615 	stw	r16,24(sp)
  8090e8:	14000017 	ldw	r16,0(r2)
  8090ec:	d9000215 	stw	r4,8(sp)
  8090f0:	d9400315 	stw	r5,12(sp)
  8090f4:	d9800415 	stw	r6,16(sp)
  8090f8:	d9c00515 	stw	r7,20(sp)
  8090fc:	0808e4c0 	call	808e4c <__locale_charset>
  809100:	d8800015 	stw	r2,0(sp)
  809104:	d8800817 	ldw	r2,32(sp)
  809108:	d9000217 	ldw	r4,8(sp)
  80910c:	d9400317 	ldw	r5,12(sp)
  809110:	d9800417 	ldw	r6,16(sp)
  809114:	d9c00517 	ldw	r7,20(sp)
  809118:	d8800115 	stw	r2,4(sp)
  80911c:	803ee83a 	callr	r16
  809120:	dfc00717 	ldw	ra,28(sp)
  809124:	dc000617 	ldw	r16,24(sp)
  809128:	dec00804 	addi	sp,sp,32
  80912c:	f800283a 	ret

00809130 <memchr>:
  809130:	208000cc 	andi	r2,r4,3
  809134:	280f883a 	mov	r7,r5
  809138:	10003526 	beq	r2,zero,809210 <memchr+0xe0>
  80913c:	30bfffc4 	addi	r2,r6,-1
  809140:	30001b26 	beq	r6,zero,8091b0 <memchr+0x80>
  809144:	21800003 	ldbu	r6,0(r4)
  809148:	28c03fcc 	andi	r3,r5,255
  80914c:	30c01a26 	beq	r6,r3,8091b8 <memchr+0x88>
  809150:	180d883a 	mov	r6,r3
  809154:	00000406 	br	809168 <memchr+0x38>
  809158:	10001526 	beq	r2,zero,8091b0 <memchr+0x80>
  80915c:	20c00003 	ldbu	r3,0(r4)
  809160:	10bfffc4 	addi	r2,r2,-1
  809164:	19801426 	beq	r3,r6,8091b8 <memchr+0x88>
  809168:	21000044 	addi	r4,r4,1
  80916c:	20c000cc 	andi	r3,r4,3
  809170:	183ff91e 	bne	r3,zero,809158 <__alt_data_end+0xff809158>
  809174:	024000c4 	movi	r9,3
  809178:	48801136 	bltu	r9,r2,8091c0 <memchr+0x90>
  80917c:	10000c26 	beq	r2,zero,8091b0 <memchr+0x80>
  809180:	20c00003 	ldbu	r3,0(r4)
  809184:	29403fcc 	andi	r5,r5,255
  809188:	19400b26 	beq	r3,r5,8091b8 <memchr+0x88>
  80918c:	20c00044 	addi	r3,r4,1
  809190:	2085883a 	add	r2,r4,r2
  809194:	39803fcc 	andi	r6,r7,255
  809198:	00000306 	br	8091a8 <memchr+0x78>
  80919c:	18c00044 	addi	r3,r3,1
  8091a0:	197fffc3 	ldbu	r5,-1(r3)
  8091a4:	29800426 	beq	r5,r6,8091b8 <memchr+0x88>
  8091a8:	1809883a 	mov	r4,r3
  8091ac:	18bffb1e 	bne	r3,r2,80919c <__alt_data_end+0xff80919c>
  8091b0:	0005883a 	mov	r2,zero
  8091b4:	f800283a 	ret
  8091b8:	2005883a 	mov	r2,r4
  8091bc:	f800283a 	ret
  8091c0:	28c03fcc 	andi	r3,r5,255
  8091c4:	1810923a 	slli	r8,r3,8
  8091c8:	02ffbff4 	movhi	r11,65279
  8091cc:	02a02074 	movhi	r10,32897
  8091d0:	40c6b03a 	or	r3,r8,r3
  8091d4:	1810943a 	slli	r8,r3,16
  8091d8:	5affbfc4 	addi	r11,r11,-257
  8091dc:	52a02004 	addi	r10,r10,-32640
  8091e0:	40d0b03a 	or	r8,r8,r3
  8091e4:	20c00017 	ldw	r3,0(r4)
  8091e8:	40c6f03a 	xor	r3,r8,r3
  8091ec:	1acd883a 	add	r6,r3,r11
  8091f0:	00c6303a 	nor	r3,zero,r3
  8091f4:	30c6703a 	and	r3,r6,r3
  8091f8:	1a86703a 	and	r3,r3,r10
  8091fc:	183fdf1e 	bne	r3,zero,80917c <__alt_data_end+0xff80917c>
  809200:	10bfff04 	addi	r2,r2,-4
  809204:	21000104 	addi	r4,r4,4
  809208:	48bff636 	bltu	r9,r2,8091e4 <__alt_data_end+0xff8091e4>
  80920c:	003fdb06 	br	80917c <__alt_data_end+0xff80917c>
  809210:	3005883a 	mov	r2,r6
  809214:	003fd706 	br	809174 <__alt_data_end+0xff809174>

00809218 <memcpy>:
  809218:	deffff04 	addi	sp,sp,-4
  80921c:	dc000015 	stw	r16,0(sp)
  809220:	00c003c4 	movi	r3,15
  809224:	2005883a 	mov	r2,r4
  809228:	1980432e 	bgeu	r3,r6,809338 <memcpy+0x120>
  80922c:	2146b03a 	or	r3,r4,r5
  809230:	18c000cc 	andi	r3,r3,3
  809234:	1800421e 	bne	r3,zero,809340 <memcpy+0x128>
  809238:	343ffc04 	addi	r16,r6,-16
  80923c:	8020d13a 	srli	r16,r16,4
  809240:	28c00104 	addi	r3,r5,4
  809244:	23400104 	addi	r13,r4,4
  809248:	801e913a 	slli	r15,r16,4
  80924c:	2b000204 	addi	r12,r5,8
  809250:	22c00204 	addi	r11,r4,8
  809254:	7bc00504 	addi	r15,r15,20
  809258:	2a800304 	addi	r10,r5,12
  80925c:	22400304 	addi	r9,r4,12
  809260:	2bdf883a 	add	r15,r5,r15
  809264:	2811883a 	mov	r8,r5
  809268:	200f883a 	mov	r7,r4
  80926c:	41000017 	ldw	r4,0(r8)
  809270:	39c00404 	addi	r7,r7,16
  809274:	18c00404 	addi	r3,r3,16
  809278:	393ffc15 	stw	r4,-16(r7)
  80927c:	1bbffc17 	ldw	r14,-16(r3)
  809280:	6b400404 	addi	r13,r13,16
  809284:	5ac00404 	addi	r11,r11,16
  809288:	6bbffc15 	stw	r14,-16(r13)
  80928c:	63800017 	ldw	r14,0(r12)
  809290:	4a400404 	addi	r9,r9,16
  809294:	42000404 	addi	r8,r8,16
  809298:	5bbffc15 	stw	r14,-16(r11)
  80929c:	53800017 	ldw	r14,0(r10)
  8092a0:	63000404 	addi	r12,r12,16
  8092a4:	52800404 	addi	r10,r10,16
  8092a8:	4bbffc15 	stw	r14,-16(r9)
  8092ac:	1bffef1e 	bne	r3,r15,80926c <__alt_data_end+0xff80926c>
  8092b0:	81c00044 	addi	r7,r16,1
  8092b4:	380e913a 	slli	r7,r7,4
  8092b8:	310003cc 	andi	r4,r6,15
  8092bc:	02c000c4 	movi	r11,3
  8092c0:	11c7883a 	add	r3,r2,r7
  8092c4:	29cb883a 	add	r5,r5,r7
  8092c8:	59001f2e 	bgeu	r11,r4,809348 <memcpy+0x130>
  8092cc:	1813883a 	mov	r9,r3
  8092d0:	2811883a 	mov	r8,r5
  8092d4:	200f883a 	mov	r7,r4
  8092d8:	42800017 	ldw	r10,0(r8)
  8092dc:	4a400104 	addi	r9,r9,4
  8092e0:	39ffff04 	addi	r7,r7,-4
  8092e4:	4abfff15 	stw	r10,-4(r9)
  8092e8:	42000104 	addi	r8,r8,4
  8092ec:	59fffa36 	bltu	r11,r7,8092d8 <__alt_data_end+0xff8092d8>
  8092f0:	213fff04 	addi	r4,r4,-4
  8092f4:	2008d0ba 	srli	r4,r4,2
  8092f8:	318000cc 	andi	r6,r6,3
  8092fc:	21000044 	addi	r4,r4,1
  809300:	2109883a 	add	r4,r4,r4
  809304:	2109883a 	add	r4,r4,r4
  809308:	1907883a 	add	r3,r3,r4
  80930c:	290b883a 	add	r5,r5,r4
  809310:	30000626 	beq	r6,zero,80932c <memcpy+0x114>
  809314:	198d883a 	add	r6,r3,r6
  809318:	29c00003 	ldbu	r7,0(r5)
  80931c:	18c00044 	addi	r3,r3,1
  809320:	29400044 	addi	r5,r5,1
  809324:	19ffffc5 	stb	r7,-1(r3)
  809328:	19bffb1e 	bne	r3,r6,809318 <__alt_data_end+0xff809318>
  80932c:	dc000017 	ldw	r16,0(sp)
  809330:	dec00104 	addi	sp,sp,4
  809334:	f800283a 	ret
  809338:	2007883a 	mov	r3,r4
  80933c:	003ff406 	br	809310 <__alt_data_end+0xff809310>
  809340:	2007883a 	mov	r3,r4
  809344:	003ff306 	br	809314 <__alt_data_end+0xff809314>
  809348:	200d883a 	mov	r6,r4
  80934c:	003ff006 	br	809310 <__alt_data_end+0xff809310>

00809350 <memmove>:
  809350:	2005883a 	mov	r2,r4
  809354:	29000b2e 	bgeu	r5,r4,809384 <memmove+0x34>
  809358:	298f883a 	add	r7,r5,r6
  80935c:	21c0092e 	bgeu	r4,r7,809384 <memmove+0x34>
  809360:	2187883a 	add	r3,r4,r6
  809364:	198bc83a 	sub	r5,r3,r6
  809368:	30004b26 	beq	r6,zero,809498 <memmove+0x148>
  80936c:	39ffffc4 	addi	r7,r7,-1
  809370:	39000003 	ldbu	r4,0(r7)
  809374:	18ffffc4 	addi	r3,r3,-1
  809378:	19000005 	stb	r4,0(r3)
  80937c:	197ffb1e 	bne	r3,r5,80936c <__alt_data_end+0xff80936c>
  809380:	f800283a 	ret
  809384:	00c003c4 	movi	r3,15
  809388:	1980412e 	bgeu	r3,r6,809490 <memmove+0x140>
  80938c:	1146b03a 	or	r3,r2,r5
  809390:	18c000cc 	andi	r3,r3,3
  809394:	1800411e 	bne	r3,zero,80949c <memmove+0x14c>
  809398:	33fffc04 	addi	r15,r6,-16
  80939c:	781ed13a 	srli	r15,r15,4
  8093a0:	28c00104 	addi	r3,r5,4
  8093a4:	13400104 	addi	r13,r2,4
  8093a8:	781c913a 	slli	r14,r15,4
  8093ac:	2b000204 	addi	r12,r5,8
  8093b0:	12c00204 	addi	r11,r2,8
  8093b4:	73800504 	addi	r14,r14,20
  8093b8:	2a800304 	addi	r10,r5,12
  8093bc:	12400304 	addi	r9,r2,12
  8093c0:	2b9d883a 	add	r14,r5,r14
  8093c4:	2811883a 	mov	r8,r5
  8093c8:	100f883a 	mov	r7,r2
  8093cc:	41000017 	ldw	r4,0(r8)
  8093d0:	39c00404 	addi	r7,r7,16
  8093d4:	18c00404 	addi	r3,r3,16
  8093d8:	393ffc15 	stw	r4,-16(r7)
  8093dc:	193ffc17 	ldw	r4,-16(r3)
  8093e0:	6b400404 	addi	r13,r13,16
  8093e4:	5ac00404 	addi	r11,r11,16
  8093e8:	693ffc15 	stw	r4,-16(r13)
  8093ec:	61000017 	ldw	r4,0(r12)
  8093f0:	4a400404 	addi	r9,r9,16
  8093f4:	42000404 	addi	r8,r8,16
  8093f8:	593ffc15 	stw	r4,-16(r11)
  8093fc:	51000017 	ldw	r4,0(r10)
  809400:	63000404 	addi	r12,r12,16
  809404:	52800404 	addi	r10,r10,16
  809408:	493ffc15 	stw	r4,-16(r9)
  80940c:	1bbfef1e 	bne	r3,r14,8093cc <__alt_data_end+0xff8093cc>
  809410:	79000044 	addi	r4,r15,1
  809414:	2008913a 	slli	r4,r4,4
  809418:	328003cc 	andi	r10,r6,15
  80941c:	02c000c4 	movi	r11,3
  809420:	1107883a 	add	r3,r2,r4
  809424:	290b883a 	add	r5,r5,r4
  809428:	5a801e2e 	bgeu	r11,r10,8094a4 <memmove+0x154>
  80942c:	1813883a 	mov	r9,r3
  809430:	2811883a 	mov	r8,r5
  809434:	500f883a 	mov	r7,r10
  809438:	41000017 	ldw	r4,0(r8)
  80943c:	4a400104 	addi	r9,r9,4
  809440:	39ffff04 	addi	r7,r7,-4
  809444:	493fff15 	stw	r4,-4(r9)
  809448:	42000104 	addi	r8,r8,4
  80944c:	59fffa36 	bltu	r11,r7,809438 <__alt_data_end+0xff809438>
  809450:	513fff04 	addi	r4,r10,-4
  809454:	2008d0ba 	srli	r4,r4,2
  809458:	318000cc 	andi	r6,r6,3
  80945c:	21000044 	addi	r4,r4,1
  809460:	2109883a 	add	r4,r4,r4
  809464:	2109883a 	add	r4,r4,r4
  809468:	1907883a 	add	r3,r3,r4
  80946c:	290b883a 	add	r5,r5,r4
  809470:	30000926 	beq	r6,zero,809498 <memmove+0x148>
  809474:	198d883a 	add	r6,r3,r6
  809478:	29c00003 	ldbu	r7,0(r5)
  80947c:	18c00044 	addi	r3,r3,1
  809480:	29400044 	addi	r5,r5,1
  809484:	19ffffc5 	stb	r7,-1(r3)
  809488:	19bffb1e 	bne	r3,r6,809478 <__alt_data_end+0xff809478>
  80948c:	f800283a 	ret
  809490:	1007883a 	mov	r3,r2
  809494:	003ff606 	br	809470 <__alt_data_end+0xff809470>
  809498:	f800283a 	ret
  80949c:	1007883a 	mov	r3,r2
  8094a0:	003ff406 	br	809474 <__alt_data_end+0xff809474>
  8094a4:	500d883a 	mov	r6,r10
  8094a8:	003ff106 	br	809470 <__alt_data_end+0xff809470>

008094ac <_Balloc>:
  8094ac:	20801317 	ldw	r2,76(r4)
  8094b0:	defffc04 	addi	sp,sp,-16
  8094b4:	dc400115 	stw	r17,4(sp)
  8094b8:	dc000015 	stw	r16,0(sp)
  8094bc:	dfc00315 	stw	ra,12(sp)
  8094c0:	dc800215 	stw	r18,8(sp)
  8094c4:	2023883a 	mov	r17,r4
  8094c8:	2821883a 	mov	r16,r5
  8094cc:	10000f26 	beq	r2,zero,80950c <_Balloc+0x60>
  8094d0:	8407883a 	add	r3,r16,r16
  8094d4:	18c7883a 	add	r3,r3,r3
  8094d8:	10c7883a 	add	r3,r2,r3
  8094dc:	18800017 	ldw	r2,0(r3)
  8094e0:	10001126 	beq	r2,zero,809528 <_Balloc+0x7c>
  8094e4:	11000017 	ldw	r4,0(r2)
  8094e8:	19000015 	stw	r4,0(r3)
  8094ec:	10000415 	stw	zero,16(r2)
  8094f0:	10000315 	stw	zero,12(r2)
  8094f4:	dfc00317 	ldw	ra,12(sp)
  8094f8:	dc800217 	ldw	r18,8(sp)
  8094fc:	dc400117 	ldw	r17,4(sp)
  809500:	dc000017 	ldw	r16,0(sp)
  809504:	dec00404 	addi	sp,sp,16
  809508:	f800283a 	ret
  80950c:	01400104 	movi	r5,4
  809510:	01800844 	movi	r6,33
  809514:	0811b900 	call	811b90 <_calloc_r>
  809518:	88801315 	stw	r2,76(r17)
  80951c:	103fec1e 	bne	r2,zero,8094d0 <__alt_data_end+0xff8094d0>
  809520:	0005883a 	mov	r2,zero
  809524:	003ff306 	br	8094f4 <__alt_data_end+0xff8094f4>
  809528:	01400044 	movi	r5,1
  80952c:	2c24983a 	sll	r18,r5,r16
  809530:	8809883a 	mov	r4,r17
  809534:	91800144 	addi	r6,r18,5
  809538:	318d883a 	add	r6,r6,r6
  80953c:	318d883a 	add	r6,r6,r6
  809540:	0811b900 	call	811b90 <_calloc_r>
  809544:	103ff626 	beq	r2,zero,809520 <__alt_data_end+0xff809520>
  809548:	14000115 	stw	r16,4(r2)
  80954c:	14800215 	stw	r18,8(r2)
  809550:	003fe606 	br	8094ec <__alt_data_end+0xff8094ec>

00809554 <_Bfree>:
  809554:	28000826 	beq	r5,zero,809578 <_Bfree+0x24>
  809558:	28c00117 	ldw	r3,4(r5)
  80955c:	20801317 	ldw	r2,76(r4)
  809560:	18c7883a 	add	r3,r3,r3
  809564:	18c7883a 	add	r3,r3,r3
  809568:	10c5883a 	add	r2,r2,r3
  80956c:	10c00017 	ldw	r3,0(r2)
  809570:	28c00015 	stw	r3,0(r5)
  809574:	11400015 	stw	r5,0(r2)
  809578:	f800283a 	ret

0080957c <__multadd>:
  80957c:	defffa04 	addi	sp,sp,-24
  809580:	dc000115 	stw	r16,4(sp)
  809584:	2c000417 	ldw	r16,16(r5)
  809588:	dc800315 	stw	r18,12(sp)
  80958c:	dc400215 	stw	r17,8(sp)
  809590:	dfc00515 	stw	ra,20(sp)
  809594:	dcc00415 	stw	r19,16(sp)
  809598:	2823883a 	mov	r17,r5
  80959c:	2025883a 	mov	r18,r4
  8095a0:	2a400504 	addi	r9,r5,20
  8095a4:	0015883a 	mov	r10,zero
  8095a8:	4a000017 	ldw	r8,0(r9)
  8095ac:	4a400104 	addi	r9,r9,4
  8095b0:	52800044 	addi	r10,r10,1
  8095b4:	40ffffcc 	andi	r3,r8,65535
  8095b8:	1987383a 	mul	r3,r3,r6
  8095bc:	4010d43a 	srli	r8,r8,16
  8095c0:	19cf883a 	add	r7,r3,r7
  8095c4:	4191383a 	mul	r8,r8,r6
  8095c8:	3816d43a 	srli	r11,r7,16
  8095cc:	38ffffcc 	andi	r3,r7,65535
  8095d0:	5a0f883a 	add	r7,r11,r8
  8095d4:	3810943a 	slli	r8,r7,16
  8095d8:	380ed43a 	srli	r7,r7,16
  8095dc:	40c7883a 	add	r3,r8,r3
  8095e0:	48ffff15 	stw	r3,-4(r9)
  8095e4:	543ff016 	blt	r10,r16,8095a8 <__alt_data_end+0xff8095a8>
  8095e8:	38000926 	beq	r7,zero,809610 <__multadd+0x94>
  8095ec:	88800217 	ldw	r2,8(r17)
  8095f0:	80800f0e 	bge	r16,r2,809630 <__multadd+0xb4>
  8095f4:	80800144 	addi	r2,r16,5
  8095f8:	1085883a 	add	r2,r2,r2
  8095fc:	1085883a 	add	r2,r2,r2
  809600:	8885883a 	add	r2,r17,r2
  809604:	11c00015 	stw	r7,0(r2)
  809608:	84000044 	addi	r16,r16,1
  80960c:	8c000415 	stw	r16,16(r17)
  809610:	8805883a 	mov	r2,r17
  809614:	dfc00517 	ldw	ra,20(sp)
  809618:	dcc00417 	ldw	r19,16(sp)
  80961c:	dc800317 	ldw	r18,12(sp)
  809620:	dc400217 	ldw	r17,8(sp)
  809624:	dc000117 	ldw	r16,4(sp)
  809628:	dec00604 	addi	sp,sp,24
  80962c:	f800283a 	ret
  809630:	89400117 	ldw	r5,4(r17)
  809634:	9009883a 	mov	r4,r18
  809638:	d9c00015 	stw	r7,0(sp)
  80963c:	29400044 	addi	r5,r5,1
  809640:	08094ac0 	call	8094ac <_Balloc>
  809644:	89800417 	ldw	r6,16(r17)
  809648:	11000304 	addi	r4,r2,12
  80964c:	89400304 	addi	r5,r17,12
  809650:	31800084 	addi	r6,r6,2
  809654:	318d883a 	add	r6,r6,r6
  809658:	318d883a 	add	r6,r6,r6
  80965c:	1027883a 	mov	r19,r2
  809660:	08092180 	call	809218 <memcpy>
  809664:	d9c00017 	ldw	r7,0(sp)
  809668:	88000a26 	beq	r17,zero,809694 <__multadd+0x118>
  80966c:	89000117 	ldw	r4,4(r17)
  809670:	90c01317 	ldw	r3,76(r18)
  809674:	2109883a 	add	r4,r4,r4
  809678:	2109883a 	add	r4,r4,r4
  80967c:	1907883a 	add	r3,r3,r4
  809680:	18800017 	ldw	r2,0(r3)
  809684:	88800015 	stw	r2,0(r17)
  809688:	1c400015 	stw	r17,0(r3)
  80968c:	9823883a 	mov	r17,r19
  809690:	003fd806 	br	8095f4 <__alt_data_end+0xff8095f4>
  809694:	9823883a 	mov	r17,r19
  809698:	003fd606 	br	8095f4 <__alt_data_end+0xff8095f4>

0080969c <__s2b>:
  80969c:	defff904 	addi	sp,sp,-28
  8096a0:	dc400115 	stw	r17,4(sp)
  8096a4:	dc000015 	stw	r16,0(sp)
  8096a8:	2023883a 	mov	r17,r4
  8096ac:	2821883a 	mov	r16,r5
  8096b0:	39000204 	addi	r4,r7,8
  8096b4:	01400244 	movi	r5,9
  8096b8:	dcc00315 	stw	r19,12(sp)
  8096bc:	dc800215 	stw	r18,8(sp)
  8096c0:	dfc00615 	stw	ra,24(sp)
  8096c4:	dd400515 	stw	r21,20(sp)
  8096c8:	dd000415 	stw	r20,16(sp)
  8096cc:	3825883a 	mov	r18,r7
  8096d0:	3027883a 	mov	r19,r6
  8096d4:	0814b100 	call	814b10 <__divsi3>
  8096d8:	00c00044 	movi	r3,1
  8096dc:	000b883a 	mov	r5,zero
  8096e0:	1880030e 	bge	r3,r2,8096f0 <__s2b+0x54>
  8096e4:	18c7883a 	add	r3,r3,r3
  8096e8:	29400044 	addi	r5,r5,1
  8096ec:	18bffd16 	blt	r3,r2,8096e4 <__alt_data_end+0xff8096e4>
  8096f0:	8809883a 	mov	r4,r17
  8096f4:	08094ac0 	call	8094ac <_Balloc>
  8096f8:	d8c00717 	ldw	r3,28(sp)
  8096fc:	10c00515 	stw	r3,20(r2)
  809700:	00c00044 	movi	r3,1
  809704:	10c00415 	stw	r3,16(r2)
  809708:	00c00244 	movi	r3,9
  80970c:	1cc0210e 	bge	r3,r19,809794 <__s2b+0xf8>
  809710:	80eb883a 	add	r21,r16,r3
  809714:	a829883a 	mov	r20,r21
  809718:	84e1883a 	add	r16,r16,r19
  80971c:	a1c00007 	ldb	r7,0(r20)
  809720:	8809883a 	mov	r4,r17
  809724:	a5000044 	addi	r20,r20,1
  809728:	100b883a 	mov	r5,r2
  80972c:	01800284 	movi	r6,10
  809730:	39fff404 	addi	r7,r7,-48
  809734:	080957c0 	call	80957c <__multadd>
  809738:	a43ff81e 	bne	r20,r16,80971c <__alt_data_end+0xff80971c>
  80973c:	ace1883a 	add	r16,r21,r19
  809740:	843ffe04 	addi	r16,r16,-8
  809744:	9c800a0e 	bge	r19,r18,809770 <__s2b+0xd4>
  809748:	94e5c83a 	sub	r18,r18,r19
  80974c:	84a5883a 	add	r18,r16,r18
  809750:	81c00007 	ldb	r7,0(r16)
  809754:	8809883a 	mov	r4,r17
  809758:	84000044 	addi	r16,r16,1
  80975c:	100b883a 	mov	r5,r2
  809760:	01800284 	movi	r6,10
  809764:	39fff404 	addi	r7,r7,-48
  809768:	080957c0 	call	80957c <__multadd>
  80976c:	84bff81e 	bne	r16,r18,809750 <__alt_data_end+0xff809750>
  809770:	dfc00617 	ldw	ra,24(sp)
  809774:	dd400517 	ldw	r21,20(sp)
  809778:	dd000417 	ldw	r20,16(sp)
  80977c:	dcc00317 	ldw	r19,12(sp)
  809780:	dc800217 	ldw	r18,8(sp)
  809784:	dc400117 	ldw	r17,4(sp)
  809788:	dc000017 	ldw	r16,0(sp)
  80978c:	dec00704 	addi	sp,sp,28
  809790:	f800283a 	ret
  809794:	84000284 	addi	r16,r16,10
  809798:	1827883a 	mov	r19,r3
  80979c:	003fe906 	br	809744 <__alt_data_end+0xff809744>

008097a0 <__hi0bits>:
  8097a0:	20bfffec 	andhi	r2,r4,65535
  8097a4:	1000141e 	bne	r2,zero,8097f8 <__hi0bits+0x58>
  8097a8:	2008943a 	slli	r4,r4,16
  8097ac:	00800404 	movi	r2,16
  8097b0:	20ffc02c 	andhi	r3,r4,65280
  8097b4:	1800021e 	bne	r3,zero,8097c0 <__hi0bits+0x20>
  8097b8:	2008923a 	slli	r4,r4,8
  8097bc:	10800204 	addi	r2,r2,8
  8097c0:	20fc002c 	andhi	r3,r4,61440
  8097c4:	1800021e 	bne	r3,zero,8097d0 <__hi0bits+0x30>
  8097c8:	2008913a 	slli	r4,r4,4
  8097cc:	10800104 	addi	r2,r2,4
  8097d0:	20f0002c 	andhi	r3,r4,49152
  8097d4:	1800031e 	bne	r3,zero,8097e4 <__hi0bits+0x44>
  8097d8:	2109883a 	add	r4,r4,r4
  8097dc:	10800084 	addi	r2,r2,2
  8097e0:	2109883a 	add	r4,r4,r4
  8097e4:	20000316 	blt	r4,zero,8097f4 <__hi0bits+0x54>
  8097e8:	2110002c 	andhi	r4,r4,16384
  8097ec:	2000041e 	bne	r4,zero,809800 <__hi0bits+0x60>
  8097f0:	00800804 	movi	r2,32
  8097f4:	f800283a 	ret
  8097f8:	0005883a 	mov	r2,zero
  8097fc:	003fec06 	br	8097b0 <__alt_data_end+0xff8097b0>
  809800:	10800044 	addi	r2,r2,1
  809804:	f800283a 	ret

00809808 <__lo0bits>:
  809808:	20c00017 	ldw	r3,0(r4)
  80980c:	188001cc 	andi	r2,r3,7
  809810:	10000826 	beq	r2,zero,809834 <__lo0bits+0x2c>
  809814:	1880004c 	andi	r2,r3,1
  809818:	1000211e 	bne	r2,zero,8098a0 <__lo0bits+0x98>
  80981c:	1880008c 	andi	r2,r3,2
  809820:	1000211e 	bne	r2,zero,8098a8 <__lo0bits+0xa0>
  809824:	1806d0ba 	srli	r3,r3,2
  809828:	00800084 	movi	r2,2
  80982c:	20c00015 	stw	r3,0(r4)
  809830:	f800283a 	ret
  809834:	18bfffcc 	andi	r2,r3,65535
  809838:	10001326 	beq	r2,zero,809888 <__lo0bits+0x80>
  80983c:	0005883a 	mov	r2,zero
  809840:	19403fcc 	andi	r5,r3,255
  809844:	2800021e 	bne	r5,zero,809850 <__lo0bits+0x48>
  809848:	1806d23a 	srli	r3,r3,8
  80984c:	10800204 	addi	r2,r2,8
  809850:	194003cc 	andi	r5,r3,15
  809854:	2800021e 	bne	r5,zero,809860 <__lo0bits+0x58>
  809858:	1806d13a 	srli	r3,r3,4
  80985c:	10800104 	addi	r2,r2,4
  809860:	194000cc 	andi	r5,r3,3
  809864:	2800021e 	bne	r5,zero,809870 <__lo0bits+0x68>
  809868:	1806d0ba 	srli	r3,r3,2
  80986c:	10800084 	addi	r2,r2,2
  809870:	1940004c 	andi	r5,r3,1
  809874:	2800081e 	bne	r5,zero,809898 <__lo0bits+0x90>
  809878:	1806d07a 	srli	r3,r3,1
  80987c:	1800051e 	bne	r3,zero,809894 <__lo0bits+0x8c>
  809880:	00800804 	movi	r2,32
  809884:	f800283a 	ret
  809888:	1806d43a 	srli	r3,r3,16
  80988c:	00800404 	movi	r2,16
  809890:	003feb06 	br	809840 <__alt_data_end+0xff809840>
  809894:	10800044 	addi	r2,r2,1
  809898:	20c00015 	stw	r3,0(r4)
  80989c:	f800283a 	ret
  8098a0:	0005883a 	mov	r2,zero
  8098a4:	f800283a 	ret
  8098a8:	1806d07a 	srli	r3,r3,1
  8098ac:	00800044 	movi	r2,1
  8098b0:	20c00015 	stw	r3,0(r4)
  8098b4:	f800283a 	ret

008098b8 <__i2b>:
  8098b8:	defffd04 	addi	sp,sp,-12
  8098bc:	dc000015 	stw	r16,0(sp)
  8098c0:	04000044 	movi	r16,1
  8098c4:	dc400115 	stw	r17,4(sp)
  8098c8:	2823883a 	mov	r17,r5
  8098cc:	800b883a 	mov	r5,r16
  8098d0:	dfc00215 	stw	ra,8(sp)
  8098d4:	08094ac0 	call	8094ac <_Balloc>
  8098d8:	14400515 	stw	r17,20(r2)
  8098dc:	14000415 	stw	r16,16(r2)
  8098e0:	dfc00217 	ldw	ra,8(sp)
  8098e4:	dc400117 	ldw	r17,4(sp)
  8098e8:	dc000017 	ldw	r16,0(sp)
  8098ec:	dec00304 	addi	sp,sp,12
  8098f0:	f800283a 	ret

008098f4 <__multiply>:
  8098f4:	defffa04 	addi	sp,sp,-24
  8098f8:	dcc00315 	stw	r19,12(sp)
  8098fc:	dc800215 	stw	r18,8(sp)
  809900:	2cc00417 	ldw	r19,16(r5)
  809904:	34800417 	ldw	r18,16(r6)
  809908:	dd000415 	stw	r20,16(sp)
  80990c:	dc400115 	stw	r17,4(sp)
  809910:	dfc00515 	stw	ra,20(sp)
  809914:	dc000015 	stw	r16,0(sp)
  809918:	2829883a 	mov	r20,r5
  80991c:	3023883a 	mov	r17,r6
  809920:	9c807016 	blt	r19,r18,809ae4 <__multiply+0x1f0>
  809924:	9005883a 	mov	r2,r18
  809928:	9825883a 	mov	r18,r19
  80992c:	1027883a 	mov	r19,r2
  809930:	a0800217 	ldw	r2,8(r20)
  809934:	94e1883a 	add	r16,r18,r19
  809938:	a1400117 	ldw	r5,4(r20)
  80993c:	1400010e 	bge	r2,r16,809944 <__multiply+0x50>
  809940:	29400044 	addi	r5,r5,1
  809944:	08094ac0 	call	8094ac <_Balloc>
  809948:	8417883a 	add	r11,r16,r16
  80994c:	13000504 	addi	r12,r2,20
  809950:	5ad7883a 	add	r11,r11,r11
  809954:	62d7883a 	add	r11,r12,r11
  809958:	6007883a 	mov	r3,r12
  80995c:	62c0032e 	bgeu	r12,r11,80996c <__multiply+0x78>
  809960:	18000015 	stw	zero,0(r3)
  809964:	18c00104 	addi	r3,r3,4
  809968:	1afffd36 	bltu	r3,r11,809960 <__alt_data_end+0xff809960>
  80996c:	9ce7883a 	add	r19,r19,r19
  809970:	94a5883a 	add	r18,r18,r18
  809974:	89800504 	addi	r6,r17,20
  809978:	9ce7883a 	add	r19,r19,r19
  80997c:	a3800504 	addi	r14,r20,20
  809980:	94a5883a 	add	r18,r18,r18
  809984:	34db883a 	add	r13,r6,r19
  809988:	7495883a 	add	r10,r14,r18
  80998c:	3340422e 	bgeu	r6,r13,809a98 <__multiply+0x1a4>
  809990:	34400017 	ldw	r17,0(r6)
  809994:	8cbfffcc 	andi	r18,r17,65535
  809998:	90001b26 	beq	r18,zero,809a08 <__multiply+0x114>
  80999c:	6013883a 	mov	r9,r12
  8099a0:	7023883a 	mov	r17,r14
  8099a4:	0011883a 	mov	r8,zero
  8099a8:	88c00017 	ldw	r3,0(r17)
  8099ac:	4bc00017 	ldw	r15,0(r9)
  8099b0:	8c400104 	addi	r17,r17,4
  8099b4:	19ffffcc 	andi	r7,r3,65535
  8099b8:	3c8f383a 	mul	r7,r7,r18
  8099bc:	1808d43a 	srli	r4,r3,16
  8099c0:	797fffcc 	andi	r5,r15,65535
  8099c4:	29cb883a 	add	r5,r5,r7
  8099c8:	2a0b883a 	add	r5,r5,r8
  8099cc:	2489383a 	mul	r4,r4,r18
  8099d0:	7806d43a 	srli	r3,r15,16
  8099d4:	2810d43a 	srli	r8,r5,16
  8099d8:	297fffcc 	andi	r5,r5,65535
  8099dc:	1907883a 	add	r3,r3,r4
  8099e0:	1a07883a 	add	r3,r3,r8
  8099e4:	1808943a 	slli	r4,r3,16
  8099e8:	480f883a 	mov	r7,r9
  8099ec:	1810d43a 	srli	r8,r3,16
  8099f0:	214ab03a 	or	r5,r4,r5
  8099f4:	49400015 	stw	r5,0(r9)
  8099f8:	4a400104 	addi	r9,r9,4
  8099fc:	8abfea36 	bltu	r17,r10,8099a8 <__alt_data_end+0xff8099a8>
  809a00:	3a000115 	stw	r8,4(r7)
  809a04:	34400017 	ldw	r17,0(r6)
  809a08:	8822d43a 	srli	r17,r17,16
  809a0c:	88001f26 	beq	r17,zero,809a8c <__multiply+0x198>
  809a10:	60c00017 	ldw	r3,0(r12)
  809a14:	7013883a 	mov	r9,r14
  809a18:	601f883a 	mov	r15,r12
  809a1c:	1811883a 	mov	r8,r3
  809a20:	6027883a 	mov	r19,r12
  809a24:	000f883a 	mov	r7,zero
  809a28:	00000106 	br	809a30 <__multiply+0x13c>
  809a2c:	9027883a 	mov	r19,r18
  809a30:	4940000b 	ldhu	r5,0(r9)
  809a34:	4010d43a 	srli	r8,r8,16
  809a38:	193fffcc 	andi	r4,r3,65535
  809a3c:	2c4b383a 	mul	r5,r5,r17
  809a40:	7bc00104 	addi	r15,r15,4
  809a44:	4a400104 	addi	r9,r9,4
  809a48:	2a0b883a 	add	r5,r5,r8
  809a4c:	29cb883a 	add	r5,r5,r7
  809a50:	2806943a 	slli	r3,r5,16
  809a54:	9c800104 	addi	r18,r19,4
  809a58:	280ad43a 	srli	r5,r5,16
  809a5c:	1908b03a 	or	r4,r3,r4
  809a60:	793fff15 	stw	r4,-4(r15)
  809a64:	48ffff17 	ldw	r3,-4(r9)
  809a68:	92000017 	ldw	r8,0(r18)
  809a6c:	1806d43a 	srli	r3,r3,16
  809a70:	413fffcc 	andi	r4,r8,65535
  809a74:	1c47383a 	mul	r3,r3,r17
  809a78:	1907883a 	add	r3,r3,r4
  809a7c:	1947883a 	add	r3,r3,r5
  809a80:	180ed43a 	srli	r7,r3,16
  809a84:	4abfe936 	bltu	r9,r10,809a2c <__alt_data_end+0xff809a2c>
  809a88:	98c00115 	stw	r3,4(r19)
  809a8c:	31800104 	addi	r6,r6,4
  809a90:	63000104 	addi	r12,r12,4
  809a94:	337fbe36 	bltu	r6,r13,809990 <__alt_data_end+0xff809990>
  809a98:	0400090e 	bge	zero,r16,809ac0 <__multiply+0x1cc>
  809a9c:	58ffff17 	ldw	r3,-4(r11)
  809aa0:	5affff04 	addi	r11,r11,-4
  809aa4:	18000326 	beq	r3,zero,809ab4 <__multiply+0x1c0>
  809aa8:	00000506 	br	809ac0 <__multiply+0x1cc>
  809aac:	58c00017 	ldw	r3,0(r11)
  809ab0:	1800031e 	bne	r3,zero,809ac0 <__multiply+0x1cc>
  809ab4:	843fffc4 	addi	r16,r16,-1
  809ab8:	5affff04 	addi	r11,r11,-4
  809abc:	803ffb1e 	bne	r16,zero,809aac <__alt_data_end+0xff809aac>
  809ac0:	14000415 	stw	r16,16(r2)
  809ac4:	dfc00517 	ldw	ra,20(sp)
  809ac8:	dd000417 	ldw	r20,16(sp)
  809acc:	dcc00317 	ldw	r19,12(sp)
  809ad0:	dc800217 	ldw	r18,8(sp)
  809ad4:	dc400117 	ldw	r17,4(sp)
  809ad8:	dc000017 	ldw	r16,0(sp)
  809adc:	dec00604 	addi	sp,sp,24
  809ae0:	f800283a 	ret
  809ae4:	3029883a 	mov	r20,r6
  809ae8:	2823883a 	mov	r17,r5
  809aec:	003f9006 	br	809930 <__alt_data_end+0xff809930>

00809af0 <__pow5mult>:
  809af0:	defffa04 	addi	sp,sp,-24
  809af4:	dcc00315 	stw	r19,12(sp)
  809af8:	dc800215 	stw	r18,8(sp)
  809afc:	dc000015 	stw	r16,0(sp)
  809b00:	dfc00515 	stw	ra,20(sp)
  809b04:	dd000415 	stw	r20,16(sp)
  809b08:	dc400115 	stw	r17,4(sp)
  809b0c:	308000cc 	andi	r2,r6,3
  809b10:	3021883a 	mov	r16,r6
  809b14:	2027883a 	mov	r19,r4
  809b18:	2825883a 	mov	r18,r5
  809b1c:	10002e1e 	bne	r2,zero,809bd8 <__pow5mult+0xe8>
  809b20:	8021d0ba 	srai	r16,r16,2
  809b24:	80001a26 	beq	r16,zero,809b90 <__pow5mult+0xa0>
  809b28:	9c401217 	ldw	r17,72(r19)
  809b2c:	8800061e 	bne	r17,zero,809b48 <__pow5mult+0x58>
  809b30:	00003406 	br	809c04 <__pow5mult+0x114>
  809b34:	8021d07a 	srai	r16,r16,1
  809b38:	80001526 	beq	r16,zero,809b90 <__pow5mult+0xa0>
  809b3c:	88800017 	ldw	r2,0(r17)
  809b40:	10001c26 	beq	r2,zero,809bb4 <__pow5mult+0xc4>
  809b44:	1023883a 	mov	r17,r2
  809b48:	80c0004c 	andi	r3,r16,1
  809b4c:	183ff926 	beq	r3,zero,809b34 <__alt_data_end+0xff809b34>
  809b50:	900b883a 	mov	r5,r18
  809b54:	880d883a 	mov	r6,r17
  809b58:	9809883a 	mov	r4,r19
  809b5c:	08098f40 	call	8098f4 <__multiply>
  809b60:	90001b26 	beq	r18,zero,809bd0 <__pow5mult+0xe0>
  809b64:	91c00117 	ldw	r7,4(r18)
  809b68:	98c01317 	ldw	r3,76(r19)
  809b6c:	8021d07a 	srai	r16,r16,1
  809b70:	39cf883a 	add	r7,r7,r7
  809b74:	39cf883a 	add	r7,r7,r7
  809b78:	19c7883a 	add	r3,r3,r7
  809b7c:	19000017 	ldw	r4,0(r3)
  809b80:	91000015 	stw	r4,0(r18)
  809b84:	1c800015 	stw	r18,0(r3)
  809b88:	1025883a 	mov	r18,r2
  809b8c:	803feb1e 	bne	r16,zero,809b3c <__alt_data_end+0xff809b3c>
  809b90:	9005883a 	mov	r2,r18
  809b94:	dfc00517 	ldw	ra,20(sp)
  809b98:	dd000417 	ldw	r20,16(sp)
  809b9c:	dcc00317 	ldw	r19,12(sp)
  809ba0:	dc800217 	ldw	r18,8(sp)
  809ba4:	dc400117 	ldw	r17,4(sp)
  809ba8:	dc000017 	ldw	r16,0(sp)
  809bac:	dec00604 	addi	sp,sp,24
  809bb0:	f800283a 	ret
  809bb4:	9809883a 	mov	r4,r19
  809bb8:	880b883a 	mov	r5,r17
  809bbc:	880d883a 	mov	r6,r17
  809bc0:	08098f40 	call	8098f4 <__multiply>
  809bc4:	88800015 	stw	r2,0(r17)
  809bc8:	10000015 	stw	zero,0(r2)
  809bcc:	003fdd06 	br	809b44 <__alt_data_end+0xff809b44>
  809bd0:	1025883a 	mov	r18,r2
  809bd4:	003fd706 	br	809b34 <__alt_data_end+0xff809b34>
  809bd8:	10bfffc4 	addi	r2,r2,-1
  809bdc:	1085883a 	add	r2,r2,r2
  809be0:	00c020b4 	movhi	r3,130
  809be4:	18ef9704 	addi	r3,r3,-16804
  809be8:	1085883a 	add	r2,r2,r2
  809bec:	1885883a 	add	r2,r3,r2
  809bf0:	11800017 	ldw	r6,0(r2)
  809bf4:	000f883a 	mov	r7,zero
  809bf8:	080957c0 	call	80957c <__multadd>
  809bfc:	1025883a 	mov	r18,r2
  809c00:	003fc706 	br	809b20 <__alt_data_end+0xff809b20>
  809c04:	05000044 	movi	r20,1
  809c08:	9809883a 	mov	r4,r19
  809c0c:	a00b883a 	mov	r5,r20
  809c10:	08094ac0 	call	8094ac <_Balloc>
  809c14:	1023883a 	mov	r17,r2
  809c18:	00809c44 	movi	r2,625
  809c1c:	88800515 	stw	r2,20(r17)
  809c20:	8d000415 	stw	r20,16(r17)
  809c24:	9c401215 	stw	r17,72(r19)
  809c28:	88000015 	stw	zero,0(r17)
  809c2c:	003fc606 	br	809b48 <__alt_data_end+0xff809b48>

00809c30 <__lshift>:
  809c30:	defff904 	addi	sp,sp,-28
  809c34:	dd000415 	stw	r20,16(sp)
  809c38:	dcc00315 	stw	r19,12(sp)
  809c3c:	3029d17a 	srai	r20,r6,5
  809c40:	2cc00417 	ldw	r19,16(r5)
  809c44:	28800217 	ldw	r2,8(r5)
  809c48:	dd400515 	stw	r21,20(sp)
  809c4c:	a4e7883a 	add	r19,r20,r19
  809c50:	dc800215 	stw	r18,8(sp)
  809c54:	dc400115 	stw	r17,4(sp)
  809c58:	dc000015 	stw	r16,0(sp)
  809c5c:	dfc00615 	stw	ra,24(sp)
  809c60:	9c000044 	addi	r16,r19,1
  809c64:	2823883a 	mov	r17,r5
  809c68:	302b883a 	mov	r21,r6
  809c6c:	2025883a 	mov	r18,r4
  809c70:	29400117 	ldw	r5,4(r5)
  809c74:	1400030e 	bge	r2,r16,809c84 <__lshift+0x54>
  809c78:	1085883a 	add	r2,r2,r2
  809c7c:	29400044 	addi	r5,r5,1
  809c80:	143ffd16 	blt	r2,r16,809c78 <__alt_data_end+0xff809c78>
  809c84:	9009883a 	mov	r4,r18
  809c88:	08094ac0 	call	8094ac <_Balloc>
  809c8c:	11c00504 	addi	r7,r2,20
  809c90:	0500090e 	bge	zero,r20,809cb8 <__lshift+0x88>
  809c94:	3811883a 	mov	r8,r7
  809c98:	0007883a 	mov	r3,zero
  809c9c:	40000015 	stw	zero,0(r8)
  809ca0:	18c00044 	addi	r3,r3,1
  809ca4:	42000104 	addi	r8,r8,4
  809ca8:	1d3ffc1e 	bne	r3,r20,809c9c <__alt_data_end+0xff809c9c>
  809cac:	18c7883a 	add	r3,r3,r3
  809cb0:	18c7883a 	add	r3,r3,r3
  809cb4:	38cf883a 	add	r7,r7,r3
  809cb8:	89000417 	ldw	r4,16(r17)
  809cbc:	88c00504 	addi	r3,r17,20
  809cc0:	a98007cc 	andi	r6,r21,31
  809cc4:	2109883a 	add	r4,r4,r4
  809cc8:	2109883a 	add	r4,r4,r4
  809ccc:	1909883a 	add	r4,r3,r4
  809cd0:	30002326 	beq	r6,zero,809d60 <__lshift+0x130>
  809cd4:	01400804 	movi	r5,32
  809cd8:	298bc83a 	sub	r5,r5,r6
  809cdc:	0013883a 	mov	r9,zero
  809ce0:	1a000017 	ldw	r8,0(r3)
  809ce4:	3815883a 	mov	r10,r7
  809ce8:	39c00104 	addi	r7,r7,4
  809cec:	4190983a 	sll	r8,r8,r6
  809cf0:	18c00104 	addi	r3,r3,4
  809cf4:	4a10b03a 	or	r8,r9,r8
  809cf8:	3a3fff15 	stw	r8,-4(r7)
  809cfc:	1a3fff17 	ldw	r8,-4(r3)
  809d00:	4152d83a 	srl	r9,r8,r5
  809d04:	193ff636 	bltu	r3,r4,809ce0 <__alt_data_end+0xff809ce0>
  809d08:	52400115 	stw	r9,4(r10)
  809d0c:	48001a1e 	bne	r9,zero,809d78 <__lshift+0x148>
  809d10:	843fffc4 	addi	r16,r16,-1
  809d14:	14000415 	stw	r16,16(r2)
  809d18:	88000826 	beq	r17,zero,809d3c <__lshift+0x10c>
  809d1c:	89000117 	ldw	r4,4(r17)
  809d20:	90c01317 	ldw	r3,76(r18)
  809d24:	2109883a 	add	r4,r4,r4
  809d28:	2109883a 	add	r4,r4,r4
  809d2c:	1907883a 	add	r3,r3,r4
  809d30:	19000017 	ldw	r4,0(r3)
  809d34:	89000015 	stw	r4,0(r17)
  809d38:	1c400015 	stw	r17,0(r3)
  809d3c:	dfc00617 	ldw	ra,24(sp)
  809d40:	dd400517 	ldw	r21,20(sp)
  809d44:	dd000417 	ldw	r20,16(sp)
  809d48:	dcc00317 	ldw	r19,12(sp)
  809d4c:	dc800217 	ldw	r18,8(sp)
  809d50:	dc400117 	ldw	r17,4(sp)
  809d54:	dc000017 	ldw	r16,0(sp)
  809d58:	dec00704 	addi	sp,sp,28
  809d5c:	f800283a 	ret
  809d60:	19400017 	ldw	r5,0(r3)
  809d64:	39c00104 	addi	r7,r7,4
  809d68:	18c00104 	addi	r3,r3,4
  809d6c:	397fff15 	stw	r5,-4(r7)
  809d70:	193ffb36 	bltu	r3,r4,809d60 <__alt_data_end+0xff809d60>
  809d74:	003fe606 	br	809d10 <__alt_data_end+0xff809d10>
  809d78:	9c000084 	addi	r16,r19,2
  809d7c:	003fe406 	br	809d10 <__alt_data_end+0xff809d10>

00809d80 <__mcmp>:
  809d80:	20800417 	ldw	r2,16(r4)
  809d84:	28c00417 	ldw	r3,16(r5)
  809d88:	10c5c83a 	sub	r2,r2,r3
  809d8c:	1000111e 	bne	r2,zero,809dd4 <__mcmp+0x54>
  809d90:	18c7883a 	add	r3,r3,r3
  809d94:	18c7883a 	add	r3,r3,r3
  809d98:	21000504 	addi	r4,r4,20
  809d9c:	29400504 	addi	r5,r5,20
  809da0:	20c5883a 	add	r2,r4,r3
  809da4:	28cb883a 	add	r5,r5,r3
  809da8:	00000106 	br	809db0 <__mcmp+0x30>
  809dac:	20800a2e 	bgeu	r4,r2,809dd8 <__mcmp+0x58>
  809db0:	10bfff04 	addi	r2,r2,-4
  809db4:	297fff04 	addi	r5,r5,-4
  809db8:	11800017 	ldw	r6,0(r2)
  809dbc:	28c00017 	ldw	r3,0(r5)
  809dc0:	30fffa26 	beq	r6,r3,809dac <__alt_data_end+0xff809dac>
  809dc4:	30c00236 	bltu	r6,r3,809dd0 <__mcmp+0x50>
  809dc8:	00800044 	movi	r2,1
  809dcc:	f800283a 	ret
  809dd0:	00bfffc4 	movi	r2,-1
  809dd4:	f800283a 	ret
  809dd8:	0005883a 	mov	r2,zero
  809ddc:	f800283a 	ret

00809de0 <__mdiff>:
  809de0:	defffb04 	addi	sp,sp,-20
  809de4:	dc000015 	stw	r16,0(sp)
  809de8:	2821883a 	mov	r16,r5
  809dec:	dcc00315 	stw	r19,12(sp)
  809df0:	300b883a 	mov	r5,r6
  809df4:	2027883a 	mov	r19,r4
  809df8:	8009883a 	mov	r4,r16
  809dfc:	dc800215 	stw	r18,8(sp)
  809e00:	dfc00415 	stw	ra,16(sp)
  809e04:	dc400115 	stw	r17,4(sp)
  809e08:	3025883a 	mov	r18,r6
  809e0c:	0809d800 	call	809d80 <__mcmp>
  809e10:	10005226 	beq	r2,zero,809f5c <__mdiff+0x17c>
  809e14:	10004c16 	blt	r2,zero,809f48 <__mdiff+0x168>
  809e18:	0023883a 	mov	r17,zero
  809e1c:	81400117 	ldw	r5,4(r16)
  809e20:	9809883a 	mov	r4,r19
  809e24:	08094ac0 	call	8094ac <_Balloc>
  809e28:	83400417 	ldw	r13,16(r16)
  809e2c:	93800417 	ldw	r14,16(r18)
  809e30:	81000504 	addi	r4,r16,20
  809e34:	6b59883a 	add	r12,r13,r13
  809e38:	739d883a 	add	r14,r14,r14
  809e3c:	6319883a 	add	r12,r12,r12
  809e40:	91800504 	addi	r6,r18,20
  809e44:	739d883a 	add	r14,r14,r14
  809e48:	14400315 	stw	r17,12(r2)
  809e4c:	2319883a 	add	r12,r4,r12
  809e50:	339d883a 	add	r14,r6,r14
  809e54:	12400504 	addi	r9,r2,20
  809e58:	0007883a 	mov	r3,zero
  809e5c:	22000017 	ldw	r8,0(r4)
  809e60:	32800017 	ldw	r10,0(r6)
  809e64:	4ac00104 	addi	r11,r9,4
  809e68:	41ffffcc 	andi	r7,r8,65535
  809e6c:	38c7883a 	add	r3,r7,r3
  809e70:	51ffffcc 	andi	r7,r10,65535
  809e74:	19cfc83a 	sub	r7,r3,r7
  809e78:	4010d43a 	srli	r8,r8,16
  809e7c:	5014d43a 	srli	r10,r10,16
  809e80:	3807d43a 	srai	r3,r7,16
  809e84:	39ffffcc 	andi	r7,r7,65535
  809e88:	4291c83a 	sub	r8,r8,r10
  809e8c:	40c7883a 	add	r3,r8,r3
  809e90:	1810943a 	slli	r8,r3,16
  809e94:	31800104 	addi	r6,r6,4
  809e98:	21000104 	addi	r4,r4,4
  809e9c:	41ceb03a 	or	r7,r8,r7
  809ea0:	49c00015 	stw	r7,0(r9)
  809ea4:	1807d43a 	srai	r3,r3,16
  809ea8:	580b883a 	mov	r5,r11
  809eac:	5813883a 	mov	r9,r11
  809eb0:	33bfea36 	bltu	r6,r14,809e5c <__alt_data_end+0xff809e5c>
  809eb4:	2011883a 	mov	r8,r4
  809eb8:	2300152e 	bgeu	r4,r12,809f10 <__mdiff+0x130>
  809ebc:	21400017 	ldw	r5,0(r4)
  809ec0:	4a400104 	addi	r9,r9,4
  809ec4:	21000104 	addi	r4,r4,4
  809ec8:	29ffffcc 	andi	r7,r5,65535
  809ecc:	38c7883a 	add	r3,r7,r3
  809ed0:	280ad43a 	srli	r5,r5,16
  809ed4:	180dd43a 	srai	r6,r3,16
  809ed8:	19ffffcc 	andi	r7,r3,65535
  809edc:	3147883a 	add	r3,r6,r5
  809ee0:	180a943a 	slli	r5,r3,16
  809ee4:	1807d43a 	srai	r3,r3,16
  809ee8:	29ceb03a 	or	r7,r5,r7
  809eec:	49ffff15 	stw	r7,-4(r9)
  809ef0:	233ff236 	bltu	r4,r12,809ebc <__alt_data_end+0xff809ebc>
  809ef4:	0206303a 	nor	r3,zero,r8
  809ef8:	1b07883a 	add	r3,r3,r12
  809efc:	1806d0ba 	srli	r3,r3,2
  809f00:	18c00044 	addi	r3,r3,1
  809f04:	18c7883a 	add	r3,r3,r3
  809f08:	18c7883a 	add	r3,r3,r3
  809f0c:	58cb883a 	add	r5,r11,r3
  809f10:	28ffff04 	addi	r3,r5,-4
  809f14:	3800041e 	bne	r7,zero,809f28 <__mdiff+0x148>
  809f18:	18ffff04 	addi	r3,r3,-4
  809f1c:	19000017 	ldw	r4,0(r3)
  809f20:	6b7fffc4 	addi	r13,r13,-1
  809f24:	203ffc26 	beq	r4,zero,809f18 <__alt_data_end+0xff809f18>
  809f28:	13400415 	stw	r13,16(r2)
  809f2c:	dfc00417 	ldw	ra,16(sp)
  809f30:	dcc00317 	ldw	r19,12(sp)
  809f34:	dc800217 	ldw	r18,8(sp)
  809f38:	dc400117 	ldw	r17,4(sp)
  809f3c:	dc000017 	ldw	r16,0(sp)
  809f40:	dec00504 	addi	sp,sp,20
  809f44:	f800283a 	ret
  809f48:	8005883a 	mov	r2,r16
  809f4c:	04400044 	movi	r17,1
  809f50:	9021883a 	mov	r16,r18
  809f54:	1025883a 	mov	r18,r2
  809f58:	003fb006 	br	809e1c <__alt_data_end+0xff809e1c>
  809f5c:	9809883a 	mov	r4,r19
  809f60:	000b883a 	mov	r5,zero
  809f64:	08094ac0 	call	8094ac <_Balloc>
  809f68:	00c00044 	movi	r3,1
  809f6c:	10c00415 	stw	r3,16(r2)
  809f70:	10000515 	stw	zero,20(r2)
  809f74:	003fed06 	br	809f2c <__alt_data_end+0xff809f2c>

00809f78 <__ulp>:
  809f78:	295ffc2c 	andhi	r5,r5,32752
  809f7c:	00bf3034 	movhi	r2,64704
  809f80:	2887883a 	add	r3,r5,r2
  809f84:	00c0020e 	bge	zero,r3,809f90 <__ulp+0x18>
  809f88:	0005883a 	mov	r2,zero
  809f8c:	f800283a 	ret
  809f90:	00c7c83a 	sub	r3,zero,r3
  809f94:	180bd53a 	srai	r5,r3,20
  809f98:	008004c4 	movi	r2,19
  809f9c:	11400a0e 	bge	r2,r5,809fc8 <__ulp+0x50>
  809fa0:	00800c84 	movi	r2,50
  809fa4:	0007883a 	mov	r3,zero
  809fa8:	11400516 	blt	r2,r5,809fc0 <__ulp+0x48>
  809fac:	00800cc4 	movi	r2,51
  809fb0:	114bc83a 	sub	r5,r2,r5
  809fb4:	00800044 	movi	r2,1
  809fb8:	1144983a 	sll	r2,r2,r5
  809fbc:	f800283a 	ret
  809fc0:	00800044 	movi	r2,1
  809fc4:	f800283a 	ret
  809fc8:	00800234 	movhi	r2,8
  809fcc:	1147d83a 	sra	r3,r2,r5
  809fd0:	0005883a 	mov	r2,zero
  809fd4:	f800283a 	ret

00809fd8 <__b2d>:
  809fd8:	defffa04 	addi	sp,sp,-24
  809fdc:	dc000015 	stw	r16,0(sp)
  809fe0:	24000417 	ldw	r16,16(r4)
  809fe4:	dc400115 	stw	r17,4(sp)
  809fe8:	24400504 	addi	r17,r4,20
  809fec:	8421883a 	add	r16,r16,r16
  809ff0:	8421883a 	add	r16,r16,r16
  809ff4:	8c21883a 	add	r16,r17,r16
  809ff8:	dc800215 	stw	r18,8(sp)
  809ffc:	84bfff17 	ldw	r18,-4(r16)
  80a000:	dd000415 	stw	r20,16(sp)
  80a004:	dcc00315 	stw	r19,12(sp)
  80a008:	9009883a 	mov	r4,r18
  80a00c:	2829883a 	mov	r20,r5
  80a010:	dfc00515 	stw	ra,20(sp)
  80a014:	08097a00 	call	8097a0 <__hi0bits>
  80a018:	00c00804 	movi	r3,32
  80a01c:	1887c83a 	sub	r3,r3,r2
  80a020:	a0c00015 	stw	r3,0(r20)
  80a024:	00c00284 	movi	r3,10
  80a028:	84ffff04 	addi	r19,r16,-4
  80a02c:	18801216 	blt	r3,r2,80a078 <__b2d+0xa0>
  80a030:	014002c4 	movi	r5,11
  80a034:	2889c83a 	sub	r4,r5,r2
  80a038:	9106d83a 	srl	r3,r18,r4
  80a03c:	18cffc34 	orhi	r3,r3,16368
  80a040:	8cc0282e 	bgeu	r17,r19,80a0e4 <__b2d+0x10c>
  80a044:	817ffe17 	ldw	r5,-8(r16)
  80a048:	290ad83a 	srl	r5,r5,r4
  80a04c:	10800544 	addi	r2,r2,21
  80a050:	9084983a 	sll	r2,r18,r2
  80a054:	2884b03a 	or	r2,r5,r2
  80a058:	dfc00517 	ldw	ra,20(sp)
  80a05c:	dd000417 	ldw	r20,16(sp)
  80a060:	dcc00317 	ldw	r19,12(sp)
  80a064:	dc800217 	ldw	r18,8(sp)
  80a068:	dc400117 	ldw	r17,4(sp)
  80a06c:	dc000017 	ldw	r16,0(sp)
  80a070:	dec00604 	addi	sp,sp,24
  80a074:	f800283a 	ret
  80a078:	113ffd44 	addi	r4,r2,-11
  80a07c:	8cc00f2e 	bgeu	r17,r19,80a0bc <__b2d+0xe4>
  80a080:	81bffe04 	addi	r6,r16,-8
  80a084:	817ffe17 	ldw	r5,-8(r16)
  80a088:	20001326 	beq	r4,zero,80a0d8 <__b2d+0x100>
  80a08c:	00c00ac4 	movi	r3,43
  80a090:	1885c83a 	sub	r2,r3,r2
  80a094:	2886d83a 	srl	r3,r5,r2
  80a098:	9124983a 	sll	r18,r18,r4
  80a09c:	90e4b03a 	or	r18,r18,r3
  80a0a0:	90cffc34 	orhi	r3,r18,16368
  80a0a4:	8980112e 	bgeu	r17,r6,80a0ec <__b2d+0x114>
  80a0a8:	81bffd17 	ldw	r6,-12(r16)
  80a0ac:	308cd83a 	srl	r6,r6,r2
  80a0b0:	2904983a 	sll	r2,r5,r4
  80a0b4:	1184b03a 	or	r2,r2,r6
  80a0b8:	003fe706 	br	80a058 <__alt_data_end+0xff80a058>
  80a0bc:	20000526 	beq	r4,zero,80a0d4 <__b2d+0xfc>
  80a0c0:	9124983a 	sll	r18,r18,r4
  80a0c4:	000d883a 	mov	r6,zero
  80a0c8:	000b883a 	mov	r5,zero
  80a0cc:	90cffc34 	orhi	r3,r18,16368
  80a0d0:	003ff706 	br	80a0b0 <__alt_data_end+0xff80a0b0>
  80a0d4:	000b883a 	mov	r5,zero
  80a0d8:	90cffc34 	orhi	r3,r18,16368
  80a0dc:	2805883a 	mov	r2,r5
  80a0e0:	003fdd06 	br	80a058 <__alt_data_end+0xff80a058>
  80a0e4:	000b883a 	mov	r5,zero
  80a0e8:	003fd806 	br	80a04c <__alt_data_end+0xff80a04c>
  80a0ec:	000d883a 	mov	r6,zero
  80a0f0:	003fef06 	br	80a0b0 <__alt_data_end+0xff80a0b0>

0080a0f4 <__d2b>:
  80a0f4:	defff704 	addi	sp,sp,-36
  80a0f8:	dc000215 	stw	r16,8(sp)
  80a0fc:	3021883a 	mov	r16,r6
  80a100:	dc400315 	stw	r17,12(sp)
  80a104:	8022907a 	slli	r17,r16,1
  80a108:	dd400715 	stw	r21,28(sp)
  80a10c:	282b883a 	mov	r21,r5
  80a110:	01400044 	movi	r5,1
  80a114:	dd000615 	stw	r20,24(sp)
  80a118:	dcc00515 	stw	r19,20(sp)
  80a11c:	dc800415 	stw	r18,16(sp)
  80a120:	dfc00815 	stw	ra,32(sp)
  80a124:	3829883a 	mov	r20,r7
  80a128:	dc800917 	ldw	r18,36(sp)
  80a12c:	8822d57a 	srli	r17,r17,21
  80a130:	08094ac0 	call	8094ac <_Balloc>
  80a134:	1027883a 	mov	r19,r2
  80a138:	00800434 	movhi	r2,16
  80a13c:	10bfffc4 	addi	r2,r2,-1
  80a140:	808c703a 	and	r6,r16,r2
  80a144:	88000126 	beq	r17,zero,80a14c <__d2b+0x58>
  80a148:	31800434 	orhi	r6,r6,16
  80a14c:	d9800015 	stw	r6,0(sp)
  80a150:	a8001f26 	beq	r21,zero,80a1d0 <__d2b+0xdc>
  80a154:	d9000104 	addi	r4,sp,4
  80a158:	dd400115 	stw	r21,4(sp)
  80a15c:	08098080 	call	809808 <__lo0bits>
  80a160:	d8c00017 	ldw	r3,0(sp)
  80a164:	1000291e 	bne	r2,zero,80a20c <__d2b+0x118>
  80a168:	d9000117 	ldw	r4,4(sp)
  80a16c:	99000515 	stw	r4,20(r19)
  80a170:	1820c03a 	cmpne	r16,r3,zero
  80a174:	84000044 	addi	r16,r16,1
  80a178:	98c00615 	stw	r3,24(r19)
  80a17c:	9c000415 	stw	r16,16(r19)
  80a180:	88001b1e 	bne	r17,zero,80a1f0 <__d2b+0xfc>
  80a184:	800690ba 	slli	r3,r16,2
  80a188:	10bef384 	addi	r2,r2,-1074
  80a18c:	a0800015 	stw	r2,0(r20)
  80a190:	98c5883a 	add	r2,r19,r3
  80a194:	11000417 	ldw	r4,16(r2)
  80a198:	8020917a 	slli	r16,r16,5
  80a19c:	08097a00 	call	8097a0 <__hi0bits>
  80a1a0:	8085c83a 	sub	r2,r16,r2
  80a1a4:	90800015 	stw	r2,0(r18)
  80a1a8:	9805883a 	mov	r2,r19
  80a1ac:	dfc00817 	ldw	ra,32(sp)
  80a1b0:	dd400717 	ldw	r21,28(sp)
  80a1b4:	dd000617 	ldw	r20,24(sp)
  80a1b8:	dcc00517 	ldw	r19,20(sp)
  80a1bc:	dc800417 	ldw	r18,16(sp)
  80a1c0:	dc400317 	ldw	r17,12(sp)
  80a1c4:	dc000217 	ldw	r16,8(sp)
  80a1c8:	dec00904 	addi	sp,sp,36
  80a1cc:	f800283a 	ret
  80a1d0:	d809883a 	mov	r4,sp
  80a1d4:	08098080 	call	809808 <__lo0bits>
  80a1d8:	d8c00017 	ldw	r3,0(sp)
  80a1dc:	04000044 	movi	r16,1
  80a1e0:	9c000415 	stw	r16,16(r19)
  80a1e4:	98c00515 	stw	r3,20(r19)
  80a1e8:	10800804 	addi	r2,r2,32
  80a1ec:	883fe526 	beq	r17,zero,80a184 <__alt_data_end+0xff80a184>
  80a1f0:	8c7ef344 	addi	r17,r17,-1075
  80a1f4:	88a3883a 	add	r17,r17,r2
  80a1f8:	00c00d44 	movi	r3,53
  80a1fc:	a4400015 	stw	r17,0(r20)
  80a200:	1885c83a 	sub	r2,r3,r2
  80a204:	90800015 	stw	r2,0(r18)
  80a208:	003fe706 	br	80a1a8 <__alt_data_end+0xff80a1a8>
  80a20c:	01000804 	movi	r4,32
  80a210:	2089c83a 	sub	r4,r4,r2
  80a214:	1908983a 	sll	r4,r3,r4
  80a218:	d9400117 	ldw	r5,4(sp)
  80a21c:	1886d83a 	srl	r3,r3,r2
  80a220:	2148b03a 	or	r4,r4,r5
  80a224:	99000515 	stw	r4,20(r19)
  80a228:	d8c00015 	stw	r3,0(sp)
  80a22c:	003fd006 	br	80a170 <__alt_data_end+0xff80a170>

0080a230 <__ratio>:
  80a230:	defff904 	addi	sp,sp,-28
  80a234:	dc400315 	stw	r17,12(sp)
  80a238:	2823883a 	mov	r17,r5
  80a23c:	d9400104 	addi	r5,sp,4
  80a240:	dfc00615 	stw	ra,24(sp)
  80a244:	dcc00515 	stw	r19,20(sp)
  80a248:	dc800415 	stw	r18,16(sp)
  80a24c:	2027883a 	mov	r19,r4
  80a250:	dc000215 	stw	r16,8(sp)
  80a254:	0809fd80 	call	809fd8 <__b2d>
  80a258:	8809883a 	mov	r4,r17
  80a25c:	d80b883a 	mov	r5,sp
  80a260:	1025883a 	mov	r18,r2
  80a264:	1821883a 	mov	r16,r3
  80a268:	0809fd80 	call	809fd8 <__b2d>
  80a26c:	8a400417 	ldw	r9,16(r17)
  80a270:	9a000417 	ldw	r8,16(r19)
  80a274:	100d883a 	mov	r6,r2
  80a278:	d8800017 	ldw	r2,0(sp)
  80a27c:	4251c83a 	sub	r8,r8,r9
  80a280:	4012917a 	slli	r9,r8,5
  80a284:	da000117 	ldw	r8,4(sp)
  80a288:	4091c83a 	sub	r8,r8,r2
  80a28c:	4251883a 	add	r8,r8,r9
  80a290:	02000d0e 	bge	zero,r8,80a2c8 <__ratio+0x98>
  80a294:	4010953a 	slli	r8,r8,20
  80a298:	4421883a 	add	r16,r8,r16
  80a29c:	9009883a 	mov	r4,r18
  80a2a0:	800b883a 	mov	r5,r16
  80a2a4:	180f883a 	mov	r7,r3
  80a2a8:	08156500 	call	815650 <__divdf3>
  80a2ac:	dfc00617 	ldw	ra,24(sp)
  80a2b0:	dcc00517 	ldw	r19,20(sp)
  80a2b4:	dc800417 	ldw	r18,16(sp)
  80a2b8:	dc400317 	ldw	r17,12(sp)
  80a2bc:	dc000217 	ldw	r16,8(sp)
  80a2c0:	dec00704 	addi	sp,sp,28
  80a2c4:	f800283a 	ret
  80a2c8:	4010953a 	slli	r8,r8,20
  80a2cc:	1a07c83a 	sub	r3,r3,r8
  80a2d0:	003ff206 	br	80a29c <__alt_data_end+0xff80a29c>

0080a2d4 <_mprec_log10>:
  80a2d4:	defffe04 	addi	sp,sp,-8
  80a2d8:	dc000015 	stw	r16,0(sp)
  80a2dc:	dfc00115 	stw	ra,4(sp)
  80a2e0:	008005c4 	movi	r2,23
  80a2e4:	2021883a 	mov	r16,r4
  80a2e8:	11000d0e 	bge	r2,r4,80a320 <_mprec_log10+0x4c>
  80a2ec:	0005883a 	mov	r2,zero
  80a2f0:	00cffc34 	movhi	r3,16368
  80a2f4:	843fffc4 	addi	r16,r16,-1
  80a2f8:	1009883a 	mov	r4,r2
  80a2fc:	180b883a 	mov	r5,r3
  80a300:	000d883a 	mov	r6,zero
  80a304:	01d00934 	movhi	r7,16420
  80a308:	08161600 	call	816160 <__muldf3>
  80a30c:	803ff91e 	bne	r16,zero,80a2f4 <__alt_data_end+0xff80a2f4>
  80a310:	dfc00117 	ldw	ra,4(sp)
  80a314:	dc000017 	ldw	r16,0(sp)
  80a318:	dec00204 	addi	sp,sp,8
  80a31c:	f800283a 	ret
  80a320:	202090fa 	slli	r16,r4,3
  80a324:	008020b4 	movhi	r2,130
  80a328:	10afae04 	addi	r2,r2,-16712
  80a32c:	1421883a 	add	r16,r2,r16
  80a330:	80800017 	ldw	r2,0(r16)
  80a334:	80c00117 	ldw	r3,4(r16)
  80a338:	dfc00117 	ldw	ra,4(sp)
  80a33c:	dc000017 	ldw	r16,0(sp)
  80a340:	dec00204 	addi	sp,sp,8
  80a344:	f800283a 	ret

0080a348 <__copybits>:
  80a348:	297fffc4 	addi	r5,r5,-1
  80a34c:	280fd17a 	srai	r7,r5,5
  80a350:	30c00417 	ldw	r3,16(r6)
  80a354:	30800504 	addi	r2,r6,20
  80a358:	39c00044 	addi	r7,r7,1
  80a35c:	18c7883a 	add	r3,r3,r3
  80a360:	39cf883a 	add	r7,r7,r7
  80a364:	18c7883a 	add	r3,r3,r3
  80a368:	39cf883a 	add	r7,r7,r7
  80a36c:	10c7883a 	add	r3,r2,r3
  80a370:	21cf883a 	add	r7,r4,r7
  80a374:	10c00d2e 	bgeu	r2,r3,80a3ac <__copybits+0x64>
  80a378:	200b883a 	mov	r5,r4
  80a37c:	12000017 	ldw	r8,0(r2)
  80a380:	29400104 	addi	r5,r5,4
  80a384:	10800104 	addi	r2,r2,4
  80a388:	2a3fff15 	stw	r8,-4(r5)
  80a38c:	10fffb36 	bltu	r2,r3,80a37c <__alt_data_end+0xff80a37c>
  80a390:	1985c83a 	sub	r2,r3,r6
  80a394:	10bffac4 	addi	r2,r2,-21
  80a398:	1004d0ba 	srli	r2,r2,2
  80a39c:	10800044 	addi	r2,r2,1
  80a3a0:	1085883a 	add	r2,r2,r2
  80a3a4:	1085883a 	add	r2,r2,r2
  80a3a8:	2089883a 	add	r4,r4,r2
  80a3ac:	21c0032e 	bgeu	r4,r7,80a3bc <__copybits+0x74>
  80a3b0:	20000015 	stw	zero,0(r4)
  80a3b4:	21000104 	addi	r4,r4,4
  80a3b8:	21fffd36 	bltu	r4,r7,80a3b0 <__alt_data_end+0xff80a3b0>
  80a3bc:	f800283a 	ret

0080a3c0 <__any_on>:
  80a3c0:	20c00417 	ldw	r3,16(r4)
  80a3c4:	2805d17a 	srai	r2,r5,5
  80a3c8:	21000504 	addi	r4,r4,20
  80a3cc:	18800d0e 	bge	r3,r2,80a404 <__any_on+0x44>
  80a3d0:	18c7883a 	add	r3,r3,r3
  80a3d4:	18c7883a 	add	r3,r3,r3
  80a3d8:	20c7883a 	add	r3,r4,r3
  80a3dc:	20c0192e 	bgeu	r4,r3,80a444 <__any_on+0x84>
  80a3e0:	18bfff17 	ldw	r2,-4(r3)
  80a3e4:	18ffff04 	addi	r3,r3,-4
  80a3e8:	1000041e 	bne	r2,zero,80a3fc <__any_on+0x3c>
  80a3ec:	20c0142e 	bgeu	r4,r3,80a440 <__any_on+0x80>
  80a3f0:	18ffff04 	addi	r3,r3,-4
  80a3f4:	19400017 	ldw	r5,0(r3)
  80a3f8:	283ffc26 	beq	r5,zero,80a3ec <__alt_data_end+0xff80a3ec>
  80a3fc:	00800044 	movi	r2,1
  80a400:	f800283a 	ret
  80a404:	10c00a0e 	bge	r2,r3,80a430 <__any_on+0x70>
  80a408:	1085883a 	add	r2,r2,r2
  80a40c:	1085883a 	add	r2,r2,r2
  80a410:	294007cc 	andi	r5,r5,31
  80a414:	2087883a 	add	r3,r4,r2
  80a418:	283ff026 	beq	r5,zero,80a3dc <__alt_data_end+0xff80a3dc>
  80a41c:	19800017 	ldw	r6,0(r3)
  80a420:	3144d83a 	srl	r2,r6,r5
  80a424:	114a983a 	sll	r5,r2,r5
  80a428:	29bff41e 	bne	r5,r6,80a3fc <__alt_data_end+0xff80a3fc>
  80a42c:	003feb06 	br	80a3dc <__alt_data_end+0xff80a3dc>
  80a430:	1085883a 	add	r2,r2,r2
  80a434:	1085883a 	add	r2,r2,r2
  80a438:	2087883a 	add	r3,r4,r2
  80a43c:	003fe706 	br	80a3dc <__alt_data_end+0xff80a3dc>
  80a440:	f800283a 	ret
  80a444:	0005883a 	mov	r2,zero
  80a448:	f800283a 	ret

0080a44c <_putc_r>:
  80a44c:	defffc04 	addi	sp,sp,-16
  80a450:	dc000215 	stw	r16,8(sp)
  80a454:	dfc00315 	stw	ra,12(sp)
  80a458:	2021883a 	mov	r16,r4
  80a45c:	20000226 	beq	r4,zero,80a468 <_putc_r+0x1c>
  80a460:	20800e17 	ldw	r2,56(r4)
  80a464:	10001b26 	beq	r2,zero,80a4d4 <_putc_r+0x88>
  80a468:	30800217 	ldw	r2,8(r6)
  80a46c:	10bfffc4 	addi	r2,r2,-1
  80a470:	30800215 	stw	r2,8(r6)
  80a474:	10000a16 	blt	r2,zero,80a4a0 <_putc_r+0x54>
  80a478:	30800017 	ldw	r2,0(r6)
  80a47c:	11400005 	stb	r5,0(r2)
  80a480:	30800017 	ldw	r2,0(r6)
  80a484:	10c00044 	addi	r3,r2,1
  80a488:	30c00015 	stw	r3,0(r6)
  80a48c:	10800003 	ldbu	r2,0(r2)
  80a490:	dfc00317 	ldw	ra,12(sp)
  80a494:	dc000217 	ldw	r16,8(sp)
  80a498:	dec00404 	addi	sp,sp,16
  80a49c:	f800283a 	ret
  80a4a0:	30c00617 	ldw	r3,24(r6)
  80a4a4:	10c00616 	blt	r2,r3,80a4c0 <_putc_r+0x74>
  80a4a8:	30800017 	ldw	r2,0(r6)
  80a4ac:	00c00284 	movi	r3,10
  80a4b0:	11400005 	stb	r5,0(r2)
  80a4b4:	30800017 	ldw	r2,0(r6)
  80a4b8:	11400003 	ldbu	r5,0(r2)
  80a4bc:	28fff11e 	bne	r5,r3,80a484 <__alt_data_end+0xff80a484>
  80a4c0:	8009883a 	mov	r4,r16
  80a4c4:	dfc00317 	ldw	ra,12(sp)
  80a4c8:	dc000217 	ldw	r16,8(sp)
  80a4cc:	dec00404 	addi	sp,sp,16
  80a4d0:	0811a3c1 	jmpi	811a3c <__swbuf_r>
  80a4d4:	d9400015 	stw	r5,0(sp)
  80a4d8:	d9800115 	stw	r6,4(sp)
  80a4dc:	08015a40 	call	8015a4 <__sinit>
  80a4e0:	d9800117 	ldw	r6,4(sp)
  80a4e4:	d9400017 	ldw	r5,0(sp)
  80a4e8:	003fdf06 	br	80a468 <__alt_data_end+0xff80a468>

0080a4ec <putc>:
  80a4ec:	008020b4 	movhi	r2,130
  80a4f0:	defffc04 	addi	sp,sp,-16
  80a4f4:	10b7f804 	addi	r2,r2,-8224
  80a4f8:	dc400115 	stw	r17,4(sp)
  80a4fc:	14400017 	ldw	r17,0(r2)
  80a500:	dc800215 	stw	r18,8(sp)
  80a504:	dc000015 	stw	r16,0(sp)
  80a508:	dfc00315 	stw	ra,12(sp)
  80a50c:	2025883a 	mov	r18,r4
  80a510:	2821883a 	mov	r16,r5
  80a514:	88000226 	beq	r17,zero,80a520 <putc+0x34>
  80a518:	88800e17 	ldw	r2,56(r17)
  80a51c:	10001a26 	beq	r2,zero,80a588 <putc+0x9c>
  80a520:	80800217 	ldw	r2,8(r16)
  80a524:	10bfffc4 	addi	r2,r2,-1
  80a528:	80800215 	stw	r2,8(r16)
  80a52c:	10000c16 	blt	r2,zero,80a560 <putc+0x74>
  80a530:	80800017 	ldw	r2,0(r16)
  80a534:	14800005 	stb	r18,0(r2)
  80a538:	80800017 	ldw	r2,0(r16)
  80a53c:	10c00044 	addi	r3,r2,1
  80a540:	80c00015 	stw	r3,0(r16)
  80a544:	10800003 	ldbu	r2,0(r2)
  80a548:	dfc00317 	ldw	ra,12(sp)
  80a54c:	dc800217 	ldw	r18,8(sp)
  80a550:	dc400117 	ldw	r17,4(sp)
  80a554:	dc000017 	ldw	r16,0(sp)
  80a558:	dec00404 	addi	sp,sp,16
  80a55c:	f800283a 	ret
  80a560:	80c00617 	ldw	r3,24(r16)
  80a564:	10c00b16 	blt	r2,r3,80a594 <putc+0xa8>
  80a568:	80800017 	ldw	r2,0(r16)
  80a56c:	00c00284 	movi	r3,10
  80a570:	14800005 	stb	r18,0(r2)
  80a574:	80800017 	ldw	r2,0(r16)
  80a578:	11400003 	ldbu	r5,0(r2)
  80a57c:	28ffef1e 	bne	r5,r3,80a53c <__alt_data_end+0xff80a53c>
  80a580:	8809883a 	mov	r4,r17
  80a584:	00000506 	br	80a59c <putc+0xb0>
  80a588:	8809883a 	mov	r4,r17
  80a58c:	08015a40 	call	8015a4 <__sinit>
  80a590:	003fe306 	br	80a520 <__alt_data_end+0xff80a520>
  80a594:	8809883a 	mov	r4,r17
  80a598:	900b883a 	mov	r5,r18
  80a59c:	800d883a 	mov	r6,r16
  80a5a0:	dfc00317 	ldw	ra,12(sp)
  80a5a4:	dc800217 	ldw	r18,8(sp)
  80a5a8:	dc400117 	ldw	r17,4(sp)
  80a5ac:	dc000017 	ldw	r16,0(sp)
  80a5b0:	dec00404 	addi	sp,sp,16
  80a5b4:	0811a3c1 	jmpi	811a3c <__swbuf_r>

0080a5b8 <_read_r>:
  80a5b8:	defffd04 	addi	sp,sp,-12
  80a5bc:	dc000015 	stw	r16,0(sp)
  80a5c0:	040020b4 	movhi	r16,130
  80a5c4:	dc400115 	stw	r17,4(sp)
  80a5c8:	843f6304 	addi	r16,r16,-628
  80a5cc:	2023883a 	mov	r17,r4
  80a5d0:	2809883a 	mov	r4,r5
  80a5d4:	300b883a 	mov	r5,r6
  80a5d8:	380d883a 	mov	r6,r7
  80a5dc:	dfc00215 	stw	ra,8(sp)
  80a5e0:	80000015 	stw	zero,0(r16)
  80a5e4:	0817fc00 	call	817fc0 <read>
  80a5e8:	00ffffc4 	movi	r3,-1
  80a5ec:	10c00526 	beq	r2,r3,80a604 <_read_r+0x4c>
  80a5f0:	dfc00217 	ldw	ra,8(sp)
  80a5f4:	dc400117 	ldw	r17,4(sp)
  80a5f8:	dc000017 	ldw	r16,0(sp)
  80a5fc:	dec00304 	addi	sp,sp,12
  80a600:	f800283a 	ret
  80a604:	80c00017 	ldw	r3,0(r16)
  80a608:	183ff926 	beq	r3,zero,80a5f0 <__alt_data_end+0xff80a5f0>
  80a60c:	88c00015 	stw	r3,0(r17)
  80a610:	003ff706 	br	80a5f0 <__alt_data_end+0xff80a5f0>

0080a614 <_realloc_r>:
  80a614:	defff604 	addi	sp,sp,-40
  80a618:	dd000415 	stw	r20,16(sp)
  80a61c:	dc400115 	stw	r17,4(sp)
  80a620:	dfc00915 	stw	ra,36(sp)
  80a624:	df000815 	stw	fp,32(sp)
  80a628:	ddc00715 	stw	r23,28(sp)
  80a62c:	dd800615 	stw	r22,24(sp)
  80a630:	dd400515 	stw	r21,20(sp)
  80a634:	dcc00315 	stw	r19,12(sp)
  80a638:	dc800215 	stw	r18,8(sp)
  80a63c:	dc000015 	stw	r16,0(sp)
  80a640:	2829883a 	mov	r20,r5
  80a644:	3023883a 	mov	r17,r6
  80a648:	2800ad26 	beq	r5,zero,80a900 <_realloc_r+0x2ec>
  80a64c:	2025883a 	mov	r18,r4
  80a650:	0817cbc0 	call	817cbc <__malloc_lock>
  80a654:	a0ffff17 	ldw	r3,-4(r20)
  80a658:	043fff04 	movi	r16,-4
  80a65c:	890002c4 	addi	r4,r17,11
  80a660:	01c00584 	movi	r7,22
  80a664:	a57ffe04 	addi	r21,r20,-8
  80a668:	1c20703a 	and	r16,r3,r16
  80a66c:	39001d2e 	bgeu	r7,r4,80a6e4 <_realloc_r+0xd0>
  80a670:	05bffe04 	movi	r22,-8
  80a674:	25ac703a 	and	r22,r4,r22
  80a678:	b00f883a 	mov	r7,r22
  80a67c:	b0006516 	blt	r22,zero,80a814 <_realloc_r+0x200>
  80a680:	b4406436 	bltu	r22,r17,80a814 <_realloc_r+0x200>
  80a684:	81c01a0e 	bge	r16,r7,80a6f0 <_realloc_r+0xdc>
  80a688:	070020b4 	movhi	fp,130
  80a68c:	e731c404 	addi	fp,fp,-14576
  80a690:	e1400217 	ldw	r5,8(fp)
  80a694:	ac11883a 	add	r8,r21,r16
  80a698:	2a006226 	beq	r5,r8,80a824 <_realloc_r+0x210>
  80a69c:	41800117 	ldw	r6,4(r8)
  80a6a0:	027fff84 	movi	r9,-2
  80a6a4:	3252703a 	and	r9,r6,r9
  80a6a8:	4253883a 	add	r9,r8,r9
  80a6ac:	49000117 	ldw	r4,4(r9)
  80a6b0:	2100004c 	andi	r4,r4,1
  80a6b4:	2000281e 	bne	r4,zero,80a758 <_realloc_r+0x144>
  80a6b8:	00bfff04 	movi	r2,-4
  80a6bc:	3084703a 	and	r2,r6,r2
  80a6c0:	1409883a 	add	r4,r2,r16
  80a6c4:	21c05e16 	blt	r4,r7,80a840 <_realloc_r+0x22c>
  80a6c8:	40800317 	ldw	r2,12(r8)
  80a6cc:	41400217 	ldw	r5,8(r8)
  80a6d0:	a023883a 	mov	r17,r20
  80a6d4:	2021883a 	mov	r16,r4
  80a6d8:	28800315 	stw	r2,12(r5)
  80a6dc:	11400215 	stw	r5,8(r2)
  80a6e0:	00000406 	br	80a6f4 <_realloc_r+0xe0>
  80a6e4:	01c00404 	movi	r7,16
  80a6e8:	382d883a 	mov	r22,r7
  80a6ec:	003fe406 	br	80a680 <__alt_data_end+0xff80a680>
  80a6f0:	a023883a 	mov	r17,r20
  80a6f4:	858fc83a 	sub	r7,r16,r22
  80a6f8:	008003c4 	movi	r2,15
  80a6fc:	18c0004c 	andi	r3,r3,1
  80a700:	11c07236 	bltu	r2,r7,80a8cc <_realloc_r+0x2b8>
  80a704:	1c06b03a 	or	r3,r3,r16
  80a708:	a8c00115 	stw	r3,4(r21)
  80a70c:	ac21883a 	add	r16,r21,r16
  80a710:	80800117 	ldw	r2,4(r16)
  80a714:	10800054 	ori	r2,r2,1
  80a718:	80800115 	stw	r2,4(r16)
  80a71c:	9009883a 	mov	r4,r18
  80a720:	0817cdc0 	call	817cdc <__malloc_unlock>
  80a724:	8805883a 	mov	r2,r17
  80a728:	dfc00917 	ldw	ra,36(sp)
  80a72c:	df000817 	ldw	fp,32(sp)
  80a730:	ddc00717 	ldw	r23,28(sp)
  80a734:	dd800617 	ldw	r22,24(sp)
  80a738:	dd400517 	ldw	r21,20(sp)
  80a73c:	dd000417 	ldw	r20,16(sp)
  80a740:	dcc00317 	ldw	r19,12(sp)
  80a744:	dc800217 	ldw	r18,8(sp)
  80a748:	dc400117 	ldw	r17,4(sp)
  80a74c:	dc000017 	ldw	r16,0(sp)
  80a750:	dec00a04 	addi	sp,sp,40
  80a754:	f800283a 	ret
  80a758:	18c0004c 	andi	r3,r3,1
  80a75c:	1800081e 	bne	r3,zero,80a780 <_realloc_r+0x16c>
  80a760:	a4fffe17 	ldw	r19,-8(r20)
  80a764:	00bfff04 	movi	r2,-4
  80a768:	ace7c83a 	sub	r19,r21,r19
  80a76c:	98c00117 	ldw	r3,4(r19)
  80a770:	1886703a 	and	r3,r3,r2
  80a774:	98000226 	beq	r19,zero,80a780 <_realloc_r+0x16c>
  80a778:	1c2f883a 	add	r23,r3,r16
  80a77c:	b9c06d0e 	bge	r23,r7,80a934 <_realloc_r+0x320>
  80a780:	880b883a 	mov	r5,r17
  80a784:	9009883a 	mov	r4,r18
  80a788:	080258c0 	call	80258c <_malloc_r>
  80a78c:	1023883a 	mov	r17,r2
  80a790:	1000ef26 	beq	r2,zero,80ab50 <_realloc_r+0x53c>
  80a794:	a0ffff17 	ldw	r3,-4(r20)
  80a798:	113ffe04 	addi	r4,r2,-8
  80a79c:	00bfff84 	movi	r2,-2
  80a7a0:	1884703a 	and	r2,r3,r2
  80a7a4:	a885883a 	add	r2,r21,r2
  80a7a8:	2080bf26 	beq	r4,r2,80aaa8 <_realloc_r+0x494>
  80a7ac:	81bfff04 	addi	r6,r16,-4
  80a7b0:	00800904 	movi	r2,36
  80a7b4:	11808936 	bltu	r2,r6,80a9dc <_realloc_r+0x3c8>
  80a7b8:	00c004c4 	movi	r3,19
  80a7bc:	19806c2e 	bgeu	r3,r6,80a970 <_realloc_r+0x35c>
  80a7c0:	a0c00017 	ldw	r3,0(r20)
  80a7c4:	88c00015 	stw	r3,0(r17)
  80a7c8:	a0c00117 	ldw	r3,4(r20)
  80a7cc:	88c00115 	stw	r3,4(r17)
  80a7d0:	00c006c4 	movi	r3,27
  80a7d4:	1980ac36 	bltu	r3,r6,80aa88 <_realloc_r+0x474>
  80a7d8:	88800204 	addi	r2,r17,8
  80a7dc:	a0c00204 	addi	r3,r20,8
  80a7e0:	19000017 	ldw	r4,0(r3)
  80a7e4:	11000015 	stw	r4,0(r2)
  80a7e8:	19000117 	ldw	r4,4(r3)
  80a7ec:	11000115 	stw	r4,4(r2)
  80a7f0:	18c00217 	ldw	r3,8(r3)
  80a7f4:	10c00215 	stw	r3,8(r2)
  80a7f8:	a00b883a 	mov	r5,r20
  80a7fc:	9009883a 	mov	r4,r18
  80a800:	08018700 	call	801870 <_free_r>
  80a804:	9009883a 	mov	r4,r18
  80a808:	0817cdc0 	call	817cdc <__malloc_unlock>
  80a80c:	8805883a 	mov	r2,r17
  80a810:	003fc506 	br	80a728 <__alt_data_end+0xff80a728>
  80a814:	00800304 	movi	r2,12
  80a818:	90800015 	stw	r2,0(r18)
  80a81c:	0005883a 	mov	r2,zero
  80a820:	003fc106 	br	80a728 <__alt_data_end+0xff80a728>
  80a824:	29800117 	ldw	r6,4(r5)
  80a828:	00bfff04 	movi	r2,-4
  80a82c:	b1000404 	addi	r4,r22,16
  80a830:	3084703a 	and	r2,r6,r2
  80a834:	140d883a 	add	r6,r2,r16
  80a838:	31005b0e 	bge	r6,r4,80a9a8 <_realloc_r+0x394>
  80a83c:	2811883a 	mov	r8,r5
  80a840:	18c0004c 	andi	r3,r3,1
  80a844:	183fce1e 	bne	r3,zero,80a780 <__alt_data_end+0xff80a780>
  80a848:	a4fffe17 	ldw	r19,-8(r20)
  80a84c:	00ffff04 	movi	r3,-4
  80a850:	ace7c83a 	sub	r19,r21,r19
  80a854:	99000117 	ldw	r4,4(r19)
  80a858:	20c6703a 	and	r3,r4,r3
  80a85c:	403fc526 	beq	r8,zero,80a774 <__alt_data_end+0xff80a774>
  80a860:	1c2f883a 	add	r23,r3,r16
  80a864:	b8af883a 	add	r23,r23,r2
  80a868:	41406026 	beq	r8,r5,80a9ec <_realloc_r+0x3d8>
  80a86c:	b9ffc116 	blt	r23,r7,80a774 <__alt_data_end+0xff80a774>
  80a870:	40c00217 	ldw	r3,8(r8)
  80a874:	40800317 	ldw	r2,12(r8)
  80a878:	81bfff04 	addi	r6,r16,-4
  80a87c:	01000904 	movi	r4,36
  80a880:	18800315 	stw	r2,12(r3)
  80a884:	10c00215 	stw	r3,8(r2)
  80a888:	99400217 	ldw	r5,8(r19)
  80a88c:	98c00317 	ldw	r3,12(r19)
  80a890:	9c400204 	addi	r17,r19,8
  80a894:	28c00315 	stw	r3,12(r5)
  80a898:	19400215 	stw	r5,8(r3)
  80a89c:	21802d36 	bltu	r4,r6,80a954 <_realloc_r+0x340>
  80a8a0:	008004c4 	movi	r2,19
  80a8a4:	1180352e 	bgeu	r2,r6,80a97c <_realloc_r+0x368>
  80a8a8:	a0800017 	ldw	r2,0(r20)
  80a8ac:	98800215 	stw	r2,8(r19)
  80a8b0:	a0800117 	ldw	r2,4(r20)
  80a8b4:	98800315 	stw	r2,12(r19)
  80a8b8:	008006c4 	movi	r2,27
  80a8bc:	11808036 	bltu	r2,r6,80aac0 <_realloc_r+0x4ac>
  80a8c0:	98c00404 	addi	r3,r19,16
  80a8c4:	a5000204 	addi	r20,r20,8
  80a8c8:	00002d06 	br	80a980 <_realloc_r+0x36c>
  80a8cc:	1d86b03a 	or	r3,r3,r22
  80a8d0:	ad8b883a 	add	r5,r21,r22
  80a8d4:	a8c00115 	stw	r3,4(r21)
  80a8d8:	38800054 	ori	r2,r7,1
  80a8dc:	28800115 	stw	r2,4(r5)
  80a8e0:	29cf883a 	add	r7,r5,r7
  80a8e4:	38800117 	ldw	r2,4(r7)
  80a8e8:	9009883a 	mov	r4,r18
  80a8ec:	29400204 	addi	r5,r5,8
  80a8f0:	10800054 	ori	r2,r2,1
  80a8f4:	38800115 	stw	r2,4(r7)
  80a8f8:	08018700 	call	801870 <_free_r>
  80a8fc:	003f8706 	br	80a71c <__alt_data_end+0xff80a71c>
  80a900:	300b883a 	mov	r5,r6
  80a904:	dfc00917 	ldw	ra,36(sp)
  80a908:	df000817 	ldw	fp,32(sp)
  80a90c:	ddc00717 	ldw	r23,28(sp)
  80a910:	dd800617 	ldw	r22,24(sp)
  80a914:	dd400517 	ldw	r21,20(sp)
  80a918:	dd000417 	ldw	r20,16(sp)
  80a91c:	dcc00317 	ldw	r19,12(sp)
  80a920:	dc800217 	ldw	r18,8(sp)
  80a924:	dc400117 	ldw	r17,4(sp)
  80a928:	dc000017 	ldw	r16,0(sp)
  80a92c:	dec00a04 	addi	sp,sp,40
  80a930:	080258c1 	jmpi	80258c <_malloc_r>
  80a934:	98800317 	ldw	r2,12(r19)
  80a938:	98c00217 	ldw	r3,8(r19)
  80a93c:	81bfff04 	addi	r6,r16,-4
  80a940:	01000904 	movi	r4,36
  80a944:	18800315 	stw	r2,12(r3)
  80a948:	10c00215 	stw	r3,8(r2)
  80a94c:	9c400204 	addi	r17,r19,8
  80a950:	21bfd32e 	bgeu	r4,r6,80a8a0 <__alt_data_end+0xff80a8a0>
  80a954:	8809883a 	mov	r4,r17
  80a958:	a00b883a 	mov	r5,r20
  80a95c:	08093500 	call	809350 <memmove>
  80a960:	98c00117 	ldw	r3,4(r19)
  80a964:	b821883a 	mov	r16,r23
  80a968:	982b883a 	mov	r21,r19
  80a96c:	003f6106 	br	80a6f4 <__alt_data_end+0xff80a6f4>
  80a970:	8805883a 	mov	r2,r17
  80a974:	a007883a 	mov	r3,r20
  80a978:	003f9906 	br	80a7e0 <__alt_data_end+0xff80a7e0>
  80a97c:	8807883a 	mov	r3,r17
  80a980:	a0800017 	ldw	r2,0(r20)
  80a984:	b821883a 	mov	r16,r23
  80a988:	982b883a 	mov	r21,r19
  80a98c:	18800015 	stw	r2,0(r3)
  80a990:	a0800117 	ldw	r2,4(r20)
  80a994:	18800115 	stw	r2,4(r3)
  80a998:	a0800217 	ldw	r2,8(r20)
  80a99c:	18800215 	stw	r2,8(r3)
  80a9a0:	98c00117 	ldw	r3,4(r19)
  80a9a4:	003f5306 	br	80a6f4 <__alt_data_end+0xff80a6f4>
  80a9a8:	adab883a 	add	r21,r21,r22
  80a9ac:	3585c83a 	sub	r2,r6,r22
  80a9b0:	e5400215 	stw	r21,8(fp)
  80a9b4:	10800054 	ori	r2,r2,1
  80a9b8:	a8800115 	stw	r2,4(r21)
  80a9bc:	a0bfff17 	ldw	r2,-4(r20)
  80a9c0:	9009883a 	mov	r4,r18
  80a9c4:	1080004c 	andi	r2,r2,1
  80a9c8:	b0acb03a 	or	r22,r22,r2
  80a9cc:	a5bfff15 	stw	r22,-4(r20)
  80a9d0:	0817cdc0 	call	817cdc <__malloc_unlock>
  80a9d4:	a005883a 	mov	r2,r20
  80a9d8:	003f5306 	br	80a728 <__alt_data_end+0xff80a728>
  80a9dc:	8809883a 	mov	r4,r17
  80a9e0:	a00b883a 	mov	r5,r20
  80a9e4:	08093500 	call	809350 <memmove>
  80a9e8:	003f8306 	br	80a7f8 <__alt_data_end+0xff80a7f8>
  80a9ec:	b0800404 	addi	r2,r22,16
  80a9f0:	b8bf6016 	blt	r23,r2,80a774 <__alt_data_end+0xff80a774>
  80a9f4:	98800317 	ldw	r2,12(r19)
  80a9f8:	98c00217 	ldw	r3,8(r19)
  80a9fc:	81bfff04 	addi	r6,r16,-4
  80aa00:	01000904 	movi	r4,36
  80aa04:	18800315 	stw	r2,12(r3)
  80aa08:	10c00215 	stw	r3,8(r2)
  80aa0c:	9c400204 	addi	r17,r19,8
  80aa10:	21804336 	bltu	r4,r6,80ab20 <_realloc_r+0x50c>
  80aa14:	008004c4 	movi	r2,19
  80aa18:	11803f2e 	bgeu	r2,r6,80ab18 <_realloc_r+0x504>
  80aa1c:	a0800017 	ldw	r2,0(r20)
  80aa20:	98800215 	stw	r2,8(r19)
  80aa24:	a0800117 	ldw	r2,4(r20)
  80aa28:	98800315 	stw	r2,12(r19)
  80aa2c:	008006c4 	movi	r2,27
  80aa30:	11803f36 	bltu	r2,r6,80ab30 <_realloc_r+0x51c>
  80aa34:	98800404 	addi	r2,r19,16
  80aa38:	a5000204 	addi	r20,r20,8
  80aa3c:	a0c00017 	ldw	r3,0(r20)
  80aa40:	10c00015 	stw	r3,0(r2)
  80aa44:	a0c00117 	ldw	r3,4(r20)
  80aa48:	10c00115 	stw	r3,4(r2)
  80aa4c:	a0c00217 	ldw	r3,8(r20)
  80aa50:	10c00215 	stw	r3,8(r2)
  80aa54:	9d87883a 	add	r3,r19,r22
  80aa58:	bd85c83a 	sub	r2,r23,r22
  80aa5c:	e0c00215 	stw	r3,8(fp)
  80aa60:	10800054 	ori	r2,r2,1
  80aa64:	18800115 	stw	r2,4(r3)
  80aa68:	98800117 	ldw	r2,4(r19)
  80aa6c:	9009883a 	mov	r4,r18
  80aa70:	1080004c 	andi	r2,r2,1
  80aa74:	b0acb03a 	or	r22,r22,r2
  80aa78:	9d800115 	stw	r22,4(r19)
  80aa7c:	0817cdc0 	call	817cdc <__malloc_unlock>
  80aa80:	8805883a 	mov	r2,r17
  80aa84:	003f2806 	br	80a728 <__alt_data_end+0xff80a728>
  80aa88:	a0c00217 	ldw	r3,8(r20)
  80aa8c:	88c00215 	stw	r3,8(r17)
  80aa90:	a0c00317 	ldw	r3,12(r20)
  80aa94:	88c00315 	stw	r3,12(r17)
  80aa98:	30801126 	beq	r6,r2,80aae0 <_realloc_r+0x4cc>
  80aa9c:	88800404 	addi	r2,r17,16
  80aaa0:	a0c00404 	addi	r3,r20,16
  80aaa4:	003f4e06 	br	80a7e0 <__alt_data_end+0xff80a7e0>
  80aaa8:	893fff17 	ldw	r4,-4(r17)
  80aaac:	00bfff04 	movi	r2,-4
  80aab0:	a023883a 	mov	r17,r20
  80aab4:	2084703a 	and	r2,r4,r2
  80aab8:	80a1883a 	add	r16,r16,r2
  80aabc:	003f0d06 	br	80a6f4 <__alt_data_end+0xff80a6f4>
  80aac0:	a0800217 	ldw	r2,8(r20)
  80aac4:	98800415 	stw	r2,16(r19)
  80aac8:	a0800317 	ldw	r2,12(r20)
  80aacc:	98800515 	stw	r2,20(r19)
  80aad0:	31000a26 	beq	r6,r4,80aafc <_realloc_r+0x4e8>
  80aad4:	98c00604 	addi	r3,r19,24
  80aad8:	a5000404 	addi	r20,r20,16
  80aadc:	003fa806 	br	80a980 <__alt_data_end+0xff80a980>
  80aae0:	a1000417 	ldw	r4,16(r20)
  80aae4:	88800604 	addi	r2,r17,24
  80aae8:	a0c00604 	addi	r3,r20,24
  80aaec:	89000415 	stw	r4,16(r17)
  80aaf0:	a1000517 	ldw	r4,20(r20)
  80aaf4:	89000515 	stw	r4,20(r17)
  80aaf8:	003f3906 	br	80a7e0 <__alt_data_end+0xff80a7e0>
  80aafc:	a0800417 	ldw	r2,16(r20)
  80ab00:	a5000604 	addi	r20,r20,24
  80ab04:	98c00804 	addi	r3,r19,32
  80ab08:	98800615 	stw	r2,24(r19)
  80ab0c:	a0bfff17 	ldw	r2,-4(r20)
  80ab10:	98800715 	stw	r2,28(r19)
  80ab14:	003f9a06 	br	80a980 <__alt_data_end+0xff80a980>
  80ab18:	8805883a 	mov	r2,r17
  80ab1c:	003fc706 	br	80aa3c <__alt_data_end+0xff80aa3c>
  80ab20:	8809883a 	mov	r4,r17
  80ab24:	a00b883a 	mov	r5,r20
  80ab28:	08093500 	call	809350 <memmove>
  80ab2c:	003fc906 	br	80aa54 <__alt_data_end+0xff80aa54>
  80ab30:	a0800217 	ldw	r2,8(r20)
  80ab34:	98800415 	stw	r2,16(r19)
  80ab38:	a0800317 	ldw	r2,12(r20)
  80ab3c:	98800515 	stw	r2,20(r19)
  80ab40:	31000726 	beq	r6,r4,80ab60 <_realloc_r+0x54c>
  80ab44:	98800604 	addi	r2,r19,24
  80ab48:	a5000404 	addi	r20,r20,16
  80ab4c:	003fbb06 	br	80aa3c <__alt_data_end+0xff80aa3c>
  80ab50:	9009883a 	mov	r4,r18
  80ab54:	0817cdc0 	call	817cdc <__malloc_unlock>
  80ab58:	0005883a 	mov	r2,zero
  80ab5c:	003ef206 	br	80a728 <__alt_data_end+0xff80a728>
  80ab60:	a0c00417 	ldw	r3,16(r20)
  80ab64:	a5000604 	addi	r20,r20,24
  80ab68:	98800804 	addi	r2,r19,32
  80ab6c:	98c00615 	stw	r3,24(r19)
  80ab70:	a0ffff17 	ldw	r3,-4(r20)
  80ab74:	98c00715 	stw	r3,28(r19)
  80ab78:	003fb006 	br	80aa3c <__alt_data_end+0xff80aa3c>

0080ab7c <__fpclassifyd>:
  80ab7c:	00a00034 	movhi	r2,32768
  80ab80:	10bfffc4 	addi	r2,r2,-1
  80ab84:	2884703a 	and	r2,r5,r2
  80ab88:	10000726 	beq	r2,zero,80aba8 <__fpclassifyd+0x2c>
  80ab8c:	00fffc34 	movhi	r3,65520
  80ab90:	019ff834 	movhi	r6,32736
  80ab94:	28c7883a 	add	r3,r5,r3
  80ab98:	31bfffc4 	addi	r6,r6,-1
  80ab9c:	30c00536 	bltu	r6,r3,80abb4 <__fpclassifyd+0x38>
  80aba0:	00800104 	movi	r2,4
  80aba4:	f800283a 	ret
  80aba8:	2000021e 	bne	r4,zero,80abb4 <__fpclassifyd+0x38>
  80abac:	00800084 	movi	r2,2
  80abb0:	f800283a 	ret
  80abb4:	00dffc34 	movhi	r3,32752
  80abb8:	019ff834 	movhi	r6,32736
  80abbc:	28cb883a 	add	r5,r5,r3
  80abc0:	31bfffc4 	addi	r6,r6,-1
  80abc4:	317ff62e 	bgeu	r6,r5,80aba0 <__alt_data_end+0xff80aba0>
  80abc8:	01400434 	movhi	r5,16
  80abcc:	297fffc4 	addi	r5,r5,-1
  80abd0:	28800236 	bltu	r5,r2,80abdc <__fpclassifyd+0x60>
  80abd4:	008000c4 	movi	r2,3
  80abd8:	f800283a 	ret
  80abdc:	10c00226 	beq	r2,r3,80abe8 <__fpclassifyd+0x6c>
  80abe0:	0005883a 	mov	r2,zero
  80abe4:	f800283a 	ret
  80abe8:	2005003a 	cmpeq	r2,r4,zero
  80abec:	f800283a 	ret

0080abf0 <__sccl>:
  80abf0:	2a000003 	ldbu	r8,0(r5)
  80abf4:	00801784 	movi	r2,94
  80abf8:	40802526 	beq	r8,r2,80ac90 <__sccl+0xa0>
  80abfc:	29400044 	addi	r5,r5,1
  80ac00:	000f883a 	mov	r7,zero
  80ac04:	0013883a 	mov	r9,zero
  80ac08:	2007883a 	mov	r3,r4
  80ac0c:	21804004 	addi	r6,r4,256
  80ac10:	19c00005 	stb	r7,0(r3)
  80ac14:	18c00044 	addi	r3,r3,1
  80ac18:	19bffd1e 	bne	r3,r6,80ac10 <__alt_data_end+0xff80ac10>
  80ac1c:	40001026 	beq	r8,zero,80ac60 <__sccl+0x70>
  80ac20:	00800044 	movi	r2,1
  80ac24:	124dc83a 	sub	r6,r2,r9
  80ac28:	02801744 	movi	r10,93
  80ac2c:	02400b44 	movi	r9,45
  80ac30:	2205883a 	add	r2,r4,r8
  80ac34:	11800005 	stb	r6,0(r2)
  80ac38:	28800044 	addi	r2,r5,1
  80ac3c:	28c00003 	ldbu	r3,0(r5)
  80ac40:	1a400926 	beq	r3,r9,80ac68 <__sccl+0x78>
  80ac44:	1a800526 	beq	r3,r10,80ac5c <__sccl+0x6c>
  80ac48:	18000326 	beq	r3,zero,80ac58 <__sccl+0x68>
  80ac4c:	1811883a 	mov	r8,r3
  80ac50:	100b883a 	mov	r5,r2
  80ac54:	003ff606 	br	80ac30 <__alt_data_end+0xff80ac30>
  80ac58:	2805883a 	mov	r2,r5
  80ac5c:	f800283a 	ret
  80ac60:	28bfffc4 	addi	r2,r5,-1
  80ac64:	f800283a 	ret
  80ac68:	11c00003 	ldbu	r7,0(r2)
  80ac6c:	3a800d26 	beq	r7,r10,80aca4 <__sccl+0xb4>
  80ac70:	3a000c16 	blt	r7,r8,80aca4 <__sccl+0xb4>
  80ac74:	29400084 	addi	r5,r5,2
  80ac78:	42000044 	addi	r8,r8,1
  80ac7c:	2207883a 	add	r3,r4,r8
  80ac80:	19800005 	stb	r6,0(r3)
  80ac84:	41fffc16 	blt	r8,r7,80ac78 <__alt_data_end+0xff80ac78>
  80ac88:	10800084 	addi	r2,r2,2
  80ac8c:	003feb06 	br	80ac3c <__alt_data_end+0xff80ac3c>
  80ac90:	2a000043 	ldbu	r8,1(r5)
  80ac94:	01c00044 	movi	r7,1
  80ac98:	29400084 	addi	r5,r5,2
  80ac9c:	02400044 	movi	r9,1
  80aca0:	003fd906 	br	80ac08 <__alt_data_end+0xff80ac08>
  80aca4:	100b883a 	mov	r5,r2
  80aca8:	4811883a 	mov	r8,r9
  80acac:	003fe006 	br	80ac30 <__alt_data_end+0xff80ac30>

0080acb0 <nanf>:
  80acb0:	009ff034 	movhi	r2,32704
  80acb4:	f800283a 	ret

0080acb8 <_sprintf_r>:
  80acb8:	deffe404 	addi	sp,sp,-112
  80acbc:	2807883a 	mov	r3,r5
  80acc0:	dfc01a15 	stw	ra,104(sp)
  80acc4:	d9c01b15 	stw	r7,108(sp)
  80acc8:	00a00034 	movhi	r2,32768
  80accc:	10bfffc4 	addi	r2,r2,-1
  80acd0:	02008204 	movi	r8,520
  80acd4:	d8800215 	stw	r2,8(sp)
  80acd8:	d8800515 	stw	r2,20(sp)
  80acdc:	d80b883a 	mov	r5,sp
  80ace0:	d9c01b04 	addi	r7,sp,108
  80ace4:	00bfffc4 	movi	r2,-1
  80ace8:	d8c00015 	stw	r3,0(sp)
  80acec:	d8c00415 	stw	r3,16(sp)
  80acf0:	da00030d 	sth	r8,12(sp)
  80acf4:	d880038d 	sth	r2,14(sp)
  80acf8:	080e3700 	call	80e370 <___svfprintf_internal_r>
  80acfc:	d8c00017 	ldw	r3,0(sp)
  80ad00:	18000005 	stb	zero,0(r3)
  80ad04:	dfc01a17 	ldw	ra,104(sp)
  80ad08:	dec01c04 	addi	sp,sp,112
  80ad0c:	f800283a 	ret

0080ad10 <sprintf>:
  80ad10:	deffe304 	addi	sp,sp,-116
  80ad14:	2007883a 	mov	r3,r4
  80ad18:	dfc01a15 	stw	ra,104(sp)
  80ad1c:	d9801b15 	stw	r6,108(sp)
  80ad20:	d9c01c15 	stw	r7,112(sp)
  80ad24:	010020b4 	movhi	r4,130
  80ad28:	2137f804 	addi	r4,r4,-8224
  80ad2c:	21000017 	ldw	r4,0(r4)
  80ad30:	00a00034 	movhi	r2,32768
  80ad34:	10bfffc4 	addi	r2,r2,-1
  80ad38:	280d883a 	mov	r6,r5
  80ad3c:	02008204 	movi	r8,520
  80ad40:	d8800215 	stw	r2,8(sp)
  80ad44:	d8800515 	stw	r2,20(sp)
  80ad48:	d80b883a 	mov	r5,sp
  80ad4c:	d9c01b04 	addi	r7,sp,108
  80ad50:	00bfffc4 	movi	r2,-1
  80ad54:	d8c00015 	stw	r3,0(sp)
  80ad58:	d8c00415 	stw	r3,16(sp)
  80ad5c:	da00030d 	sth	r8,12(sp)
  80ad60:	d880038d 	sth	r2,14(sp)
  80ad64:	080e3700 	call	80e370 <___svfprintf_internal_r>
  80ad68:	d8c00017 	ldw	r3,0(sp)
  80ad6c:	18000005 	stb	zero,0(r3)
  80ad70:	dfc01a17 	ldw	ra,104(sp)
  80ad74:	dec01d04 	addi	sp,sp,116
  80ad78:	f800283a 	ret

0080ad7c <strcmp>:
  80ad7c:	2144b03a 	or	r2,r4,r5
  80ad80:	108000cc 	andi	r2,r2,3
  80ad84:	1000171e 	bne	r2,zero,80ade4 <strcmp+0x68>
  80ad88:	20800017 	ldw	r2,0(r4)
  80ad8c:	28c00017 	ldw	r3,0(r5)
  80ad90:	10c0141e 	bne	r2,r3,80ade4 <strcmp+0x68>
  80ad94:	027fbff4 	movhi	r9,65279
  80ad98:	4a7fbfc4 	addi	r9,r9,-257
  80ad9c:	0086303a 	nor	r3,zero,r2
  80ada0:	02202074 	movhi	r8,32897
  80ada4:	1245883a 	add	r2,r2,r9
  80ada8:	42202004 	addi	r8,r8,-32640
  80adac:	10c4703a 	and	r2,r2,r3
  80adb0:	1204703a 	and	r2,r2,r8
  80adb4:	10000226 	beq	r2,zero,80adc0 <strcmp+0x44>
  80adb8:	00001706 	br	80ae18 <strcmp+0x9c>
  80adbc:	1000161e 	bne	r2,zero,80ae18 <strcmp+0x9c>
  80adc0:	21000104 	addi	r4,r4,4
  80adc4:	20c00017 	ldw	r3,0(r4)
  80adc8:	29400104 	addi	r5,r5,4
  80adcc:	29800017 	ldw	r6,0(r5)
  80add0:	1a4f883a 	add	r7,r3,r9
  80add4:	00c4303a 	nor	r2,zero,r3
  80add8:	3884703a 	and	r2,r7,r2
  80addc:	1204703a 	and	r2,r2,r8
  80ade0:	19bff626 	beq	r3,r6,80adbc <__alt_data_end+0xff80adbc>
  80ade4:	20800007 	ldb	r2,0(r4)
  80ade8:	1000051e 	bne	r2,zero,80ae00 <strcmp+0x84>
  80adec:	00000606 	br	80ae08 <strcmp+0x8c>
  80adf0:	21000044 	addi	r4,r4,1
  80adf4:	20800007 	ldb	r2,0(r4)
  80adf8:	29400044 	addi	r5,r5,1
  80adfc:	10000226 	beq	r2,zero,80ae08 <strcmp+0x8c>
  80ae00:	28c00007 	ldb	r3,0(r5)
  80ae04:	10fffa26 	beq	r2,r3,80adf0 <__alt_data_end+0xff80adf0>
  80ae08:	20800003 	ldbu	r2,0(r4)
  80ae0c:	28c00003 	ldbu	r3,0(r5)
  80ae10:	10c5c83a 	sub	r2,r2,r3
  80ae14:	f800283a 	ret
  80ae18:	0005883a 	mov	r2,zero
  80ae1c:	f800283a 	ret

0080ae20 <sulp>:
  80ae20:	defffd04 	addi	sp,sp,-12
  80ae24:	dc400115 	stw	r17,4(sp)
  80ae28:	3023883a 	mov	r17,r6
  80ae2c:	dc000015 	stw	r16,0(sp)
  80ae30:	dfc00215 	stw	ra,8(sp)
  80ae34:	2821883a 	mov	r16,r5
  80ae38:	0809f780 	call	809f78 <__ulp>
  80ae3c:	88000c26 	beq	r17,zero,80ae70 <sulp+0x50>
  80ae40:	841ffc2c 	andhi	r16,r16,32752
  80ae44:	8020d53a 	srli	r16,r16,20
  80ae48:	01c01ac4 	movi	r7,107
  80ae4c:	3c21c83a 	sub	r16,r7,r16
  80ae50:	0400070e 	bge	zero,r16,80ae70 <sulp+0x50>
  80ae54:	8020953a 	slli	r16,r16,20
  80ae58:	01cffc34 	movhi	r7,16368
  80ae5c:	1009883a 	mov	r4,r2
  80ae60:	180b883a 	mov	r5,r3
  80ae64:	000d883a 	mov	r6,zero
  80ae68:	81cf883a 	add	r7,r16,r7
  80ae6c:	08161600 	call	816160 <__muldf3>
  80ae70:	dfc00217 	ldw	ra,8(sp)
  80ae74:	dc400117 	ldw	r17,4(sp)
  80ae78:	dc000017 	ldw	r16,0(sp)
  80ae7c:	dec00304 	addi	sp,sp,12
  80ae80:	f800283a 	ret

0080ae84 <_strtod_r>:
  80ae84:	deffe104 	addi	sp,sp,-124
  80ae88:	dd801b15 	stw	r22,108(sp)
  80ae8c:	dd001915 	stw	r20,100(sp)
  80ae90:	dcc01815 	stw	r19,96(sp)
  80ae94:	dc801715 	stw	r18,92(sp)
  80ae98:	dc401615 	stw	r17,88(sp)
  80ae9c:	dc001515 	stw	r16,84(sp)
  80aea0:	dfc01e15 	stw	ra,120(sp)
  80aea4:	df001d15 	stw	fp,116(sp)
  80aea8:	ddc01c15 	stw	r23,112(sp)
  80aeac:	dd401a15 	stw	r21,104(sp)
  80aeb0:	d8000515 	stw	zero,20(sp)
  80aeb4:	d9400615 	stw	r5,24(sp)
  80aeb8:	2829883a 	mov	r20,r5
  80aebc:	a0800003 	ldbu	r2,0(r20)
  80aec0:	01c02074 	movhi	r7,129
  80aec4:	2021883a 	mov	r16,r4
  80aec8:	10c03fcc 	andi	r3,r2,255
  80aecc:	01000b44 	movi	r4,45
  80aed0:	39ebbe04 	addi	r7,r7,-20744
  80aed4:	282d883a 	mov	r22,r5
  80aed8:	3027883a 	mov	r19,r6
  80aedc:	0025883a 	mov	r18,zero
  80aee0:	0023883a 	mov	r17,zero
  80aee4:	20c0bd36 	bltu	r4,r3,80b1dc <_strtod_r+0x358>
  80aee8:	180690ba 	slli	r3,r3,2
  80aeec:	19c7883a 	add	r3,r3,r7
  80aef0:	18c00017 	ldw	r3,0(r3)
  80aef4:	1800683a 	jmp	r3
  80aef8:	0080afb8 	rdprs	r2,zero,702
  80aefc:	0080b1dc 	xori	r2,zero,711
  80af00:	0080b1dc 	xori	r2,zero,711
  80af04:	0080b1dc 	xori	r2,zero,711
  80af08:	0080b1dc 	xori	r2,zero,711
  80af0c:	0080b1dc 	xori	r2,zero,711
  80af10:	0080b1dc 	xori	r2,zero,711
  80af14:	0080b1dc 	xori	r2,zero,711
  80af18:	0080b1dc 	xori	r2,zero,711
  80af1c:	0080b1c8 	cmpgei	r2,zero,711
  80af20:	0080b1c8 	cmpgei	r2,zero,711
  80af24:	0080b1c8 	cmpgei	r2,zero,711
  80af28:	0080b1c8 	cmpgei	r2,zero,711
  80af2c:	0080b1c8 	cmpgei	r2,zero,711
  80af30:	0080b1dc 	xori	r2,zero,711
  80af34:	0080b1dc 	xori	r2,zero,711
  80af38:	0080b1dc 	xori	r2,zero,711
  80af3c:	0080b1dc 	xori	r2,zero,711
  80af40:	0080b1dc 	xori	r2,zero,711
  80af44:	0080b1dc 	xori	r2,zero,711
  80af48:	0080b1dc 	xori	r2,zero,711
  80af4c:	0080b1dc 	xori	r2,zero,711
  80af50:	0080b1dc 	xori	r2,zero,711
  80af54:	0080b1dc 	xori	r2,zero,711
  80af58:	0080b1dc 	xori	r2,zero,711
  80af5c:	0080b1dc 	xori	r2,zero,711
  80af60:	0080b1dc 	xori	r2,zero,711
  80af64:	0080b1dc 	xori	r2,zero,711
  80af68:	0080b1dc 	xori	r2,zero,711
  80af6c:	0080b1dc 	xori	r2,zero,711
  80af70:	0080b1dc 	xori	r2,zero,711
  80af74:	0080b1dc 	xori	r2,zero,711
  80af78:	0080b1c8 	cmpgei	r2,zero,711
  80af7c:	0080b1dc 	xori	r2,zero,711
  80af80:	0080b1dc 	xori	r2,zero,711
  80af84:	0080b1dc 	xori	r2,zero,711
  80af88:	0080b1dc 	xori	r2,zero,711
  80af8c:	0080b1dc 	xori	r2,zero,711
  80af90:	0080b1dc 	xori	r2,zero,711
  80af94:	0080b1dc 	xori	r2,zero,711
  80af98:	0080b1dc 	xori	r2,zero,711
  80af9c:	0080b1dc 	xori	r2,zero,711
  80afa0:	0080b1dc 	xori	r2,zero,711
  80afa4:	0080b010 	cmplti	r2,zero,704
  80afa8:	0080b1dc 	xori	r2,zero,711
  80afac:	0080b1b8 	rdprs	r2,zero,710
  80afb0:	00801244 	movi	r2,73
  80afb4:	90844026 	beq	r18,r2,80c0b8 <_strtod_r+0x1234>
  80afb8:	002b883a 	mov	r21,zero
  80afbc:	002f883a 	mov	r23,zero
  80afc0:	98000526 	beq	r19,zero,80afd8 <_strtod_r+0x154>
  80afc4:	d8000715 	stw	zero,28(sp)
  80afc8:	9d800015 	stw	r22,0(r19)
  80afcc:	d8c00717 	ldw	r3,28(sp)
  80afd0:	18000126 	beq	r3,zero,80afd8 <_strtod_r+0x154>
  80afd4:	bde0003c 	xorhi	r23,r23,32768
  80afd8:	a805883a 	mov	r2,r21
  80afdc:	b807883a 	mov	r3,r23
  80afe0:	dfc01e17 	ldw	ra,120(sp)
  80afe4:	df001d17 	ldw	fp,116(sp)
  80afe8:	ddc01c17 	ldw	r23,112(sp)
  80afec:	dd801b17 	ldw	r22,108(sp)
  80aff0:	dd401a17 	ldw	r21,104(sp)
  80aff4:	dd001917 	ldw	r20,100(sp)
  80aff8:	dcc01817 	ldw	r19,96(sp)
  80affc:	dc801717 	ldw	r18,92(sp)
  80b000:	dc401617 	ldw	r17,88(sp)
  80b004:	dc001517 	ldw	r16,84(sp)
  80b008:	dec01f04 	addi	sp,sp,124
  80b00c:	f800283a 	ret
  80b010:	a005883a 	mov	r2,r20
  80b014:	d8000715 	stw	zero,28(sp)
  80b018:	a5000044 	addi	r20,r20,1
  80b01c:	dd000615 	stw	r20,24(sp)
  80b020:	10800043 	ldbu	r2,1(r2)
  80b024:	10c03fcc 	andi	r3,r2,255
  80b028:	18c0201c 	xori	r3,r3,128
  80b02c:	18ffe004 	addi	r3,r3,-128
  80b030:	183fe126 	beq	r3,zero,80afb8 <__alt_data_end+0xff80afb8>
  80b034:	11403fcc 	andi	r5,r2,255
  80b038:	2940201c 	xori	r5,r5,128
  80b03c:	297fe004 	addi	r5,r5,-128
  80b040:	00c00c04 	movi	r3,48
  80b044:	28c0f226 	beq	r5,r3,80b410 <_strtod_r+0x58c>
  80b048:	d8000815 	stw	zero,32(sp)
  80b04c:	10fff404 	addi	r3,r2,-48
  80b050:	18c03fcc 	andi	r3,r3,255
  80b054:	01800244 	movi	r6,9
  80b058:	30c38d36 	bltu	r6,r3,80be90 <_strtod_r+0x100c>
  80b05c:	a1400044 	addi	r5,r20,1
  80b060:	0039883a 	mov	fp,zero
  80b064:	002f883a 	mov	r23,zero
  80b068:	002b883a 	mov	r21,zero
  80b06c:	02400204 	movi	r9,8
  80b070:	4d405c16 	blt	r9,r21,80b1e4 <_strtod_r+0x360>
  80b074:	bdc002a4 	muli	r23,r23,10
  80b078:	10c03fcc 	andi	r3,r2,255
  80b07c:	18c0201c 	xori	r3,r3,128
  80b080:	18ffe004 	addi	r3,r3,-128
  80b084:	b8ef883a 	add	r23,r23,r3
  80b088:	bdfff404 	addi	r23,r23,-48
  80b08c:	d9400615 	stw	r5,24(sp)
  80b090:	28800003 	ldbu	r2,0(r5)
  80b094:	2823883a 	mov	r17,r5
  80b098:	ad400044 	addi	r21,r21,1
  80b09c:	10fff404 	addi	r3,r2,-48
  80b0a0:	18c03fcc 	andi	r3,r3,255
  80b0a4:	29400044 	addi	r5,r5,1
  80b0a8:	30fff12e 	bgeu	r6,r3,80b070 <__alt_data_end+0xff80b070>
  80b0ac:	14803fcc 	andi	r18,r2,255
  80b0b0:	9480201c 	xori	r18,r18,128
  80b0b4:	94bfe004 	addi	r18,r18,-128
  80b0b8:	8009883a 	mov	r4,r16
  80b0bc:	0808e7c0 	call	808e7c <_localeconv_r>
  80b0c0:	11400017 	ldw	r5,0(r2)
  80b0c4:	8009883a 	mov	r4,r16
  80b0c8:	d9401315 	stw	r5,76(sp)
  80b0cc:	0808e7c0 	call	808e7c <_localeconv_r>
  80b0d0:	11000017 	ldw	r4,0(r2)
  80b0d4:	08034f40 	call	8034f4 <strlen>
  80b0d8:	d9401317 	ldw	r5,76(sp)
  80b0dc:	8809883a 	mov	r4,r17
  80b0e0:	100d883a 	mov	r6,r2
  80b0e4:	08129d40 	call	8129d4 <strncmp>
  80b0e8:	1000db26 	beq	r2,zero,80b458 <_strtod_r+0x5d4>
  80b0ec:	a811883a 	mov	r8,r21
  80b0f0:	000b883a 	mov	r5,zero
  80b0f4:	0013883a 	mov	r9,zero
  80b0f8:	0015883a 	mov	r10,zero
  80b0fc:	00801944 	movi	r2,101
  80b100:	90804226 	beq	r18,r2,80b20c <_strtod_r+0x388>
  80b104:	00801144 	movi	r2,69
  80b108:	90804026 	beq	r18,r2,80b20c <_strtod_r+0x388>
  80b10c:	000f883a 	mov	r7,zero
  80b110:	40007d1e 	bne	r8,zero,80b308 <_strtod_r+0x484>
  80b114:	28003a1e 	bne	r5,zero,80b200 <_strtod_r+0x37c>
  80b118:	d8c00817 	ldw	r3,32(sp)
  80b11c:	1800381e 	bne	r3,zero,80b200 <_strtod_r+0x37c>
  80b120:	503fa51e 	bne	r10,zero,80afb8 <__alt_data_end+0xff80afb8>
  80b124:	00801384 	movi	r2,78
  80b128:	90800526 	beq	r18,r2,80b140 <_strtod_r+0x2bc>
  80b12c:	14bfa00e 	bge	r2,r18,80afb0 <__alt_data_end+0xff80afb0>
  80b130:	00801a44 	movi	r2,105
  80b134:	9083e026 	beq	r18,r2,80c0b8 <_strtod_r+0x1234>
  80b138:	00801b84 	movi	r2,110
  80b13c:	90bf9e1e 	bne	r18,r2,80afb8 <__alt_data_end+0xff80afb8>
  80b140:	014020b4 	movhi	r5,130
  80b144:	d9000617 	ldw	r4,24(sp)
  80b148:	296fe304 	addi	r5,r5,-16500
  80b14c:	01c00644 	movi	r7,25
  80b150:	00000b06 	br	80b180 <_strtod_r+0x2fc>
  80b154:	21000044 	addi	r4,r4,1
  80b158:	20800003 	ldbu	r2,0(r4)
  80b15c:	10ffefc4 	addi	r3,r2,-65
  80b160:	10803fcc 	andi	r2,r2,255
  80b164:	1080201c 	xori	r2,r2,128
  80b168:	18c03fcc 	andi	r3,r3,255
  80b16c:	10bfe004 	addi	r2,r2,-128
  80b170:	38c00136 	bltu	r7,r3,80b178 <_strtod_r+0x2f4>
  80b174:	10800804 	addi	r2,r2,32
  80b178:	29400044 	addi	r5,r5,1
  80b17c:	11bf8e1e 	bne	r2,r6,80afb8 <__alt_data_end+0xff80afb8>
  80b180:	29800007 	ldb	r6,0(r5)
  80b184:	303ff31e 	bne	r6,zero,80b154 <__alt_data_end+0xff80b154>
  80b188:	20800044 	addi	r2,r4,1
  80b18c:	d8800615 	stw	r2,24(sp)
  80b190:	20c00047 	ldb	r3,1(r4)
  80b194:	00800a04 	movi	r2,40
  80b198:	18849b26 	beq	r3,r2,80c408 <_strtod_r+0x1584>
  80b19c:	047ffe34 	movhi	r17,65528
  80b1a0:	0025883a 	mov	r18,zero
  80b1a4:	902b883a 	mov	r21,r18
  80b1a8:	882f883a 	mov	r23,r17
  80b1ac:	983f8726 	beq	r19,zero,80afcc <__alt_data_end+0xff80afcc>
  80b1b0:	dd800617 	ldw	r22,24(sp)
  80b1b4:	003f8406 	br	80afc8 <__alt_data_end+0xff80afc8>
  80b1b8:	00c00044 	movi	r3,1
  80b1bc:	a005883a 	mov	r2,r20
  80b1c0:	d8c00715 	stw	r3,28(sp)
  80b1c4:	003f9406 	br	80b018 <__alt_data_end+0xff80b018>
  80b1c8:	a5000044 	addi	r20,r20,1
  80b1cc:	dd000615 	stw	r20,24(sp)
  80b1d0:	a0800003 	ldbu	r2,0(r20)
  80b1d4:	10c03fcc 	andi	r3,r2,255
  80b1d8:	20ff432e 	bgeu	r4,r3,80aee8 <__alt_data_end+0xff80aee8>
  80b1dc:	d8000715 	stw	zero,28(sp)
  80b1e0:	003f9406 	br	80b034 <__alt_data_end+0xff80b034>
  80b1e4:	e70002a4 	muli	fp,fp,10
  80b1e8:	10803fcc 	andi	r2,r2,255
  80b1ec:	1080201c 	xori	r2,r2,128
  80b1f0:	10bfe004 	addi	r2,r2,-128
  80b1f4:	e085883a 	add	r2,fp,r2
  80b1f8:	173ff404 	addi	fp,r2,-48
  80b1fc:	003fa306 	br	80b08c <__alt_data_end+0xff80b08c>
  80b200:	002b883a 	mov	r21,zero
  80b204:	002f883a 	mov	r23,zero
  80b208:	003fe806 	br	80b1ac <__alt_data_end+0xff80b1ac>
  80b20c:	40007b26 	beq	r8,zero,80b3fc <_strtod_r+0x578>
  80b210:	dd800617 	ldw	r22,24(sp)
  80b214:	00c00ac4 	movi	r3,43
  80b218:	b0800044 	addi	r2,r22,1
  80b21c:	d8800615 	stw	r2,24(sp)
  80b220:	b0800047 	ldb	r2,1(r22)
  80b224:	10c1f926 	beq	r2,r3,80ba0c <_strtod_r+0xb88>
  80b228:	00c00b44 	movi	r3,45
  80b22c:	10c1f226 	beq	r2,r3,80b9f8 <_strtod_r+0xb74>
  80b230:	1025883a 	mov	r18,r2
  80b234:	000f883a 	mov	r7,zero
  80b238:	90fff404 	addi	r3,r18,-48
  80b23c:	01000244 	movi	r4,9
  80b240:	9005883a 	mov	r2,r18
  80b244:	20c1c136 	bltu	r4,r3,80b94c <_strtod_r+0xac8>
  80b248:	00c00c04 	movi	r3,48
  80b24c:	90c0071e 	bne	r18,r3,80b26c <_strtod_r+0x3e8>
  80b250:	d8c00617 	ldw	r3,24(sp)
  80b254:	18c00044 	addi	r3,r3,1
  80b258:	d8c00615 	stw	r3,24(sp)
  80b25c:	18800007 	ldb	r2,0(r3)
  80b260:	18c00044 	addi	r3,r3,1
  80b264:	14bffc26 	beq	r2,r18,80b258 <__alt_data_end+0xff80b258>
  80b268:	1025883a 	mov	r18,r2
  80b26c:	10bff3c4 	addi	r2,r2,-49
  80b270:	00c00204 	movi	r3,8
  80b274:	18bfa536 	bltu	r3,r2,80b10c <__alt_data_end+0xff80b10c>
  80b278:	db400617 	ldw	r13,24(sp)
  80b27c:	90bff404 	addi	r2,r18,-48
  80b280:	03000244 	movi	r12,9
  80b284:	6ac00044 	addi	r11,r13,1
  80b288:	dac00615 	stw	r11,24(sp)
  80b28c:	6c800043 	ldbu	r18,1(r13)
  80b290:	90fff404 	addi	r3,r18,-48
  80b294:	94803fcc 	andi	r18,r18,255
  80b298:	9480201c 	xori	r18,r18,128
  80b29c:	18c03fcc 	andi	r3,r3,255
  80b2a0:	94bfe004 	addi	r18,r18,-128
  80b2a4:	60c00e36 	bltu	r12,r3,80b2e0 <_strtod_r+0x45c>
  80b2a8:	69000084 	addi	r4,r13,2
  80b2ac:	d9000615 	stw	r4,24(sp)
  80b2b0:	108002a4 	muli	r2,r2,10
  80b2b4:	21800003 	ldbu	r6,0(r4)
  80b2b8:	2017883a 	mov	r11,r4
  80b2bc:	14a5883a 	add	r18,r2,r18
  80b2c0:	30fff404 	addi	r3,r6,-48
  80b2c4:	90bff404 	addi	r2,r18,-48
  80b2c8:	34803fcc 	andi	r18,r6,255
  80b2cc:	9480201c 	xori	r18,r18,128
  80b2d0:	18c03fcc 	andi	r3,r3,255
  80b2d4:	94bfe004 	addi	r18,r18,-128
  80b2d8:	21000044 	addi	r4,r4,1
  80b2dc:	60fff32e 	bgeu	r12,r3,80b2ac <__alt_data_end+0xff80b2ac>
  80b2e0:	5b57c83a 	sub	r11,r11,r13
  80b2e4:	00c00204 	movi	r3,8
  80b2e8:	1ac2e316 	blt	r3,r11,80be78 <_strtod_r+0xff4>
  80b2ec:	00d387c4 	movi	r3,19999
  80b2f0:	1880010e 	bge	r3,r2,80b2f8 <_strtod_r+0x474>
  80b2f4:	1805883a 	mov	r2,r3
  80b2f8:	01c7c83a 	sub	r3,zero,r7
  80b2fc:	10c4f03a 	xor	r2,r2,r3
  80b300:	11cf883a 	add	r7,r2,r7
  80b304:	403f8326 	beq	r8,zero,80b114 <__alt_data_end+0xff80b114>
  80b308:	3a53c83a 	sub	r9,r7,r9
  80b30c:	da400915 	stw	r9,36(sp)
  80b310:	a800011e 	bne	r21,zero,80b318 <_strtod_r+0x494>
  80b314:	402b883a 	mov	r21,r8
  80b318:	00800404 	movi	r2,16
  80b31c:	402d883a 	mov	r22,r8
  80b320:	1200010e 	bge	r2,r8,80b328 <_strtod_r+0x4a4>
  80b324:	102d883a 	mov	r22,r2
  80b328:	b809883a 	mov	r4,r23
  80b32c:	da001415 	stw	r8,80(sp)
  80b330:	08172ac0 	call	8172ac <__floatunsidf>
  80b334:	1025883a 	mov	r18,r2
  80b338:	00800244 	movi	r2,9
  80b33c:	1823883a 	mov	r17,r3
  80b340:	da001417 	ldw	r8,80(sp)
  80b344:	1580160e 	bge	r2,r22,80b3a0 <_strtod_r+0x51c>
  80b348:	b0bffdc4 	addi	r2,r22,-9
  80b34c:	100490fa 	slli	r2,r2,3
  80b350:	180b883a 	mov	r5,r3
  80b354:	00c020b4 	movhi	r3,130
  80b358:	18efae04 	addi	r3,r3,-16712
  80b35c:	1885883a 	add	r2,r3,r2
  80b360:	11800017 	ldw	r6,0(r2)
  80b364:	11c00117 	ldw	r7,4(r2)
  80b368:	9009883a 	mov	r4,r18
  80b36c:	08161600 	call	816160 <__muldf3>
  80b370:	e009883a 	mov	r4,fp
  80b374:	1025883a 	mov	r18,r2
  80b378:	1823883a 	mov	r17,r3
  80b37c:	08172ac0 	call	8172ac <__floatunsidf>
  80b380:	9009883a 	mov	r4,r18
  80b384:	880b883a 	mov	r5,r17
  80b388:	100d883a 	mov	r6,r2
  80b38c:	180f883a 	mov	r7,r3
  80b390:	0814db40 	call	814db4 <__adddf3>
  80b394:	da001417 	ldw	r8,80(sp)
  80b398:	1025883a 	mov	r18,r2
  80b39c:	1823883a 	mov	r17,r3
  80b3a0:	008003c4 	movi	r2,15
  80b3a4:	12004b16 	blt	r2,r8,80b4d4 <_strtod_r+0x650>
  80b3a8:	d9000917 	ldw	r4,36(sp)
  80b3ac:	203f7d26 	beq	r4,zero,80b1a4 <__alt_data_end+0xff80b1a4>
  80b3b0:	d8c00917 	ldw	r3,36(sp)
  80b3b4:	00c32c0e 	bge	zero,r3,80c068 <_strtod_r+0x11e4>
  80b3b8:	d9000917 	ldw	r4,36(sp)
  80b3bc:	00c00584 	movi	r3,22
  80b3c0:	1902bb16 	blt	r3,r4,80beb0 <_strtod_r+0x102c>
  80b3c4:	200490fa 	slli	r2,r4,3
  80b3c8:	00c020b4 	movhi	r3,130
  80b3cc:	18efae04 	addi	r3,r3,-16712
  80b3d0:	1885883a 	add	r2,r3,r2
  80b3d4:	11000017 	ldw	r4,0(r2)
  80b3d8:	11400117 	ldw	r5,4(r2)
  80b3dc:	900d883a 	mov	r6,r18
  80b3e0:	880f883a 	mov	r7,r17
  80b3e4:	08161600 	call	816160 <__muldf3>
  80b3e8:	102b883a 	mov	r21,r2
  80b3ec:	182f883a 	mov	r23,r3
  80b3f0:	003f6e06 	br	80b1ac <__alt_data_end+0xff80b1ac>
  80b3f4:	0013883a 	mov	r9,zero
  80b3f8:	02800044 	movi	r10,1
  80b3fc:	2800021e 	bne	r5,zero,80b408 <_strtod_r+0x584>
  80b400:	d8c00817 	ldw	r3,32(sp)
  80b404:	183eec26 	beq	r3,zero,80afb8 <__alt_data_end+0xff80afb8>
  80b408:	0011883a 	mov	r8,zero
  80b40c:	003f8006 	br	80b210 <__alt_data_end+0xff80b210>
  80b410:	a0800047 	ldb	r2,1(r20)
  80b414:	00c01604 	movi	r3,88
  80b418:	10c1e626 	beq	r2,r3,80bbb4 <_strtod_r+0xd30>
  80b41c:	00c01e04 	movi	r3,120
  80b420:	10c1e426 	beq	r2,r3,80bbb4 <_strtod_r+0xd30>
  80b424:	a0c00044 	addi	r3,r20,1
  80b428:	1829883a 	mov	r20,r3
  80b42c:	d8c00615 	stw	r3,24(sp)
  80b430:	18c00044 	addi	r3,r3,1
  80b434:	18bfffc3 	ldbu	r2,-1(r3)
  80b438:	11003fcc 	andi	r4,r2,255
  80b43c:	2100201c 	xori	r4,r4,128
  80b440:	213fe004 	addi	r4,r4,-128
  80b444:	217ff826 	beq	r4,r5,80b428 <__alt_data_end+0xff80b428>
  80b448:	203f6d26 	beq	r4,zero,80b200 <__alt_data_end+0xff80b200>
  80b44c:	00c00044 	movi	r3,1
  80b450:	d8c00815 	stw	r3,32(sp)
  80b454:	003efd06 	br	80b04c <__alt_data_end+0xff80b04c>
  80b458:	8009883a 	mov	r4,r16
  80b45c:	0808e7c0 	call	808e7c <_localeconv_r>
  80b460:	11000017 	ldw	r4,0(r2)
  80b464:	08034f40 	call	8034f4 <strlen>
  80b468:	d8c00617 	ldw	r3,24(sp)
  80b46c:	1885883a 	add	r2,r3,r2
  80b470:	d8800615 	stw	r2,24(sp)
  80b474:	14800007 	ldb	r18,0(r2)
  80b478:	a801501e 	bne	r21,zero,80b9bc <_strtod_r+0xb38>
  80b47c:	00c00c04 	movi	r3,48
  80b480:	90c3891e 	bne	r18,r3,80c2a8 <_strtod_r+0x1424>
  80b484:	10c00044 	addi	r3,r2,1
  80b488:	9009883a 	mov	r4,r18
  80b48c:	d8c00615 	stw	r3,24(sp)
  80b490:	1c800007 	ldb	r18,0(r3)
  80b494:	188bc83a 	sub	r5,r3,r2
  80b498:	18c00044 	addi	r3,r3,1
  80b49c:	913ffb26 	beq	r18,r4,80b48c <__alt_data_end+0xff80b48c>
  80b4a0:	90bff3c4 	addi	r2,r18,-49
  80b4a4:	00c00204 	movi	r3,8
  80b4a8:	18819d36 	bltu	r3,r2,80bb20 <_strtod_r+0xc9c>
  80b4ac:	dd000617 	ldw	r20,24(sp)
  80b4b0:	90bff404 	addi	r2,r18,-48
  80b4b4:	2a400044 	addi	r9,r5,1
  80b4b8:	a007883a 	mov	r3,r20
  80b4bc:	02000044 	movi	r8,1
  80b4c0:	b9c002a4 	muli	r7,r23,10
  80b4c4:	1809883a 	mov	r4,r3
  80b4c8:	000b883a 	mov	r5,zero
  80b4cc:	11ef883a 	add	r23,r2,r7
  80b4d0:	00014506 	br	80b9e8 <_strtod_r+0xb64>
  80b4d4:	d9000917 	ldw	r4,36(sp)
  80b4d8:	45adc83a 	sub	r22,r8,r22
  80b4dc:	25ad883a 	add	r22,r4,r22
  80b4e0:	05821f0e 	bge	zero,r22,80bd60 <_strtod_r+0xedc>
  80b4e4:	b08003cc 	andi	r2,r22,15
  80b4e8:	10000d26 	beq	r2,zero,80b520 <_strtod_r+0x69c>
  80b4ec:	100490fa 	slli	r2,r2,3
  80b4f0:	00c020b4 	movhi	r3,130
  80b4f4:	18efae04 	addi	r3,r3,-16712
  80b4f8:	1885883a 	add	r2,r3,r2
  80b4fc:	11000017 	ldw	r4,0(r2)
  80b500:	11400117 	ldw	r5,4(r2)
  80b504:	900d883a 	mov	r6,r18
  80b508:	880f883a 	mov	r7,r17
  80b50c:	da001415 	stw	r8,80(sp)
  80b510:	08161600 	call	816160 <__muldf3>
  80b514:	da001417 	ldw	r8,80(sp)
  80b518:	1025883a 	mov	r18,r2
  80b51c:	1823883a 	mov	r17,r3
  80b520:	073ffc04 	movi	fp,-16
  80b524:	b72c703a 	and	r22,r22,fp
  80b528:	b0013c1e 	bne	r22,zero,80ba1c <_strtod_r+0xb98>
  80b52c:	d8000815 	stw	zero,32(sp)
  80b530:	ddc00015 	stw	r23,0(sp)
  80b534:	8009883a 	mov	r4,r16
  80b538:	a00b883a 	mov	r5,r20
  80b53c:	a80d883a 	mov	r6,r21
  80b540:	400f883a 	mov	r7,r8
  80b544:	080969c0 	call	80969c <__s2b>
  80b548:	d8800a15 	stw	r2,40(sp)
  80b54c:	1001ad26 	beq	r2,zero,80bc04 <_strtod_r+0xd80>
  80b550:	d9000917 	ldw	r4,36(sp)
  80b554:	0011883a 	mov	r8,zero
  80b558:	dcc01215 	stw	r19,72(sp)
  80b55c:	2005d7fa 	srai	r2,r4,31
  80b560:	0107c83a 	sub	r3,zero,r4
  80b564:	0029883a 	mov	r20,zero
  80b568:	10c4703a 	and	r2,r2,r3
  80b56c:	d8800c15 	stw	r2,48(sp)
  80b570:	d8800a17 	ldw	r2,40(sp)
  80b574:	4027883a 	mov	r19,r8
  80b578:	10800304 	addi	r2,r2,12
  80b57c:	d8800f15 	stw	r2,60(sp)
  80b580:	d8c00a17 	ldw	r3,40(sp)
  80b584:	8009883a 	mov	r4,r16
  80b588:	19400117 	ldw	r5,4(r3)
  80b58c:	08094ac0 	call	8094ac <_Balloc>
  80b590:	1039883a 	mov	fp,r2
  80b594:	10016b26 	beq	r2,zero,80bb44 <_strtod_r+0xcc0>
  80b598:	d9000a17 	ldw	r4,40(sp)
  80b59c:	d9400f17 	ldw	r5,60(sp)
  80b5a0:	21800417 	ldw	r6,16(r4)
  80b5a4:	11000304 	addi	r4,r2,12
  80b5a8:	31800084 	addi	r6,r6,2
  80b5ac:	318d883a 	add	r6,r6,r6
  80b5b0:	318d883a 	add	r6,r6,r6
  80b5b4:	08092180 	call	809218 <memcpy>
  80b5b8:	d8800204 	addi	r2,sp,8
  80b5bc:	8009883a 	mov	r4,r16
  80b5c0:	d8800015 	stw	r2,0(sp)
  80b5c4:	900b883a 	mov	r5,r18
  80b5c8:	880d883a 	mov	r6,r17
  80b5cc:	d9c00404 	addi	r7,sp,16
  80b5d0:	080a0f40 	call	80a0f4 <__d2b>
  80b5d4:	d8800515 	stw	r2,20(sp)
  80b5d8:	dc801115 	stw	r18,68(sp)
  80b5dc:	dc401015 	stw	r17,64(sp)
  80b5e0:	10017126 	beq	r2,zero,80bba8 <_strtod_r+0xd24>
  80b5e4:	8009883a 	mov	r4,r16
  80b5e8:	01400044 	movi	r5,1
  80b5ec:	08098b80 	call	8098b8 <__i2b>
  80b5f0:	1029883a 	mov	r20,r2
  80b5f4:	10015326 	beq	r2,zero,80bb44 <_strtod_r+0xcc0>
  80b5f8:	d8c00917 	ldw	r3,36(sp)
  80b5fc:	002b883a 	mov	r21,zero
  80b600:	00c0010e 	bge	zero,r3,80b608 <_strtod_r+0x784>
  80b604:	182b883a 	mov	r21,r3
  80b608:	d9000417 	ldw	r4,16(sp)
  80b60c:	2000c516 	blt	r4,zero,80b924 <_strtod_r+0xaa0>
  80b610:	d8800c17 	ldw	r2,48(sp)
  80b614:	a807883a 	mov	r3,r21
  80b618:	112d883a 	add	r22,r2,r4
  80b61c:	d8800817 	ldw	r2,32(sp)
  80b620:	d9800217 	ldw	r6,8(sp)
  80b624:	05ff00c4 	movi	r23,-1021
  80b628:	2089c83a 	sub	r4,r4,r2
  80b62c:	218b883a 	add	r5,r4,r6
  80b630:	01000d84 	movi	r4,54
  80b634:	2185c83a 	sub	r2,r4,r6
  80b638:	2dc0a90e 	bge	r5,r23,80b8e0 <_strtod_r+0xa5c>
  80b63c:	b96fc83a 	sub	r23,r23,r5
  80b640:	010007c4 	movi	r4,31
  80b644:	15c5c83a 	sub	r2,r2,r23
  80b648:	25c0b916 	blt	r4,r23,80b930 <_strtod_r+0xaac>
  80b64c:	01000044 	movi	r4,1
  80b650:	25c8983a 	sll	r4,r4,r23
  80b654:	d8000b15 	stw	zero,44(sp)
  80b658:	d9000d15 	stw	r4,52(sp)
  80b65c:	b091883a 	add	r8,r22,r2
  80b660:	1887883a 	add	r3,r3,r2
  80b664:	d8800817 	ldw	r2,32(sp)
  80b668:	18af883a 	add	r23,r3,r2
  80b66c:	4005883a 	mov	r2,r8
  80b670:	b200010e 	bge	r22,r8,80b678 <_strtod_r+0x7f4>
  80b674:	b005883a 	mov	r2,r22
  80b678:	b880010e 	bge	r23,r2,80b680 <_strtod_r+0x7fc>
  80b67c:	b805883a 	mov	r2,r23
  80b680:	0080030e 	bge	zero,r2,80b690 <_strtod_r+0x80c>
  80b684:	4091c83a 	sub	r8,r8,r2
  80b688:	b8afc83a 	sub	r23,r23,r2
  80b68c:	b0adc83a 	sub	r22,r22,r2
  80b690:	d8c00c17 	ldw	r3,48(sp)
  80b694:	18001726 	beq	r3,zero,80b6f4 <_strtod_r+0x870>
  80b698:	a00b883a 	mov	r5,r20
  80b69c:	8009883a 	mov	r4,r16
  80b6a0:	180d883a 	mov	r6,r3
  80b6a4:	da001415 	stw	r8,80(sp)
  80b6a8:	0809af00 	call	809af0 <__pow5mult>
  80b6ac:	1029883a 	mov	r20,r2
  80b6b0:	da001417 	ldw	r8,80(sp)
  80b6b4:	10012326 	beq	r2,zero,80bb44 <_strtod_r+0xcc0>
  80b6b8:	d9800517 	ldw	r6,20(sp)
  80b6bc:	8009883a 	mov	r4,r16
  80b6c0:	100b883a 	mov	r5,r2
  80b6c4:	da001415 	stw	r8,80(sp)
  80b6c8:	08098f40 	call	8098f4 <__multiply>
  80b6cc:	da001417 	ldw	r8,80(sp)
  80b6d0:	10011c26 	beq	r2,zero,80bb44 <_strtod_r+0xcc0>
  80b6d4:	d9400517 	ldw	r5,20(sp)
  80b6d8:	8009883a 	mov	r4,r16
  80b6dc:	d8801315 	stw	r2,76(sp)
  80b6e0:	da001415 	stw	r8,80(sp)
  80b6e4:	08095540 	call	809554 <_Bfree>
  80b6e8:	d8801317 	ldw	r2,76(sp)
  80b6ec:	da001417 	ldw	r8,80(sp)
  80b6f0:	d8800515 	stw	r2,20(sp)
  80b6f4:	0200060e 	bge	zero,r8,80b710 <_strtod_r+0x88c>
  80b6f8:	d9400517 	ldw	r5,20(sp)
  80b6fc:	8009883a 	mov	r4,r16
  80b700:	400d883a 	mov	r6,r8
  80b704:	0809c300 	call	809c30 <__lshift>
  80b708:	d8800515 	stw	r2,20(sp)
  80b70c:	10012626 	beq	r2,zero,80bba8 <_strtod_r+0xd24>
  80b710:	a8000626 	beq	r21,zero,80b72c <_strtod_r+0x8a8>
  80b714:	e00b883a 	mov	r5,fp
  80b718:	8009883a 	mov	r4,r16
  80b71c:	a80d883a 	mov	r6,r21
  80b720:	0809af00 	call	809af0 <__pow5mult>
  80b724:	1039883a 	mov	fp,r2
  80b728:	10010626 	beq	r2,zero,80bb44 <_strtod_r+0xcc0>
  80b72c:	05c0060e 	bge	zero,r23,80b748 <_strtod_r+0x8c4>
  80b730:	e00b883a 	mov	r5,fp
  80b734:	8009883a 	mov	r4,r16
  80b738:	b80d883a 	mov	r6,r23
  80b73c:	0809c300 	call	809c30 <__lshift>
  80b740:	1039883a 	mov	fp,r2
  80b744:	1000ff26 	beq	r2,zero,80bb44 <_strtod_r+0xcc0>
  80b748:	0580060e 	bge	zero,r22,80b764 <_strtod_r+0x8e0>
  80b74c:	a00b883a 	mov	r5,r20
  80b750:	8009883a 	mov	r4,r16
  80b754:	b00d883a 	mov	r6,r22
  80b758:	0809c300 	call	809c30 <__lshift>
  80b75c:	1029883a 	mov	r20,r2
  80b760:	1000f826 	beq	r2,zero,80bb44 <_strtod_r+0xcc0>
  80b764:	d9400517 	ldw	r5,20(sp)
  80b768:	8009883a 	mov	r4,r16
  80b76c:	e00d883a 	mov	r6,fp
  80b770:	0809de00 	call	809de0 <__mdiff>
  80b774:	1027883a 	mov	r19,r2
  80b778:	1000f226 	beq	r2,zero,80bb44 <_strtod_r+0xcc0>
  80b77c:	11000317 	ldw	r4,12(r2)
  80b780:	a00b883a 	mov	r5,r20
  80b784:	10000315 	stw	zero,12(r2)
  80b788:	d9000e15 	stw	r4,56(sp)
  80b78c:	1009883a 	mov	r4,r2
  80b790:	0809d800 	call	809d80 <__mcmp>
  80b794:	10027116 	blt	r2,zero,80c15c <_strtod_r+0x12d8>
  80b798:	1002a426 	beq	r2,zero,80c22c <_strtod_r+0x13a8>
  80b79c:	9809883a 	mov	r4,r19
  80b7a0:	a00b883a 	mov	r5,r20
  80b7a4:	080a2300 	call	80a230 <__ratio>
  80b7a8:	1009883a 	mov	r4,r2
  80b7ac:	180b883a 	mov	r5,r3
  80b7b0:	000d883a 	mov	r6,zero
  80b7b4:	01d00034 	movhi	r7,16384
  80b7b8:	102d883a 	mov	r22,r2
  80b7bc:	182b883a 	mov	r21,r3
  80b7c0:	08160800 	call	816080 <__ledf2>
  80b7c4:	00804a16 	blt	zero,r2,80b8f0 <_strtod_r+0xa6c>
  80b7c8:	d8800e17 	ldw	r2,56(sp)
  80b7cc:	10006426 	beq	r2,zero,80b960 <_strtod_r+0xadc>
  80b7d0:	054ffc34 	movhi	r21,16368
  80b7d4:	d8000b15 	stw	zero,44(sp)
  80b7d8:	d8000d15 	stw	zero,52(sp)
  80b7dc:	a82d883a 	mov	r22,r21
  80b7e0:	8ddffc2c 	andhi	r23,r17,32752
  80b7e4:	009ff834 	movhi	r2,32736
  80b7e8:	b8810b26 	beq	r23,r2,80bc18 <_strtod_r+0xd94>
  80b7ec:	d8800817 	ldw	r2,32(sp)
  80b7f0:	10001a26 	beq	r2,zero,80b85c <_strtod_r+0x9d8>
  80b7f4:	0081a834 	movhi	r2,1696
  80b7f8:	15c01836 	bltu	r2,r23,80b85c <_strtod_r+0x9d8>
  80b7fc:	d9000d17 	ldw	r4,52(sp)
  80b800:	01d07834 	movhi	r7,16864
  80b804:	39ffffc4 	addi	r7,r7,-1
  80b808:	b00b883a 	mov	r5,r22
  80b80c:	01bff034 	movhi	r6,65472
  80b810:	08160800 	call	816080 <__ledf2>
  80b814:	00800e16 	blt	zero,r2,80b850 <_strtod_r+0x9cc>
  80b818:	d9000d17 	ldw	r4,52(sp)
  80b81c:	b00b883a 	mov	r5,r22
  80b820:	0813ee00 	call	813ee0 <__fixunsdfsi>
  80b824:	1001d026 	beq	r2,zero,80bf68 <_strtod_r+0x10e4>
  80b828:	1009883a 	mov	r4,r2
  80b82c:	08172ac0 	call	8172ac <__floatunsidf>
  80b830:	d8800d15 	stw	r2,52(sp)
  80b834:	182d883a 	mov	r22,r3
  80b838:	d8c00e17 	ldw	r3,56(sp)
  80b83c:	1801c81e 	bne	r3,zero,80bf60 <_strtod_r+0x10dc>
  80b840:	b220003c 	xorhi	r8,r22,32768
  80b844:	d9000d17 	ldw	r4,52(sp)
  80b848:	402b883a 	mov	r21,r8
  80b84c:	d9000b15 	stw	r4,44(sp)
  80b850:	0081ac34 	movhi	r2,1712
  80b854:	a891883a 	add	r8,r21,r2
  80b858:	45ebc83a 	sub	r21,r8,r23
  80b85c:	9009883a 	mov	r4,r18
  80b860:	880b883a 	mov	r5,r17
  80b864:	0809f780 	call	809f78 <__ulp>
  80b868:	d9000b17 	ldw	r4,44(sp)
  80b86c:	a80b883a 	mov	r5,r21
  80b870:	100d883a 	mov	r6,r2
  80b874:	180f883a 	mov	r7,r3
  80b878:	08161600 	call	816160 <__muldf3>
  80b87c:	9009883a 	mov	r4,r18
  80b880:	880b883a 	mov	r5,r17
  80b884:	100d883a 	mov	r6,r2
  80b888:	180f883a 	mov	r7,r3
  80b88c:	0814db40 	call	814db4 <__adddf3>
  80b890:	1025883a 	mov	r18,r2
  80b894:	1823883a 	mov	r17,r3
  80b898:	182b883a 	mov	r21,r3
  80b89c:	d8800817 	ldw	r2,32(sp)
  80b8a0:	1000021e 	bne	r2,zero,80b8ac <_strtod_r+0xa28>
  80b8a4:	a89ffc2c 	andhi	r2,r21,32752
  80b8a8:	b880f726 	beq	r23,r2,80bc88 <_strtod_r+0xe04>
  80b8ac:	d9400517 	ldw	r5,20(sp)
  80b8b0:	8009883a 	mov	r4,r16
  80b8b4:	08095540 	call	809554 <_Bfree>
  80b8b8:	8009883a 	mov	r4,r16
  80b8bc:	e00b883a 	mov	r5,fp
  80b8c0:	08095540 	call	809554 <_Bfree>
  80b8c4:	8009883a 	mov	r4,r16
  80b8c8:	a00b883a 	mov	r5,r20
  80b8cc:	08095540 	call	809554 <_Bfree>
  80b8d0:	8009883a 	mov	r4,r16
  80b8d4:	980b883a 	mov	r5,r19
  80b8d8:	08095540 	call	809554 <_Bfree>
  80b8dc:	003f2806 	br	80b580 <__alt_data_end+0xff80b580>
  80b8e0:	01000044 	movi	r4,1
  80b8e4:	d8000b15 	stw	zero,44(sp)
  80b8e8:	d9000d15 	stw	r4,52(sp)
  80b8ec:	003f5b06 	br	80b65c <__alt_data_end+0xff80b65c>
  80b8f0:	b009883a 	mov	r4,r22
  80b8f4:	a80b883a 	mov	r5,r21
  80b8f8:	000d883a 	mov	r6,zero
  80b8fc:	01cff834 	movhi	r7,16352
  80b900:	08161600 	call	816160 <__muldf3>
  80b904:	d9000e17 	ldw	r4,56(sp)
  80b908:	d8800d15 	stw	r2,52(sp)
  80b90c:	182d883a 	mov	r22,r3
  80b910:	2000111e 	bne	r4,zero,80b958 <_strtod_r+0xad4>
  80b914:	1a20003c 	xorhi	r8,r3,32768
  80b918:	d8800b15 	stw	r2,44(sp)
  80b91c:	402b883a 	mov	r21,r8
  80b920:	003faf06 	br	80b7e0 <__alt_data_end+0xff80b7e0>
  80b924:	a907c83a 	sub	r3,r21,r4
  80b928:	dd800c17 	ldw	r22,48(sp)
  80b92c:	003f3b06 	br	80b61c <__alt_data_end+0xff80b61c>
  80b930:	013ef8c4 	movi	r4,-1053
  80b934:	05c00044 	movi	r23,1
  80b938:	2149c83a 	sub	r4,r4,r5
  80b93c:	b908983a 	sll	r4,r23,r4
  80b940:	ddc00d15 	stw	r23,52(sp)
  80b944:	d9000b15 	stw	r4,44(sp)
  80b948:	003f4406 	br	80b65c <__alt_data_end+0xff80b65c>
  80b94c:	dd800615 	stw	r22,24(sp)
  80b950:	000f883a 	mov	r7,zero
  80b954:	003dee06 	br	80b110 <__alt_data_end+0xff80b110>
  80b958:	1811883a 	mov	r8,r3
  80b95c:	003fee06 	br	80b918 <__alt_data_end+0xff80b918>
  80b960:	9000681e 	bne	r18,zero,80bb04 <_strtod_r+0xc80>
  80b964:	00c00434 	movhi	r3,16
  80b968:	18ffffc4 	addi	r3,r3,-1
  80b96c:	88c4703a 	and	r2,r17,r3
  80b970:	1000661e 	bne	r2,zero,80bb0c <_strtod_r+0xc88>
  80b974:	b009883a 	mov	r4,r22
  80b978:	a80b883a 	mov	r5,r21
  80b97c:	000d883a 	mov	r6,zero
  80b980:	01cffc34 	movhi	r7,16368
  80b984:	08160800 	call	816080 <__ledf2>
  80b988:	10024d16 	blt	r2,zero,80c2c0 <_strtod_r+0x143c>
  80b98c:	b009883a 	mov	r4,r22
  80b990:	a80b883a 	mov	r5,r21
  80b994:	000d883a 	mov	r6,zero
  80b998:	01cff834 	movhi	r7,16352
  80b99c:	08161600 	call	816160 <__muldf3>
  80b9a0:	d8800d15 	stw	r2,52(sp)
  80b9a4:	182d883a 	mov	r22,r3
  80b9a8:	102b883a 	mov	r21,r2
  80b9ac:	1a20003c 	xorhi	r8,r3,32768
  80b9b0:	dd400b15 	stw	r21,44(sp)
  80b9b4:	402b883a 	mov	r21,r8
  80b9b8:	003f8906 	br	80b7e0 <__alt_data_end+0xff80b7e0>
  80b9bc:	a811883a 	mov	r8,r21
  80b9c0:	000b883a 	mov	r5,zero
  80b9c4:	0013883a 	mov	r9,zero
  80b9c8:	91bff404 	addi	r6,r18,-48
  80b9cc:	00800244 	movi	r2,9
  80b9d0:	11801036 	bltu	r2,r6,80ba14 <_strtod_r+0xb90>
  80b9d4:	28c00044 	addi	r3,r5,1
  80b9d8:	3005883a 	mov	r2,r6
  80b9dc:	30014e1e 	bne	r6,zero,80bf18 <_strtod_r+0x1094>
  80b9e0:	d9000617 	ldw	r4,24(sp)
  80b9e4:	180b883a 	mov	r5,r3
  80b9e8:	20800044 	addi	r2,r4,1
  80b9ec:	d8800615 	stw	r2,24(sp)
  80b9f0:	24800047 	ldb	r18,1(r4)
  80b9f4:	003ff406 	br	80b9c8 <__alt_data_end+0xff80b9c8>
  80b9f8:	01c00044 	movi	r7,1
  80b9fc:	b0800084 	addi	r2,r22,2
  80ba00:	d8800615 	stw	r2,24(sp)
  80ba04:	b4800087 	ldb	r18,2(r22)
  80ba08:	003e0b06 	br	80b238 <__alt_data_end+0xff80b238>
  80ba0c:	000f883a 	mov	r7,zero
  80ba10:	003ffa06 	br	80b9fc <__alt_data_end+0xff80b9fc>
  80ba14:	02800044 	movi	r10,1
  80ba18:	003db806 	br	80b0fc <__alt_data_end+0xff80b0fc>
  80ba1c:	00804d04 	movi	r2,308
  80ba20:	15807816 	blt	r2,r22,80bc04 <_strtod_r+0xd80>
  80ba24:	b039d13a 	srai	fp,r22,4
  80ba28:	01800044 	movi	r6,1
  80ba2c:	3702390e 	bge	r6,fp,80c314 <_strtod_r+0x1490>
  80ba30:	008020b4 	movhi	r2,130
  80ba34:	10afa404 	addi	r2,r2,-16752
  80ba38:	d8800815 	stw	r2,32(sp)
  80ba3c:	9005883a 	mov	r2,r18
  80ba40:	dc800817 	ldw	r18,32(sp)
  80ba44:	002d883a 	mov	r22,zero
  80ba48:	9809883a 	mov	r4,r19
  80ba4c:	8807883a 	mov	r3,r17
  80ba50:	8027883a 	mov	r19,r16
  80ba54:	3023883a 	mov	r17,r6
  80ba58:	b021883a 	mov	r16,r22
  80ba5c:	da000a15 	stw	r8,40(sp)
  80ba60:	202d883a 	mov	r22,r4
  80ba64:	e180004c 	andi	r6,fp,1
  80ba68:	30000726 	beq	r6,zero,80ba88 <_strtod_r+0xc04>
  80ba6c:	800c90fa 	slli	r6,r16,3
  80ba70:	1009883a 	mov	r4,r2
  80ba74:	180b883a 	mov	r5,r3
  80ba78:	9185883a 	add	r2,r18,r6
  80ba7c:	11800017 	ldw	r6,0(r2)
  80ba80:	11c00117 	ldw	r7,4(r2)
  80ba84:	08161600 	call	816160 <__muldf3>
  80ba88:	e039d07a 	srai	fp,fp,1
  80ba8c:	84000044 	addi	r16,r16,1
  80ba90:	e47ff41e 	bne	fp,r17,80ba64 <__alt_data_end+0xff80ba64>
  80ba94:	da000a17 	ldw	r8,40(sp)
  80ba98:	b009883a 	mov	r4,r22
  80ba9c:	1025883a 	mov	r18,r2
  80baa0:	802d883a 	mov	r22,r16
  80baa4:	1823883a 	mov	r17,r3
  80baa8:	9821883a 	mov	r16,r19
  80baac:	2027883a 	mov	r19,r4
  80bab0:	b01290fa 	slli	r9,r22,3
  80bab4:	d9000817 	ldw	r4,32(sp)
  80bab8:	01ff2c34 	movhi	r7,64688
  80babc:	900d883a 	mov	r6,r18
  80bac0:	226d883a 	add	r22,r4,r9
  80bac4:	b1000017 	ldw	r4,0(r22)
  80bac8:	b1400117 	ldw	r5,4(r22)
  80bacc:	89cf883a 	add	r7,r17,r7
  80bad0:	da001415 	stw	r8,80(sp)
  80bad4:	08161600 	call	816160 <__muldf3>
  80bad8:	1025883a 	mov	r18,r2
  80badc:	011f2834 	movhi	r4,31904
  80bae0:	189ffc2c 	andhi	r2,r3,32752
  80bae4:	da001417 	ldw	r8,80(sp)
  80bae8:	20804636 	bltu	r4,r2,80bc04 <_strtod_r+0xd80>
  80baec:	011f2434 	movhi	r4,31888
  80baf0:	2081ef2e 	bgeu	r4,r2,80c2b0 <_strtod_r+0x142c>
  80baf4:	045ffc34 	movhi	r17,32752
  80baf8:	8c7fffc4 	addi	r17,r17,-1
  80bafc:	04bfffc4 	movi	r18,-1
  80bb00:	003e8a06 	br	80b52c <__alt_data_end+0xff80b52c>
  80bb04:	00800044 	movi	r2,1
  80bb08:	90811a26 	beq	r18,r2,80bf74 <_strtod_r+0x10f0>
  80bb0c:	d8000b15 	stw	zero,44(sp)
  80bb10:	056ffc34 	movhi	r21,49136
  80bb14:	d8000d15 	stw	zero,52(sp)
  80bb18:	058ffc34 	movhi	r22,16368
  80bb1c:	003f3006 	br	80b7e0 <__alt_data_end+0xff80b7e0>
  80bb20:	00801944 	movi	r2,101
  80bb24:	90be3326 	beq	r18,r2,80b3f4 <__alt_data_end+0xff80b3f4>
  80bb28:	0011883a 	mov	r8,zero
  80bb2c:	0013883a 	mov	r9,zero
  80bb30:	02800044 	movi	r10,1
  80bb34:	003d7306 	br	80b104 <__alt_data_end+0xff80b104>
  80bb38:	d9001117 	ldw	r4,68(sp)
  80bb3c:	00bfffc4 	movi	r2,-1
  80bb40:	20804d1e 	bne	r4,r2,80bc78 <_strtod_r+0xdf4>
  80bb44:	9811883a 	mov	r8,r19
  80bb48:	dcc01217 	ldw	r19,72(sp)
  80bb4c:	d8800517 	ldw	r2,20(sp)
  80bb50:	00c00884 	movi	r3,34
  80bb54:	80c00015 	stw	r3,0(r16)
  80bb58:	002b883a 	mov	r21,zero
  80bb5c:	05dffc34 	movhi	r23,32752
  80bb60:	100b883a 	mov	r5,r2
  80bb64:	8009883a 	mov	r4,r16
  80bb68:	da001415 	stw	r8,80(sp)
  80bb6c:	08095540 	call	809554 <_Bfree>
  80bb70:	8009883a 	mov	r4,r16
  80bb74:	e00b883a 	mov	r5,fp
  80bb78:	08095540 	call	809554 <_Bfree>
  80bb7c:	8009883a 	mov	r4,r16
  80bb80:	a00b883a 	mov	r5,r20
  80bb84:	08095540 	call	809554 <_Bfree>
  80bb88:	d9400a17 	ldw	r5,40(sp)
  80bb8c:	8009883a 	mov	r4,r16
  80bb90:	08095540 	call	809554 <_Bfree>
  80bb94:	da001417 	ldw	r8,80(sp)
  80bb98:	8009883a 	mov	r4,r16
  80bb9c:	400b883a 	mov	r5,r8
  80bba0:	08095540 	call	809554 <_Bfree>
  80bba4:	003d8106 	br	80b1ac <__alt_data_end+0xff80b1ac>
  80bba8:	9811883a 	mov	r8,r19
  80bbac:	dcc01217 	ldw	r19,72(sp)
  80bbb0:	003fe706 	br	80bb50 <__alt_data_end+0xff80bb50>
  80bbb4:	d9000717 	ldw	r4,28(sp)
  80bbb8:	d8800504 	addi	r2,sp,20
  80bbbc:	018020b4 	movhi	r6,130
  80bbc0:	d9000115 	stw	r4,4(sp)
  80bbc4:	31afe904 	addi	r6,r6,-16476
  80bbc8:	d8800015 	stw	r2,0(sp)
  80bbcc:	8009883a 	mov	r4,r16
  80bbd0:	d9400604 	addi	r5,sp,24
  80bbd4:	d9c00404 	addi	r7,sp,16
  80bbd8:	0811f340 	call	811f34 <__gethex>
  80bbdc:	154001cc 	andi	r21,r2,7
  80bbe0:	a83d8726 	beq	r21,zero,80b200 <__alt_data_end+0xff80b200>
  80bbe4:	00c00184 	movi	r3,6
  80bbe8:	a8c0eb1e 	bne	r21,r3,80bf98 <_strtod_r+0x1114>
  80bbec:	a5000044 	addi	r20,r20,1
  80bbf0:	dd000615 	stw	r20,24(sp)
  80bbf4:	002b883a 	mov	r21,zero
  80bbf8:	002f883a 	mov	r23,zero
  80bbfc:	d8000715 	stw	zero,28(sp)
  80bc00:	003d6a06 	br	80b1ac <__alt_data_end+0xff80b1ac>
  80bc04:	00800884 	movi	r2,34
  80bc08:	80800015 	stw	r2,0(r16)
  80bc0c:	002b883a 	mov	r21,zero
  80bc10:	05dffc34 	movhi	r23,32752
  80bc14:	003d6506 	br	80b1ac <__alt_data_end+0xff80b1ac>
  80bc18:	00bf2c34 	movhi	r2,64688
  80bc1c:	88a3883a 	add	r17,r17,r2
  80bc20:	9009883a 	mov	r4,r18
  80bc24:	880b883a 	mov	r5,r17
  80bc28:	0809f780 	call	809f78 <__ulp>
  80bc2c:	d9000b17 	ldw	r4,44(sp)
  80bc30:	a80b883a 	mov	r5,r21
  80bc34:	100d883a 	mov	r6,r2
  80bc38:	180f883a 	mov	r7,r3
  80bc3c:	08161600 	call	816160 <__muldf3>
  80bc40:	9009883a 	mov	r4,r18
  80bc44:	880b883a 	mov	r5,r17
  80bc48:	100d883a 	mov	r6,r2
  80bc4c:	180f883a 	mov	r7,r3
  80bc50:	0814db40 	call	814db4 <__adddf3>
  80bc54:	011f2834 	movhi	r4,31904
  80bc58:	1025883a 	mov	r18,r2
  80bc5c:	213fffc4 	addi	r4,r4,-1
  80bc60:	189ffc2c 	andhi	r2,r3,32752
  80bc64:	2080862e 	bgeu	r4,r2,80be80 <_strtod_r+0xffc>
  80bc68:	d8801017 	ldw	r2,64(sp)
  80bc6c:	00dffc34 	movhi	r3,32752
  80bc70:	18ffffc4 	addi	r3,r3,-1
  80bc74:	10ffb026 	beq	r2,r3,80bb38 <__alt_data_end+0xff80bb38>
  80bc78:	045ffc34 	movhi	r17,32752
  80bc7c:	8c7fffc4 	addi	r17,r17,-1
  80bc80:	04bfffc4 	movi	r18,-1
  80bc84:	003f0906 	br	80b8ac <__alt_data_end+0xff80b8ac>
  80bc88:	d9000d17 	ldw	r4,52(sp)
  80bc8c:	b00b883a 	mov	r5,r22
  80bc90:	08171540 	call	817154 <__fixdfsi>
  80bc94:	1009883a 	mov	r4,r2
  80bc98:	08171dc0 	call	8171dc <__floatsidf>
  80bc9c:	d9000d17 	ldw	r4,52(sp)
  80bca0:	b00b883a 	mov	r5,r22
  80bca4:	100d883a 	mov	r6,r2
  80bca8:	180f883a 	mov	r7,r3
  80bcac:	08168840 	call	816884 <__subdf3>
  80bcb0:	182d883a 	mov	r22,r3
  80bcb4:	d8c00e17 	ldw	r3,56(sp)
  80bcb8:	102f883a 	mov	r23,r2
  80bcbc:	1800131e 	bne	r3,zero,80bd0c <_strtod_r+0xe88>
  80bcc0:	9000121e 	bne	r18,zero,80bd0c <_strtod_r+0xe88>
  80bcc4:	01000434 	movhi	r4,16
  80bcc8:	213fffc4 	addi	r4,r4,-1
  80bccc:	a92a703a 	and	r21,r21,r4
  80bcd0:	a8000e1e 	bne	r21,zero,80bd0c <_strtod_r+0xe88>
  80bcd4:	01a52834 	movhi	r6,38048
  80bcd8:	01cff434 	movhi	r7,16336
  80bcdc:	318d6544 	addi	r6,r6,13717
  80bce0:	39ffffc4 	addi	r7,r7,-1
  80bce4:	b809883a 	mov	r4,r23
  80bce8:	b00b883a 	mov	r5,r22
  80bcec:	08160800 	call	816080 <__ledf2>
  80bcf0:	103eee0e 	bge	r2,zero,80b8ac <__alt_data_end+0xff80b8ac>
  80bcf4:	9811883a 	mov	r8,r19
  80bcf8:	d8800517 	ldw	r2,20(sp)
  80bcfc:	dcc01217 	ldw	r19,72(sp)
  80bd00:	002b883a 	mov	r21,zero
  80bd04:	882f883a 	mov	r23,r17
  80bd08:	003f9506 	br	80bb60 <__alt_data_end+0xff80bb60>
  80bd0c:	01a52834 	movhi	r6,38048
  80bd10:	01cff834 	movhi	r7,16352
  80bd14:	318d6544 	addi	r6,r6,13717
  80bd18:	39ffffc4 	addi	r7,r7,-1
  80bd1c:	b809883a 	mov	r4,r23
  80bd20:	b00b883a 	mov	r5,r22
  80bd24:	08160800 	call	816080 <__ledf2>
  80bd28:	10000716 	blt	r2,zero,80bd48 <_strtod_r+0xec4>
  80bd2c:	018d6c34 	movhi	r6,13744
  80bd30:	31b94d44 	addi	r6,r6,-6859
  80bd34:	b809883a 	mov	r4,r23
  80bd38:	b00b883a 	mov	r5,r22
  80bd3c:	01cff834 	movhi	r7,16352
  80bd40:	0815fa00 	call	815fa0 <__gedf2>
  80bd44:	00bed90e 	bge	zero,r2,80b8ac <__alt_data_end+0xff80b8ac>
  80bd48:	9811883a 	mov	r8,r19
  80bd4c:	d8800517 	ldw	r2,20(sp)
  80bd50:	dcc01217 	ldw	r19,72(sp)
  80bd54:	902b883a 	mov	r21,r18
  80bd58:	882f883a 	mov	r23,r17
  80bd5c:	003f8006 	br	80bb60 <__alt_data_end+0xff80bb60>
  80bd60:	b03df226 	beq	r22,zero,80b52c <__alt_data_end+0xff80b52c>
  80bd64:	05adc83a 	sub	r22,zero,r22
  80bd68:	b08003cc 	andi	r2,r22,15
  80bd6c:	10000d26 	beq	r2,zero,80bda4 <_strtod_r+0xf20>
  80bd70:	100490fa 	slli	r2,r2,3
  80bd74:	00c020b4 	movhi	r3,130
  80bd78:	18efae04 	addi	r3,r3,-16712
  80bd7c:	1885883a 	add	r2,r3,r2
  80bd80:	11800017 	ldw	r6,0(r2)
  80bd84:	11c00117 	ldw	r7,4(r2)
  80bd88:	9009883a 	mov	r4,r18
  80bd8c:	880b883a 	mov	r5,r17
  80bd90:	da001415 	stw	r8,80(sp)
  80bd94:	08156500 	call	815650 <__divdf3>
  80bd98:	da001417 	ldw	r8,80(sp)
  80bd9c:	1025883a 	mov	r18,r2
  80bda0:	1823883a 	mov	r17,r3
  80bda4:	b02dd13a 	srai	r22,r22,4
  80bda8:	b03de026 	beq	r22,zero,80b52c <__alt_data_end+0xff80b52c>
  80bdac:	008007c4 	movi	r2,31
  80bdb0:	15802c16 	blt	r2,r22,80be64 <_strtod_r+0xfe0>
  80bdb4:	b080040c 	andi	r2,r22,16
  80bdb8:	10018726 	beq	r2,zero,80c3d8 <_strtod_r+0x1554>
  80bdbc:	0581a60e 	bge	zero,r22,80c458 <_strtod_r+0x15d4>
  80bdc0:	00801a84 	movi	r2,106
  80bdc4:	d8800815 	stw	r2,32(sp)
  80bdc8:	070020b4 	movhi	fp,130
  80bdcc:	8807883a 	mov	r3,r17
  80bdd0:	e72fee04 	addi	fp,fp,-16456
  80bdd4:	9005883a 	mov	r2,r18
  80bdd8:	4023883a 	mov	r17,r8
  80bddc:	b180004c 	andi	r6,r22,1
  80bde0:	30000526 	beq	r6,zero,80bdf8 <_strtod_r+0xf74>
  80bde4:	e1800017 	ldw	r6,0(fp)
  80bde8:	e1c00117 	ldw	r7,4(fp)
  80bdec:	1009883a 	mov	r4,r2
  80bdf0:	180b883a 	mov	r5,r3
  80bdf4:	08161600 	call	816160 <__muldf3>
  80bdf8:	b02dd07a 	srai	r22,r22,1
  80bdfc:	e7000204 	addi	fp,fp,8
  80be00:	05bff616 	blt	zero,r22,80bddc <__alt_data_end+0xff80bddc>
  80be04:	8811883a 	mov	r8,r17
  80be08:	1823883a 	mov	r17,r3
  80be0c:	d8c00817 	ldw	r3,32(sp)
  80be10:	1025883a 	mov	r18,r2
  80be14:	18000b26 	beq	r3,zero,80be44 <_strtod_r+0xfc0>
  80be18:	8d9ffc2c 	andhi	r22,r17,32752
  80be1c:	b02cd53a 	srli	r22,r22,20
  80be20:	00801ac4 	movi	r2,107
  80be24:	1585c83a 	sub	r2,r2,r22
  80be28:	0080060e 	bge	zero,r2,80be44 <_strtod_r+0xfc0>
  80be2c:	00c007c4 	movi	r3,31
  80be30:	1881800e 	bge	r3,r2,80c434 <_strtod_r+0x15b0>
  80be34:	00c00d04 	movi	r3,52
  80be38:	0025883a 	mov	r18,zero
  80be3c:	1881810e 	bge	r3,r2,80c444 <_strtod_r+0x15c0>
  80be40:	0440dc34 	movhi	r17,880
  80be44:	9009883a 	mov	r4,r18
  80be48:	880b883a 	mov	r5,r17
  80be4c:	000d883a 	mov	r6,zero
  80be50:	000f883a 	mov	r7,zero
  80be54:	da001415 	stw	r8,80(sp)
  80be58:	0815f1c0 	call	815f1c <__eqdf2>
  80be5c:	da001417 	ldw	r8,80(sp)
  80be60:	103db31e 	bne	r2,zero,80b530 <__alt_data_end+0xff80b530>
  80be64:	00800884 	movi	r2,34
  80be68:	80800015 	stw	r2,0(r16)
  80be6c:	002b883a 	mov	r21,zero
  80be70:	002f883a 	mov	r23,zero
  80be74:	003ccd06 	br	80b1ac <__alt_data_end+0xff80b1ac>
  80be78:	009387c4 	movi	r2,19999
  80be7c:	003d1e06 	br	80b2f8 <__alt_data_end+0xff80b2f8>
  80be80:	0440d434 	movhi	r17,848
  80be84:	1c63883a 	add	r17,r3,r17
  80be88:	882b883a 	mov	r21,r17
  80be8c:	003e8306 	br	80b89c <__alt_data_end+0xff80b89c>
  80be90:	14803fcc 	andi	r18,r2,255
  80be94:	9480201c 	xori	r18,r18,128
  80be98:	94bfe004 	addi	r18,r18,-128
  80be9c:	a023883a 	mov	r17,r20
  80bea0:	0039883a 	mov	fp,zero
  80bea4:	002f883a 	mov	r23,zero
  80bea8:	002b883a 	mov	r21,zero
  80beac:	003c8206 	br	80b0b8 <__alt_data_end+0xff80b0b8>
  80beb0:	d9000917 	ldw	r4,36(sp)
  80beb4:	00c00944 	movi	r3,37
  80beb8:	1a07c83a 	sub	r3,r3,r8
  80bebc:	193d8516 	blt	r3,r4,80b4d4 <__alt_data_end+0xff80b4d4>
  80bec0:	1221c83a 	sub	r16,r2,r8
  80bec4:	800690fa 	slli	r3,r16,3
  80bec8:	050020b4 	movhi	r20,130
  80becc:	a52fae04 	addi	r20,r20,-16712
  80bed0:	a0c7883a 	add	r3,r20,r3
  80bed4:	19000017 	ldw	r4,0(r3)
  80bed8:	19400117 	ldw	r5,4(r3)
  80bedc:	900d883a 	mov	r6,r18
  80bee0:	880f883a 	mov	r7,r17
  80bee4:	08161600 	call	816160 <__muldf3>
  80bee8:	d9000917 	ldw	r4,36(sp)
  80beec:	180b883a 	mov	r5,r3
  80bef0:	240dc83a 	sub	r6,r4,r16
  80bef4:	300c90fa 	slli	r6,r6,3
  80bef8:	1009883a 	mov	r4,r2
  80befc:	a185883a 	add	r2,r20,r6
  80bf00:	11800017 	ldw	r6,0(r2)
  80bf04:	11c00117 	ldw	r7,4(r2)
  80bf08:	08161600 	call	816160 <__muldf3>
  80bf0c:	102b883a 	mov	r21,r2
  80bf10:	182f883a 	mov	r23,r3
  80bf14:	003ca506 	br	80b1ac <__alt_data_end+0xff80b1ac>
  80bf18:	48d3883a 	add	r9,r9,r3
  80bf1c:	28010526 	beq	r5,zero,80c334 <_strtod_r+0x14b0>
  80bf20:	2a0b883a 	add	r5,r5,r8
  80bf24:	01000204 	movi	r4,8
  80bf28:	01c00404 	movi	r7,16
  80bf2c:	42000044 	addi	r8,r8,1
  80bf30:	40ffffc4 	addi	r3,r8,-1
  80bf34:	20c00716 	blt	r4,r3,80bf54 <_strtod_r+0x10d0>
  80bf38:	bdc002a4 	muli	r23,r23,10
  80bf3c:	417ffb1e 	bne	r8,r5,80bf2c <__alt_data_end+0xff80bf2c>
  80bf40:	00c00204 	movi	r3,8
  80bf44:	2a000044 	addi	r8,r5,1
  80bf48:	19405616 	blt	r3,r5,80c0a4 <_strtod_r+0x1220>
  80bf4c:	d8c00617 	ldw	r3,24(sp)
  80bf50:	003d5b06 	br	80b4c0 <__alt_data_end+0xff80b4c0>
  80bf54:	3a3ff916 	blt	r7,r8,80bf3c <__alt_data_end+0xff80bf3c>
  80bf58:	e70002a4 	muli	fp,fp,10
  80bf5c:	003ff706 	br	80bf3c <__alt_data_end+0xff80bf3c>
  80bf60:	b011883a 	mov	r8,r22
  80bf64:	003e3706 	br	80b844 <__alt_data_end+0xff80b844>
  80bf68:	d8000d15 	stw	zero,52(sp)
  80bf6c:	058ffc34 	movhi	r22,16368
  80bf70:	003e3106 	br	80b838 <__alt_data_end+0xff80b838>
  80bf74:	883ee51e 	bne	r17,zero,80bb0c <__alt_data_end+0xff80bb0c>
  80bf78:	9811883a 	mov	r8,r19
  80bf7c:	dcc01217 	ldw	r19,72(sp)
  80bf80:	00800884 	movi	r2,34
  80bf84:	80800015 	stw	r2,0(r16)
  80bf88:	002b883a 	mov	r21,zero
  80bf8c:	d8800517 	ldw	r2,20(sp)
  80bf90:	002f883a 	mov	r23,zero
  80bf94:	003ef206 	br	80bb60 <__alt_data_end+0xff80bb60>
  80bf98:	d9800517 	ldw	r6,20(sp)
  80bf9c:	30000826 	beq	r6,zero,80bfc0 <_strtod_r+0x113c>
  80bfa0:	01400d44 	movi	r5,53
  80bfa4:	d9000204 	addi	r4,sp,8
  80bfa8:	d8801315 	stw	r2,76(sp)
  80bfac:	080a3480 	call	80a348 <__copybits>
  80bfb0:	d9400517 	ldw	r5,20(sp)
  80bfb4:	8009883a 	mov	r4,r16
  80bfb8:	08095540 	call	809554 <_Bfree>
  80bfbc:	d8801317 	ldw	r2,76(sp)
  80bfc0:	00c00184 	movi	r3,6
  80bfc4:	d9000417 	ldw	r4,16(sp)
  80bfc8:	1d400f36 	bltu	r3,r21,80c008 <_strtod_r+0x1184>
  80bfcc:	a82a90ba 	slli	r21,r21,2
  80bfd0:	00c02074 	movhi	r3,129
  80bfd4:	18eff904 	addi	r3,r3,-16412
  80bfd8:	a8eb883a 	add	r21,r21,r3
  80bfdc:	a8c00017 	ldw	r3,0(r21)
  80bfe0:	1800683a 	jmp	r3
  80bfe4:	0080c05c 	xori	r2,zero,769
  80bfe8:	0080c038 	rdprs	r2,zero,768
  80bfec:	0080c01c 	xori	r2,zero,768
  80bff0:	0080c000 	call	80c00 <__alt_mem_sdram_0-0x77f400>
  80bff4:	0080c028 	cmpgeui	r2,zero,768
  80bff8:	0080c038 	rdprs	r2,zero,768
  80bffc:	0080c05c 	xori	r2,zero,769
  80c000:	045ffc34 	movhi	r17,32752
  80c004:	0025883a 	mov	r18,zero
  80c008:	1080020c 	andi	r2,r2,8
  80c00c:	902b883a 	mov	r21,r18
  80c010:	103c6526 	beq	r2,zero,80b1a8 <__alt_data_end+0xff80b1a8>
  80c014:	8de00034 	orhi	r23,r17,32768
  80c018:	003c6406 	br	80b1ac <__alt_data_end+0xff80b1ac>
  80c01c:	dc800217 	ldw	r18,8(sp)
  80c020:	dc400317 	ldw	r17,12(sp)
  80c024:	003ff806 	br	80c008 <__alt_data_end+0xff80c008>
  80c028:	04600034 	movhi	r17,32768
  80c02c:	8c7fffc4 	addi	r17,r17,-1
  80c030:	04bfffc4 	movi	r18,-1
  80c034:	003ff406 	br	80c008 <__alt_data_end+0xff80c008>
  80c038:	20c10cc4 	addi	r3,r4,1075
  80c03c:	dc400317 	ldw	r17,12(sp)
  80c040:	1806953a 	slli	r3,r3,20
  80c044:	013ffc34 	movhi	r4,65520
  80c048:	213fffc4 	addi	r4,r4,-1
  80c04c:	8922703a 	and	r17,r17,r4
  80c050:	dc800217 	ldw	r18,8(sp)
  80c054:	1c62b03a 	or	r17,r3,r17
  80c058:	003feb06 	br	80c008 <__alt_data_end+0xff80c008>
  80c05c:	0023883a 	mov	r17,zero
  80c060:	0025883a 	mov	r18,zero
  80c064:	003fe806 	br	80c008 <__alt_data_end+0xff80c008>
  80c068:	d8c00917 	ldw	r3,36(sp)
  80c06c:	00bffa84 	movi	r2,-22
  80c070:	18bd1816 	blt	r3,r2,80b4d4 <__alt_data_end+0xff80b4d4>
  80c074:	180690fa 	slli	r3,r3,3
  80c078:	008020b4 	movhi	r2,130
  80c07c:	10afae04 	addi	r2,r2,-16712
  80c080:	10c5c83a 	sub	r2,r2,r3
  80c084:	11800017 	ldw	r6,0(r2)
  80c088:	11c00117 	ldw	r7,4(r2)
  80c08c:	9009883a 	mov	r4,r18
  80c090:	880b883a 	mov	r5,r17
  80c094:	08156500 	call	815650 <__divdf3>
  80c098:	102b883a 	mov	r21,r2
  80c09c:	182f883a 	mov	r23,r3
  80c0a0:	003c4206 	br	80b1ac <__alt_data_end+0xff80b1ac>
  80c0a4:	00800404 	movi	r2,16
  80c0a8:	12008a0e 	bge	r2,r8,80c2d4 <_strtod_r+0x1450>
  80c0ac:	d9000617 	ldw	r4,24(sp)
  80c0b0:	000b883a 	mov	r5,zero
  80c0b4:	003e4c06 	br	80b9e8 <__alt_data_end+0xff80b9e8>
  80c0b8:	014020b4 	movhi	r5,130
  80c0bc:	d8c00617 	ldw	r3,24(sp)
  80c0c0:	296fe004 	addi	r5,r5,-16512
  80c0c4:	01c00644 	movi	r7,25
  80c0c8:	00000b06 	br	80c0f8 <_strtod_r+0x1274>
  80c0cc:	18c00044 	addi	r3,r3,1
  80c0d0:	18800003 	ldbu	r2,0(r3)
  80c0d4:	113fefc4 	addi	r4,r2,-65
  80c0d8:	10803fcc 	andi	r2,r2,255
  80c0dc:	1080201c 	xori	r2,r2,128
  80c0e0:	21003fcc 	andi	r4,r4,255
  80c0e4:	10bfe004 	addi	r2,r2,-128
  80c0e8:	39000136 	bltu	r7,r4,80c0f0 <_strtod_r+0x126c>
  80c0ec:	10800804 	addi	r2,r2,32
  80c0f0:	29400044 	addi	r5,r5,1
  80c0f4:	11bbb01e 	bne	r2,r6,80afb8 <__alt_data_end+0xff80afb8>
  80c0f8:	29800007 	ldb	r6,0(r5)
  80c0fc:	303ff31e 	bne	r6,zero,80c0cc <__alt_data_end+0xff80c0cc>
  80c100:	014020b4 	movhi	r5,130
  80c104:	1811883a 	mov	r8,r3
  80c108:	d8c00615 	stw	r3,24(sp)
  80c10c:	296fe104 	addi	r5,r5,-16508
  80c110:	01c00644 	movi	r7,25
  80c114:	00000a06 	br	80c140 <_strtod_r+0x12bc>
  80c118:	18800003 	ldbu	r2,0(r3)
  80c11c:	113fefc4 	addi	r4,r2,-65
  80c120:	10803fcc 	andi	r2,r2,255
  80c124:	1080201c 	xori	r2,r2,128
  80c128:	21003fcc 	andi	r4,r4,255
  80c12c:	10bfe004 	addi	r2,r2,-128
  80c130:	39000136 	bltu	r7,r4,80c138 <_strtod_r+0x12b4>
  80c134:	10800804 	addi	r2,r2,32
  80c138:	29400044 	addi	r5,r5,1
  80c13c:	11807a1e 	bne	r2,r6,80c328 <_strtod_r+0x14a4>
  80c140:	29800007 	ldb	r6,0(r5)
  80c144:	18c00044 	addi	r3,r3,1
  80c148:	303ff31e 	bne	r6,zero,80c118 <__alt_data_end+0xff80c118>
  80c14c:	d8c00615 	stw	r3,24(sp)
  80c150:	045ffc34 	movhi	r17,32752
  80c154:	0025883a 	mov	r18,zero
  80c158:	003c1206 	br	80b1a4 <__alt_data_end+0xff80b1a4>
  80c15c:	d8800e17 	ldw	r2,56(sp)
  80c160:	9811883a 	mov	r8,r19
  80c164:	dd401117 	ldw	r21,68(sp)
  80c168:	dcc01217 	ldw	r19,72(sp)
  80c16c:	ddc01017 	ldw	r23,64(sp)
  80c170:	1000491e 	bne	r2,zero,80c298 <_strtod_r+0x1414>
  80c174:	9000481e 	bne	r18,zero,80c298 <_strtod_r+0x1414>
  80c178:	00800434 	movhi	r2,16
  80c17c:	10bfffc4 	addi	r2,r2,-1
  80c180:	8884703a 	and	r2,r17,r2
  80c184:	1000441e 	bne	r2,zero,80c298 <_strtod_r+0x1414>
  80c188:	8d9ffc2c 	andhi	r22,r17,32752
  80c18c:	0081ac34 	movhi	r2,1712
  80c190:	1580412e 	bgeu	r2,r22,80c298 <_strtod_r+0x1414>
  80c194:	40800517 	ldw	r2,20(r8)
  80c198:	1000031e 	bne	r2,zero,80c1a8 <_strtod_r+0x1324>
  80c19c:	40800417 	ldw	r2,16(r8)
  80c1a0:	00c00044 	movi	r3,1
  80c1a4:	18803c0e 	bge	r3,r2,80c298 <_strtod_r+0x1414>
  80c1a8:	400b883a 	mov	r5,r8
  80c1ac:	8009883a 	mov	r4,r16
  80c1b0:	01800044 	movi	r6,1
  80c1b4:	0809c300 	call	809c30 <__lshift>
  80c1b8:	1009883a 	mov	r4,r2
  80c1bc:	a00b883a 	mov	r5,r20
  80c1c0:	d8801415 	stw	r2,80(sp)
  80c1c4:	0809d800 	call	809d80 <__mcmp>
  80c1c8:	da001417 	ldw	r8,80(sp)
  80c1cc:	0080320e 	bge	zero,r2,80c298 <_strtod_r+0x1414>
  80c1d0:	d8800817 	ldw	r2,32(sp)
  80c1d4:	10008526 	beq	r2,zero,80c3ec <_strtod_r+0x1568>
  80c1d8:	0081ac34 	movhi	r2,1712
  80c1dc:	15808316 	blt	r2,r22,80c3ec <_strtod_r+0x1568>
  80c1e0:	0080dc34 	movhi	r2,880
  80c1e4:	15bf660e 	bge	r2,r22,80bf80 <__alt_data_end+0xff80bf80>
  80c1e8:	002b883a 	mov	r21,zero
  80c1ec:	882f883a 	mov	r23,r17
  80c1f0:	a809883a 	mov	r4,r21
  80c1f4:	b80b883a 	mov	r5,r23
  80c1f8:	000d883a 	mov	r6,zero
  80c1fc:	01ce5434 	movhi	r7,14672
  80c200:	da001415 	stw	r8,80(sp)
  80c204:	08161600 	call	816160 <__muldf3>
  80c208:	102b883a 	mov	r21,r2
  80c20c:	182f883a 	mov	r23,r3
  80c210:	da001417 	ldw	r8,80(sp)
  80c214:	1800221e 	bne	r3,zero,80c2a0 <_strtod_r+0x141c>
  80c218:	d8800517 	ldw	r2,20(sp)
  80c21c:	a83e501e 	bne	r21,zero,80bb60 <__alt_data_end+0xff80bb60>
  80c220:	00c00884 	movi	r3,34
  80c224:	80c00015 	stw	r3,0(r16)
  80c228:	003e4d06 	br	80bb60 <__alt_data_end+0xff80bb60>
  80c22c:	d8c00e17 	ldw	r3,56(sp)
  80c230:	00800434 	movhi	r2,16
  80c234:	9811883a 	mov	r8,r19
  80c238:	10bfffc4 	addi	r2,r2,-1
  80c23c:	dcc01217 	ldw	r19,72(sp)
  80c240:	18002f26 	beq	r3,zero,80c300 <_strtod_r+0x147c>
  80c244:	8886703a 	and	r3,r17,r2
  80c248:	18805026 	beq	r3,r2,80c38c <_strtod_r+0x1508>
  80c24c:	d8c00b17 	ldw	r3,44(sp)
  80c250:	18002526 	beq	r3,zero,80c2e8 <_strtod_r+0x1464>
  80c254:	1c6e703a 	and	r23,r3,r17
  80c258:	b8002626 	beq	r23,zero,80c2f4 <_strtod_r+0x1470>
  80c25c:	d9000e17 	ldw	r4,56(sp)
  80c260:	20003626 	beq	r4,zero,80c33c <_strtod_r+0x14b8>
  80c264:	d9800817 	ldw	r6,32(sp)
  80c268:	9009883a 	mov	r4,r18
  80c26c:	880b883a 	mov	r5,r17
  80c270:	da001415 	stw	r8,80(sp)
  80c274:	080ae200 	call	80ae20 <sulp>
  80c278:	9009883a 	mov	r4,r18
  80c27c:	880b883a 	mov	r5,r17
  80c280:	100d883a 	mov	r6,r2
  80c284:	180f883a 	mov	r7,r3
  80c288:	0814db40 	call	814db4 <__adddf3>
  80c28c:	da001417 	ldw	r8,80(sp)
  80c290:	102b883a 	mov	r21,r2
  80c294:	182f883a 	mov	r23,r3
  80c298:	d8800817 	ldw	r2,32(sp)
  80c29c:	103fd41e 	bne	r2,zero,80c1f0 <__alt_data_end+0xff80c1f0>
  80c2a0:	d8800517 	ldw	r2,20(sp)
  80c2a4:	003e2e06 	br	80bb60 <__alt_data_end+0xff80bb60>
  80c2a8:	000b883a 	mov	r5,zero
  80c2ac:	003c7c06 	br	80b4a0 <__alt_data_end+0xff80b4a0>
  80c2b0:	0440d434 	movhi	r17,848
  80c2b4:	1c63883a 	add	r17,r3,r17
  80c2b8:	d8000815 	stw	zero,32(sp)
  80c2bc:	003c9c06 	br	80b530 <__alt_data_end+0xff80b530>
  80c2c0:	002b883a 	mov	r21,zero
  80c2c4:	022ff834 	movhi	r8,49120
  80c2c8:	d8000d15 	stw	zero,52(sp)
  80c2cc:	058ff834 	movhi	r22,16352
  80c2d0:	003db706 	br	80b9b0 <__alt_data_end+0xff80b9b0>
  80c2d4:	e08002a4 	muli	r2,fp,10
  80c2d8:	d9000617 	ldw	r4,24(sp)
  80c2dc:	000b883a 	mov	r5,zero
  80c2e0:	30b9883a 	add	fp,r6,r2
  80c2e4:	003dc006 	br	80b9e8 <__alt_data_end+0xff80b9e8>
  80c2e8:	d8c00d17 	ldw	r3,52(sp)
  80c2ec:	1c84703a 	and	r2,r3,r18
  80c2f0:	103fda1e 	bne	r2,zero,80c25c <__alt_data_end+0xff80c25c>
  80c2f4:	902b883a 	mov	r21,r18
  80c2f8:	882f883a 	mov	r23,r17
  80c2fc:	003fe606 	br	80c298 <__alt_data_end+0xff80c298>
  80c300:	8884703a 	and	r2,r17,r2
  80c304:	103fd11e 	bne	r2,zero,80c24c <__alt_data_end+0xff80c24c>
  80c308:	903fd01e 	bne	r18,zero,80c24c <__alt_data_end+0xff80c24c>
  80c30c:	8d9ffc2c 	andhi	r22,r17,32752
  80c310:	003faf06 	br	80c1d0 <__alt_data_end+0xff80c1d0>
  80c314:	00c020b4 	movhi	r3,130
  80c318:	18efa404 	addi	r3,r3,-16752
  80c31c:	d8c00815 	stw	r3,32(sp)
  80c320:	002d883a 	mov	r22,zero
  80c324:	003de206 	br	80bab0 <__alt_data_end+0xff80bab0>
  80c328:	40800044 	addi	r2,r8,1
  80c32c:	d8800615 	stw	r2,24(sp)
  80c330:	003f8706 	br	80c150 <__alt_data_end+0xff80c150>
  80c334:	400b883a 	mov	r5,r8
  80c338:	003f0106 	br	80bf40 <__alt_data_end+0xff80bf40>
  80c33c:	d9800817 	ldw	r6,32(sp)
  80c340:	9009883a 	mov	r4,r18
  80c344:	880b883a 	mov	r5,r17
  80c348:	da001415 	stw	r8,80(sp)
  80c34c:	080ae200 	call	80ae20 <sulp>
  80c350:	9009883a 	mov	r4,r18
  80c354:	880b883a 	mov	r5,r17
  80c358:	100d883a 	mov	r6,r2
  80c35c:	180f883a 	mov	r7,r3
  80c360:	08168840 	call	816884 <__subdf3>
  80c364:	1009883a 	mov	r4,r2
  80c368:	180b883a 	mov	r5,r3
  80c36c:	000d883a 	mov	r6,zero
  80c370:	000f883a 	mov	r7,zero
  80c374:	102b883a 	mov	r21,r2
  80c378:	182f883a 	mov	r23,r3
  80c37c:	0815f1c0 	call	815f1c <__eqdf2>
  80c380:	da001417 	ldw	r8,80(sp)
  80c384:	103efe26 	beq	r2,zero,80bf80 <__alt_data_end+0xff80bf80>
  80c388:	003fc306 	br	80c298 <__alt_data_end+0xff80c298>
  80c38c:	d9000817 	ldw	r4,32(sp)
  80c390:	20001426 	beq	r4,zero,80c3e4 <_strtod_r+0x1560>
  80c394:	889ffc2c 	andhi	r2,r17,32752
  80c398:	00c1a834 	movhi	r3,1696
  80c39c:	18801136 	bltu	r3,r2,80c3e4 <_strtod_r+0x1560>
  80c3a0:	1004d53a 	srli	r2,r2,20
  80c3a4:	00c01ac4 	movi	r3,107
  80c3a8:	1887c83a 	sub	r3,r3,r2
  80c3ac:	00bfffc4 	movi	r2,-1
  80c3b0:	10c4983a 	sll	r2,r2,r3
  80c3b4:	90bfa51e 	bne	r18,r2,80c24c <__alt_data_end+0xff80c24c>
  80c3b8:	009ffc34 	movhi	r2,32752
  80c3bc:	10bfffc4 	addi	r2,r2,-1
  80c3c0:	88802826 	beq	r17,r2,80c464 <_strtod_r+0x15e0>
  80c3c4:	8c5ffc2c 	andhi	r17,r17,32752
  80c3c8:	00800434 	movhi	r2,16
  80c3cc:	002b883a 	mov	r21,zero
  80c3d0:	88af883a 	add	r23,r17,r2
  80c3d4:	003fb006 	br	80c298 <__alt_data_end+0xff80c298>
  80c3d8:	d8000815 	stw	zero,32(sp)
  80c3dc:	05be7a16 	blt	zero,r22,80bdc8 <__alt_data_end+0xff80bdc8>
  80c3e0:	003e9806 	br	80be44 <__alt_data_end+0xff80be44>
  80c3e4:	00bfffc4 	movi	r2,-1
  80c3e8:	003ff206 	br	80c3b4 <__alt_data_end+0xff80c3b4>
  80c3ec:	00bffc34 	movhi	r2,65520
  80c3f0:	b0ad883a 	add	r22,r22,r2
  80c3f4:	057fffc4 	movi	r21,-1
  80c3f8:	00800434 	movhi	r2,16
  80c3fc:	1545883a 	add	r2,r2,r21
  80c400:	b0aeb03a 	or	r23,r22,r2
  80c404:	003fa406 	br	80c298 <__alt_data_end+0xff80c298>
  80c408:	014020b4 	movhi	r5,130
  80c40c:	296fe404 	addi	r5,r5,-16496
  80c410:	d9000604 	addi	r4,sp,24
  80c414:	d9800204 	addi	r6,sp,8
  80c418:	08127680 	call	812768 <__hexnan>
  80c41c:	00c00144 	movi	r3,5
  80c420:	10fb5e1e 	bne	r2,r3,80b19c <__alt_data_end+0xff80b19c>
  80c424:	dc400317 	ldw	r17,12(sp)
  80c428:	dc800217 	ldw	r18,8(sp)
  80c42c:	8c5ffc34 	orhi	r17,r17,32752
  80c430:	003b5c06 	br	80b1a4 <__alt_data_end+0xff80b1a4>
  80c434:	00ffffc4 	movi	r3,-1
  80c438:	1884983a 	sll	r2,r3,r2
  80c43c:	14a4703a 	and	r18,r2,r18
  80c440:	003e8006 	br	80be44 <__alt_data_end+0xff80be44>
  80c444:	10bff804 	addi	r2,r2,-32
  80c448:	00ffffc4 	movi	r3,-1
  80c44c:	1884983a 	sll	r2,r3,r2
  80c450:	1462703a 	and	r17,r2,r17
  80c454:	003e7b06 	br	80be44 <__alt_data_end+0xff80be44>
  80c458:	01001a84 	movi	r4,106
  80c45c:	d9000815 	stw	r4,32(sp)
  80c460:	003e6d06 	br	80be18 <__alt_data_end+0xff80be18>
  80c464:	00bfffc4 	movi	r2,-1
  80c468:	90bfd61e 	bne	r18,r2,80c3c4 <__alt_data_end+0xff80c3c4>
  80c46c:	003db706 	br	80bb4c <__alt_data_end+0xff80bb4c>

0080c470 <strtod>:
  80c470:	00c020b4 	movhi	r3,130
  80c474:	18f7f804 	addi	r3,r3,-8224
  80c478:	2005883a 	mov	r2,r4
  80c47c:	19000017 	ldw	r4,0(r3)
  80c480:	280d883a 	mov	r6,r5
  80c484:	100b883a 	mov	r5,r2
  80c488:	080ae841 	jmpi	80ae84 <_strtod_r>

0080c48c <strtof>:
  80c48c:	defffb04 	addi	sp,sp,-20
  80c490:	dcc00315 	stw	r19,12(sp)
  80c494:	04c020b4 	movhi	r19,130
  80c498:	9cf7f804 	addi	r19,r19,-8224
  80c49c:	2005883a 	mov	r2,r4
  80c4a0:	99000017 	ldw	r4,0(r19)
  80c4a4:	280d883a 	mov	r6,r5
  80c4a8:	100b883a 	mov	r5,r2
  80c4ac:	dfc00415 	stw	ra,16(sp)
  80c4b0:	dc800215 	stw	r18,8(sp)
  80c4b4:	dc400115 	stw	r17,4(sp)
  80c4b8:	dc000015 	stw	r16,0(sp)
  80c4bc:	080ae840 	call	80ae84 <_strtod_r>
  80c4c0:	1009883a 	mov	r4,r2
  80c4c4:	180b883a 	mov	r5,r3
  80c4c8:	1025883a 	mov	r18,r2
  80c4cc:	1823883a 	mov	r17,r3
  80c4d0:	08173500 	call	817350 <__truncdfsf2>
  80c4d4:	1009883a 	mov	r4,r2
  80c4d8:	000b883a 	mov	r5,zero
  80c4dc:	1021883a 	mov	r16,r2
  80c4e0:	0814bd00 	call	814bd0 <__eqsf2>
  80c4e4:	1000111e 	bne	r2,zero,80c52c <strtof+0xa0>
  80c4e8:	9009883a 	mov	r4,r18
  80c4ec:	880b883a 	mov	r5,r17
  80c4f0:	000d883a 	mov	r6,zero
  80c4f4:	000f883a 	mov	r7,zero
  80c4f8:	0815f1c0 	call	815f1c <__eqdf2>
  80c4fc:	10000b26 	beq	r2,zero,80c52c <strtof+0xa0>
  80c500:	98800017 	ldw	r2,0(r19)
  80c504:	00c00884 	movi	r3,34
  80c508:	10c00015 	stw	r3,0(r2)
  80c50c:	8005883a 	mov	r2,r16
  80c510:	dfc00417 	ldw	ra,16(sp)
  80c514:	dcc00317 	ldw	r19,12(sp)
  80c518:	dc800217 	ldw	r18,8(sp)
  80c51c:	dc400117 	ldw	r17,4(sp)
  80c520:	dc000017 	ldw	r16,0(sp)
  80c524:	dec00504 	addi	sp,sp,20
  80c528:	f800283a 	ret
  80c52c:	015fe034 	movhi	r5,32640
  80c530:	297fffc4 	addi	r5,r5,-1
  80c534:	8009883a 	mov	r4,r16
  80c538:	0814c440 	call	814c44 <__gesf2>
  80c53c:	0080070e 	bge	zero,r2,80c55c <strtof+0xd0>
  80c540:	01dffc34 	movhi	r7,32752
  80c544:	39ffffc4 	addi	r7,r7,-1
  80c548:	9009883a 	mov	r4,r18
  80c54c:	880b883a 	mov	r5,r17
  80c550:	01bfffc4 	movi	r6,-1
  80c554:	0815fa00 	call	815fa0 <__gedf2>
  80c558:	00bfe90e 	bge	zero,r2,80c500 <__alt_data_end+0xff80c500>
  80c55c:	017fe034 	movhi	r5,65408
  80c560:	297fffc4 	addi	r5,r5,-1
  80c564:	8009883a 	mov	r4,r16
  80c568:	0814cfc0 	call	814cfc <__lesf2>
  80c56c:	103fe70e 	bge	r2,zero,80c50c <__alt_data_end+0xff80c50c>
  80c570:	01fffc34 	movhi	r7,65520
  80c574:	39ffffc4 	addi	r7,r7,-1
  80c578:	9009883a 	mov	r4,r18
  80c57c:	880b883a 	mov	r5,r17
  80c580:	01bfffc4 	movi	r6,-1
  80c584:	08160800 	call	816080 <__ledf2>
  80c588:	103fdd0e 	bge	r2,zero,80c500 <__alt_data_end+0xff80c500>
  80c58c:	003fdf06 	br	80c50c <__alt_data_end+0xff80c50c>

0080c590 <_strtol_r>:
  80c590:	008020b4 	movhi	r2,130
  80c594:	defff404 	addi	sp,sp,-48
  80c598:	10b7fb04 	addi	r2,r2,-8212
  80c59c:	dcc00515 	stw	r19,20(sp)
  80c5a0:	14c00017 	ldw	r19,0(r2)
  80c5a4:	dd800815 	stw	r22,32(sp)
  80c5a8:	dd400715 	stw	r21,28(sp)
  80c5ac:	dd000615 	stw	r20,24(sp)
  80c5b0:	dfc00b15 	stw	ra,44(sp)
  80c5b4:	df000a15 	stw	fp,40(sp)
  80c5b8:	ddc00915 	stw	r23,36(sp)
  80c5bc:	dc800415 	stw	r18,16(sp)
  80c5c0:	dc400315 	stw	r17,12(sp)
  80c5c4:	dc000215 	stw	r16,8(sp)
  80c5c8:	282b883a 	mov	r21,r5
  80c5cc:	d9000015 	stw	r4,0(sp)
  80c5d0:	3029883a 	mov	r20,r6
  80c5d4:	382d883a 	mov	r22,r7
  80c5d8:	2813883a 	mov	r9,r5
  80c5dc:	4a000003 	ldbu	r8,0(r9)
  80c5e0:	4807883a 	mov	r3,r9
  80c5e4:	4a400044 	addi	r9,r9,1
  80c5e8:	9a05883a 	add	r2,r19,r8
  80c5ec:	10800043 	ldbu	r2,1(r2)
  80c5f0:	1080020c 	andi	r2,r2,8
  80c5f4:	103ff91e 	bne	r2,zero,80c5dc <__alt_data_end+0xff80c5dc>
  80c5f8:	00800b44 	movi	r2,45
  80c5fc:	4025883a 	mov	r18,r8
  80c600:	4823883a 	mov	r17,r9
  80c604:	40805826 	beq	r8,r2,80c768 <_strtol_r+0x1d8>
  80c608:	00800ac4 	movi	r2,43
  80c60c:	40805a26 	beq	r8,r2,80c778 <_strtol_r+0x1e8>
  80c610:	0039883a 	mov	fp,zero
  80c614:	b0000426 	beq	r22,zero,80c628 <_strtol_r+0x98>
  80c618:	00800404 	movi	r2,16
  80c61c:	b0805a26 	beq	r22,r2,80c788 <_strtol_r+0x1f8>
  80c620:	b02f883a 	mov	r23,r22
  80c624:	00000406 	br	80c638 <_strtol_r+0xa8>
  80c628:	00800c04 	movi	r2,48
  80c62c:	90806126 	beq	r18,r2,80c7b4 <_strtol_r+0x224>
  80c630:	05800284 	movi	r22,10
  80c634:	b02f883a 	mov	r23,r22
  80c638:	00e00034 	movhi	r3,32768
  80c63c:	18ffffc4 	addi	r3,r3,-1
  80c640:	e0e1883a 	add	r16,fp,r3
  80c644:	b80b883a 	mov	r5,r23
  80c648:	8009883a 	mov	r4,r16
  80c64c:	0814bc80 	call	814bc8 <__umodsi3>
  80c650:	8009883a 	mov	r4,r16
  80c654:	b80b883a 	mov	r5,r23
  80c658:	d8800115 	stw	r2,4(sp)
  80c65c:	0814bc00 	call	814bc0 <__udivsi3>
  80c660:	9c91883a 	add	r8,r19,r18
  80c664:	42000043 	ldbu	r8,1(r8)
  80c668:	8807883a 	mov	r3,r17
  80c66c:	000d883a 	mov	r6,zero
  80c670:	4240010c 	andi	r9,r8,4
  80c674:	0009883a 	mov	r4,zero
  80c678:	02800044 	movi	r10,1
  80c67c:	017fffc4 	movi	r5,-1
  80c680:	d9c00117 	ldw	r7,4(sp)
  80c684:	48000e26 	beq	r9,zero,80c6c0 <_strtol_r+0x130>
  80c688:	923ff404 	addi	r8,r18,-48
  80c68c:	4580120e 	bge	r8,r22,80c6d8 <_strtol_r+0x148>
  80c690:	31400526 	beq	r6,r5,80c6a8 <_strtol_r+0x118>
  80c694:	11002736 	bltu	r2,r4,80c734 <_strtol_r+0x1a4>
  80c698:	20802526 	beq	r4,r2,80c730 <_strtol_r+0x1a0>
  80c69c:	25c9383a 	mul	r4,r4,r23
  80c6a0:	01800044 	movi	r6,1
  80c6a4:	4109883a 	add	r4,r8,r4
  80c6a8:	1c800003 	ldbu	r18,0(r3)
  80c6ac:	18c00044 	addi	r3,r3,1
  80c6b0:	9c91883a 	add	r8,r19,r18
  80c6b4:	42000043 	ldbu	r8,1(r8)
  80c6b8:	4240010c 	andi	r9,r8,4
  80c6bc:	483ff21e 	bne	r9,zero,80c688 <__alt_data_end+0xff80c688>
  80c6c0:	420000cc 	andi	r8,r8,3
  80c6c4:	40000426 	beq	r8,zero,80c6d8 <_strtol_r+0x148>
  80c6c8:	42801c26 	beq	r8,r10,80c73c <_strtol_r+0x1ac>
  80c6cc:	024015c4 	movi	r9,87
  80c6d0:	9251c83a 	sub	r8,r18,r9
  80c6d4:	45bfee16 	blt	r8,r22,80c690 <__alt_data_end+0xff80c690>
  80c6d8:	00bfffc4 	movi	r2,-1
  80c6dc:	30801926 	beq	r6,r2,80c744 <_strtol_r+0x1b4>
  80c6e0:	0705c83a 	sub	r2,zero,fp
  80c6e4:	2084f03a 	xor	r2,r4,r2
  80c6e8:	1739883a 	add	fp,r2,fp
  80c6ec:	e005883a 	mov	r2,fp
  80c6f0:	a0000326 	beq	r20,zero,80c700 <_strtol_r+0x170>
  80c6f4:	30001a1e 	bne	r6,zero,80c760 <_strtol_r+0x1d0>
  80c6f8:	a80b883a 	mov	r5,r21
  80c6fc:	a1400015 	stw	r5,0(r20)
  80c700:	dfc00b17 	ldw	ra,44(sp)
  80c704:	df000a17 	ldw	fp,40(sp)
  80c708:	ddc00917 	ldw	r23,36(sp)
  80c70c:	dd800817 	ldw	r22,32(sp)
  80c710:	dd400717 	ldw	r21,28(sp)
  80c714:	dd000617 	ldw	r20,24(sp)
  80c718:	dcc00517 	ldw	r19,20(sp)
  80c71c:	dc800417 	ldw	r18,16(sp)
  80c720:	dc400317 	ldw	r17,12(sp)
  80c724:	dc000217 	ldw	r16,8(sp)
  80c728:	dec00c04 	addi	sp,sp,48
  80c72c:	f800283a 	ret
  80c730:	3a3fda0e 	bge	r7,r8,80c69c <__alt_data_end+0xff80c69c>
  80c734:	01bfffc4 	movi	r6,-1
  80c738:	003fdb06 	br	80c6a8 <__alt_data_end+0xff80c6a8>
  80c73c:	02400dc4 	movi	r9,55
  80c740:	003fe306 	br	80c6d0 <__alt_data_end+0xff80c6d0>
  80c744:	d9000017 	ldw	r4,0(sp)
  80c748:	00800884 	movi	r2,34
  80c74c:	20800015 	stw	r2,0(r4)
  80c750:	00a00034 	movhi	r2,32768
  80c754:	10bfffc4 	addi	r2,r2,-1
  80c758:	e085883a 	add	r2,fp,r2
  80c75c:	a03fe826 	beq	r20,zero,80c700 <__alt_data_end+0xff80c700>
  80c760:	197fffc4 	addi	r5,r3,-1
  80c764:	003fe506 	br	80c6fc <__alt_data_end+0xff80c6fc>
  80c768:	1c400084 	addi	r17,r3,2
  80c76c:	1c800043 	ldbu	r18,1(r3)
  80c770:	07000044 	movi	fp,1
  80c774:	003fa706 	br	80c614 <__alt_data_end+0xff80c614>
  80c778:	1c400084 	addi	r17,r3,2
  80c77c:	1c800043 	ldbu	r18,1(r3)
  80c780:	0039883a 	mov	fp,zero
  80c784:	003fa306 	br	80c614 <__alt_data_end+0xff80c614>
  80c788:	00800c04 	movi	r2,48
  80c78c:	90bfa41e 	bne	r18,r2,80c620 <__alt_data_end+0xff80c620>
  80c790:	88800003 	ldbu	r2,0(r17)
  80c794:	00c01604 	movi	r3,88
  80c798:	108037cc 	andi	r2,r2,223
  80c79c:	10ffa01e 	bne	r2,r3,80c620 <__alt_data_end+0xff80c620>
  80c7a0:	05c00404 	movi	r23,16
  80c7a4:	8c800043 	ldbu	r18,1(r17)
  80c7a8:	b82d883a 	mov	r22,r23
  80c7ac:	8c400084 	addi	r17,r17,2
  80c7b0:	003fa106 	br	80c638 <__alt_data_end+0xff80c638>
  80c7b4:	88800003 	ldbu	r2,0(r17)
  80c7b8:	00c01604 	movi	r3,88
  80c7bc:	108037cc 	andi	r2,r2,223
  80c7c0:	10fff726 	beq	r2,r3,80c7a0 <__alt_data_end+0xff80c7a0>
  80c7c4:	05800204 	movi	r22,8
  80c7c8:	b02f883a 	mov	r23,r22
  80c7cc:	003f9a06 	br	80c638 <__alt_data_end+0xff80c638>

0080c7d0 <strtol>:
  80c7d0:	2007883a 	mov	r3,r4
  80c7d4:	010020b4 	movhi	r4,130
  80c7d8:	2137f804 	addi	r4,r4,-8224
  80c7dc:	21000017 	ldw	r4,0(r4)
  80c7e0:	2805883a 	mov	r2,r5
  80c7e4:	300f883a 	mov	r7,r6
  80c7e8:	180b883a 	mov	r5,r3
  80c7ec:	100d883a 	mov	r6,r2
  80c7f0:	080c5901 	jmpi	80c590 <_strtol_r>

0080c7f4 <_strtoll_r>:
  80c7f4:	008020b4 	movhi	r2,130
  80c7f8:	deffef04 	addi	sp,sp,-68
  80c7fc:	10b7fb04 	addi	r2,r2,-8212
  80c800:	dd800d15 	stw	r22,52(sp)
  80c804:	15800017 	ldw	r22,0(r2)
  80c808:	df000f15 	stw	fp,60(sp)
  80c80c:	dfc01015 	stw	ra,64(sp)
  80c810:	ddc00e15 	stw	r23,56(sp)
  80c814:	dd400c15 	stw	r21,48(sp)
  80c818:	dd000b15 	stw	r20,44(sp)
  80c81c:	dcc00a15 	stw	r19,40(sp)
  80c820:	dc800915 	stw	r18,36(sp)
  80c824:	dc400815 	stw	r17,32(sp)
  80c828:	dc000715 	stw	r16,28(sp)
  80c82c:	d9400415 	stw	r5,16(sp)
  80c830:	d9000515 	stw	r4,20(sp)
  80c834:	d9800215 	stw	r6,8(sp)
  80c838:	3839883a 	mov	fp,r7
  80c83c:	2811883a 	mov	r8,r5
  80c840:	42400003 	ldbu	r9,0(r8)
  80c844:	4007883a 	mov	r3,r8
  80c848:	42000044 	addi	r8,r8,1
  80c84c:	b245883a 	add	r2,r22,r9
  80c850:	10800043 	ldbu	r2,1(r2)
  80c854:	1080020c 	andi	r2,r2,8
  80c858:	103ff91e 	bne	r2,zero,80c840 <__alt_data_end+0xff80c840>
  80c85c:	00800b44 	movi	r2,45
  80c860:	4025883a 	mov	r18,r8
  80c864:	48807d26 	beq	r9,r2,80ca5c <_strtoll_r+0x268>
  80c868:	00800ac4 	movi	r2,43
  80c86c:	48808026 	beq	r9,r2,80ca70 <_strtoll_r+0x27c>
  80c870:	d8000115 	stw	zero,4(sp)
  80c874:	e0000a26 	beq	fp,zero,80c8a0 <_strtoll_r+0xac>
  80c878:	00800404 	movi	r2,16
  80c87c:	e0808826 	beq	fp,r2,80caa0 <_strtoll_r+0x2ac>
  80c880:	e005d7fa 	srai	r2,fp,31
  80c884:	d8c00117 	ldw	r3,4(sp)
  80c888:	e027883a 	mov	r19,fp
  80c88c:	d8800015 	stw	r2,0(sp)
  80c890:	18000a26 	beq	r3,zero,80c8bc <_strtoll_r+0xc8>
  80c894:	0023883a 	mov	r17,zero
  80c898:	04200034 	movhi	r16,32768
  80c89c:	00000a06 	br	80c8c8 <_strtoll_r+0xd4>
  80c8a0:	00800c04 	movi	r2,48
  80c8a4:	48807626 	beq	r9,r2,80ca80 <_strtoll_r+0x28c>
  80c8a8:	04c00284 	movi	r19,10
  80c8ac:	d8000015 	stw	zero,0(sp)
  80c8b0:	9839883a 	mov	fp,r19
  80c8b4:	d8c00117 	ldw	r3,4(sp)
  80c8b8:	183ff61e 	bne	r3,zero,80c894 <__alt_data_end+0xff80c894>
  80c8bc:	047fffc4 	movi	r17,-1
  80c8c0:	04200034 	movhi	r16,32768
  80c8c4:	8461883a 	add	r16,r16,r17
  80c8c8:	d9c00017 	ldw	r7,0(sp)
  80c8cc:	8809883a 	mov	r4,r17
  80c8d0:	800b883a 	mov	r5,r16
  80c8d4:	980d883a 	mov	r6,r19
  80c8d8:	da400615 	stw	r9,24(sp)
  80c8dc:	08145140 	call	814514 <__umoddi3>
  80c8e0:	d9c00017 	ldw	r7,0(sp)
  80c8e4:	8809883a 	mov	r4,r17
  80c8e8:	800b883a 	mov	r5,r16
  80c8ec:	980d883a 	mov	r6,r19
  80c8f0:	d8800315 	stw	r2,12(sp)
  80c8f4:	0813f540 	call	813f54 <__udivdi3>
  80c8f8:	da400617 	ldw	r9,24(sp)
  80c8fc:	1823883a 	mov	r17,r3
  80c900:	902f883a 	mov	r23,r18
  80c904:	b247883a 	add	r3,r22,r9
  80c908:	19800043 	ldbu	r6,1(r3)
  80c90c:	1021883a 	mov	r16,r2
  80c910:	000f883a 	mov	r7,zero
  80c914:	30c0010c 	andi	r3,r6,4
  80c918:	0009883a 	mov	r4,zero
  80c91c:	000b883a 	mov	r5,zero
  80c920:	04800044 	movi	r18,1
  80c924:	057fffc4 	movi	r21,-1
  80c928:	18000d26 	beq	r3,zero,80c960 <_strtoll_r+0x16c>
  80c92c:	4d3ff404 	addi	r20,r9,-48
  80c930:	a700110e 	bge	r20,fp,80c978 <_strtoll_r+0x184>
  80c934:	3d400426 	beq	r7,r21,80c948 <_strtoll_r+0x154>
  80c938:	89400236 	bltu	r17,r5,80c944 <_strtoll_r+0x150>
  80c93c:	2c40291e 	bne	r5,r17,80c9e4 <_strtoll_r+0x1f0>
  80c940:	8100282e 	bgeu	r16,r4,80c9e4 <_strtoll_r+0x1f0>
  80c944:	01ffffc4 	movi	r7,-1
  80c948:	ba400003 	ldbu	r9,0(r23)
  80c94c:	bdc00044 	addi	r23,r23,1
  80c950:	b247883a 	add	r3,r22,r9
  80c954:	19800043 	ldbu	r6,1(r3)
  80c958:	30c0010c 	andi	r3,r6,4
  80c95c:	183ff31e 	bne	r3,zero,80c92c <__alt_data_end+0xff80c92c>
  80c960:	318000cc 	andi	r6,r6,3
  80c964:	30000426 	beq	r6,zero,80c978 <_strtoll_r+0x184>
  80c968:	34802a26 	beq	r6,r18,80ca14 <_strtoll_r+0x220>
  80c96c:	00c015c4 	movi	r3,87
  80c970:	48e9c83a 	sub	r20,r9,r3
  80c974:	a73fef16 	blt	r20,fp,80c934 <__alt_data_end+0xff80c934>
  80c978:	00bfffc4 	movi	r2,-1
  80c97c:	38802b26 	beq	r7,r2,80ca2c <_strtoll_r+0x238>
  80c980:	d8800117 	ldw	r2,4(sp)
  80c984:	0093c83a 	sub	r9,zero,r2
  80c988:	2248f03a 	xor	r4,r4,r9
  80c98c:	2085883a 	add	r2,r4,r2
  80c990:	1109803a 	cmpltu	r4,r2,r4
  80c994:	2a46f03a 	xor	r3,r5,r9
  80c998:	20c7883a 	add	r3,r4,r3
  80c99c:	d9000217 	ldw	r4,8(sp)
  80c9a0:	20000426 	beq	r4,zero,80c9b4 <_strtoll_r+0x1c0>
  80c9a4:	38002b1e 	bne	r7,zero,80ca54 <_strtoll_r+0x260>
  80c9a8:	dd800417 	ldw	r22,16(sp)
  80c9ac:	d9400217 	ldw	r5,8(sp)
  80c9b0:	2d800015 	stw	r22,0(r5)
  80c9b4:	dfc01017 	ldw	ra,64(sp)
  80c9b8:	df000f17 	ldw	fp,60(sp)
  80c9bc:	ddc00e17 	ldw	r23,56(sp)
  80c9c0:	dd800d17 	ldw	r22,52(sp)
  80c9c4:	dd400c17 	ldw	r21,48(sp)
  80c9c8:	dd000b17 	ldw	r20,44(sp)
  80c9cc:	dcc00a17 	ldw	r19,40(sp)
  80c9d0:	dc800917 	ldw	r18,36(sp)
  80c9d4:	dc400817 	ldw	r17,32(sp)
  80c9d8:	dc000717 	ldw	r16,28(sp)
  80c9dc:	dec01104 	addi	sp,sp,68
  80c9e0:	f800283a 	ret
  80c9e4:	24000d26 	beq	r4,r16,80ca1c <_strtoll_r+0x228>
  80c9e8:	d9c00017 	ldw	r7,0(sp)
  80c9ec:	980d883a 	mov	r6,r19
  80c9f0:	0813e800 	call	813e80 <__muldi3>
  80c9f4:	a00bd7fa 	srai	r5,r20,31
  80c9f8:	a085883a 	add	r2,r20,r2
  80c9fc:	1513803a 	cmpltu	r9,r2,r20
  80ca00:	28c7883a 	add	r3,r5,r3
  80ca04:	1009883a 	mov	r4,r2
  80ca08:	48cb883a 	add	r5,r9,r3
  80ca0c:	01c00044 	movi	r7,1
  80ca10:	003fcd06 	br	80c948 <__alt_data_end+0xff80c948>
  80ca14:	00c00dc4 	movi	r3,55
  80ca18:	003fd506 	br	80c970 <__alt_data_end+0xff80c970>
  80ca1c:	2c7ff21e 	bne	r5,r17,80c9e8 <__alt_data_end+0xff80c9e8>
  80ca20:	d8800317 	ldw	r2,12(sp)
  80ca24:	153fc716 	blt	r2,r20,80c944 <__alt_data_end+0xff80c944>
  80ca28:	003fef06 	br	80c9e8 <__alt_data_end+0xff80c9e8>
  80ca2c:	d8c00117 	ldw	r3,4(sp)
  80ca30:	1800201e 	bne	r3,zero,80cab4 <_strtoll_r+0x2c0>
  80ca34:	00e00034 	movhi	r3,32768
  80ca38:	3805883a 	mov	r2,r7
  80ca3c:	18ffffc4 	addi	r3,r3,-1
  80ca40:	d9400517 	ldw	r5,20(sp)
  80ca44:	01000884 	movi	r4,34
  80ca48:	29000015 	stw	r4,0(r5)
  80ca4c:	d9000217 	ldw	r4,8(sp)
  80ca50:	203fd826 	beq	r4,zero,80c9b4 <__alt_data_end+0xff80c9b4>
  80ca54:	bdbfffc4 	addi	r22,r23,-1
  80ca58:	003fd406 	br	80c9ac <__alt_data_end+0xff80c9ac>
  80ca5c:	00800044 	movi	r2,1
  80ca60:	1c800084 	addi	r18,r3,2
  80ca64:	1a400043 	ldbu	r9,1(r3)
  80ca68:	d8800115 	stw	r2,4(sp)
  80ca6c:	003f8106 	br	80c874 <__alt_data_end+0xff80c874>
  80ca70:	1c800084 	addi	r18,r3,2
  80ca74:	1a400043 	ldbu	r9,1(r3)
  80ca78:	d8000115 	stw	zero,4(sp)
  80ca7c:	003f7d06 	br	80c874 <__alt_data_end+0xff80c874>
  80ca80:	90800003 	ldbu	r2,0(r18)
  80ca84:	00c01604 	movi	r3,88
  80ca88:	108037cc 	andi	r2,r2,223
  80ca8c:	10c01026 	beq	r2,r3,80cad0 <_strtoll_r+0x2dc>
  80ca90:	04c00204 	movi	r19,8
  80ca94:	d8000015 	stw	zero,0(sp)
  80ca98:	9839883a 	mov	fp,r19
  80ca9c:	003f8506 	br	80c8b4 <__alt_data_end+0xff80c8b4>
  80caa0:	00800c04 	movi	r2,48
  80caa4:	48800626 	beq	r9,r2,80cac0 <_strtoll_r+0x2cc>
  80caa8:	e027883a 	mov	r19,fp
  80caac:	d8000015 	stw	zero,0(sp)
  80cab0:	003f8006 	br	80c8b4 <__alt_data_end+0xff80c8b4>
  80cab4:	0005883a 	mov	r2,zero
  80cab8:	00e00034 	movhi	r3,32768
  80cabc:	003fe006 	br	80ca40 <__alt_data_end+0xff80ca40>
  80cac0:	90800003 	ldbu	r2,0(r18)
  80cac4:	00c01604 	movi	r3,88
  80cac8:	108037cc 	andi	r2,r2,223
  80cacc:	10fff61e 	bne	r2,r3,80caa8 <__alt_data_end+0xff80caa8>
  80cad0:	04c00404 	movi	r19,16
  80cad4:	92400043 	ldbu	r9,1(r18)
  80cad8:	d8000015 	stw	zero,0(sp)
  80cadc:	94800084 	addi	r18,r18,2
  80cae0:	9839883a 	mov	fp,r19
  80cae4:	003f7306 	br	80c8b4 <__alt_data_end+0xff80c8b4>

0080cae8 <_strtoul_r>:
  80cae8:	008020b4 	movhi	r2,130
  80caec:	defff604 	addi	sp,sp,-40
  80caf0:	10b7fb04 	addi	r2,r2,-8212
  80caf4:	dc800315 	stw	r18,12(sp)
  80caf8:	14800017 	ldw	r18,0(r2)
  80cafc:	dd400615 	stw	r21,24(sp)
  80cb00:	dd000515 	stw	r20,20(sp)
  80cb04:	dcc00415 	stw	r19,16(sp)
  80cb08:	dfc00915 	stw	ra,36(sp)
  80cb0c:	ddc00815 	stw	r23,32(sp)
  80cb10:	dd800715 	stw	r22,28(sp)
  80cb14:	dc400215 	stw	r17,8(sp)
  80cb18:	dc000115 	stw	r16,4(sp)
  80cb1c:	2827883a 	mov	r19,r5
  80cb20:	2029883a 	mov	r20,r4
  80cb24:	382b883a 	mov	r21,r7
  80cb28:	2813883a 	mov	r9,r5
  80cb2c:	4a000003 	ldbu	r8,0(r9)
  80cb30:	4807883a 	mov	r3,r9
  80cb34:	4a400044 	addi	r9,r9,1
  80cb38:	9205883a 	add	r2,r18,r8
  80cb3c:	10800043 	ldbu	r2,1(r2)
  80cb40:	1080020c 	andi	r2,r2,8
  80cb44:	103ff91e 	bne	r2,zero,80cb2c <__alt_data_end+0xff80cb2c>
  80cb48:	00800b44 	movi	r2,45
  80cb4c:	4023883a 	mov	r17,r8
  80cb50:	4821883a 	mov	r16,r9
  80cb54:	40805426 	beq	r8,r2,80cca8 <_strtoul_r+0x1c0>
  80cb58:	00800ac4 	movi	r2,43
  80cb5c:	40805626 	beq	r8,r2,80ccb8 <_strtoul_r+0x1d0>
  80cb60:	002f883a 	mov	r23,zero
  80cb64:	a8000e26 	beq	r21,zero,80cba0 <_strtoul_r+0xb8>
  80cb68:	00800404 	movi	r2,16
  80cb6c:	a8805626 	beq	r21,r2,80ccc8 <_strtoul_r+0x1e0>
  80cb70:	013fffc4 	movi	r4,-1
  80cb74:	a80b883a 	mov	r5,r21
  80cb78:	d9800015 	stw	r6,0(sp)
  80cb7c:	0814bc00 	call	814bc0 <__udivsi3>
  80cb80:	013fffc4 	movi	r4,-1
  80cb84:	a80b883a 	mov	r5,r21
  80cb88:	102d883a 	mov	r22,r2
  80cb8c:	0814bc80 	call	814bc8 <__umodsi3>
  80cb90:	d9800017 	ldw	r6,0(sp)
  80cb94:	a819883a 	mov	r12,r21
  80cb98:	b00b883a 	mov	r5,r22
  80cb9c:	00000706 	br	80cbbc <_strtoul_r+0xd4>
  80cba0:	00800c04 	movi	r2,48
  80cba4:	88804f26 	beq	r17,r2,80cce4 <_strtoul_r+0x1fc>
  80cba8:	05400284 	movi	r21,10
  80cbac:	014666b4 	movhi	r5,6554
  80cbb0:	00800144 	movi	r2,5
  80cbb4:	29666644 	addi	r5,r5,-26215
  80cbb8:	a819883a 	mov	r12,r21
  80cbbc:	9451883a 	add	r8,r18,r17
  80cbc0:	42000043 	ldbu	r8,1(r8)
  80cbc4:	8007883a 	mov	r3,r16
  80cbc8:	0009883a 	mov	r4,zero
  80cbcc:	4240010c 	andi	r9,r8,4
  80cbd0:	0015883a 	mov	r10,zero
  80cbd4:	02c00044 	movi	r11,1
  80cbd8:	01ffffc4 	movi	r7,-1
  80cbdc:	48000e26 	beq	r9,zero,80cc18 <_strtoul_r+0x130>
  80cbe0:	8a3ff404 	addi	r8,r17,-48
  80cbe4:	4540120e 	bge	r8,r21,80cc30 <_strtoul_r+0x148>
  80cbe8:	21c00526 	beq	r4,r7,80cc00 <_strtoul_r+0x118>
  80cbec:	2a802436 	bltu	r5,r10,80cc80 <_strtoul_r+0x198>
  80cbf0:	51402226 	beq	r10,r5,80cc7c <_strtoul_r+0x194>
  80cbf4:	5315383a 	mul	r10,r10,r12
  80cbf8:	01000044 	movi	r4,1
  80cbfc:	4295883a 	add	r10,r8,r10
  80cc00:	1c400003 	ldbu	r17,0(r3)
  80cc04:	18c00044 	addi	r3,r3,1
  80cc08:	9451883a 	add	r8,r18,r17
  80cc0c:	42000043 	ldbu	r8,1(r8)
  80cc10:	4240010c 	andi	r9,r8,4
  80cc14:	483ff21e 	bne	r9,zero,80cbe0 <__alt_data_end+0xff80cbe0>
  80cc18:	420000cc 	andi	r8,r8,3
  80cc1c:	40000426 	beq	r8,zero,80cc30 <_strtoul_r+0x148>
  80cc20:	42c01926 	beq	r8,r11,80cc88 <_strtoul_r+0x1a0>
  80cc24:	024015c4 	movi	r9,87
  80cc28:	8a51c83a 	sub	r8,r17,r9
  80cc2c:	457fee16 	blt	r8,r21,80cbe8 <__alt_data_end+0xff80cbe8>
  80cc30:	20001916 	blt	r4,zero,80cc98 <_strtoul_r+0x1b0>
  80cc34:	05c5c83a 	sub	r2,zero,r23
  80cc38:	5084f03a 	xor	r2,r10,r2
  80cc3c:	15c5883a 	add	r2,r2,r23
  80cc40:	30000326 	beq	r6,zero,80cc50 <_strtoul_r+0x168>
  80cc44:	20001226 	beq	r4,zero,80cc90 <_strtoul_r+0x1a8>
  80cc48:	197fffc4 	addi	r5,r3,-1
  80cc4c:	31400015 	stw	r5,0(r6)
  80cc50:	dfc00917 	ldw	ra,36(sp)
  80cc54:	ddc00817 	ldw	r23,32(sp)
  80cc58:	dd800717 	ldw	r22,28(sp)
  80cc5c:	dd400617 	ldw	r21,24(sp)
  80cc60:	dd000517 	ldw	r20,20(sp)
  80cc64:	dcc00417 	ldw	r19,16(sp)
  80cc68:	dc800317 	ldw	r18,12(sp)
  80cc6c:	dc400217 	ldw	r17,8(sp)
  80cc70:	dc000117 	ldw	r16,4(sp)
  80cc74:	dec00a04 	addi	sp,sp,40
  80cc78:	f800283a 	ret
  80cc7c:	123fdd0e 	bge	r2,r8,80cbf4 <__alt_data_end+0xff80cbf4>
  80cc80:	013fffc4 	movi	r4,-1
  80cc84:	003fde06 	br	80cc00 <__alt_data_end+0xff80cc00>
  80cc88:	02400dc4 	movi	r9,55
  80cc8c:	003fe606 	br	80cc28 <__alt_data_end+0xff80cc28>
  80cc90:	980b883a 	mov	r5,r19
  80cc94:	003fed06 	br	80cc4c <__alt_data_end+0xff80cc4c>
  80cc98:	00800884 	movi	r2,34
  80cc9c:	a0800015 	stw	r2,0(r20)
  80cca0:	00bfffc4 	movi	r2,-1
  80cca4:	003fe606 	br	80cc40 <__alt_data_end+0xff80cc40>
  80cca8:	1c000084 	addi	r16,r3,2
  80ccac:	1c400043 	ldbu	r17,1(r3)
  80ccb0:	05c00044 	movi	r23,1
  80ccb4:	003fab06 	br	80cb64 <__alt_data_end+0xff80cb64>
  80ccb8:	1c000084 	addi	r16,r3,2
  80ccbc:	1c400043 	ldbu	r17,1(r3)
  80ccc0:	002f883a 	mov	r23,zero
  80ccc4:	003fa706 	br	80cb64 <__alt_data_end+0xff80cb64>
  80ccc8:	00800c04 	movi	r2,48
  80cccc:	88801726 	beq	r17,r2,80cd2c <_strtoul_r+0x244>
  80ccd0:	01440034 	movhi	r5,4096
  80ccd4:	297fffc4 	addi	r5,r5,-1
  80ccd8:	008003c4 	movi	r2,15
  80ccdc:	a819883a 	mov	r12,r21
  80cce0:	003fb606 	br	80cbbc <__alt_data_end+0xff80cbbc>
  80cce4:	80800003 	ldbu	r2,0(r16)
  80cce8:	00c01604 	movi	r3,88
  80ccec:	108037cc 	andi	r2,r2,223
  80ccf0:	10c00626 	beq	r2,r3,80cd0c <_strtoul_r+0x224>
  80ccf4:	05400204 	movi	r21,8
  80ccf8:	01480034 	movhi	r5,8192
  80ccfc:	008001c4 	movi	r2,7
  80cd00:	297fffc4 	addi	r5,r5,-1
  80cd04:	a819883a 	mov	r12,r21
  80cd08:	003fac06 	br	80cbbc <__alt_data_end+0xff80cbbc>
  80cd0c:	03000404 	movi	r12,16
  80cd10:	05840034 	movhi	r22,4096
  80cd14:	84400043 	ldbu	r17,1(r16)
  80cd18:	008003c4 	movi	r2,15
  80cd1c:	84000084 	addi	r16,r16,2
  80cd20:	b5bfffc4 	addi	r22,r22,-1
  80cd24:	602b883a 	mov	r21,r12
  80cd28:	003f9b06 	br	80cb98 <__alt_data_end+0xff80cb98>
  80cd2c:	80800003 	ldbu	r2,0(r16)
  80cd30:	00c01604 	movi	r3,88
  80cd34:	108037cc 	andi	r2,r2,223
  80cd38:	10fff426 	beq	r2,r3,80cd0c <__alt_data_end+0xff80cd0c>
  80cd3c:	01440034 	movhi	r5,4096
  80cd40:	008003c4 	movi	r2,15
  80cd44:	297fffc4 	addi	r5,r5,-1
  80cd48:	a819883a 	mov	r12,r21
  80cd4c:	003f9b06 	br	80cbbc <__alt_data_end+0xff80cbbc>

0080cd50 <strtoul>:
  80cd50:	2007883a 	mov	r3,r4
  80cd54:	010020b4 	movhi	r4,130
  80cd58:	2137f804 	addi	r4,r4,-8224
  80cd5c:	21000017 	ldw	r4,0(r4)
  80cd60:	2805883a 	mov	r2,r5
  80cd64:	300f883a 	mov	r7,r6
  80cd68:	180b883a 	mov	r5,r3
  80cd6c:	100d883a 	mov	r6,r2
  80cd70:	080cae81 	jmpi	80cae8 <_strtoul_r>

0080cd74 <_strtoull_r>:
  80cd74:	008020b4 	movhi	r2,130
  80cd78:	deffee04 	addi	sp,sp,-72
  80cd7c:	10b7fb04 	addi	r2,r2,-8212
  80cd80:	ddc00f15 	stw	r23,60(sp)
  80cd84:	15c00017 	ldw	r23,0(r2)
  80cd88:	df001015 	stw	fp,64(sp)
  80cd8c:	dfc01115 	stw	ra,68(sp)
  80cd90:	dd800e15 	stw	r22,56(sp)
  80cd94:	dd400d15 	stw	r21,52(sp)
  80cd98:	dd000c15 	stw	r20,48(sp)
  80cd9c:	dcc00b15 	stw	r19,44(sp)
  80cda0:	dc800a15 	stw	r18,40(sp)
  80cda4:	dc400915 	stw	r17,36(sp)
  80cda8:	dc000815 	stw	r16,32(sp)
  80cdac:	d9400215 	stw	r5,8(sp)
  80cdb0:	d9000515 	stw	r4,20(sp)
  80cdb4:	d9800115 	stw	r6,4(sp)
  80cdb8:	3839883a 	mov	fp,r7
  80cdbc:	2811883a 	mov	r8,r5
  80cdc0:	42400003 	ldbu	r9,0(r8)
  80cdc4:	4007883a 	mov	r3,r8
  80cdc8:	42000044 	addi	r8,r8,1
  80cdcc:	ba45883a 	add	r2,r23,r9
  80cdd0:	10800043 	ldbu	r2,1(r2)
  80cdd4:	1080020c 	andi	r2,r2,8
  80cdd8:	103ff91e 	bne	r2,zero,80cdc0 <__alt_data_end+0xff80cdc0>
  80cddc:	00800b44 	movi	r2,45
  80cde0:	48807826 	beq	r9,r2,80cfc4 <_strtoull_r+0x250>
  80cde4:	00800ac4 	movi	r2,43
  80cde8:	48807b26 	beq	r9,r2,80cfd8 <_strtoull_r+0x264>
  80cdec:	d8000415 	stw	zero,16(sp)
  80cdf0:	e0001726 	beq	fp,zero,80ce50 <_strtoull_r+0xdc>
  80cdf4:	00800404 	movi	r2,16
  80cdf8:	e0808926 	beq	fp,r2,80d020 <_strtoull_r+0x2ac>
  80cdfc:	e027d7fa 	srai	r19,fp,31
  80ce00:	013fffc4 	movi	r4,-1
  80ce04:	200b883a 	mov	r5,r4
  80ce08:	e00d883a 	mov	r6,fp
  80ce0c:	980f883a 	mov	r7,r19
  80ce10:	da000615 	stw	r8,24(sp)
  80ce14:	da400715 	stw	r9,28(sp)
  80ce18:	0813f540 	call	813f54 <__udivdi3>
  80ce1c:	013fffc4 	movi	r4,-1
  80ce20:	200b883a 	mov	r5,r4
  80ce24:	e00d883a 	mov	r6,fp
  80ce28:	980f883a 	mov	r7,r19
  80ce2c:	1021883a 	mov	r16,r2
  80ce30:	1823883a 	mov	r17,r3
  80ce34:	08145140 	call	814514 <__umoddi3>
  80ce38:	da400717 	ldw	r9,28(sp)
  80ce3c:	da000617 	ldw	r8,24(sp)
  80ce40:	d8800315 	stw	r2,12(sp)
  80ce44:	df000015 	stw	fp,0(sp)
  80ce48:	8825883a 	mov	r18,r17
  80ce4c:	00000c06 	br	80ce80 <_strtoull_r+0x10c>
  80ce50:	00800c04 	movi	r2,48
  80ce54:	48806426 	beq	r9,r2,80cfe8 <_strtoull_r+0x274>
  80ce58:	00800284 	movi	r2,10
  80ce5c:	01000144 	movi	r4,5
  80ce60:	042666b4 	movhi	r16,39322
  80ce64:	048666b4 	movhi	r18,6554
  80ce68:	d8800015 	stw	r2,0(sp)
  80ce6c:	d9000315 	stw	r4,12(sp)
  80ce70:	84266644 	addi	r16,r16,-26215
  80ce74:	94a66644 	addi	r18,r18,-26215
  80ce78:	0027883a 	mov	r19,zero
  80ce7c:	1039883a 	mov	fp,r2
  80ce80:	ba45883a 	add	r2,r23,r9
  80ce84:	12800043 	ldbu	r10,1(r2)
  80ce88:	402d883a 	mov	r22,r8
  80ce8c:	000d883a 	mov	r6,zero
  80ce90:	5080010c 	andi	r2,r10,4
  80ce94:	0009883a 	mov	r4,zero
  80ce98:	000b883a 	mov	r5,zero
  80ce9c:	04400044 	movi	r17,1
  80cea0:	057fffc4 	movi	r21,-1
  80cea4:	10000d26 	beq	r2,zero,80cedc <_strtoull_r+0x168>
  80cea8:	4d3ff404 	addi	r20,r9,-48
  80ceac:	a700110e 	bge	r20,fp,80cef4 <_strtoull_r+0x180>
  80ceb0:	35400426 	beq	r6,r21,80cec4 <_strtoull_r+0x150>
  80ceb4:	91400236 	bltu	r18,r5,80cec0 <_strtoull_r+0x14c>
  80ceb8:	2c80281e 	bne	r5,r18,80cf5c <_strtoull_r+0x1e8>
  80cebc:	8100272e 	bgeu	r16,r4,80cf5c <_strtoull_r+0x1e8>
  80cec0:	01bfffc4 	movi	r6,-1
  80cec4:	b2400003 	ldbu	r9,0(r22)
  80cec8:	b5800044 	addi	r22,r22,1
  80cecc:	ba45883a 	add	r2,r23,r9
  80ced0:	12800043 	ldbu	r10,1(r2)
  80ced4:	5080010c 	andi	r2,r10,4
  80ced8:	103ff31e 	bne	r2,zero,80cea8 <__alt_data_end+0xff80cea8>
  80cedc:	528000cc 	andi	r10,r10,3
  80cee0:	50000426 	beq	r10,zero,80cef4 <_strtoull_r+0x180>
  80cee4:	54402926 	beq	r10,r17,80cf8c <_strtoull_r+0x218>
  80cee8:	00c015c4 	movi	r3,87
  80ceec:	48e9c83a 	sub	r20,r9,r3
  80cef0:	a73fef16 	blt	r20,fp,80ceb0 <__alt_data_end+0xff80ceb0>
  80cef4:	30002d16 	blt	r6,zero,80cfac <_strtoull_r+0x238>
  80cef8:	d9c00417 	ldw	r7,16(sp)
  80cefc:	01c7c83a 	sub	r3,zero,r7
  80cf00:	20c8f03a 	xor	r4,r4,r3
  80cf04:	21c5883a 	add	r2,r4,r7
  80cf08:	1109803a 	cmpltu	r4,r2,r4
  80cf0c:	28c6f03a 	xor	r3,r5,r3
  80cf10:	20c7883a 	add	r3,r4,r3
  80cf14:	d9000117 	ldw	r4,4(sp)
  80cf18:	20000426 	beq	r4,zero,80cf2c <_strtoull_r+0x1b8>
  80cf1c:	30002126 	beq	r6,zero,80cfa4 <_strtoull_r+0x230>
  80cf20:	b5bfffc4 	addi	r22,r22,-1
  80cf24:	d9c00117 	ldw	r7,4(sp)
  80cf28:	3d800015 	stw	r22,0(r7)
  80cf2c:	dfc01117 	ldw	ra,68(sp)
  80cf30:	df001017 	ldw	fp,64(sp)
  80cf34:	ddc00f17 	ldw	r23,60(sp)
  80cf38:	dd800e17 	ldw	r22,56(sp)
  80cf3c:	dd400d17 	ldw	r21,52(sp)
  80cf40:	dd000c17 	ldw	r20,48(sp)
  80cf44:	dcc00b17 	ldw	r19,44(sp)
  80cf48:	dc800a17 	ldw	r18,40(sp)
  80cf4c:	dc400917 	ldw	r17,36(sp)
  80cf50:	dc000817 	ldw	r16,32(sp)
  80cf54:	dec01204 	addi	sp,sp,72
  80cf58:	f800283a 	ret
  80cf5c:	24000d26 	beq	r4,r16,80cf94 <_strtoull_r+0x220>
  80cf60:	d9800017 	ldw	r6,0(sp)
  80cf64:	980f883a 	mov	r7,r19
  80cf68:	0813e800 	call	813e80 <__muldi3>
  80cf6c:	a00bd7fa 	srai	r5,r20,31
  80cf70:	a085883a 	add	r2,r20,r2
  80cf74:	1513803a 	cmpltu	r9,r2,r20
  80cf78:	28c7883a 	add	r3,r5,r3
  80cf7c:	1009883a 	mov	r4,r2
  80cf80:	48cb883a 	add	r5,r9,r3
  80cf84:	01800044 	movi	r6,1
  80cf88:	003fce06 	br	80cec4 <__alt_data_end+0xff80cec4>
  80cf8c:	00c00dc4 	movi	r3,55
  80cf90:	003fd606 	br	80ceec <__alt_data_end+0xff80ceec>
  80cf94:	2cbff21e 	bne	r5,r18,80cf60 <__alt_data_end+0xff80cf60>
  80cf98:	d9c00317 	ldw	r7,12(sp)
  80cf9c:	3d3fc816 	blt	r7,r20,80cec0 <__alt_data_end+0xff80cec0>
  80cfa0:	003fef06 	br	80cf60 <__alt_data_end+0xff80cf60>
  80cfa4:	dd800217 	ldw	r22,8(sp)
  80cfa8:	003fde06 	br	80cf24 <__alt_data_end+0xff80cf24>
  80cfac:	d9000517 	ldw	r4,20(sp)
  80cfb0:	00c00884 	movi	r3,34
  80cfb4:	00bfffc4 	movi	r2,-1
  80cfb8:	20c00015 	stw	r3,0(r4)
  80cfbc:	1007883a 	mov	r3,r2
  80cfc0:	003fd406 	br	80cf14 <__alt_data_end+0xff80cf14>
  80cfc4:	00800044 	movi	r2,1
  80cfc8:	1a000084 	addi	r8,r3,2
  80cfcc:	1a400043 	ldbu	r9,1(r3)
  80cfd0:	d8800415 	stw	r2,16(sp)
  80cfd4:	003f8606 	br	80cdf0 <__alt_data_end+0xff80cdf0>
  80cfd8:	1a000084 	addi	r8,r3,2
  80cfdc:	1a400043 	ldbu	r9,1(r3)
  80cfe0:	d8000415 	stw	zero,16(sp)
  80cfe4:	003f8206 	br	80cdf0 <__alt_data_end+0xff80cdf0>
  80cfe8:	40800003 	ldbu	r2,0(r8)
  80cfec:	00c01604 	movi	r3,88
  80cff0:	108037cc 	andi	r2,r2,223
  80cff4:	10c01426 	beq	r2,r3,80d048 <_strtoull_r+0x2d4>
  80cff8:	00800204 	movi	r2,8
  80cffc:	010001c4 	movi	r4,7
  80d000:	043fffc4 	movi	r16,-1
  80d004:	04880034 	movhi	r18,8192
  80d008:	d8800015 	stw	r2,0(sp)
  80d00c:	d9000315 	stw	r4,12(sp)
  80d010:	9425883a 	add	r18,r18,r16
  80d014:	0027883a 	mov	r19,zero
  80d018:	1039883a 	mov	fp,r2
  80d01c:	003f9806 	br	80ce80 <__alt_data_end+0xff80ce80>
  80d020:	00800c04 	movi	r2,48
  80d024:	48801426 	beq	r9,r2,80d078 <_strtoull_r+0x304>
  80d028:	04840034 	movhi	r18,4096
  80d02c:	008003c4 	movi	r2,15
  80d030:	94bfffc4 	addi	r18,r18,-1
  80d034:	d8800315 	stw	r2,12(sp)
  80d038:	043fffc4 	movi	r16,-1
  80d03c:	df000015 	stw	fp,0(sp)
  80d040:	0027883a 	mov	r19,zero
  80d044:	003f8e06 	br	80ce80 <__alt_data_end+0xff80ce80>
  80d048:	01000404 	movi	r4,16
  80d04c:	01c003c4 	movi	r7,15
  80d050:	043fffc4 	movi	r16,-1
  80d054:	04440034 	movhi	r17,4096
  80d058:	42400043 	ldbu	r9,1(r8)
  80d05c:	d9000015 	stw	r4,0(sp)
  80d060:	d9c00315 	stw	r7,12(sp)
  80d064:	42000084 	addi	r8,r8,2
  80d068:	8c23883a 	add	r17,r17,r16
  80d06c:	0027883a 	mov	r19,zero
  80d070:	2039883a 	mov	fp,r4
  80d074:	003f7406 	br	80ce48 <__alt_data_end+0xff80ce48>
  80d078:	40800003 	ldbu	r2,0(r8)
  80d07c:	00c01604 	movi	r3,88
  80d080:	108037cc 	andi	r2,r2,223
  80d084:	10fff026 	beq	r2,r3,80d048 <__alt_data_end+0xff80d048>
  80d088:	01c003c4 	movi	r7,15
  80d08c:	043fffc4 	movi	r16,-1
  80d090:	04840034 	movhi	r18,4096
  80d094:	d9c00315 	stw	r7,12(sp)
  80d098:	9425883a 	add	r18,r18,r16
  80d09c:	df000015 	stw	fp,0(sp)
  80d0a0:	0027883a 	mov	r19,zero
  80d0a4:	003f7606 	br	80ce80 <__alt_data_end+0xff80ce80>

0080d0a8 <_sungetc_r>:
  80d0a8:	00bfffc4 	movi	r2,-1
  80d0ac:	28803426 	beq	r5,r2,80d180 <_sungetc_r+0xd8>
  80d0b0:	3080030b 	ldhu	r2,12(r6)
  80d0b4:	30c00c17 	ldw	r3,48(r6)
  80d0b8:	defffd04 	addi	sp,sp,-12
  80d0bc:	10bff7cc 	andi	r2,r2,65503
  80d0c0:	dc400115 	stw	r17,4(sp)
  80d0c4:	dfc00215 	stw	ra,8(sp)
  80d0c8:	dc000015 	stw	r16,0(sp)
  80d0cc:	3080030d 	sth	r2,12(r6)
  80d0d0:	2c403fcc 	andi	r17,r5,255
  80d0d4:	18001626 	beq	r3,zero,80d130 <_sungetc_r+0x88>
  80d0d8:	30c00117 	ldw	r3,4(r6)
  80d0dc:	30800d17 	ldw	r2,52(r6)
  80d0e0:	3021883a 	mov	r16,r6
  80d0e4:	18800d0e 	bge	r3,r2,80d11c <_sungetc_r+0x74>
  80d0e8:	80c00017 	ldw	r3,0(r16)
  80d0ec:	8805883a 	mov	r2,r17
  80d0f0:	193fffc4 	addi	r4,r3,-1
  80d0f4:	81000015 	stw	r4,0(r16)
  80d0f8:	1c7fffc5 	stb	r17,-1(r3)
  80d0fc:	80c00117 	ldw	r3,4(r16)
  80d100:	18c00044 	addi	r3,r3,1
  80d104:	80c00115 	stw	r3,4(r16)
  80d108:	dfc00217 	ldw	ra,8(sp)
  80d10c:	dc400117 	ldw	r17,4(sp)
  80d110:	dc000017 	ldw	r16,0(sp)
  80d114:	dec00304 	addi	sp,sp,12
  80d118:	f800283a 	ret
  80d11c:	300b883a 	mov	r5,r6
  80d120:	08103000 	call	810300 <__submore>
  80d124:	103ff026 	beq	r2,zero,80d0e8 <__alt_data_end+0xff80d0e8>
  80d128:	00bfffc4 	movi	r2,-1
  80d12c:	003ff606 	br	80d108 <__alt_data_end+0xff80d108>
  80d130:	30800417 	ldw	r2,16(r6)
  80d134:	30c00017 	ldw	r3,0(r6)
  80d138:	10000326 	beq	r2,zero,80d148 <_sungetc_r+0xa0>
  80d13c:	10c0022e 	bgeu	r2,r3,80d148 <_sungetc_r+0xa0>
  80d140:	18bfffc3 	ldbu	r2,-1(r3)
  80d144:	14401026 	beq	r2,r17,80d188 <_sungetc_r+0xe0>
  80d148:	31400117 	ldw	r5,4(r6)
  80d14c:	30801084 	addi	r2,r6,66
  80d150:	31001004 	addi	r4,r6,64
  80d154:	30c00e15 	stw	r3,56(r6)
  80d158:	30800015 	stw	r2,0(r6)
  80d15c:	00c000c4 	movi	r3,3
  80d160:	00800044 	movi	r2,1
  80d164:	30800115 	stw	r2,4(r6)
  80d168:	31400f15 	stw	r5,60(r6)
  80d16c:	31000c15 	stw	r4,48(r6)
  80d170:	30c00d15 	stw	r3,52(r6)
  80d174:	34401085 	stb	r17,66(r6)
  80d178:	8805883a 	mov	r2,r17
  80d17c:	003fe206 	br	80d108 <__alt_data_end+0xff80d108>
  80d180:	00bfffc4 	movi	r2,-1
  80d184:	f800283a 	ret
  80d188:	31000117 	ldw	r4,4(r6)
  80d18c:	18ffffc4 	addi	r3,r3,-1
  80d190:	30c00015 	stw	r3,0(r6)
  80d194:	20c00044 	addi	r3,r4,1
  80d198:	30c00115 	stw	r3,4(r6)
  80d19c:	003fda06 	br	80d108 <__alt_data_end+0xff80d108>

0080d1a0 <__ssrefill_r>:
  80d1a0:	defffe04 	addi	sp,sp,-8
  80d1a4:	dc000015 	stw	r16,0(sp)
  80d1a8:	2821883a 	mov	r16,r5
  80d1ac:	29400c17 	ldw	r5,48(r5)
  80d1b0:	dfc00115 	stw	ra,4(sp)
  80d1b4:	28000e26 	beq	r5,zero,80d1f0 <__ssrefill_r+0x50>
  80d1b8:	80801004 	addi	r2,r16,64
  80d1bc:	28800126 	beq	r5,r2,80d1c4 <__ssrefill_r+0x24>
  80d1c0:	08018700 	call	801870 <_free_r>
  80d1c4:	80800f17 	ldw	r2,60(r16)
  80d1c8:	80000c15 	stw	zero,48(r16)
  80d1cc:	80800115 	stw	r2,4(r16)
  80d1d0:	10000726 	beq	r2,zero,80d1f0 <__ssrefill_r+0x50>
  80d1d4:	80c00e17 	ldw	r3,56(r16)
  80d1d8:	0005883a 	mov	r2,zero
  80d1dc:	80c00015 	stw	r3,0(r16)
  80d1e0:	dfc00117 	ldw	ra,4(sp)
  80d1e4:	dc000017 	ldw	r16,0(sp)
  80d1e8:	dec00204 	addi	sp,sp,8
  80d1ec:	f800283a 	ret
  80d1f0:	8080030b 	ldhu	r2,12(r16)
  80d1f4:	80c00417 	ldw	r3,16(r16)
  80d1f8:	80000115 	stw	zero,4(r16)
  80d1fc:	10800814 	ori	r2,r2,32
  80d200:	8080030d 	sth	r2,12(r16)
  80d204:	80c00015 	stw	r3,0(r16)
  80d208:	00bfffc4 	movi	r2,-1
  80d20c:	003ff406 	br	80d1e0 <__alt_data_end+0xff80d1e0>

0080d210 <_sfread_r>:
  80d210:	defff704 	addi	sp,sp,-36
  80d214:	dd800615 	stw	r22,24(sp)
  80d218:	39ad383a 	mul	r22,r7,r6
  80d21c:	ddc00715 	stw	r23,28(sp)
  80d220:	dd400515 	stw	r21,20(sp)
  80d224:	dc400115 	stw	r17,4(sp)
  80d228:	dfc00815 	stw	ra,32(sp)
  80d22c:	dd000415 	stw	r20,16(sp)
  80d230:	dcc00315 	stw	r19,12(sp)
  80d234:	dc800215 	stw	r18,8(sp)
  80d238:	dc000015 	stw	r16,0(sp)
  80d23c:	302f883a 	mov	r23,r6
  80d240:	382b883a 	mov	r21,r7
  80d244:	dc400917 	ldw	r17,36(sp)
  80d248:	b0002826 	beq	r22,zero,80d2ec <_sfread_r+0xdc>
  80d24c:	2029883a 	mov	r20,r4
  80d250:	2827883a 	mov	r19,r5
  80d254:	b025883a 	mov	r18,r22
  80d258:	00000b06 	br	80d288 <_sfread_r+0x78>
  80d25c:	08092180 	call	809218 <memcpy>
  80d260:	88800017 	ldw	r2,0(r17)
  80d264:	9c27883a 	add	r19,r19,r16
  80d268:	9425c83a 	sub	r18,r18,r16
  80d26c:	1421883a 	add	r16,r2,r16
  80d270:	88000115 	stw	zero,4(r17)
  80d274:	a009883a 	mov	r4,r20
  80d278:	8c000015 	stw	r16,0(r17)
  80d27c:	880b883a 	mov	r5,r17
  80d280:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80d284:	10001b1e 	bne	r2,zero,80d2f4 <_sfread_r+0xe4>
  80d288:	8c000117 	ldw	r16,4(r17)
  80d28c:	9809883a 	mov	r4,r19
  80d290:	89400017 	ldw	r5,0(r17)
  80d294:	800d883a 	mov	r6,r16
  80d298:	84bff036 	bltu	r16,r18,80d25c <__alt_data_end+0xff80d25c>
  80d29c:	900d883a 	mov	r6,r18
  80d2a0:	08092180 	call	809218 <memcpy>
  80d2a4:	88c00117 	ldw	r3,4(r17)
  80d2a8:	89000017 	ldw	r4,0(r17)
  80d2ac:	a805883a 	mov	r2,r21
  80d2b0:	1c87c83a 	sub	r3,r3,r18
  80d2b4:	24a5883a 	add	r18,r4,r18
  80d2b8:	88c00115 	stw	r3,4(r17)
  80d2bc:	8c800015 	stw	r18,0(r17)
  80d2c0:	dfc00817 	ldw	ra,32(sp)
  80d2c4:	ddc00717 	ldw	r23,28(sp)
  80d2c8:	dd800617 	ldw	r22,24(sp)
  80d2cc:	dd400517 	ldw	r21,20(sp)
  80d2d0:	dd000417 	ldw	r20,16(sp)
  80d2d4:	dcc00317 	ldw	r19,12(sp)
  80d2d8:	dc800217 	ldw	r18,8(sp)
  80d2dc:	dc400117 	ldw	r17,4(sp)
  80d2e0:	dc000017 	ldw	r16,0(sp)
  80d2e4:	dec00904 	addi	sp,sp,36
  80d2e8:	f800283a 	ret
  80d2ec:	0005883a 	mov	r2,zero
  80d2f0:	003ff306 	br	80d2c0 <__alt_data_end+0xff80d2c0>
  80d2f4:	b489c83a 	sub	r4,r22,r18
  80d2f8:	b80b883a 	mov	r5,r23
  80d2fc:	0814bc00 	call	814bc0 <__udivsi3>
  80d300:	003fef06 	br	80d2c0 <__alt_data_end+0xff80d2c0>

0080d304 <__ssvfiscanf_r>:
  80d304:	2880030b 	ldhu	r2,12(r5)
  80d308:	deff9a04 	addi	sp,sp,-408
  80d30c:	df006415 	stw	fp,400(sp)
  80d310:	dc805e15 	stw	r18,376(sp)
  80d314:	dfc06515 	stw	ra,404(sp)
  80d318:	ddc06315 	stw	r23,396(sp)
  80d31c:	dd806215 	stw	r22,392(sp)
  80d320:	dd406115 	stw	r21,388(sp)
  80d324:	dd006015 	stw	r20,384(sp)
  80d328:	dcc05f15 	stw	r19,380(sp)
  80d32c:	dc405d15 	stw	r17,372(sp)
  80d330:	dc005c15 	stw	r16,368(sp)
  80d334:	10c8000c 	andi	r3,r2,8192
  80d338:	d9c04f15 	stw	r7,316(sp)
  80d33c:	2839883a 	mov	fp,r5
  80d340:	2025883a 	mov	r18,r4
  80d344:	1800061e 	bne	r3,zero,80d360 <__ssvfiscanf_r+0x5c>
  80d348:	29001917 	ldw	r4,100(r5)
  80d34c:	00f7ffc4 	movi	r3,-8193
  80d350:	10880014 	ori	r2,r2,8192
  80d354:	20c6703a 	and	r3,r4,r3
  80d358:	2880030d 	sth	r2,12(r5)
  80d35c:	28c01915 	stw	r3,100(r5)
  80d360:	30800003 	ldbu	r2,0(r6)
  80d364:	da004104 	addi	r8,sp,260
  80d368:	0027883a 	mov	r19,zero
  80d36c:	050020b4 	movhi	r20,130
  80d370:	d8005115 	stw	zero,324(sp)
  80d374:	d8005015 	stw	zero,320(sp)
  80d378:	d8005315 	stw	zero,332(sp)
  80d37c:	da004e15 	stw	r8,312(sp)
  80d380:	d8804d15 	stw	r2,308(sp)
  80d384:	e02b883a 	mov	r21,fp
  80d388:	a537fb04 	addi	r20,r20,-8212
  80d38c:	9839883a 	mov	fp,r19
  80d390:	34400044 	addi	r17,r6,1
  80d394:	10001e26 	beq	r2,zero,80d410 <__ssvfiscanf_r+0x10c>
  80d398:	a1000017 	ldw	r4,0(r20)
  80d39c:	2087883a 	add	r3,r4,r2
  80d3a0:	18c00043 	ldbu	r3,1(r3)
  80d3a4:	18c0020c 	andi	r3,r3,8
  80d3a8:	18001b26 	beq	r3,zero,80d418 <__ssvfiscanf_r+0x114>
  80d3ac:	a8800117 	ldw	r2,4(r21)
  80d3b0:	00800e0e 	bge	zero,r2,80d3ec <__ssvfiscanf_r+0xe8>
  80d3b4:	a8c00017 	ldw	r3,0(r21)
  80d3b8:	a1000017 	ldw	r4,0(r20)
  80d3bc:	18800003 	ldbu	r2,0(r3)
  80d3c0:	2085883a 	add	r2,r4,r2
  80d3c4:	10800043 	ldbu	r2,1(r2)
  80d3c8:	1080020c 	andi	r2,r2,8
  80d3cc:	10000b26 	beq	r2,zero,80d3fc <__ssvfiscanf_r+0xf8>
  80d3d0:	a8800117 	ldw	r2,4(r21)
  80d3d4:	18c00044 	addi	r3,r3,1
  80d3d8:	a8c00015 	stw	r3,0(r21)
  80d3dc:	10bfffc4 	addi	r2,r2,-1
  80d3e0:	a8800115 	stw	r2,4(r21)
  80d3e4:	e7000044 	addi	fp,fp,1
  80d3e8:	00bff216 	blt	zero,r2,80d3b4 <__alt_data_end+0xff80d3b4>
  80d3ec:	9009883a 	mov	r4,r18
  80d3f0:	a80b883a 	mov	r5,r21
  80d3f4:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80d3f8:	103fee26 	beq	r2,zero,80d3b4 <__alt_data_end+0xff80d3b4>
  80d3fc:	880d883a 	mov	r6,r17
  80d400:	30800003 	ldbu	r2,0(r6)
  80d404:	34400044 	addi	r17,r6,1
  80d408:	d8804d15 	stw	r2,308(sp)
  80d40c:	103fe21e 	bne	r2,zero,80d398 <__alt_data_end+0xff80d398>
  80d410:	d8805317 	ldw	r2,332(sp)
  80d414:	0000c406 	br	80d728 <__ssvfiscanf_r+0x424>
  80d418:	00c00944 	movi	r3,37
  80d41c:	10c0cf1e 	bne	r2,r3,80d75c <__ssvfiscanf_r+0x458>
  80d420:	30c00043 	ldbu	r3,1(r6)
  80d424:	0021883a 	mov	r16,zero
  80d428:	0027883a 	mov	r19,zero
  80d42c:	01801e04 	movi	r6,120
  80d430:	01c01b04 	movi	r7,108
  80d434:	89400044 	addi	r5,r17,1
  80d438:	30c14636 	bltu	r6,r3,80d954 <__ssvfiscanf_r+0x650>
  80d43c:	180490ba 	slli	r2,r3,2
  80d440:	02c02074 	movhi	r11,129
  80d444:	5af51504 	addi	r11,r11,-11180
  80d448:	12c5883a 	add	r2,r2,r11
  80d44c:	10800017 	ldw	r2,0(r2)
  80d450:	1000683a 	jmp	r2
  80d454:	0080d724 	muli	r2,zero,860
  80d458:	0080d954 	movui	r2,869
  80d45c:	0080d954 	movui	r2,869
  80d460:	0080d954 	movui	r2,869
  80d464:	0080d954 	movui	r2,869
  80d468:	0080d954 	movui	r2,869
  80d46c:	0080d954 	movui	r2,869
  80d470:	0080d954 	movui	r2,869
  80d474:	0080d954 	movui	r2,869
  80d478:	0080d954 	movui	r2,869
  80d47c:	0080d954 	movui	r2,869
  80d480:	0080d954 	movui	r2,869
  80d484:	0080d954 	movui	r2,869
  80d488:	0080d954 	movui	r2,869
  80d48c:	0080d954 	movui	r2,869
  80d490:	0080d954 	movui	r2,869
  80d494:	0080d954 	movui	r2,869
  80d498:	0080d954 	movui	r2,869
  80d49c:	0080d954 	movui	r2,869
  80d4a0:	0080d954 	movui	r2,869
  80d4a4:	0080d954 	movui	r2,869
  80d4a8:	0080d954 	movui	r2,869
  80d4ac:	0080d954 	movui	r2,869
  80d4b0:	0080d954 	movui	r2,869
  80d4b4:	0080d954 	movui	r2,869
  80d4b8:	0080d954 	movui	r2,869
  80d4bc:	0080d954 	movui	r2,869
  80d4c0:	0080d954 	movui	r2,869
  80d4c4:	0080d954 	movui	r2,869
  80d4c8:	0080d954 	movui	r2,869
  80d4cc:	0080d954 	movui	r2,869
  80d4d0:	0080d954 	movui	r2,869
  80d4d4:	0080d954 	movui	r2,869
  80d4d8:	0080d954 	movui	r2,869
  80d4dc:	0080d954 	movui	r2,869
  80d4e0:	0080d954 	movui	r2,869
  80d4e4:	0080d954 	movui	r2,869
  80d4e8:	0080d758 	cmpnei	r2,zero,861
  80d4ec:	0080d954 	movui	r2,869
  80d4f0:	0080d954 	movui	r2,869
  80d4f4:	0080d954 	movui	r2,869
  80d4f8:	0080d954 	movui	r2,869
  80d4fc:	0080da84 	movi	r2,874
  80d500:	0080d954 	movui	r2,869
  80d504:	0080d954 	movui	r2,869
  80d508:	0080d954 	movui	r2,869
  80d50c:	0080d954 	movui	r2,869
  80d510:	0080d954 	movui	r2,869
  80d514:	0080da68 	cmpgeui	r2,zero,873
  80d518:	0080da68 	cmpgeui	r2,zero,873
  80d51c:	0080da68 	cmpgeui	r2,zero,873
  80d520:	0080da68 	cmpgeui	r2,zero,873
  80d524:	0080da68 	cmpgeui	r2,zero,873
  80d528:	0080da68 	cmpgeui	r2,zero,873
  80d52c:	0080da68 	cmpgeui	r2,zero,873
  80d530:	0080da68 	cmpgeui	r2,zero,873
  80d534:	0080da68 	cmpgeui	r2,zero,873
  80d538:	0080da68 	cmpgeui	r2,zero,873
  80d53c:	0080d954 	movui	r2,869
  80d540:	0080d954 	movui	r2,869
  80d544:	0080d954 	movui	r2,869
  80d548:	0080d954 	movui	r2,869
  80d54c:	0080d954 	movui	r2,869
  80d550:	0080d954 	movui	r2,869
  80d554:	0080d954 	movui	r2,869
  80d558:	0080d954 	movui	r2,869
  80d55c:	0080d954 	movui	r2,869
  80d560:	0080d954 	movui	r2,869
  80d564:	0080da40 	call	80da4 <__alt_mem_sdram_0-0x77f25c>
  80d568:	0080d954 	movui	r2,869
  80d56c:	0080d954 	movui	r2,869
  80d570:	0080d954 	movui	r2,869
  80d574:	0080d954 	movui	r2,869
  80d578:	0080d954 	movui	r2,869
  80d57c:	0080d954 	movui	r2,869
  80d580:	0080d954 	movui	r2,869
  80d584:	0080da2c 	andhi	r2,zero,872
  80d588:	0080d954 	movui	r2,869
  80d58c:	0080d954 	movui	r2,869
  80d590:	0080da20 	cmpeqi	r2,zero,872
  80d594:	0080d954 	movui	r2,869
  80d598:	0080d954 	movui	r2,869
  80d59c:	0080d954 	movui	r2,869
  80d5a0:	0080d954 	movui	r2,869
  80d5a4:	0080d954 	movui	r2,869
  80d5a8:	0080d954 	movui	r2,869
  80d5ac:	0080d954 	movui	r2,869
  80d5b0:	0080d954 	movui	r2,869
  80d5b4:	0080da14 	movui	r2,872
  80d5b8:	0080d954 	movui	r2,869
  80d5bc:	0080d954 	movui	r2,869
  80d5c0:	0080d9f8 	rdprs	r2,zero,871
  80d5c4:	0080d954 	movui	r2,869
  80d5c8:	0080d954 	movui	r2,869
  80d5cc:	0080d954 	movui	r2,869
  80d5d0:	0080d954 	movui	r2,869
  80d5d4:	0080d954 	movui	r2,869
  80d5d8:	0080d954 	movui	r2,869
  80d5dc:	0080d954 	movui	r2,869
  80d5e0:	0080d9e4 	muli	r2,zero,871
  80d5e4:	0080d9c0 	call	80d9c <__alt_mem_sdram_0-0x77f264>
  80d5e8:	0080d954 	movui	r2,869
  80d5ec:	0080d954 	movui	r2,869
  80d5f0:	0080d954 	movui	r2,869
  80d5f4:	0080d9ac 	andhi	r2,zero,870
  80d5f8:	0080d98c 	andi	r2,zero,870
  80d5fc:	0080d954 	movui	r2,869
  80d600:	0080d954 	movui	r2,869
  80d604:	0080d93c 	xorhi	r2,zero,868
  80d608:	0080d954 	movui	r2,869
  80d60c:	0080d8e8 	cmpgeui	r2,zero,867
  80d610:	0080d8c4 	movi	r2,867
  80d614:	0080d914 	movui	r2,868
  80d618:	0080d954 	movui	r2,869
  80d61c:	0080d954 	movui	r2,869
  80d620:	0080d89c 	xori	r2,zero,866
  80d624:	0080d954 	movui	r2,869
  80d628:	0080d794 	movui	r2,862
  80d62c:	0080d954 	movui	r2,869
  80d630:	0080d954 	movui	r2,869
  80d634:	0080da14 	movui	r2,872
  80d638:	dac04b04 	addi	r11,sp,300
  80d63c:	8400040c 	andi	r16,r16,16
  80d640:	5809883a 	mov	r4,r11
  80d644:	000b883a 	mov	r5,zero
  80d648:	01800204 	movi	r6,8
  80d64c:	dac05215 	stw	r11,328(sp)
  80d650:	0802d340 	call	802d34 <memset>
  80d654:	8002bb26 	beq	r16,zero,80e144 <__ssvfiscanf_r+0xe40>
  80d658:	dd804d04 	addi	r22,sp,308
  80d65c:	0007883a 	mov	r3,zero
  80d660:	1827883a 	mov	r19,r3
  80d664:	a8800017 	ldw	r2,0(r21)
  80d668:	a0c00017 	ldw	r3,0(r20)
  80d66c:	10800003 	ldbu	r2,0(r2)
  80d670:	1885883a 	add	r2,r3,r2
  80d674:	10800043 	ldbu	r2,1(r2)
  80d678:	1080020c 	andi	r2,r2,8
  80d67c:	1002cb1e 	bne	r2,zero,80e1ac <__ssvfiscanf_r+0xea8>
  80d680:	b802ca26 	beq	r23,zero,80e1ac <__ssvfiscanf_r+0xea8>
  80d684:	0808e580 	call	808e58 <__locale_mb_cur_max>
  80d688:	14c02126 	beq	r2,r19,80d710 <__ssvfiscanf_r+0x40c>
  80d68c:	a8800017 	ldw	r2,0(r21)
  80d690:	a9000117 	ldw	r4,4(r21)
  80d694:	dac04104 	addi	r11,sp,260
  80d698:	98c00044 	addi	r3,r19,1
  80d69c:	5ce7883a 	add	r19,r11,r19
  80d6a0:	dac05217 	ldw	r11,328(sp)
  80d6a4:	12000003 	ldbu	r8,0(r2)
  80d6a8:	213fffc4 	addi	r4,r4,-1
  80d6ac:	10800044 	addi	r2,r2,1
  80d6b0:	a9000115 	stw	r4,4(r21)
  80d6b4:	a8800015 	stw	r2,0(r21)
  80d6b8:	dac00015 	stw	r11,0(sp)
  80d6bc:	9009883a 	mov	r4,r18
  80d6c0:	180f883a 	mov	r7,r3
  80d6c4:	9a000005 	stb	r8,0(r19)
  80d6c8:	b00b883a 	mov	r5,r22
  80d6cc:	d9804104 	addi	r6,sp,260
  80d6d0:	d8c05a15 	stw	r3,360(sp)
  80d6d4:	0808f0c0 	call	808f0c <_mbrtowc_r>
  80d6d8:	013fffc4 	movi	r4,-1
  80d6dc:	d8c05a17 	ldw	r3,360(sp)
  80d6e0:	11000b26 	beq	r2,r4,80d710 <__ssvfiscanf_r+0x40c>
  80d6e4:	1002a126 	beq	r2,zero,80e16c <__ssvfiscanf_r+0xe68>
  80d6e8:	017fff84 	movi	r5,-2
  80d6ec:	1827883a 	mov	r19,r3
  80d6f0:	11431b1e 	bne	r2,r5,80e360 <__ssvfiscanf_r+0x105c>
  80d6f4:	a8800117 	ldw	r2,4(r21)
  80d6f8:	00bfda16 	blt	zero,r2,80d664 <__alt_data_end+0xff80d664>
  80d6fc:	9009883a 	mov	r4,r18
  80d700:	a80b883a 	mov	r5,r21
  80d704:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80d708:	103fd626 	beq	r2,zero,80d664 <__alt_data_end+0xff80d664>
  80d70c:	9802a726 	beq	r19,zero,80e1ac <__ssvfiscanf_r+0xea8>
  80d710:	da005317 	ldw	r8,332(sp)
  80d714:	40000326 	beq	r8,zero,80d724 <__ssvfiscanf_r+0x420>
  80d718:	a880030b 	ldhu	r2,12(r21)
  80d71c:	1080100c 	andi	r2,r2,64
  80d720:	10027726 	beq	r2,zero,80e100 <__ssvfiscanf_r+0xdfc>
  80d724:	00bfffc4 	movi	r2,-1
  80d728:	dfc06517 	ldw	ra,404(sp)
  80d72c:	df006417 	ldw	fp,400(sp)
  80d730:	ddc06317 	ldw	r23,396(sp)
  80d734:	dd806217 	ldw	r22,392(sp)
  80d738:	dd406117 	ldw	r21,388(sp)
  80d73c:	dd006017 	ldw	r20,384(sp)
  80d740:	dcc05f17 	ldw	r19,380(sp)
  80d744:	dc805e17 	ldw	r18,376(sp)
  80d748:	dc405d17 	ldw	r17,372(sp)
  80d74c:	dc005c17 	ldw	r16,368(sp)
  80d750:	dec06604 	addi	sp,sp,408
  80d754:	f800283a 	ret
  80d758:	2823883a 	mov	r17,r5
  80d75c:	a8800117 	ldw	r2,4(r21)
  80d760:	0082bf0e 	bge	zero,r2,80e260 <__ssvfiscanf_r+0xf5c>
  80d764:	a8800017 	ldw	r2,0(r21)
  80d768:	88ffffc3 	ldbu	r3,-1(r17)
  80d76c:	11000003 	ldbu	r4,0(r2)
  80d770:	20ff271e 	bne	r4,r3,80d410 <__alt_data_end+0xff80d410>
  80d774:	a8c00117 	ldw	r3,4(r21)
  80d778:	10800044 	addi	r2,r2,1
  80d77c:	a8800015 	stw	r2,0(r21)
  80d780:	18bfffc4 	addi	r2,r3,-1
  80d784:	a8800115 	stw	r2,4(r21)
  80d788:	e7000044 	addi	fp,fp,1
  80d78c:	880d883a 	mov	r6,r17
  80d790:	003f1b06 	br	80d400 <__alt_data_end+0xff80d400>
  80d794:	02c02074 	movhi	r11,129
  80d798:	5af2ba04 	addi	r11,r11,-13592
  80d79c:	02000284 	movi	r8,10
  80d7a0:	2823883a 	mov	r17,r5
  80d7a4:	982f883a 	mov	r23,r19
  80d7a8:	dac05115 	stw	r11,324(sp)
  80d7ac:	da005015 	stw	r8,320(sp)
  80d7b0:	058000c4 	movi	r22,3
  80d7b4:	a8800117 	ldw	r2,4(r21)
  80d7b8:	00803d0e 	bge	zero,r2,80d8b0 <__ssvfiscanf_r+0x5ac>
  80d7bc:	8080100c 	andi	r2,r16,64
  80d7c0:	10002626 	beq	r2,zero,80d85c <__ssvfiscanf_r+0x558>
  80d7c4:	00800084 	movi	r2,2
  80d7c8:	b0818f26 	beq	r22,r2,80de08 <__ssvfiscanf_r+0xb04>
  80d7cc:	008000c4 	movi	r2,3
  80d7d0:	b080b126 	beq	r22,r2,80da98 <__ssvfiscanf_r+0x794>
  80d7d4:	00800044 	movi	r2,1
  80d7d8:	b0817226 	beq	r22,r2,80dda4 <__ssvfiscanf_r+0xaa0>
  80d7dc:	9800011e 	bne	r19,zero,80d7e4 <__ssvfiscanf_r+0x4e0>
  80d7e0:	102f883a 	mov	r23,r2
  80d7e4:	8080004c 	andi	r2,r16,1
  80d7e8:	10020f1e 	bne	r2,zero,80e028 <__ssvfiscanf_r+0xd24>
  80d7ec:	8400040c 	andi	r16,r16,16
  80d7f0:	80028226 	beq	r16,zero,80e1fc <__ssvfiscanf_r+0xef8>
  80d7f4:	0021883a 	mov	r16,zero
  80d7f8:	00000906 	br	80d820 <__ssvfiscanf_r+0x51c>
  80d7fc:	a8c00017 	ldw	r3,0(r21)
  80d800:	9009883a 	mov	r4,r18
  80d804:	a80b883a 	mov	r5,r21
  80d808:	1887883a 	add	r3,r3,r2
  80d80c:	a8c00015 	stw	r3,0(r21)
  80d810:	80a1883a 	add	r16,r16,r2
  80d814:	b8afc83a 	sub	r23,r23,r2
  80d818:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80d81c:	1002731e 	bne	r2,zero,80e1ec <__ssvfiscanf_r+0xee8>
  80d820:	a8800117 	ldw	r2,4(r21)
  80d824:	15fff516 	blt	r2,r23,80d7fc <__alt_data_end+0xff80d7fc>
  80d828:	a9000017 	ldw	r4,0(r21)
  80d82c:	15c5c83a 	sub	r2,r2,r23
  80d830:	85e1883a 	add	r16,r16,r23
  80d834:	25c7883a 	add	r3,r4,r23
  80d838:	a8800115 	stw	r2,4(r21)
  80d83c:	a8c00015 	stw	r3,0(r21)
  80d840:	e439883a 	add	fp,fp,r16
  80d844:	880d883a 	mov	r6,r17
  80d848:	003eed06 	br	80d400 <__alt_data_end+0xff80d400>
  80d84c:	9009883a 	mov	r4,r18
  80d850:	a80b883a 	mov	r5,r21
  80d854:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80d858:	103fad1e 	bne	r2,zero,80d710 <__alt_data_end+0xff80d710>
  80d85c:	a1400017 	ldw	r5,0(r20)
  80d860:	a9000017 	ldw	r4,0(r21)
  80d864:	00000206 	br	80d870 <__ssvfiscanf_r+0x56c>
  80d868:	21000044 	addi	r4,r4,1
  80d86c:	a9000015 	stw	r4,0(r21)
  80d870:	20800003 	ldbu	r2,0(r4)
  80d874:	2885883a 	add	r2,r5,r2
  80d878:	10800043 	ldbu	r2,1(r2)
  80d87c:	1080020c 	andi	r2,r2,8
  80d880:	103fd026 	beq	r2,zero,80d7c4 <__alt_data_end+0xff80d7c4>
  80d884:	a8800117 	ldw	r2,4(r21)
  80d888:	e7000044 	addi	fp,fp,1
  80d88c:	10bfffc4 	addi	r2,r2,-1
  80d890:	a8800115 	stw	r2,4(r21)
  80d894:	00bff416 	blt	zero,r2,80d868 <__alt_data_end+0xff80d868>
  80d898:	003fec06 	br	80d84c <__alt_data_end+0xff80d84c>
  80d89c:	a8800117 	ldw	r2,4(r21)
  80d8a0:	2823883a 	mov	r17,r5
  80d8a4:	982f883a 	mov	r23,r19
  80d8a8:	05800084 	movi	r22,2
  80d8ac:	00bfc316 	blt	zero,r2,80d7bc <__alt_data_end+0xff80d7bc>
  80d8b0:	9009883a 	mov	r4,r18
  80d8b4:	a80b883a 	mov	r5,r21
  80d8b8:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80d8bc:	103fbf26 	beq	r2,zero,80d7bc <__alt_data_end+0xff80d7bc>
  80d8c0:	003f9306 	br	80d710 <__alt_data_end+0xff80d710>
  80d8c4:	2823883a 	mov	r17,r5
  80d8c8:	02c02074 	movhi	r11,129
  80d8cc:	5af2ba04 	addi	r11,r11,-13592
  80d8d0:	02000204 	movi	r8,8
  80d8d4:	982f883a 	mov	r23,r19
  80d8d8:	dac05115 	stw	r11,324(sp)
  80d8dc:	da005015 	stw	r8,320(sp)
  80d8e0:	058000c4 	movi	r22,3
  80d8e4:	003fb306 	br	80d7b4 <__alt_data_end+0xff80d7b4>
  80d8e8:	8080040c 	andi	r2,r16,16
  80d8ec:	2823883a 	mov	r17,r5
  80d8f0:	103ec21e 	bne	r2,zero,80d3fc <__alt_data_end+0xff80d3fc>
  80d8f4:	8080010c 	andi	r2,r16,4
  80d8f8:	10026526 	beq	r2,zero,80e290 <__ssvfiscanf_r+0xf8c>
  80d8fc:	dac04f17 	ldw	r11,316(sp)
  80d900:	58800017 	ldw	r2,0(r11)
  80d904:	5ac00104 	addi	r11,r11,4
  80d908:	dac04f15 	stw	r11,316(sp)
  80d90c:	1700000d 	sth	fp,0(r2)
  80d910:	003eba06 	br	80d3fc <__alt_data_end+0xff80d3fc>
  80d914:	2823883a 	mov	r17,r5
  80d918:	84008814 	ori	r16,r16,544
  80d91c:	02c02074 	movhi	r11,129
  80d920:	5af2ba04 	addi	r11,r11,-13592
  80d924:	02000404 	movi	r8,16
  80d928:	982f883a 	mov	r23,r19
  80d92c:	dac05115 	stw	r11,324(sp)
  80d930:	da005015 	stw	r8,320(sp)
  80d934:	058000c4 	movi	r22,3
  80d938:	003f9e06 	br	80d7b4 <__alt_data_end+0xff80d7b4>
  80d93c:	88c00043 	ldbu	r3,1(r17)
  80d940:	19c24c26 	beq	r3,r7,80e274 <__ssvfiscanf_r+0xf70>
  80d944:	2823883a 	mov	r17,r5
  80d948:	84000054 	ori	r16,r16,1
  80d94c:	89400044 	addi	r5,r17,1
  80d950:	30feba2e 	bgeu	r6,r3,80d43c <__alt_data_end+0xff80d43c>
  80d954:	20c7883a 	add	r3,r4,r3
  80d958:	18800043 	ldbu	r2,1(r3)
  80d95c:	00c00044 	movi	r3,1
  80d960:	2823883a 	mov	r17,r5
  80d964:	108000cc 	andi	r2,r2,3
  80d968:	10c24726 	beq	r2,r3,80e288 <__ssvfiscanf_r+0xf84>
  80d96c:	00802074 	movhi	r2,129
  80d970:	10b16404 	addi	r2,r2,-14960
  80d974:	02000284 	movi	r8,10
  80d978:	d8805115 	stw	r2,324(sp)
  80d97c:	982f883a 	mov	r23,r19
  80d980:	da005015 	stw	r8,320(sp)
  80d984:	058000c4 	movi	r22,3
  80d988:	003f8a06 	br	80d7b4 <__alt_data_end+0xff80d7b4>
  80d98c:	02c02074 	movhi	r11,129
  80d990:	5af16404 	addi	r11,r11,-14960
  80d994:	982f883a 	mov	r23,r19
  80d998:	2823883a 	mov	r17,r5
  80d99c:	dac05115 	stw	r11,324(sp)
  80d9a0:	d8005015 	stw	zero,320(sp)
  80d9a4:	058000c4 	movi	r22,3
  80d9a8:	003f8206 	br	80d7b4 <__alt_data_end+0xff80d7b4>
  80d9ac:	88800043 	ldbu	r2,1(r17)
  80d9b0:	84000114 	ori	r16,r16,4
  80d9b4:	2823883a 	mov	r17,r5
  80d9b8:	10c03fcc 	andi	r3,r2,255
  80d9bc:	003e9d06 	br	80d434 <__alt_data_end+0xff80d434>
  80d9c0:	00802074 	movhi	r2,129
  80d9c4:	10b16404 	addi	r2,r2,-14960
  80d9c8:	02000284 	movi	r8,10
  80d9cc:	2823883a 	mov	r17,r5
  80d9d0:	982f883a 	mov	r23,r19
  80d9d4:	d8805115 	stw	r2,324(sp)
  80d9d8:	da005015 	stw	r8,320(sp)
  80d9dc:	058000c4 	movi	r22,3
  80d9e0:	003f7406 	br	80d7b4 <__alt_data_end+0xff80d7b4>
  80d9e4:	2823883a 	mov	r17,r5
  80d9e8:	84001014 	ori	r16,r16,64
  80d9ec:	982f883a 	mov	r23,r19
  80d9f0:	002d883a 	mov	r22,zero
  80d9f4:	003f6f06 	br	80d7b4 <__alt_data_end+0xff80d7b4>
  80d9f8:	d9000104 	addi	r4,sp,4
  80d9fc:	080abf00 	call	80abf0 <__sccl>
  80da00:	1023883a 	mov	r17,r2
  80da04:	84001014 	ori	r16,r16,64
  80da08:	982f883a 	mov	r23,r19
  80da0c:	05800044 	movi	r22,1
  80da10:	003f6806 	br	80d7b4 <__alt_data_end+0xff80d7b4>
  80da14:	2823883a 	mov	r17,r5
  80da18:	84008014 	ori	r16,r16,512
  80da1c:	003fbf06 	br	80d91c <__alt_data_end+0xff80d91c>
  80da20:	2823883a 	mov	r17,r5
  80da24:	84000054 	ori	r16,r16,1
  80da28:	003fa706 	br	80d8c8 <__alt_data_end+0xff80d8c8>
  80da2c:	88800043 	ldbu	r2,1(r17)
  80da30:	84000094 	ori	r16,r16,2
  80da34:	2823883a 	mov	r17,r5
  80da38:	10c03fcc 	andi	r3,r2,255
  80da3c:	003e7d06 	br	80d434 <__alt_data_end+0xff80d434>
  80da40:	2823883a 	mov	r17,r5
  80da44:	84000054 	ori	r16,r16,1
  80da48:	02c02074 	movhi	r11,129
  80da4c:	5af16404 	addi	r11,r11,-14960
  80da50:	02000284 	movi	r8,10
  80da54:	982f883a 	mov	r23,r19
  80da58:	dac05115 	stw	r11,324(sp)
  80da5c:	da005015 	stw	r8,320(sp)
  80da60:	058000c4 	movi	r22,3
  80da64:	003f5306 	br	80d7b4 <__alt_data_end+0xff80d7b4>
  80da68:	9cc002a4 	muli	r19,r19,10
  80da6c:	88800043 	ldbu	r2,1(r17)
  80da70:	2823883a 	mov	r17,r5
  80da74:	98e7883a 	add	r19,r19,r3
  80da78:	9cfff404 	addi	r19,r19,-48
  80da7c:	10c03fcc 	andi	r3,r2,255
  80da80:	003e6c06 	br	80d434 <__alt_data_end+0xff80d434>
  80da84:	88800043 	ldbu	r2,1(r17)
  80da88:	84000414 	ori	r16,r16,16
  80da8c:	2823883a 	mov	r17,r5
  80da90:	10c03fcc 	andi	r3,r2,255
  80da94:	003e6706 	br	80d434 <__alt_data_end+0xff80d434>
  80da98:	98bfffc4 	addi	r2,r19,-1
  80da9c:	01000984 	movi	r4,38
  80daa0:	2081012e 	bgeu	r4,r2,80dea8 <__ssvfiscanf_r+0xba4>
  80daa4:	99fff644 	addi	r7,r19,-39
  80daa8:	05c009c4 	movi	r23,39
  80daac:	82036014 	ori	r8,r16,3456
  80dab0:	0021883a 	mov	r16,zero
  80dab4:	8813883a 	mov	r9,r17
  80dab8:	8023883a 	mov	r17,r16
  80dabc:	dc005017 	ldw	r16,320(sp)
  80dac0:	dd804104 	addi	r22,sp,260
  80dac4:	00c01344 	movi	r3,77
  80dac8:	02808004 	movi	r10,512
  80dacc:	01bf7fc4 	movi	r6,-513
  80dad0:	04ffdfc4 	movi	r19,-129
  80dad4:	a9000017 	ldw	r4,0(r21)
  80dad8:	21400003 	ldbu	r5,0(r4)
  80dadc:	28bff544 	addi	r2,r5,-43
  80dae0:	10803fcc 	andi	r2,r2,255
  80dae4:	18806336 	bltu	r3,r2,80dc74 <__ssvfiscanf_r+0x970>
  80dae8:	100490ba 	slli	r2,r2,2
  80daec:	02c02074 	movhi	r11,129
  80daf0:	5af6c004 	addi	r11,r11,-9472
  80daf4:	12c5883a 	add	r2,r2,r11
  80daf8:	10800017 	ldw	r2,0(r2)
  80dafc:	1000683a 	jmp	r2
  80db00:	0080dd94 	movui	r2,886
  80db04:	0080dc74 	movhi	r2,881
  80db08:	0080dd94 	movui	r2,886
  80db0c:	0080dc74 	movhi	r2,881
  80db10:	0080dc74 	movhi	r2,881
  80db14:	0080dd0c 	andi	r2,zero,884
  80db18:	0080dcec 	andhi	r2,zero,883
  80db1c:	0080dcec 	andhi	r2,zero,883
  80db20:	0080dcec 	andhi	r2,zero,883
  80db24:	0080dcec 	andhi	r2,zero,883
  80db28:	0080dcec 	andhi	r2,zero,883
  80db2c:	0080dcec 	andhi	r2,zero,883
  80db30:	0080dcec 	andhi	r2,zero,883
  80db34:	0080dccc 	andi	r2,zero,883
  80db38:	0080dccc 	andi	r2,zero,883
  80db3c:	0080dc74 	movhi	r2,881
  80db40:	0080dc74 	movhi	r2,881
  80db44:	0080dc74 	movhi	r2,881
  80db48:	0080dc74 	movhi	r2,881
  80db4c:	0080dc74 	movhi	r2,881
  80db50:	0080dc74 	movhi	r2,881
  80db54:	0080dc74 	movhi	r2,881
  80db58:	0080dcb8 	rdprs	r2,zero,882
  80db5c:	0080dcb8 	rdprs	r2,zero,882
  80db60:	0080dcb8 	rdprs	r2,zero,882
  80db64:	0080dcb8 	rdprs	r2,zero,882
  80db68:	0080dcb8 	rdprs	r2,zero,882
  80db6c:	0080dcb8 	rdprs	r2,zero,882
  80db70:	0080dc74 	movhi	r2,881
  80db74:	0080dc74 	movhi	r2,881
  80db78:	0080dc74 	movhi	r2,881
  80db7c:	0080dc74 	movhi	r2,881
  80db80:	0080dc74 	movhi	r2,881
  80db84:	0080dc74 	movhi	r2,881
  80db88:	0080dc74 	movhi	r2,881
  80db8c:	0080dc74 	movhi	r2,881
  80db90:	0080dc74 	movhi	r2,881
  80db94:	0080dc74 	movhi	r2,881
  80db98:	0080dc74 	movhi	r2,881
  80db9c:	0080dc74 	movhi	r2,881
  80dba0:	0080dc74 	movhi	r2,881
  80dba4:	0080dc74 	movhi	r2,881
  80dba8:	0080dc74 	movhi	r2,881
  80dbac:	0080dc74 	movhi	r2,881
  80dbb0:	0080dc74 	movhi	r2,881
  80dbb4:	0080dc38 	rdprs	r2,zero,880
  80dbb8:	0080dc74 	movhi	r2,881
  80dbbc:	0080dc74 	movhi	r2,881
  80dbc0:	0080dc74 	movhi	r2,881
  80dbc4:	0080dc74 	movhi	r2,881
  80dbc8:	0080dc74 	movhi	r2,881
  80dbcc:	0080dc74 	movhi	r2,881
  80dbd0:	0080dc74 	movhi	r2,881
  80dbd4:	0080dc74 	movhi	r2,881
  80dbd8:	0080dcb8 	rdprs	r2,zero,882
  80dbdc:	0080dcb8 	rdprs	r2,zero,882
  80dbe0:	0080dcb8 	rdprs	r2,zero,882
  80dbe4:	0080dcb8 	rdprs	r2,zero,882
  80dbe8:	0080dcb8 	rdprs	r2,zero,882
  80dbec:	0080dcb8 	rdprs	r2,zero,882
  80dbf0:	0080dc74 	movhi	r2,881
  80dbf4:	0080dc74 	movhi	r2,881
  80dbf8:	0080dc74 	movhi	r2,881
  80dbfc:	0080dc74 	movhi	r2,881
  80dc00:	0080dc74 	movhi	r2,881
  80dc04:	0080dc74 	movhi	r2,881
  80dc08:	0080dc74 	movhi	r2,881
  80dc0c:	0080dc74 	movhi	r2,881
  80dc10:	0080dc74 	movhi	r2,881
  80dc14:	0080dc74 	movhi	r2,881
  80dc18:	0080dc74 	movhi	r2,881
  80dc1c:	0080dc74 	movhi	r2,881
  80dc20:	0080dc74 	movhi	r2,881
  80dc24:	0080dc74 	movhi	r2,881
  80dc28:	0080dc74 	movhi	r2,881
  80dc2c:	0080dc74 	movhi	r2,881
  80dc30:	0080dc74 	movhi	r2,881
  80dc34:	0080dc38 	rdprs	r2,zero,880
  80dc38:	4081800c 	andi	r2,r8,1536
  80dc3c:	12800d1e 	bne	r2,r10,80dc74 <__ssvfiscanf_r+0x970>
  80dc40:	4190703a 	and	r8,r8,r6
  80dc44:	42014014 	ori	r8,r8,1280
  80dc48:	04000404 	movi	r16,16
  80dc4c:	a8800117 	ldw	r2,4(r21)
  80dc50:	b1400005 	stb	r5,0(r22)
  80dc54:	b5800044 	addi	r22,r22,1
  80dc58:	10bfffc4 	addi	r2,r2,-1
  80dc5c:	a8800115 	stw	r2,4(r21)
  80dc60:	00803b0e 	bge	zero,r2,80dd50 <__ssvfiscanf_r+0xa4c>
  80dc64:	21000044 	addi	r4,r4,1
  80dc68:	a9000015 	stw	r4,0(r21)
  80dc6c:	bdffffc4 	addi	r23,r23,-1
  80dc70:	b83f981e 	bne	r23,zero,80dad4 <__alt_data_end+0xff80dad4>
  80dc74:	dc005015 	stw	r16,320(sp)
  80dc78:	4080400c 	andi	r2,r8,256
  80dc7c:	8821883a 	mov	r16,r17
  80dc80:	4823883a 	mov	r17,r9
  80dc84:	10000426 	beq	r2,zero,80dc98 <__ssvfiscanf_r+0x994>
  80dc88:	dac04e17 	ldw	r11,312(sp)
  80dc8c:	5d816c36 	bltu	r11,r22,80e240 <__ssvfiscanf_r+0xf3c>
  80dc90:	dac04e17 	ldw	r11,312(sp)
  80dc94:	b2fdde26 	beq	r22,r11,80d410 <__alt_data_end+0xff80d410>
  80dc98:	4080040c 	andi	r2,r8,16
  80dc9c:	1000ce26 	beq	r2,zero,80dfd8 <__ssvfiscanf_r+0xcd4>
  80dca0:	dac04e17 	ldw	r11,312(sp)
  80dca4:	880d883a 	mov	r6,r17
  80dca8:	b2edc83a 	sub	r22,r22,r11
  80dcac:	b42d883a 	add	r22,r22,r16
  80dcb0:	e5b9883a 	add	fp,fp,r22
  80dcb4:	003dd206 	br	80d400 <__alt_data_end+0xff80d400>
  80dcb8:	00800284 	movi	r2,10
  80dcbc:	143fed0e 	bge	r2,r16,80dc74 <__alt_data_end+0xff80dc74>
  80dcc0:	00bd1fc4 	movi	r2,-2945
  80dcc4:	4090703a 	and	r8,r8,r2
  80dcc8:	003fe006 	br	80dc4c <__alt_data_end+0xff80dc4c>
  80dccc:	02c020b4 	movhi	r11,130
  80dcd0:	8421883a 	add	r16,r16,r16
  80dcd4:	5aeff804 	addi	r11,r11,-16416
  80dcd8:	5c05883a 	add	r2,r11,r16
  80dcdc:	1400000f 	ldh	r16,0(r2)
  80dce0:	00800204 	movi	r2,8
  80dce4:	143ff616 	blt	r2,r16,80dcc0 <__alt_data_end+0xff80dcc0>
  80dce8:	003fe206 	br	80dc74 <__alt_data_end+0xff80dc74>
  80dcec:	02c020b4 	movhi	r11,130
  80dcf0:	8421883a 	add	r16,r16,r16
  80dcf4:	5aeff804 	addi	r11,r11,-16416
  80dcf8:	5c05883a 	add	r2,r11,r16
  80dcfc:	1400000f 	ldh	r16,0(r2)
  80dd00:	00bd1fc4 	movi	r2,-2945
  80dd04:	4090703a 	and	r8,r8,r2
  80dd08:	003fd006 	br	80dc4c <__alt_data_end+0xff80dc4c>
  80dd0c:	4082000c 	andi	r2,r8,2048
  80dd10:	103fce26 	beq	r2,zero,80dc4c <__alt_data_end+0xff80dc4c>
  80dd14:	8000021e 	bne	r16,zero,80dd20 <__ssvfiscanf_r+0xa1c>
  80dd18:	42008014 	ori	r8,r8,512
  80dd1c:	04000204 	movi	r16,8
  80dd20:	4081000c 	andi	r2,r8,1024
  80dd24:	1000f31e 	bne	r2,zero,80e0f4 <__ssvfiscanf_r+0xdf0>
  80dd28:	00bf1fc4 	movi	r2,-897
  80dd2c:	4090703a 	and	r8,r8,r2
  80dd30:	38000226 	beq	r7,zero,80dd3c <__ssvfiscanf_r+0xa38>
  80dd34:	39ffffc4 	addi	r7,r7,-1
  80dd38:	bdc00044 	addi	r23,r23,1
  80dd3c:	a8800117 	ldw	r2,4(r21)
  80dd40:	8c400044 	addi	r17,r17,1
  80dd44:	10bfffc4 	addi	r2,r2,-1
  80dd48:	a8800115 	stw	r2,4(r21)
  80dd4c:	00bfc516 	blt	zero,r2,80dc64 <__alt_data_end+0xff80dc64>
  80dd50:	9009883a 	mov	r4,r18
  80dd54:	a80b883a 	mov	r5,r21
  80dd58:	d8c05a15 	stw	r3,360(sp)
  80dd5c:	d9805715 	stw	r6,348(sp)
  80dd60:	d9c05815 	stw	r7,352(sp)
  80dd64:	da005b15 	stw	r8,364(sp)
  80dd68:	da405915 	stw	r9,356(sp)
  80dd6c:	da805615 	stw	r10,344(sp)
  80dd70:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80dd74:	d8c05a17 	ldw	r3,360(sp)
  80dd78:	d9805717 	ldw	r6,348(sp)
  80dd7c:	d9c05817 	ldw	r7,352(sp)
  80dd80:	da005b17 	ldw	r8,364(sp)
  80dd84:	da405917 	ldw	r9,356(sp)
  80dd88:	da805617 	ldw	r10,344(sp)
  80dd8c:	103fb726 	beq	r2,zero,80dc6c <__alt_data_end+0xff80dc6c>
  80dd90:	003fb806 	br	80dc74 <__alt_data_end+0xff80dc74>
  80dd94:	4080200c 	andi	r2,r8,128
  80dd98:	103fb626 	beq	r2,zero,80dc74 <__alt_data_end+0xff80dc74>
  80dd9c:	44d0703a 	and	r8,r8,r19
  80dda0:	003faa06 	br	80dc4c <__alt_data_end+0xff80dc4c>
  80dda4:	9800011e 	bne	r19,zero,80ddac <__ssvfiscanf_r+0xaa8>
  80dda8:	05ffffc4 	movi	r23,-1
  80ddac:	8400040c 	andi	r16,r16,16
  80ddb0:	80003f26 	beq	r16,zero,80deb0 <__ssvfiscanf_r+0xbac>
  80ddb4:	a9000017 	ldw	r4,0(r21)
  80ddb8:	0027883a 	mov	r19,zero
  80ddbc:	20800003 	ldbu	r2,0(r4)
  80ddc0:	dac00104 	addi	r11,sp,4
  80ddc4:	5885883a 	add	r2,r11,r2
  80ddc8:	10800007 	ldb	r2,0(r2)
  80ddcc:	10010426 	beq	r2,zero,80e1e0 <__ssvfiscanf_r+0xedc>
  80ddd0:	a8800117 	ldw	r2,4(r21)
  80ddd4:	21000044 	addi	r4,r4,1
  80ddd8:	9cc00044 	addi	r19,r19,1
  80dddc:	10bfffc4 	addi	r2,r2,-1
  80dde0:	a8800115 	stw	r2,4(r21)
  80dde4:	a9000015 	stw	r4,0(r21)
  80dde8:	bcc02c26 	beq	r23,r19,80de9c <__ssvfiscanf_r+0xb98>
  80ddec:	00bff316 	blt	zero,r2,80ddbc <__alt_data_end+0xff80ddbc>
  80ddf0:	9009883a 	mov	r4,r18
  80ddf4:	a80b883a 	mov	r5,r21
  80ddf8:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80ddfc:	1000271e 	bne	r2,zero,80de9c <__ssvfiscanf_r+0xb98>
  80de00:	a9000017 	ldw	r4,0(r21)
  80de04:	003fed06 	br	80ddbc <__alt_data_end+0xff80ddbc>
  80de08:	9800011e 	bne	r19,zero,80de10 <__ssvfiscanf_r+0xb0c>
  80de0c:	05ffffc4 	movi	r23,-1
  80de10:	8080004c 	andi	r2,r16,1
  80de14:	103e081e 	bne	r2,zero,80d638 <__alt_data_end+0xff80d638>
  80de18:	8400040c 	andi	r16,r16,16
  80de1c:	80004526 	beq	r16,zero,80df34 <__ssvfiscanf_r+0xc30>
  80de20:	a1400017 	ldw	r5,0(r20)
  80de24:	a9000017 	ldw	r4,0(r21)
  80de28:	0021883a 	mov	r16,zero
  80de2c:	20800003 	ldbu	r2,0(r4)
  80de30:	2885883a 	add	r2,r5,r2
  80de34:	10800043 	ldbu	r2,1(r2)
  80de38:	1080020c 	andi	r2,r2,8
  80de3c:	103e801e 	bne	r2,zero,80d840 <__alt_data_end+0xff80d840>
  80de40:	a8800117 	ldw	r2,4(r21)
  80de44:	21000044 	addi	r4,r4,1
  80de48:	84000044 	addi	r16,r16,1
  80de4c:	10bfffc4 	addi	r2,r2,-1
  80de50:	a8800115 	stw	r2,4(r21)
  80de54:	a9000015 	stw	r4,0(r21)
  80de58:	bc3e7926 	beq	r23,r16,80d840 <__alt_data_end+0xff80d840>
  80de5c:	00bff316 	blt	zero,r2,80de2c <__alt_data_end+0xff80de2c>
  80de60:	9009883a 	mov	r4,r18
  80de64:	a80b883a 	mov	r5,r21
  80de68:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80de6c:	103e741e 	bne	r2,zero,80d840 <__alt_data_end+0xff80d840>
  80de70:	a1400017 	ldw	r5,0(r20)
  80de74:	a9000017 	ldw	r4,0(r21)
  80de78:	003fec06 	br	80de2c <__alt_data_end+0xff80de2c>
  80de7c:	2809883a 	mov	r4,r5
  80de80:	24e7c83a 	sub	r19,r4,r19
  80de84:	983d6226 	beq	r19,zero,80d410 <__alt_data_end+0xff80d410>
  80de88:	da005317 	ldw	r8,332(sp)
  80de8c:	20000005 	stb	zero,0(r4)
  80de90:	dc004f15 	stw	r16,316(sp)
  80de94:	42000044 	addi	r8,r8,1
  80de98:	da005315 	stw	r8,332(sp)
  80de9c:	e4f9883a 	add	fp,fp,r19
  80dea0:	880d883a 	mov	r6,r17
  80dea4:	003d5606 	br	80d400 <__alt_data_end+0xff80d400>
  80dea8:	000f883a 	mov	r7,zero
  80deac:	003eff06 	br	80daac <__alt_data_end+0xff80daac>
  80deb0:	da004f17 	ldw	r8,316(sp)
  80deb4:	b8ffffc4 	addi	r3,r23,-1
  80deb8:	44c00017 	ldw	r19,0(r8)
  80debc:	44000104 	addi	r16,r8,4
  80dec0:	980b883a 	mov	r5,r19
  80dec4:	98ef883a 	add	r23,r19,r3
  80dec8:	00000106 	br	80ded0 <__ssvfiscanf_r+0xbcc>
  80decc:	b00b883a 	mov	r5,r22
  80ded0:	a8c00017 	ldw	r3,0(r21)
  80ded4:	dac00104 	addi	r11,sp,4
  80ded8:	280d883a 	mov	r6,r5
  80dedc:	18800003 	ldbu	r2,0(r3)
  80dee0:	5885883a 	add	r2,r11,r2
  80dee4:	10800007 	ldb	r2,0(r2)
  80dee8:	103fe426 	beq	r2,zero,80de7c <__alt_data_end+0xff80de7c>
  80deec:	a8800117 	ldw	r2,4(r21)
  80def0:	19c00044 	addi	r7,r3,1
  80def4:	a9c00015 	stw	r7,0(r21)
  80def8:	10bfffc4 	addi	r2,r2,-1
  80defc:	a8800115 	stw	r2,4(r21)
  80df00:	18800003 	ldbu	r2,0(r3)
  80df04:	35800044 	addi	r22,r6,1
  80df08:	28800005 	stb	r2,0(r5)
  80df0c:	35c0b926 	beq	r6,r23,80e1f4 <__ssvfiscanf_r+0xef0>
  80df10:	a8800117 	ldw	r2,4(r21)
  80df14:	00bfed16 	blt	zero,r2,80decc <__alt_data_end+0xff80decc>
  80df18:	9009883a 	mov	r4,r18
  80df1c:	a80b883a 	mov	r5,r21
  80df20:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80df24:	103fe926 	beq	r2,zero,80decc <__alt_data_end+0xff80decc>
  80df28:	b009883a 	mov	r4,r22
  80df2c:	9dbfd41e 	bne	r19,r22,80de80 <__alt_data_end+0xff80de80>
  80df30:	003df706 	br	80d710 <__alt_data_end+0xff80d710>
  80df34:	da004f17 	ldw	r8,316(sp)
  80df38:	b8ffffc4 	addi	r3,r23,-1
  80df3c:	44c00017 	ldw	r19,0(r8)
  80df40:	44000104 	addi	r16,r8,4
  80df44:	980d883a 	mov	r6,r19
  80df48:	98ed883a 	add	r22,r19,r3
  80df4c:	00000106 	br	80df54 <__ssvfiscanf_r+0xc50>
  80df50:	b80d883a 	mov	r6,r23
  80df54:	a8c00017 	ldw	r3,0(r21)
  80df58:	a1c00017 	ldw	r7,0(r20)
  80df5c:	300b883a 	mov	r5,r6
  80df60:	18800003 	ldbu	r2,0(r3)
  80df64:	3885883a 	add	r2,r7,r2
  80df68:	10800043 	ldbu	r2,1(r2)
  80df6c:	1080020c 	andi	r2,r2,8
  80df70:	1000101e 	bne	r2,zero,80dfb4 <__ssvfiscanf_r+0xcb0>
  80df74:	a8800117 	ldw	r2,4(r21)
  80df78:	19c00044 	addi	r7,r3,1
  80df7c:	a9c00015 	stw	r7,0(r21)
  80df80:	10bfffc4 	addi	r2,r2,-1
  80df84:	a8800115 	stw	r2,4(r21)
  80df88:	18800003 	ldbu	r2,0(r3)
  80df8c:	2dc00044 	addi	r23,r5,1
  80df90:	30800005 	stb	r2,0(r6)
  80df94:	2d800626 	beq	r5,r22,80dfb0 <__ssvfiscanf_r+0xcac>
  80df98:	a8800117 	ldw	r2,4(r21)
  80df9c:	00bfec16 	blt	zero,r2,80df50 <__alt_data_end+0xff80df50>
  80dfa0:	9009883a 	mov	r4,r18
  80dfa4:	a80b883a 	mov	r5,r21
  80dfa8:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80dfac:	103fe826 	beq	r2,zero,80df50 <__alt_data_end+0xff80df50>
  80dfb0:	b80b883a 	mov	r5,r23
  80dfb4:	dac05317 	ldw	r11,332(sp)
  80dfb8:	2ce7c83a 	sub	r19,r5,r19
  80dfbc:	28000005 	stb	zero,0(r5)
  80dfc0:	5ac00044 	addi	r11,r11,1
  80dfc4:	e4f9883a 	add	fp,fp,r19
  80dfc8:	dac05315 	stw	r11,332(sp)
  80dfcc:	dc004f15 	stw	r16,316(sp)
  80dfd0:	880d883a 	mov	r6,r17
  80dfd4:	003d0a06 	br	80d400 <__alt_data_end+0xff80d400>
  80dfd8:	d9c05017 	ldw	r7,320(sp)
  80dfdc:	dac05117 	ldw	r11,324(sp)
  80dfe0:	b0000005 	stb	zero,0(r22)
  80dfe4:	da005b15 	stw	r8,364(sp)
  80dfe8:	9009883a 	mov	r4,r18
  80dfec:	d9404104 	addi	r5,sp,260
  80dff0:	000d883a 	mov	r6,zero
  80dff4:	583ee83a 	callr	r11
  80dff8:	da005b17 	ldw	r8,364(sp)
  80dffc:	40c0080c 	andi	r3,r8,32
  80e000:	18004126 	beq	r3,zero,80e108 <__ssvfiscanf_r+0xe04>
  80e004:	da004f17 	ldw	r8,316(sp)
  80e008:	40c00017 	ldw	r3,0(r8)
  80e00c:	42000104 	addi	r8,r8,4
  80e010:	da004f15 	stw	r8,316(sp)
  80e014:	18800015 	stw	r2,0(r3)
  80e018:	da005317 	ldw	r8,332(sp)
  80e01c:	42000044 	addi	r8,r8,1
  80e020:	da005315 	stw	r8,332(sp)
  80e024:	003f1e06 	br	80dca0 <__alt_data_end+0xff80dca0>
  80e028:	dac04b04 	addi	r11,sp,300
  80e02c:	8400040c 	andi	r16,r16,16
  80e030:	5809883a 	mov	r4,r11
  80e034:	000b883a 	mov	r5,zero
  80e038:	01800204 	movi	r6,8
  80e03c:	dc005415 	stw	r16,336(sp)
  80e040:	dac05215 	stw	r11,328(sp)
  80e044:	0802d340 	call	802d34 <memset>
  80e048:	dc005417 	ldw	r16,336(sp)
  80e04c:	80004226 	beq	r16,zero,80e158 <__ssvfiscanf_r+0xe54>
  80e050:	002d883a 	mov	r22,zero
  80e054:	dc005417 	ldw	r16,336(sp)
  80e058:	0027883a 	mov	r19,zero
  80e05c:	dc405515 	stw	r17,340(sp)
  80e060:	0808e580 	call	808e58 <__locale_mb_cur_max>
  80e064:	14fdaa26 	beq	r2,r19,80d710 <__alt_data_end+0xff80d710>
  80e068:	a8800017 	ldw	r2,0(r21)
  80e06c:	a9000117 	ldw	r4,4(r21)
  80e070:	d8c05217 	ldw	r3,328(sp)
  80e074:	12400003 	ldbu	r9,0(r2)
  80e078:	213fffc4 	addi	r4,r4,-1
  80e07c:	10800044 	addi	r2,r2,1
  80e080:	dac04104 	addi	r11,sp,260
  80e084:	a9000115 	stw	r4,4(r21)
  80e088:	a8800015 	stw	r2,0(r21)
  80e08c:	9c400044 	addi	r17,r19,1
  80e090:	d8c00015 	stw	r3,0(sp)
  80e094:	5ce7883a 	add	r19,r11,r19
  80e098:	9009883a 	mov	r4,r18
  80e09c:	b00b883a 	mov	r5,r22
  80e0a0:	580d883a 	mov	r6,r11
  80e0a4:	880f883a 	mov	r7,r17
  80e0a8:	9a400005 	stb	r9,0(r19)
  80e0ac:	0808f0c0 	call	808f0c <_mbrtowc_r>
  80e0b0:	013fffc4 	movi	r4,-1
  80e0b4:	113d9626 	beq	r2,r4,80d710 <__alt_data_end+0xff80d710>
  80e0b8:	1000431e 	bne	r2,zero,80e1c8 <__ssvfiscanf_r+0xec4>
  80e0bc:	8000011e 	bne	r16,zero,80e0c4 <__ssvfiscanf_r+0xdc0>
  80e0c0:	b0000015 	stw	zero,0(r22)
  80e0c4:	e479883a 	add	fp,fp,r17
  80e0c8:	bdffffc4 	addi	r23,r23,-1
  80e0cc:	8000421e 	bne	r16,zero,80e1d8 <__ssvfiscanf_r+0xed4>
  80e0d0:	b5800104 	addi	r22,r22,4
  80e0d4:	0027883a 	mov	r19,zero
  80e0d8:	a8800117 	ldw	r2,4(r21)
  80e0dc:	0080120e 	bge	zero,r2,80e128 <__ssvfiscanf_r+0xe24>
  80e0e0:	b83fdf1e 	bne	r23,zero,80e060 <__alt_data_end+0xff80e060>
  80e0e4:	dc405517 	ldw	r17,340(sp)
  80e0e8:	da005417 	ldw	r8,336(sp)
  80e0ec:	40003126 	beq	r8,zero,80e1b4 <__ssvfiscanf_r+0xeb0>
  80e0f0:	003cc206 	br	80d3fc <__alt_data_end+0xff80d3fc>
  80e0f4:	00be9fc4 	movi	r2,-1409
  80e0f8:	4090703a 	and	r8,r8,r2
  80e0fc:	003ed306 	br	80dc4c <__alt_data_end+0xff80dc4c>
  80e100:	4005883a 	mov	r2,r8
  80e104:	003d8806 	br	80d728 <__alt_data_end+0xff80d728>
  80e108:	40c0010c 	andi	r3,r8,4
  80e10c:	18007226 	beq	r3,zero,80e2d8 <__ssvfiscanf_r+0xfd4>
  80e110:	dac04f17 	ldw	r11,316(sp)
  80e114:	58c00017 	ldw	r3,0(r11)
  80e118:	5ac00104 	addi	r11,r11,4
  80e11c:	dac04f15 	stw	r11,316(sp)
  80e120:	1880000d 	sth	r2,0(r3)
  80e124:	003fbc06 	br	80e018 <__alt_data_end+0xff80e018>
  80e128:	9009883a 	mov	r4,r18
  80e12c:	a80b883a 	mov	r5,r21
  80e130:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80e134:	103fea26 	beq	r2,zero,80e0e0 <__alt_data_end+0xff80e0e0>
  80e138:	dc405517 	ldw	r17,340(sp)
  80e13c:	983fea26 	beq	r19,zero,80e0e8 <__alt_data_end+0xff80e0e8>
  80e140:	003d7306 	br	80d710 <__alt_data_end+0xff80d710>
  80e144:	da004f17 	ldw	r8,316(sp)
  80e148:	45800017 	ldw	r22,0(r8)
  80e14c:	42000104 	addi	r8,r8,4
  80e150:	da004f15 	stw	r8,316(sp)
  80e154:	003d4106 	br	80d65c <__alt_data_end+0xff80d65c>
  80e158:	da004f17 	ldw	r8,316(sp)
  80e15c:	45800017 	ldw	r22,0(r8)
  80e160:	42000104 	addi	r8,r8,4
  80e164:	da004f15 	stw	r8,316(sp)
  80e168:	003fba06 	br	80e054 <__alt_data_end+0xff80e054>
  80e16c:	b0000015 	stw	zero,0(r22)
  80e170:	0009883a 	mov	r4,zero
  80e174:	d8c05a15 	stw	r3,360(sp)
  80e178:	0808da00 	call	808da0 <iswspace>
  80e17c:	d8c05a17 	ldw	r3,360(sp)
  80e180:	10006f26 	beq	r2,zero,80e340 <__ssvfiscanf_r+0x103c>
  80e184:	1827883a 	mov	r19,r3
  80e188:	18000826 	beq	r3,zero,80e1ac <__ssvfiscanf_r+0xea8>
  80e18c:	9cffffc4 	addi	r19,r19,-1
  80e190:	da004104 	addi	r8,sp,260
  80e194:	44c5883a 	add	r2,r8,r19
  80e198:	11400003 	ldbu	r5,0(r2)
  80e19c:	9009883a 	mov	r4,r18
  80e1a0:	a80d883a 	mov	r6,r21
  80e1a4:	080d0a80 	call	80d0a8 <_sungetc_r>
  80e1a8:	983ff81e 	bne	r19,zero,80e18c <__alt_data_end+0xff80e18c>
  80e1ac:	803c931e 	bne	r16,zero,80d3fc <__alt_data_end+0xff80d3fc>
  80e1b0:	b0000015 	stw	zero,0(r22)
  80e1b4:	dac05317 	ldw	r11,332(sp)
  80e1b8:	880d883a 	mov	r6,r17
  80e1bc:	5ac00044 	addi	r11,r11,1
  80e1c0:	dac05315 	stw	r11,332(sp)
  80e1c4:	003c8e06 	br	80d400 <__alt_data_end+0xff80d400>
  80e1c8:	017fff84 	movi	r5,-2
  80e1cc:	117fbd1e 	bne	r2,r5,80e0c4 <__alt_data_end+0xff80e0c4>
  80e1d0:	8827883a 	mov	r19,r17
  80e1d4:	003fc006 	br	80e0d8 <__alt_data_end+0xff80e0d8>
  80e1d8:	0027883a 	mov	r19,zero
  80e1dc:	003fbe06 	br	80e0d8 <__alt_data_end+0xff80e0d8>
  80e1e0:	983c8b26 	beq	r19,zero,80d410 <__alt_data_end+0xff80d410>
  80e1e4:	e4f9883a 	add	fp,fp,r19
  80e1e8:	003f2d06 	br	80dea0 <__alt_data_end+0xff80dea0>
  80e1ec:	803d941e 	bne	r16,zero,80d840 <__alt_data_end+0xff80d840>
  80e1f0:	003d4706 	br	80d710 <__alt_data_end+0xff80d710>
  80e1f4:	b009883a 	mov	r4,r22
  80e1f8:	003f2106 	br	80de80 <__alt_data_end+0xff80de80>
  80e1fc:	da004f17 	ldw	r8,316(sp)
  80e200:	dd400015 	stw	r21,0(sp)
  80e204:	9009883a 	mov	r4,r18
  80e208:	41400017 	ldw	r5,0(r8)
  80e20c:	01800044 	movi	r6,1
  80e210:	b80f883a 	mov	r7,r23
  80e214:	080d2100 	call	80d210 <_sfread_r>
  80e218:	dac04f17 	ldw	r11,316(sp)
  80e21c:	58c00104 	addi	r3,r11,4
  80e220:	103d3b26 	beq	r2,zero,80d710 <__alt_data_end+0xff80d710>
  80e224:	da005317 	ldw	r8,332(sp)
  80e228:	1739883a 	add	fp,r2,fp
  80e22c:	d8c04f15 	stw	r3,316(sp)
  80e230:	42000044 	addi	r8,r8,1
  80e234:	da005315 	stw	r8,332(sp)
  80e238:	880d883a 	mov	r6,r17
  80e23c:	003c7006 	br	80d400 <__alt_data_end+0xff80d400>
  80e240:	b17fffc7 	ldb	r5,-1(r22)
  80e244:	9009883a 	mov	r4,r18
  80e248:	a80d883a 	mov	r6,r21
  80e24c:	da005b15 	stw	r8,364(sp)
  80e250:	080d0a80 	call	80d0a8 <_sungetc_r>
  80e254:	b5bfffc4 	addi	r22,r22,-1
  80e258:	da005b17 	ldw	r8,364(sp)
  80e25c:	003e8c06 	br	80dc90 <__alt_data_end+0xff80dc90>
  80e260:	9009883a 	mov	r4,r18
  80e264:	a80b883a 	mov	r5,r21
  80e268:	080d1a00 	call	80d1a0 <__ssrefill_r>
  80e26c:	103d3d26 	beq	r2,zero,80d764 <__alt_data_end+0xff80d764>
  80e270:	003d2706 	br	80d710 <__alt_data_end+0xff80d710>
  80e274:	88800083 	ldbu	r2,2(r17)
  80e278:	84000094 	ori	r16,r16,2
  80e27c:	8c400084 	addi	r17,r17,2
  80e280:	10c03fcc 	andi	r3,r2,255
  80e284:	003c6b06 	br	80d434 <__alt_data_end+0xff80d434>
  80e288:	80e0b03a 	or	r16,r16,r3
  80e28c:	003dee06 	br	80da48 <__alt_data_end+0xff80da48>
  80e290:	8080004c 	andi	r2,r16,1
  80e294:	10000a1e 	bne	r2,zero,80e2c0 <__ssvfiscanf_r+0xfbc>
  80e298:	8400008c 	andi	r16,r16,2
  80e29c:	80000826 	beq	r16,zero,80e2c0 <__ssvfiscanf_r+0xfbc>
  80e2a0:	dac04f17 	ldw	r11,316(sp)
  80e2a4:	e007d7fa 	srai	r3,fp,31
  80e2a8:	58800017 	ldw	r2,0(r11)
  80e2ac:	5ac00104 	addi	r11,r11,4
  80e2b0:	dac04f15 	stw	r11,316(sp)
  80e2b4:	17000015 	stw	fp,0(r2)
  80e2b8:	10c00115 	stw	r3,4(r2)
  80e2bc:	003c4f06 	br	80d3fc <__alt_data_end+0xff80d3fc>
  80e2c0:	da004f17 	ldw	r8,316(sp)
  80e2c4:	40800017 	ldw	r2,0(r8)
  80e2c8:	42000104 	addi	r8,r8,4
  80e2cc:	da004f15 	stw	r8,316(sp)
  80e2d0:	17000015 	stw	fp,0(r2)
  80e2d4:	003c4906 	br	80d3fc <__alt_data_end+0xff80d3fc>
  80e2d8:	40c0004c 	andi	r3,r8,1
  80e2dc:	183f491e 	bne	r3,zero,80e004 <__alt_data_end+0xff80e004>
  80e2e0:	45c0008c 	andi	r23,r8,2
  80e2e4:	b8001026 	beq	r23,zero,80e328 <__ssvfiscanf_r+0x1024>
  80e2e8:	dac05117 	ldw	r11,324(sp)
  80e2ec:	00802074 	movhi	r2,129
  80e2f0:	10b2ba04 	addi	r2,r2,-13592
  80e2f4:	9009883a 	mov	r4,r18
  80e2f8:	d9404104 	addi	r5,sp,260
  80e2fc:	000d883a 	mov	r6,zero
  80e300:	d9c05017 	ldw	r7,320(sp)
  80e304:	58801826 	beq	r11,r2,80e368 <__ssvfiscanf_r+0x1064>
  80e308:	080c7f40 	call	80c7f4 <_strtoll_r>
  80e30c:	da004f17 	ldw	r8,316(sp)
  80e310:	41000017 	ldw	r4,0(r8)
  80e314:	42000104 	addi	r8,r8,4
  80e318:	da004f15 	stw	r8,316(sp)
  80e31c:	20800015 	stw	r2,0(r4)
  80e320:	20c00115 	stw	r3,4(r4)
  80e324:	003f3c06 	br	80e018 <__alt_data_end+0xff80e018>
  80e328:	dac04f17 	ldw	r11,316(sp)
  80e32c:	58c00017 	ldw	r3,0(r11)
  80e330:	5ac00104 	addi	r11,r11,4
  80e334:	dac04f15 	stw	r11,316(sp)
  80e338:	18800015 	stw	r2,0(r3)
  80e33c:	003f3606 	br	80e018 <__alt_data_end+0xff80e018>
  80e340:	e0f9883a 	add	fp,fp,r3
  80e344:	bdffffc4 	addi	r23,r23,-1
  80e348:	8000031e 	bne	r16,zero,80e358 <__ssvfiscanf_r+0x1054>
  80e34c:	b5800104 	addi	r22,r22,4
  80e350:	0027883a 	mov	r19,zero
  80e354:	003ce706 	br	80d6f4 <__alt_data_end+0xff80d6f4>
  80e358:	0027883a 	mov	r19,zero
  80e35c:	003ce506 	br	80d6f4 <__alt_data_end+0xff80d6f4>
  80e360:	b1000017 	ldw	r4,0(r22)
  80e364:	003f8306 	br	80e174 <__alt_data_end+0xff80e174>
  80e368:	080cd740 	call	80cd74 <_strtoull_r>
  80e36c:	003fe706 	br	80e30c <__alt_data_end+0xff80e30c>

0080e370 <___svfprintf_internal_r>:
  80e370:	deffb504 	addi	sp,sp,-300
  80e374:	dfc04a15 	stw	ra,296(sp)
  80e378:	ddc04815 	stw	r23,288(sp)
  80e37c:	d9002f15 	stw	r4,188(sp)
  80e380:	282f883a 	mov	r23,r5
  80e384:	d9802915 	stw	r6,164(sp)
  80e388:	d9c02d15 	stw	r7,180(sp)
  80e38c:	df004915 	stw	fp,292(sp)
  80e390:	dd804715 	stw	r22,284(sp)
  80e394:	dd404615 	stw	r21,280(sp)
  80e398:	dd004515 	stw	r20,276(sp)
  80e39c:	dcc04415 	stw	r19,272(sp)
  80e3a0:	dc804315 	stw	r18,268(sp)
  80e3a4:	dc404215 	stw	r17,264(sp)
  80e3a8:	dc004115 	stw	r16,260(sp)
  80e3ac:	0808e7c0 	call	808e7c <_localeconv_r>
  80e3b0:	10800017 	ldw	r2,0(r2)
  80e3b4:	1009883a 	mov	r4,r2
  80e3b8:	d8803515 	stw	r2,212(sp)
  80e3bc:	08034f40 	call	8034f4 <strlen>
  80e3c0:	d8803915 	stw	r2,228(sp)
  80e3c4:	b880030b 	ldhu	r2,12(r23)
  80e3c8:	1080200c 	andi	r2,r2,128
  80e3cc:	10000226 	beq	r2,zero,80e3d8 <___svfprintf_internal_r+0x68>
  80e3d0:	b8800417 	ldw	r2,16(r23)
  80e3d4:	10065f26 	beq	r2,zero,80fd54 <___svfprintf_internal_r+0x19e4>
  80e3d8:	db001dc4 	addi	r12,sp,119
  80e3dc:	dd801e04 	addi	r22,sp,120
  80e3e0:	d8800404 	addi	r2,sp,16
  80e3e4:	050020b4 	movhi	r20,130
  80e3e8:	b317c83a 	sub	r11,r22,r12
  80e3ec:	a5300084 	addi	r20,r20,-16382
  80e3f0:	db002815 	stw	r12,160(sp)
  80e3f4:	d8801e15 	stw	r2,120(sp)
  80e3f8:	d8002015 	stw	zero,128(sp)
  80e3fc:	d8001f15 	stw	zero,124(sp)
  80e400:	d8003315 	stw	zero,204(sp)
  80e404:	d8003715 	stw	zero,220(sp)
  80e408:	d8003815 	stw	zero,224(sp)
  80e40c:	1011883a 	mov	r8,r2
  80e410:	d8003b15 	stw	zero,236(sp)
  80e414:	d8003a15 	stw	zero,232(sp)
  80e418:	d8003015 	stw	zero,192(sp)
  80e41c:	dac03d15 	stw	r11,244(sp)
  80e420:	db002917 	ldw	r12,164(sp)
  80e424:	60800007 	ldb	r2,0(r12)
  80e428:	1000ab26 	beq	r2,zero,80e6d8 <___svfprintf_internal_r+0x368>
  80e42c:	00c00944 	movi	r3,37
  80e430:	10c0a926 	beq	r2,r3,80e6d8 <___svfprintf_internal_r+0x368>
  80e434:	6021883a 	mov	r16,r12
  80e438:	00000106 	br	80e440 <___svfprintf_internal_r+0xd0>
  80e43c:	10c08426 	beq	r2,r3,80e650 <___svfprintf_internal_r+0x2e0>
  80e440:	84000044 	addi	r16,r16,1
  80e444:	80800007 	ldb	r2,0(r16)
  80e448:	103ffc1e 	bne	r2,zero,80e43c <__alt_data_end+0xff80e43c>
  80e44c:	dac02917 	ldw	r11,164(sp)
  80e450:	82e3c83a 	sub	r17,r16,r11
  80e454:	88000f26 	beq	r17,zero,80e494 <___svfprintf_internal_r+0x124>
  80e458:	d8c02017 	ldw	r3,128(sp)
  80e45c:	d8801f17 	ldw	r2,124(sp)
  80e460:	dac02917 	ldw	r11,164(sp)
  80e464:	1c47883a 	add	r3,r3,r17
  80e468:	10800044 	addi	r2,r2,1
  80e46c:	d8c02015 	stw	r3,128(sp)
  80e470:	42c00015 	stw	r11,0(r8)
  80e474:	44400115 	stw	r17,4(r8)
  80e478:	d8801f15 	stw	r2,124(sp)
  80e47c:	00c001c4 	movi	r3,7
  80e480:	18807616 	blt	r3,r2,80e65c <___svfprintf_internal_r+0x2ec>
  80e484:	42000204 	addi	r8,r8,8
  80e488:	db003017 	ldw	r12,192(sp)
  80e48c:	6459883a 	add	r12,r12,r17
  80e490:	db003015 	stw	r12,192(sp)
  80e494:	80800007 	ldb	r2,0(r16)
  80e498:	10007726 	beq	r2,zero,80e678 <___svfprintf_internal_r+0x308>
  80e49c:	80800044 	addi	r2,r16,1
  80e4a0:	84000047 	ldb	r16,1(r16)
  80e4a4:	d8002785 	stb	zero,158(sp)
  80e4a8:	000d883a 	mov	r6,zero
  80e4ac:	027fffc4 	movi	r9,-1
  80e4b0:	d8002e15 	stw	zero,184(sp)
  80e4b4:	0023883a 	mov	r17,zero
  80e4b8:	01001604 	movi	r4,88
  80e4bc:	01400244 	movi	r5,9
  80e4c0:	02800a84 	movi	r10,42
  80e4c4:	01c01b04 	movi	r7,108
  80e4c8:	10c00044 	addi	r3,r2,1
  80e4cc:	80bff804 	addi	r2,r16,-32
  80e4d0:	2082e636 	bltu	r4,r2,80f06c <___svfprintf_internal_r+0xcfc>
  80e4d4:	100490ba 	slli	r2,r2,2
  80e4d8:	02c02074 	movhi	r11,129
  80e4dc:	5af93b04 	addi	r11,r11,-6932
  80e4e0:	12c5883a 	add	r2,r2,r11
  80e4e4:	10800017 	ldw	r2,0(r2)
  80e4e8:	1000683a 	jmp	r2
  80e4ec:	0080ee4c 	andi	r2,zero,953
  80e4f0:	0080f06c 	andhi	r2,zero,961
  80e4f4:	0080f06c 	andhi	r2,zero,961
  80e4f8:	0080ee6c 	andhi	r2,zero,953
  80e4fc:	0080f06c 	andhi	r2,zero,961
  80e500:	0080f06c 	andhi	r2,zero,961
  80e504:	0080f06c 	andhi	r2,zero,961
  80e508:	0080f06c 	andhi	r2,zero,961
  80e50c:	0080f06c 	andhi	r2,zero,961
  80e510:	0080f06c 	andhi	r2,zero,961
  80e514:	0080ee7c 	xorhi	r2,zero,953
  80e518:	0080eea8 	cmpgeui	r2,zero,954
  80e51c:	0080f06c 	andhi	r2,zero,961
  80e520:	0080e6e0 	cmpeqi	r2,zero,923
  80e524:	0080e6f0 	cmpltui	r2,zero,923
  80e528:	0080f06c 	andhi	r2,zero,961
  80e52c:	0080e730 	cmpltui	r2,zero,924
  80e530:	0080ed10 	cmplti	r2,zero,948
  80e534:	0080ed10 	cmplti	r2,zero,948
  80e538:	0080ed10 	cmplti	r2,zero,948
  80e53c:	0080ed10 	cmplti	r2,zero,948
  80e540:	0080ed10 	cmplti	r2,zero,948
  80e544:	0080ed10 	cmplti	r2,zero,948
  80e548:	0080ed10 	cmplti	r2,zero,948
  80e54c:	0080ed10 	cmplti	r2,zero,948
  80e550:	0080ed10 	cmplti	r2,zero,948
  80e554:	0080f06c 	andhi	r2,zero,961
  80e558:	0080f06c 	andhi	r2,zero,961
  80e55c:	0080f06c 	andhi	r2,zero,961
  80e560:	0080f06c 	andhi	r2,zero,961
  80e564:	0080f06c 	andhi	r2,zero,961
  80e568:	0080f06c 	andhi	r2,zero,961
  80e56c:	0080f06c 	andhi	r2,zero,961
  80e570:	0080f06c 	andhi	r2,zero,961
  80e574:	0080f06c 	andhi	r2,zero,961
  80e578:	0080f06c 	andhi	r2,zero,961
  80e57c:	0080e740 	call	80e74 <__alt_mem_sdram_0-0x77f18c>
  80e580:	0080ebc0 	call	80ebc <__alt_mem_sdram_0-0x77f144>
  80e584:	0080f06c 	andhi	r2,zero,961
  80e588:	0080ebc0 	call	80ebc <__alt_mem_sdram_0-0x77f144>
  80e58c:	0080f06c 	andhi	r2,zero,961
  80e590:	0080f06c 	andhi	r2,zero,961
  80e594:	0080f06c 	andhi	r2,zero,961
  80e598:	0080f06c 	andhi	r2,zero,961
  80e59c:	0080ec64 	muli	r2,zero,945
  80e5a0:	0080f06c 	andhi	r2,zero,961
  80e5a4:	0080f06c 	andhi	r2,zero,961
  80e5a8:	0080f000 	call	80f00 <__alt_mem_sdram_0-0x77f100>
  80e5ac:	0080f06c 	andhi	r2,zero,961
  80e5b0:	0080f06c 	andhi	r2,zero,961
  80e5b4:	0080f06c 	andhi	r2,zero,961
  80e5b8:	0080f06c 	andhi	r2,zero,961
  80e5bc:	0080f06c 	andhi	r2,zero,961
  80e5c0:	0080ec74 	movhi	r2,945
  80e5c4:	0080f06c 	andhi	r2,zero,961
  80e5c8:	0080f06c 	andhi	r2,zero,961
  80e5cc:	0080ecb4 	movhi	r2,946
  80e5d0:	0080f06c 	andhi	r2,zero,961
  80e5d4:	0080f06c 	andhi	r2,zero,961
  80e5d8:	0080f06c 	andhi	r2,zero,961
  80e5dc:	0080f06c 	andhi	r2,zero,961
  80e5e0:	0080f06c 	andhi	r2,zero,961
  80e5e4:	0080f06c 	andhi	r2,zero,961
  80e5e8:	0080f06c 	andhi	r2,zero,961
  80e5ec:	0080f06c 	andhi	r2,zero,961
  80e5f0:	0080f06c 	andhi	r2,zero,961
  80e5f4:	0080f06c 	andhi	r2,zero,961
  80e5f8:	0080ef58 	cmpnei	r2,zero,957
  80e5fc:	0080ef98 	cmpnei	r2,zero,958
  80e600:	0080ebc0 	call	80ebc <__alt_mem_sdram_0-0x77f144>
  80e604:	0080ebc0 	call	80ebc <__alt_mem_sdram_0-0x77f144>
  80e608:	0080ebc0 	call	80ebc <__alt_mem_sdram_0-0x77f144>
  80e60c:	0080eeb8 	rdprs	r2,zero,954
  80e610:	0080ef98 	cmpnei	r2,zero,958
  80e614:	0080f06c 	andhi	r2,zero,961
  80e618:	0080f06c 	andhi	r2,zero,961
  80e61c:	0080eec8 	cmpgei	r2,zero,955
  80e620:	0080f06c 	andhi	r2,zero,961
  80e624:	0080eedc 	xori	r2,zero,955
  80e628:	0080f030 	cmpltui	r2,zero,960
  80e62c:	0080ef10 	cmplti	r2,zero,956
  80e630:	0080ed44 	movi	r2,949
  80e634:	0080f06c 	andhi	r2,zero,961
  80e638:	0080ed54 	movui	r2,949
  80e63c:	0080f06c 	andhi	r2,zero,961
  80e640:	0080edcc 	andi	r2,zero,951
  80e644:	0080f06c 	andhi	r2,zero,961
  80e648:	0080f06c 	andhi	r2,zero,961
  80e64c:	0080ee0c 	andi	r2,zero,952
  80e650:	db002917 	ldw	r12,164(sp)
  80e654:	8323c83a 	sub	r17,r16,r12
  80e658:	003f7e06 	br	80e454 <__alt_data_end+0xff80e454>
  80e65c:	d9002f17 	ldw	r4,188(sp)
  80e660:	b80b883a 	mov	r5,r23
  80e664:	b00d883a 	mov	r6,r22
  80e668:	0812a940 	call	812a94 <__ssprint_r>
  80e66c:	1000081e 	bne	r2,zero,80e690 <___svfprintf_internal_r+0x320>
  80e670:	da000404 	addi	r8,sp,16
  80e674:	003f8406 	br	80e488 <__alt_data_end+0xff80e488>
  80e678:	d8802017 	ldw	r2,128(sp)
  80e67c:	10000426 	beq	r2,zero,80e690 <___svfprintf_internal_r+0x320>
  80e680:	d9002f17 	ldw	r4,188(sp)
  80e684:	b80b883a 	mov	r5,r23
  80e688:	d9801e04 	addi	r6,sp,120
  80e68c:	0812a940 	call	812a94 <__ssprint_r>
  80e690:	b880030b 	ldhu	r2,12(r23)
  80e694:	1080100c 	andi	r2,r2,64
  80e698:	10000d1e 	bne	r2,zero,80e6d0 <___svfprintf_internal_r+0x360>
  80e69c:	d8803017 	ldw	r2,192(sp)
  80e6a0:	dfc04a17 	ldw	ra,296(sp)
  80e6a4:	df004917 	ldw	fp,292(sp)
  80e6a8:	ddc04817 	ldw	r23,288(sp)
  80e6ac:	dd804717 	ldw	r22,284(sp)
  80e6b0:	dd404617 	ldw	r21,280(sp)
  80e6b4:	dd004517 	ldw	r20,276(sp)
  80e6b8:	dcc04417 	ldw	r19,272(sp)
  80e6bc:	dc804317 	ldw	r18,268(sp)
  80e6c0:	dc404217 	ldw	r17,264(sp)
  80e6c4:	dc004117 	ldw	r16,260(sp)
  80e6c8:	dec04b04 	addi	sp,sp,300
  80e6cc:	f800283a 	ret
  80e6d0:	00bfffc4 	movi	r2,-1
  80e6d4:	003ff206 	br	80e6a0 <__alt_data_end+0xff80e6a0>
  80e6d8:	dc002917 	ldw	r16,164(sp)
  80e6dc:	003f6d06 	br	80e494 <__alt_data_end+0xff80e494>
  80e6e0:	1805883a 	mov	r2,r3
  80e6e4:	8c400114 	ori	r17,r17,4
  80e6e8:	1c000007 	ldb	r16,0(r3)
  80e6ec:	003f7606 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80e6f0:	1c000007 	ldb	r16,0(r3)
  80e6f4:	18800044 	addi	r2,r3,1
  80e6f8:	8286e726 	beq	r16,r10,810298 <___svfprintf_internal_r+0x1f28>
  80e6fc:	82fff404 	addi	r11,r16,-48
  80e700:	1007883a 	mov	r3,r2
  80e704:	0013883a 	mov	r9,zero
  80e708:	2aff7036 	bltu	r5,r11,80e4cc <__alt_data_end+0xff80e4cc>
  80e70c:	1c000007 	ldb	r16,0(r3)
  80e710:	4a4002a4 	muli	r9,r9,10
  80e714:	18c00044 	addi	r3,r3,1
  80e718:	5a53883a 	add	r9,r11,r9
  80e71c:	82fff404 	addi	r11,r16,-48
  80e720:	2afffa2e 	bgeu	r5,r11,80e70c <__alt_data_end+0xff80e70c>
  80e724:	483f690e 	bge	r9,zero,80e4cc <__alt_data_end+0xff80e4cc>
  80e728:	027fffc4 	movi	r9,-1
  80e72c:	003f6706 	br	80e4cc <__alt_data_end+0xff80e4cc>
  80e730:	8c402014 	ori	r17,r17,128
  80e734:	1805883a 	mov	r2,r3
  80e738:	1c000007 	ldb	r16,0(r3)
  80e73c:	003f6206 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80e740:	8c400414 	ori	r17,r17,16
  80e744:	d8c02915 	stw	r3,164(sp)
  80e748:	d9802785 	stb	r6,158(sp)
  80e74c:	8880080c 	andi	r2,r17,32
  80e750:	d8c02d17 	ldw	r3,180(sp)
  80e754:	10021526 	beq	r2,zero,80efac <___svfprintf_internal_r+0xc3c>
  80e758:	db002d17 	ldw	r12,180(sp)
  80e75c:	18800117 	ldw	r2,4(r3)
  80e760:	1cc00017 	ldw	r19,0(r3)
  80e764:	63000204 	addi	r12,r12,8
  80e768:	db002d15 	stw	r12,180(sp)
  80e76c:	1039883a 	mov	fp,r2
  80e770:	10021916 	blt	r2,zero,80efd8 <___svfprintf_internal_r+0xc68>
  80e774:	dd402783 	ldbu	r21,158(sp)
  80e778:	da403215 	stw	r9,200(sp)
  80e77c:	00800044 	movi	r2,1
  80e780:	9f06b03a 	or	r3,r19,fp
  80e784:	48000216 	blt	r9,zero,80e790 <___svfprintf_internal_r+0x420>
  80e788:	013fdfc4 	movi	r4,-129
  80e78c:	8922703a 	and	r17,r17,r4
  80e790:	1802461e 	bne	r3,zero,80f0ac <___svfprintf_internal_r+0xd3c>
  80e794:	48035426 	beq	r9,zero,80f4e8 <___svfprintf_internal_r+0x1178>
  80e798:	10803fcc 	andi	r2,r2,255
  80e79c:	00c00044 	movi	r3,1
  80e7a0:	10c26726 	beq	r2,r3,80f140 <___svfprintf_internal_r+0xdd0>
  80e7a4:	00c00084 	movi	r3,2
  80e7a8:	10c2ea26 	beq	r2,r3,80f354 <___svfprintf_internal_r+0xfe4>
  80e7ac:	b007883a 	mov	r3,r22
  80e7b0:	9808d0fa 	srli	r4,r19,3
  80e7b4:	e00a977a 	slli	r5,fp,29
  80e7b8:	e038d0fa 	srli	fp,fp,3
  80e7bc:	9cc001cc 	andi	r19,r19,7
  80e7c0:	98800c04 	addi	r2,r19,48
  80e7c4:	18ffffc4 	addi	r3,r3,-1
  80e7c8:	2926b03a 	or	r19,r5,r4
  80e7cc:	18800005 	stb	r2,0(r3)
  80e7d0:	9f08b03a 	or	r4,r19,fp
  80e7d4:	203ff61e 	bne	r4,zero,80e7b0 <__alt_data_end+0xff80e7b0>
  80e7d8:	8900004c 	andi	r4,r17,1
  80e7dc:	d8c03115 	stw	r3,196(sp)
  80e7e0:	2002ea26 	beq	r4,zero,80f38c <___svfprintf_internal_r+0x101c>
  80e7e4:	10803fcc 	andi	r2,r2,255
  80e7e8:	1080201c 	xori	r2,r2,128
  80e7ec:	10bfe004 	addi	r2,r2,-128
  80e7f0:	01000c04 	movi	r4,48
  80e7f4:	11057526 	beq	r2,r4,80fdcc <___svfprintf_internal_r+0x1a5c>
  80e7f8:	dac03117 	ldw	r11,196(sp)
  80e7fc:	193fffc5 	stb	r4,-1(r3)
  80e800:	5affffc4 	addi	r11,r11,-1
  80e804:	dac03115 	stw	r11,196(sp)
  80e808:	b2e5c83a 	sub	r18,r22,r11
  80e80c:	9005883a 	mov	r2,r18
  80e810:	9240010e 	bge	r18,r9,80e818 <___svfprintf_internal_r+0x4a8>
  80e814:	4805883a 	mov	r2,r9
  80e818:	d8802a15 	stw	r2,168(sp)
  80e81c:	d8003415 	stw	zero,208(sp)
  80e820:	a8803fcc 	andi	r2,r21,255
  80e824:	1080201c 	xori	r2,r2,128
  80e828:	10bfe004 	addi	r2,r2,-128
  80e82c:	10000326 	beq	r2,zero,80e83c <___svfprintf_internal_r+0x4cc>
  80e830:	d8c02a17 	ldw	r3,168(sp)
  80e834:	18c00044 	addi	r3,r3,1
  80e838:	d8c02a15 	stw	r3,168(sp)
  80e83c:	8ac0008c 	andi	r11,r17,2
  80e840:	dac02b15 	stw	r11,172(sp)
  80e844:	58000326 	beq	r11,zero,80e854 <___svfprintf_internal_r+0x4e4>
  80e848:	db002a17 	ldw	r12,168(sp)
  80e84c:	63000084 	addi	r12,r12,2
  80e850:	db002a15 	stw	r12,168(sp)
  80e854:	88c0210c 	andi	r3,r17,132
  80e858:	d8c02c15 	stw	r3,176(sp)
  80e85c:	1802111e 	bne	r3,zero,80f0a4 <___svfprintf_internal_r+0xd34>
  80e860:	dac02e17 	ldw	r11,184(sp)
  80e864:	db002a17 	ldw	r12,168(sp)
  80e868:	5b39c83a 	sub	fp,r11,r12
  80e86c:	07020d0e 	bge	zero,fp,80f0a4 <___svfprintf_internal_r+0xd34>
  80e870:	02400404 	movi	r9,16
  80e874:	d8c02017 	ldw	r3,128(sp)
  80e878:	d8801f17 	ldw	r2,124(sp)
  80e87c:	4f058c0e 	bge	r9,fp,80feb0 <___svfprintf_internal_r+0x1b40>
  80e880:	014020b4 	movhi	r5,130
  80e884:	e009883a 	mov	r4,fp
  80e888:	29700484 	addi	r5,r5,-16366
  80e88c:	dc003c15 	stw	r16,240(sp)
  80e890:	9039883a 	mov	fp,r18
  80e894:	d9403615 	stw	r5,216(sp)
  80e898:	8825883a 	mov	r18,r17
  80e89c:	482b883a 	mov	r21,r9
  80e8a0:	04c001c4 	movi	r19,7
  80e8a4:	dc002f17 	ldw	r16,188(sp)
  80e8a8:	2023883a 	mov	r17,r4
  80e8ac:	00000306 	br	80e8bc <___svfprintf_internal_r+0x54c>
  80e8b0:	8c7ffc04 	addi	r17,r17,-16
  80e8b4:	42000204 	addi	r8,r8,8
  80e8b8:	ac40130e 	bge	r21,r17,80e908 <___svfprintf_internal_r+0x598>
  80e8bc:	02c020b4 	movhi	r11,130
  80e8c0:	18c00404 	addi	r3,r3,16
  80e8c4:	10800044 	addi	r2,r2,1
  80e8c8:	5af00484 	addi	r11,r11,-16366
  80e8cc:	42c00015 	stw	r11,0(r8)
  80e8d0:	45400115 	stw	r21,4(r8)
  80e8d4:	d8c02015 	stw	r3,128(sp)
  80e8d8:	d8801f15 	stw	r2,124(sp)
  80e8dc:	98bff40e 	bge	r19,r2,80e8b0 <__alt_data_end+0xff80e8b0>
  80e8e0:	8009883a 	mov	r4,r16
  80e8e4:	b80b883a 	mov	r5,r23
  80e8e8:	b00d883a 	mov	r6,r22
  80e8ec:	0812a940 	call	812a94 <__ssprint_r>
  80e8f0:	103f671e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80e8f4:	8c7ffc04 	addi	r17,r17,-16
  80e8f8:	d8c02017 	ldw	r3,128(sp)
  80e8fc:	d8801f17 	ldw	r2,124(sp)
  80e900:	da000404 	addi	r8,sp,16
  80e904:	ac7fed16 	blt	r21,r17,80e8bc <__alt_data_end+0xff80e8bc>
  80e908:	dc003c17 	ldw	r16,240(sp)
  80e90c:	8809883a 	mov	r4,r17
  80e910:	9023883a 	mov	r17,r18
  80e914:	e025883a 	mov	r18,fp
  80e918:	2039883a 	mov	fp,r4
  80e91c:	db003617 	ldw	r12,216(sp)
  80e920:	e0c7883a 	add	r3,fp,r3
  80e924:	10800044 	addi	r2,r2,1
  80e928:	43000015 	stw	r12,0(r8)
  80e92c:	47000115 	stw	fp,4(r8)
  80e930:	d8c02015 	stw	r3,128(sp)
  80e934:	d8801f15 	stw	r2,124(sp)
  80e938:	010001c4 	movi	r4,7
  80e93c:	20834416 	blt	r4,r2,80f650 <___svfprintf_internal_r+0x12e0>
  80e940:	d8802787 	ldb	r2,158(sp)
  80e944:	42000204 	addi	r8,r8,8
  80e948:	10000c26 	beq	r2,zero,80e97c <___svfprintf_internal_r+0x60c>
  80e94c:	d8801f17 	ldw	r2,124(sp)
  80e950:	d9002784 	addi	r4,sp,158
  80e954:	18c00044 	addi	r3,r3,1
  80e958:	10800044 	addi	r2,r2,1
  80e95c:	41000015 	stw	r4,0(r8)
  80e960:	01000044 	movi	r4,1
  80e964:	41000115 	stw	r4,4(r8)
  80e968:	d8c02015 	stw	r3,128(sp)
  80e96c:	d8801f15 	stw	r2,124(sp)
  80e970:	010001c4 	movi	r4,7
  80e974:	2082f616 	blt	r4,r2,80f550 <___svfprintf_internal_r+0x11e0>
  80e978:	42000204 	addi	r8,r8,8
  80e97c:	dac02b17 	ldw	r11,172(sp)
  80e980:	58000c26 	beq	r11,zero,80e9b4 <___svfprintf_internal_r+0x644>
  80e984:	d8801f17 	ldw	r2,124(sp)
  80e988:	d9002704 	addi	r4,sp,156
  80e98c:	18c00084 	addi	r3,r3,2
  80e990:	10800044 	addi	r2,r2,1
  80e994:	41000015 	stw	r4,0(r8)
  80e998:	01000084 	movi	r4,2
  80e99c:	41000115 	stw	r4,4(r8)
  80e9a0:	d8c02015 	stw	r3,128(sp)
  80e9a4:	d8801f15 	stw	r2,124(sp)
  80e9a8:	010001c4 	movi	r4,7
  80e9ac:	2082e016 	blt	r4,r2,80f530 <___svfprintf_internal_r+0x11c0>
  80e9b0:	42000204 	addi	r8,r8,8
  80e9b4:	db002c17 	ldw	r12,176(sp)
  80e9b8:	00802004 	movi	r2,128
  80e9bc:	60822f26 	beq	r12,r2,80f27c <___svfprintf_internal_r+0xf0c>
  80e9c0:	db003217 	ldw	r12,200(sp)
  80e9c4:	64abc83a 	sub	r21,r12,r18
  80e9c8:	0540310e 	bge	zero,r21,80ea90 <___svfprintf_internal_r+0x720>
  80e9cc:	07000404 	movi	fp,16
  80e9d0:	d8801f17 	ldw	r2,124(sp)
  80e9d4:	e544270e 	bge	fp,r21,80fa74 <___svfprintf_internal_r+0x1704>
  80e9d8:	014020b4 	movhi	r5,130
  80e9dc:	a809883a 	mov	r4,r21
  80e9e0:	29700084 	addi	r5,r5,-16382
  80e9e4:	dc002c15 	stw	r16,176(sp)
  80e9e8:	902b883a 	mov	r21,r18
  80e9ec:	d9402b15 	stw	r5,172(sp)
  80e9f0:	8825883a 	mov	r18,r17
  80e9f4:	04c001c4 	movi	r19,7
  80e9f8:	dc002f17 	ldw	r16,188(sp)
  80e9fc:	2023883a 	mov	r17,r4
  80ea00:	00000306 	br	80ea10 <___svfprintf_internal_r+0x6a0>
  80ea04:	8c7ffc04 	addi	r17,r17,-16
  80ea08:	42000204 	addi	r8,r8,8
  80ea0c:	e440110e 	bge	fp,r17,80ea54 <___svfprintf_internal_r+0x6e4>
  80ea10:	18c00404 	addi	r3,r3,16
  80ea14:	10800044 	addi	r2,r2,1
  80ea18:	45000015 	stw	r20,0(r8)
  80ea1c:	47000115 	stw	fp,4(r8)
  80ea20:	d8c02015 	stw	r3,128(sp)
  80ea24:	d8801f15 	stw	r2,124(sp)
  80ea28:	98bff60e 	bge	r19,r2,80ea04 <__alt_data_end+0xff80ea04>
  80ea2c:	8009883a 	mov	r4,r16
  80ea30:	b80b883a 	mov	r5,r23
  80ea34:	b00d883a 	mov	r6,r22
  80ea38:	0812a940 	call	812a94 <__ssprint_r>
  80ea3c:	103f141e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80ea40:	8c7ffc04 	addi	r17,r17,-16
  80ea44:	d8c02017 	ldw	r3,128(sp)
  80ea48:	d8801f17 	ldw	r2,124(sp)
  80ea4c:	da000404 	addi	r8,sp,16
  80ea50:	e47fef16 	blt	fp,r17,80ea10 <__alt_data_end+0xff80ea10>
  80ea54:	dc002c17 	ldw	r16,176(sp)
  80ea58:	8809883a 	mov	r4,r17
  80ea5c:	9023883a 	mov	r17,r18
  80ea60:	a825883a 	mov	r18,r21
  80ea64:	202b883a 	mov	r21,r4
  80ea68:	dac02b17 	ldw	r11,172(sp)
  80ea6c:	1d47883a 	add	r3,r3,r21
  80ea70:	10800044 	addi	r2,r2,1
  80ea74:	42c00015 	stw	r11,0(r8)
  80ea78:	45400115 	stw	r21,4(r8)
  80ea7c:	d8c02015 	stw	r3,128(sp)
  80ea80:	d8801f15 	stw	r2,124(sp)
  80ea84:	010001c4 	movi	r4,7
  80ea88:	2082a116 	blt	r4,r2,80f510 <___svfprintf_internal_r+0x11a0>
  80ea8c:	42000204 	addi	r8,r8,8
  80ea90:	8880400c 	andi	r2,r17,256
  80ea94:	1001b01e 	bne	r2,zero,80f158 <___svfprintf_internal_r+0xde8>
  80ea98:	d8801f17 	ldw	r2,124(sp)
  80ea9c:	db003117 	ldw	r12,196(sp)
  80eaa0:	1c87883a 	add	r3,r3,r18
  80eaa4:	10800044 	addi	r2,r2,1
  80eaa8:	43000015 	stw	r12,0(r8)
  80eaac:	44800115 	stw	r18,4(r8)
  80eab0:	d8c02015 	stw	r3,128(sp)
  80eab4:	d8801f15 	stw	r2,124(sp)
  80eab8:	010001c4 	movi	r4,7
  80eabc:	20828216 	blt	r4,r2,80f4c8 <___svfprintf_internal_r+0x1158>
  80eac0:	42000204 	addi	r8,r8,8
  80eac4:	8c40010c 	andi	r17,r17,4
  80eac8:	88003226 	beq	r17,zero,80eb94 <___svfprintf_internal_r+0x824>
  80eacc:	db002e17 	ldw	r12,184(sp)
  80ead0:	dac02a17 	ldw	r11,168(sp)
  80ead4:	62e1c83a 	sub	r16,r12,r11
  80ead8:	04002e0e 	bge	zero,r16,80eb94 <___svfprintf_internal_r+0x824>
  80eadc:	04400404 	movi	r17,16
  80eae0:	d8801f17 	ldw	r2,124(sp)
  80eae4:	8c05330e 	bge	r17,r16,80ffb4 <___svfprintf_internal_r+0x1c44>
  80eae8:	010020b4 	movhi	r4,130
  80eaec:	21300484 	addi	r4,r4,-16366
  80eaf0:	d9003615 	stw	r4,216(sp)
  80eaf4:	048001c4 	movi	r18,7
  80eaf8:	dcc02f17 	ldw	r19,188(sp)
  80eafc:	00000306 	br	80eb0c <___svfprintf_internal_r+0x79c>
  80eb00:	843ffc04 	addi	r16,r16,-16
  80eb04:	42000204 	addi	r8,r8,8
  80eb08:	8c00130e 	bge	r17,r16,80eb58 <___svfprintf_internal_r+0x7e8>
  80eb0c:	014020b4 	movhi	r5,130
  80eb10:	18c00404 	addi	r3,r3,16
  80eb14:	10800044 	addi	r2,r2,1
  80eb18:	29700484 	addi	r5,r5,-16366
  80eb1c:	41400015 	stw	r5,0(r8)
  80eb20:	44400115 	stw	r17,4(r8)
  80eb24:	d8c02015 	stw	r3,128(sp)
  80eb28:	d8801f15 	stw	r2,124(sp)
  80eb2c:	90bff40e 	bge	r18,r2,80eb00 <__alt_data_end+0xff80eb00>
  80eb30:	9809883a 	mov	r4,r19
  80eb34:	b80b883a 	mov	r5,r23
  80eb38:	b00d883a 	mov	r6,r22
  80eb3c:	0812a940 	call	812a94 <__ssprint_r>
  80eb40:	103ed31e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80eb44:	843ffc04 	addi	r16,r16,-16
  80eb48:	d8c02017 	ldw	r3,128(sp)
  80eb4c:	d8801f17 	ldw	r2,124(sp)
  80eb50:	da000404 	addi	r8,sp,16
  80eb54:	8c3fed16 	blt	r17,r16,80eb0c <__alt_data_end+0xff80eb0c>
  80eb58:	dac03617 	ldw	r11,216(sp)
  80eb5c:	1c07883a 	add	r3,r3,r16
  80eb60:	10800044 	addi	r2,r2,1
  80eb64:	42c00015 	stw	r11,0(r8)
  80eb68:	44000115 	stw	r16,4(r8)
  80eb6c:	d8c02015 	stw	r3,128(sp)
  80eb70:	d8801f15 	stw	r2,124(sp)
  80eb74:	010001c4 	movi	r4,7
  80eb78:	2080060e 	bge	r4,r2,80eb94 <___svfprintf_internal_r+0x824>
  80eb7c:	d9002f17 	ldw	r4,188(sp)
  80eb80:	b80b883a 	mov	r5,r23
  80eb84:	b00d883a 	mov	r6,r22
  80eb88:	0812a940 	call	812a94 <__ssprint_r>
  80eb8c:	103ec01e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80eb90:	d8c02017 	ldw	r3,128(sp)
  80eb94:	d8802a17 	ldw	r2,168(sp)
  80eb98:	db002e17 	ldw	r12,184(sp)
  80eb9c:	1300010e 	bge	r2,r12,80eba4 <___svfprintf_internal_r+0x834>
  80eba0:	6005883a 	mov	r2,r12
  80eba4:	dac03017 	ldw	r11,192(sp)
  80eba8:	5897883a 	add	r11,r11,r2
  80ebac:	dac03015 	stw	r11,192(sp)
  80ebb0:	1802331e 	bne	r3,zero,80f480 <___svfprintf_internal_r+0x1110>
  80ebb4:	d8001f15 	stw	zero,124(sp)
  80ebb8:	da000404 	addi	r8,sp,16
  80ebbc:	003e1806 	br	80e420 <__alt_data_end+0xff80e420>
  80ebc0:	db002d17 	ldw	r12,180(sp)
  80ebc4:	dac02d17 	ldw	r11,180(sp)
  80ebc8:	d8c02915 	stw	r3,164(sp)
  80ebcc:	63000017 	ldw	r12,0(r12)
  80ebd0:	5ac00117 	ldw	r11,4(r11)
  80ebd4:	d9802785 	stb	r6,158(sp)
  80ebd8:	6009883a 	mov	r4,r12
  80ebdc:	580b883a 	mov	r5,r11
  80ebe0:	db003715 	stw	r12,220(sp)
  80ebe4:	da004015 	stw	r8,256(sp)
  80ebe8:	da403f15 	stw	r9,252(sp)
  80ebec:	dac03815 	stw	r11,224(sp)
  80ebf0:	080ab7c0 	call	80ab7c <__fpclassifyd>
  80ebf4:	db002d17 	ldw	r12,180(sp)
  80ebf8:	04800044 	movi	r18,1
  80ebfc:	da004017 	ldw	r8,256(sp)
  80ec00:	64c00204 	addi	r19,r12,8
  80ec04:	da403f17 	ldw	r9,252(sp)
  80ec08:	d9003717 	ldw	r4,220(sp)
  80ec0c:	d9403817 	ldw	r5,224(sp)
  80ec10:	1483561e 	bne	r2,r18,80f96c <___svfprintf_internal_r+0x15fc>
  80ec14:	000d883a 	mov	r6,zero
  80ec18:	000f883a 	mov	r7,zero
  80ec1c:	08160800 	call	816080 <__ledf2>
  80ec20:	da004017 	ldw	r8,256(sp)
  80ec24:	1004ee16 	blt	r2,zero,80ffe0 <___svfprintf_internal_r+0x1c70>
  80ec28:	dd402783 	ldbu	r21,158(sp)
  80ec2c:	008011c4 	movi	r2,71
  80ec30:	1404440e 	bge	r2,r16,80fd44 <___svfprintf_internal_r+0x19d4>
  80ec34:	00c020b4 	movhi	r3,130
  80ec38:	18eed804 	addi	r3,r3,-17568
  80ec3c:	d8c03115 	stw	r3,196(sp)
  80ec40:	02c000c4 	movi	r11,3
  80ec44:	00bfdfc4 	movi	r2,-129
  80ec48:	dac02a15 	stw	r11,168(sp)
  80ec4c:	88a2703a 	and	r17,r17,r2
  80ec50:	dcc02d15 	stw	r19,180(sp)
  80ec54:	5825883a 	mov	r18,r11
  80ec58:	d8003215 	stw	zero,200(sp)
  80ec5c:	d8003415 	stw	zero,208(sp)
  80ec60:	003eef06 	br	80e820 <__alt_data_end+0xff80e820>
  80ec64:	8c400214 	ori	r17,r17,8
  80ec68:	1805883a 	mov	r2,r3
  80ec6c:	1c000007 	ldb	r16,0(r3)
  80ec70:	003e1506 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80ec74:	8c400414 	ori	r17,r17,16
  80ec78:	d8c02915 	stw	r3,164(sp)
  80ec7c:	88c0080c 	andi	r3,r17,32
  80ec80:	d8802d17 	ldw	r2,180(sp)
  80ec84:	18005526 	beq	r3,zero,80eddc <___svfprintf_internal_r+0xa6c>
  80ec88:	dac02d17 	ldw	r11,180(sp)
  80ec8c:	14c00017 	ldw	r19,0(r2)
  80ec90:	17000117 	ldw	fp,4(r2)
  80ec94:	5ac00204 	addi	r11,r11,8
  80ec98:	dac02d15 	stw	r11,180(sp)
  80ec9c:	00800044 	movi	r2,1
  80eca0:	9f06b03a 	or	r3,r19,fp
  80eca4:	d8002785 	stb	zero,158(sp)
  80eca8:	da403215 	stw	r9,200(sp)
  80ecac:	002b883a 	mov	r21,zero
  80ecb0:	003eb406 	br	80e784 <__alt_data_end+0xff80e784>
  80ecb4:	030020b4 	movhi	r12,130
  80ecb8:	632edb04 	addi	r12,r12,-17556
  80ecbc:	d8c02915 	stw	r3,164(sp)
  80ecc0:	d9802785 	stb	r6,158(sp)
  80ecc4:	db003b15 	stw	r12,236(sp)
  80ecc8:	88c0080c 	andi	r3,r17,32
  80eccc:	d8802d17 	ldw	r2,180(sp)
  80ecd0:	18005626 	beq	r3,zero,80ee2c <___svfprintf_internal_r+0xabc>
  80ecd4:	dac02d17 	ldw	r11,180(sp)
  80ecd8:	14c00017 	ldw	r19,0(r2)
  80ecdc:	17000117 	ldw	fp,4(r2)
  80ece0:	5ac00204 	addi	r11,r11,8
  80ece4:	dac02d15 	stw	r11,180(sp)
  80ece8:	8880004c 	andi	r2,r17,1
  80ecec:	10029326 	beq	r2,zero,80f73c <___svfprintf_internal_r+0x13cc>
  80ecf0:	9f06b03a 	or	r3,r19,fp
  80ecf4:	18033526 	beq	r3,zero,80f9cc <___svfprintf_internal_r+0x165c>
  80ecf8:	00800c04 	movi	r2,48
  80ecfc:	d8802705 	stb	r2,156(sp)
  80ed00:	dc002745 	stb	r16,157(sp)
  80ed04:	8c400094 	ori	r17,r17,2
  80ed08:	00800084 	movi	r2,2
  80ed0c:	003fe506 	br	80eca4 <__alt_data_end+0xff80eca4>
  80ed10:	1805883a 	mov	r2,r3
  80ed14:	d8002e15 	stw	zero,184(sp)
  80ed18:	82fff404 	addi	r11,r16,-48
  80ed1c:	0019883a 	mov	r12,zero
  80ed20:	14000007 	ldb	r16,0(r2)
  80ed24:	630002a4 	muli	r12,r12,10
  80ed28:	18c00044 	addi	r3,r3,1
  80ed2c:	1805883a 	mov	r2,r3
  80ed30:	62d9883a 	add	r12,r12,r11
  80ed34:	82fff404 	addi	r11,r16,-48
  80ed38:	2afff92e 	bgeu	r5,r11,80ed20 <__alt_data_end+0xff80ed20>
  80ed3c:	db002e15 	stw	r12,184(sp)
  80ed40:	003de206 	br	80e4cc <__alt_data_end+0xff80e4cc>
  80ed44:	8c400814 	ori	r17,r17,32
  80ed48:	1805883a 	mov	r2,r3
  80ed4c:	1c000007 	ldb	r16,0(r3)
  80ed50:	003ddd06 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80ed54:	dac02d17 	ldw	r11,180(sp)
  80ed58:	db002d17 	ldw	r12,180(sp)
  80ed5c:	d8c02915 	stw	r3,164(sp)
  80ed60:	5ac00017 	ldw	r11,0(r11)
  80ed64:	d8002785 	stb	zero,158(sp)
  80ed68:	64c00104 	addi	r19,r12,4
  80ed6c:	dac03115 	stw	r11,196(sp)
  80ed70:	58048126 	beq	r11,zero,80ff78 <___svfprintf_internal_r+0x1c08>
  80ed74:	d9003117 	ldw	r4,196(sp)
  80ed78:	48041716 	blt	r9,zero,80fdd8 <___svfprintf_internal_r+0x1a68>
  80ed7c:	480d883a 	mov	r6,r9
  80ed80:	000b883a 	mov	r5,zero
  80ed84:	da004015 	stw	r8,256(sp)
  80ed88:	da403f15 	stw	r9,252(sp)
  80ed8c:	08091300 	call	809130 <memchr>
  80ed90:	da004017 	ldw	r8,256(sp)
  80ed94:	da403f17 	ldw	r9,252(sp)
  80ed98:	1004db26 	beq	r2,zero,810108 <___svfprintf_internal_r+0x1d98>
  80ed9c:	d8c03117 	ldw	r3,196(sp)
  80eda0:	10e5c83a 	sub	r18,r2,r3
  80eda4:	4c80010e 	bge	r9,r18,80edac <___svfprintf_internal_r+0xa3c>
  80eda8:	4825883a 	mov	r18,r9
  80edac:	9005883a 	mov	r2,r18
  80edb0:	90040e16 	blt	r18,zero,80fdec <___svfprintf_internal_r+0x1a7c>
  80edb4:	dd402783 	ldbu	r21,158(sp)
  80edb8:	d8802a15 	stw	r2,168(sp)
  80edbc:	dcc02d15 	stw	r19,180(sp)
  80edc0:	d8003215 	stw	zero,200(sp)
  80edc4:	d8003415 	stw	zero,208(sp)
  80edc8:	003e9506 	br	80e820 <__alt_data_end+0xff80e820>
  80edcc:	d8c02915 	stw	r3,164(sp)
  80edd0:	88c0080c 	andi	r3,r17,32
  80edd4:	d8802d17 	ldw	r2,180(sp)
  80edd8:	183fab1e 	bne	r3,zero,80ec88 <__alt_data_end+0xff80ec88>
  80eddc:	88c0040c 	andi	r3,r17,16
  80ede0:	1802681e 	bne	r3,zero,80f784 <___svfprintf_internal_r+0x1414>
  80ede4:	88c0100c 	andi	r3,r17,64
  80ede8:	18026626 	beq	r3,zero,80f784 <___svfprintf_internal_r+0x1414>
  80edec:	dac02d17 	ldw	r11,180(sp)
  80edf0:	14c0000b 	ldhu	r19,0(r2)
  80edf4:	0039883a 	mov	fp,zero
  80edf8:	5ac00104 	addi	r11,r11,4
  80edfc:	dac02d15 	stw	r11,180(sp)
  80ee00:	00800044 	movi	r2,1
  80ee04:	9807883a 	mov	r3,r19
  80ee08:	003fa606 	br	80eca4 <__alt_data_end+0xff80eca4>
  80ee0c:	008020b4 	movhi	r2,130
  80ee10:	10aee004 	addi	r2,r2,-17536
  80ee14:	d8c02915 	stw	r3,164(sp)
  80ee18:	d8803b15 	stw	r2,236(sp)
  80ee1c:	d9802785 	stb	r6,158(sp)
  80ee20:	88c0080c 	andi	r3,r17,32
  80ee24:	d8802d17 	ldw	r2,180(sp)
  80ee28:	183faa1e 	bne	r3,zero,80ecd4 <__alt_data_end+0xff80ecd4>
  80ee2c:	88c0040c 	andi	r3,r17,16
  80ee30:	1802e826 	beq	r3,zero,80f9d4 <___svfprintf_internal_r+0x1664>
  80ee34:	db002d17 	ldw	r12,180(sp)
  80ee38:	14c00017 	ldw	r19,0(r2)
  80ee3c:	0039883a 	mov	fp,zero
  80ee40:	63000104 	addi	r12,r12,4
  80ee44:	db002d15 	stw	r12,180(sp)
  80ee48:	003fa706 	br	80ece8 <__alt_data_end+0xff80ece8>
  80ee4c:	30803fcc 	andi	r2,r6,255
  80ee50:	1080201c 	xori	r2,r2,128
  80ee54:	10bfe004 	addi	r2,r2,-128
  80ee58:	1002d91e 	bne	r2,zero,80f9c0 <___svfprintf_internal_r+0x1650>
  80ee5c:	1805883a 	mov	r2,r3
  80ee60:	01800804 	movi	r6,32
  80ee64:	1c000007 	ldb	r16,0(r3)
  80ee68:	003d9706 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80ee6c:	8c400054 	ori	r17,r17,1
  80ee70:	1805883a 	mov	r2,r3
  80ee74:	1c000007 	ldb	r16,0(r3)
  80ee78:	003d9306 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80ee7c:	dac02d17 	ldw	r11,180(sp)
  80ee80:	db002d17 	ldw	r12,180(sp)
  80ee84:	5ac00017 	ldw	r11,0(r11)
  80ee88:	dac02e15 	stw	r11,184(sp)
  80ee8c:	62c00104 	addi	r11,r12,4
  80ee90:	db002e17 	ldw	r12,184(sp)
  80ee94:	60033e16 	blt	r12,zero,80fb90 <___svfprintf_internal_r+0x1820>
  80ee98:	dac02d15 	stw	r11,180(sp)
  80ee9c:	1805883a 	mov	r2,r3
  80eea0:	1c000007 	ldb	r16,0(r3)
  80eea4:	003d8806 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80eea8:	1805883a 	mov	r2,r3
  80eeac:	01800ac4 	movi	r6,43
  80eeb0:	1c000007 	ldb	r16,0(r3)
  80eeb4:	003d8406 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80eeb8:	8c401014 	ori	r17,r17,64
  80eebc:	1805883a 	mov	r2,r3
  80eec0:	1c000007 	ldb	r16,0(r3)
  80eec4:	003d8006 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80eec8:	1c000007 	ldb	r16,0(r3)
  80eecc:	81c33626 	beq	r16,r7,80fba8 <___svfprintf_internal_r+0x1838>
  80eed0:	8c400414 	ori	r17,r17,16
  80eed4:	1805883a 	mov	r2,r3
  80eed8:	003d7b06 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80eedc:	d8c02915 	stw	r3,164(sp)
  80eee0:	d9802785 	stb	r6,158(sp)
  80eee4:	8880080c 	andi	r2,r17,32
  80eee8:	1002c226 	beq	r2,zero,80f9f4 <___svfprintf_internal_r+0x1684>
  80eeec:	db002d17 	ldw	r12,180(sp)
  80eef0:	dac03017 	ldw	r11,192(sp)
  80eef4:	60800017 	ldw	r2,0(r12)
  80eef8:	5807d7fa 	srai	r3,r11,31
  80eefc:	63000104 	addi	r12,r12,4
  80ef00:	db002d15 	stw	r12,180(sp)
  80ef04:	12c00015 	stw	r11,0(r2)
  80ef08:	10c00115 	stw	r3,4(r2)
  80ef0c:	003d4406 	br	80e420 <__alt_data_end+0xff80e420>
  80ef10:	db002d17 	ldw	r12,180(sp)
  80ef14:	00800c04 	movi	r2,48
  80ef18:	d8802705 	stb	r2,156(sp)
  80ef1c:	64c00017 	ldw	r19,0(r12)
  80ef20:	00801e04 	movi	r2,120
  80ef24:	d8802745 	stb	r2,157(sp)
  80ef28:	008020b4 	movhi	r2,130
  80ef2c:	10aee004 	addi	r2,r2,-17536
  80ef30:	63000104 	addi	r12,r12,4
  80ef34:	d8c02915 	stw	r3,164(sp)
  80ef38:	d8803b15 	stw	r2,236(sp)
  80ef3c:	0039883a 	mov	fp,zero
  80ef40:	8c400094 	ori	r17,r17,2
  80ef44:	db002d15 	stw	r12,180(sp)
  80ef48:	00800084 	movi	r2,2
  80ef4c:	04001e04 	movi	r16,120
  80ef50:	9807883a 	mov	r3,r19
  80ef54:	003f5306 	br	80eca4 <__alt_data_end+0xff80eca4>
  80ef58:	db002d17 	ldw	r12,180(sp)
  80ef5c:	d8c02915 	stw	r3,164(sp)
  80ef60:	dac01404 	addi	r11,sp,80
  80ef64:	60800017 	ldw	r2,0(r12)
  80ef68:	00c00044 	movi	r3,1
  80ef6c:	63000104 	addi	r12,r12,4
  80ef70:	d8801405 	stb	r2,80(sp)
  80ef74:	d8c02a15 	stw	r3,168(sp)
  80ef78:	d8002785 	stb	zero,158(sp)
  80ef7c:	db002d15 	stw	r12,180(sp)
  80ef80:	1825883a 	mov	r18,r3
  80ef84:	d8003215 	stw	zero,200(sp)
  80ef88:	d8003415 	stw	zero,208(sp)
  80ef8c:	dac03115 	stw	r11,196(sp)
  80ef90:	0005883a 	mov	r2,zero
  80ef94:	003e2906 	br	80e83c <__alt_data_end+0xff80e83c>
  80ef98:	d8c02915 	stw	r3,164(sp)
  80ef9c:	d9802785 	stb	r6,158(sp)
  80efa0:	8880080c 	andi	r2,r17,32
  80efa4:	d8c02d17 	ldw	r3,180(sp)
  80efa8:	103deb1e 	bne	r2,zero,80e758 <__alt_data_end+0xff80e758>
  80efac:	8880040c 	andi	r2,r17,16
  80efb0:	1001e51e 	bne	r2,zero,80f748 <___svfprintf_internal_r+0x13d8>
  80efb4:	8880100c 	andi	r2,r17,64
  80efb8:	1001e326 	beq	r2,zero,80f748 <___svfprintf_internal_r+0x13d8>
  80efbc:	1cc0000f 	ldh	r19,0(r3)
  80efc0:	db002d17 	ldw	r12,180(sp)
  80efc4:	9839d7fa 	srai	fp,r19,31
  80efc8:	63000104 	addi	r12,r12,4
  80efcc:	db002d15 	stw	r12,180(sp)
  80efd0:	e005883a 	mov	r2,fp
  80efd4:	103de70e 	bge	r2,zero,80e774 <__alt_data_end+0xff80e774>
  80efd8:	04e7c83a 	sub	r19,zero,r19
  80efdc:	9804c03a 	cmpne	r2,r19,zero
  80efe0:	0739c83a 	sub	fp,zero,fp
  80efe4:	e0b9c83a 	sub	fp,fp,r2
  80efe8:	05400b44 	movi	r21,45
  80efec:	dd402785 	stb	r21,158(sp)
  80eff0:	da403215 	stw	r9,200(sp)
  80eff4:	00800044 	movi	r2,1
  80eff8:	9f06b03a 	or	r3,r19,fp
  80effc:	003de106 	br	80e784 <__alt_data_end+0xff80e784>
  80f000:	8c400414 	ori	r17,r17,16
  80f004:	d8c02915 	stw	r3,164(sp)
  80f008:	8880080c 	andi	r2,r17,32
  80f00c:	10000b26 	beq	r2,zero,80f03c <___svfprintf_internal_r+0xccc>
  80f010:	db002d17 	ldw	r12,180(sp)
  80f014:	0005883a 	mov	r2,zero
  80f018:	64c00017 	ldw	r19,0(r12)
  80f01c:	67000117 	ldw	fp,4(r12)
  80f020:	63000204 	addi	r12,r12,8
  80f024:	db002d15 	stw	r12,180(sp)
  80f028:	9f06b03a 	or	r3,r19,fp
  80f02c:	003f1d06 	br	80eca4 <__alt_data_end+0xff80eca4>
  80f030:	d8c02915 	stw	r3,164(sp)
  80f034:	8880080c 	andi	r2,r17,32
  80f038:	103ff51e 	bne	r2,zero,80f010 <__alt_data_end+0xff80f010>
  80f03c:	8880040c 	andi	r2,r17,16
  80f040:	1001c81e 	bne	r2,zero,80f764 <___svfprintf_internal_r+0x13f4>
  80f044:	8880100c 	andi	r2,r17,64
  80f048:	1001c626 	beq	r2,zero,80f764 <___svfprintf_internal_r+0x13f4>
  80f04c:	db002d17 	ldw	r12,180(sp)
  80f050:	0039883a 	mov	fp,zero
  80f054:	0005883a 	mov	r2,zero
  80f058:	64c0000b 	ldhu	r19,0(r12)
  80f05c:	63000104 	addi	r12,r12,4
  80f060:	db002d15 	stw	r12,180(sp)
  80f064:	9807883a 	mov	r3,r19
  80f068:	003f0e06 	br	80eca4 <__alt_data_end+0xff80eca4>
  80f06c:	d8c02915 	stw	r3,164(sp)
  80f070:	d9802785 	stb	r6,158(sp)
  80f074:	803d8026 	beq	r16,zero,80e678 <__alt_data_end+0xff80e678>
  80f078:	02c00044 	movi	r11,1
  80f07c:	db001404 	addi	r12,sp,80
  80f080:	dac02a15 	stw	r11,168(sp)
  80f084:	dc001405 	stb	r16,80(sp)
  80f088:	d8002785 	stb	zero,158(sp)
  80f08c:	5825883a 	mov	r18,r11
  80f090:	d8003215 	stw	zero,200(sp)
  80f094:	d8003415 	stw	zero,208(sp)
  80f098:	db003115 	stw	r12,196(sp)
  80f09c:	0005883a 	mov	r2,zero
  80f0a0:	003de606 	br	80e83c <__alt_data_end+0xff80e83c>
  80f0a4:	d8c02017 	ldw	r3,128(sp)
  80f0a8:	003e2706 	br	80e948 <__alt_data_end+0xff80e948>
  80f0ac:	10803fcc 	andi	r2,r2,255
  80f0b0:	00c00044 	movi	r3,1
  80f0b4:	10fdbb1e 	bne	r2,r3,80e7a4 <__alt_data_end+0xff80e7a4>
  80f0b8:	e000021e 	bne	fp,zero,80f0c4 <___svfprintf_internal_r+0xd54>
  80f0bc:	00800244 	movi	r2,9
  80f0c0:	14c01f2e 	bgeu	r2,r19,80f140 <___svfprintf_internal_r+0xdd0>
  80f0c4:	dc002a15 	stw	r16,168(sp)
  80f0c8:	dc402b15 	stw	r17,172(sp)
  80f0cc:	9821883a 	mov	r16,r19
  80f0d0:	e023883a 	mov	r17,fp
  80f0d4:	b025883a 	mov	r18,r22
  80f0d8:	4827883a 	mov	r19,r9
  80f0dc:	4039883a 	mov	fp,r8
  80f0e0:	8009883a 	mov	r4,r16
  80f0e4:	880b883a 	mov	r5,r17
  80f0e8:	01800284 	movi	r6,10
  80f0ec:	000f883a 	mov	r7,zero
  80f0f0:	08145140 	call	814514 <__umoddi3>
  80f0f4:	10800c04 	addi	r2,r2,48
  80f0f8:	94bfffc4 	addi	r18,r18,-1
  80f0fc:	8009883a 	mov	r4,r16
  80f100:	880b883a 	mov	r5,r17
  80f104:	01800284 	movi	r6,10
  80f108:	000f883a 	mov	r7,zero
  80f10c:	90800005 	stb	r2,0(r18)
  80f110:	0813f540 	call	813f54 <__udivdi3>
  80f114:	1021883a 	mov	r16,r2
  80f118:	10c4b03a 	or	r2,r2,r3
  80f11c:	1823883a 	mov	r17,r3
  80f120:	103fef1e 	bne	r2,zero,80f0e0 <__alt_data_end+0xff80f0e0>
  80f124:	dc803115 	stw	r18,196(sp)
  80f128:	dc002a17 	ldw	r16,168(sp)
  80f12c:	dc402b17 	ldw	r17,172(sp)
  80f130:	9813883a 	mov	r9,r19
  80f134:	e011883a 	mov	r8,fp
  80f138:	b4a5c83a 	sub	r18,r22,r18
  80f13c:	003db306 	br	80e80c <__alt_data_end+0xff80e80c>
  80f140:	9cc00c04 	addi	r19,r19,48
  80f144:	db001dc4 	addi	r12,sp,119
  80f148:	dcc01dc5 	stb	r19,119(sp)
  80f14c:	dc803d17 	ldw	r18,244(sp)
  80f150:	db003115 	stw	r12,196(sp)
  80f154:	003dad06 	br	80e80c <__alt_data_end+0xff80e80c>
  80f158:	00801944 	movi	r2,101
  80f15c:	14008d0e 	bge	r2,r16,80f394 <___svfprintf_internal_r+0x1024>
  80f160:	d9003717 	ldw	r4,220(sp)
  80f164:	d9403817 	ldw	r5,224(sp)
  80f168:	000d883a 	mov	r6,zero
  80f16c:	000f883a 	mov	r7,zero
  80f170:	d8c03e15 	stw	r3,248(sp)
  80f174:	da004015 	stw	r8,256(sp)
  80f178:	0815f1c0 	call	815f1c <__eqdf2>
  80f17c:	d8c03e17 	ldw	r3,248(sp)
  80f180:	da004017 	ldw	r8,256(sp)
  80f184:	1000fd1e 	bne	r2,zero,80f57c <___svfprintf_internal_r+0x120c>
  80f188:	d8801f17 	ldw	r2,124(sp)
  80f18c:	010020b4 	movhi	r4,130
  80f190:	212ee704 	addi	r4,r4,-17508
  80f194:	18c00044 	addi	r3,r3,1
  80f198:	10800044 	addi	r2,r2,1
  80f19c:	41000015 	stw	r4,0(r8)
  80f1a0:	01000044 	movi	r4,1
  80f1a4:	41000115 	stw	r4,4(r8)
  80f1a8:	d8c02015 	stw	r3,128(sp)
  80f1ac:	d8801f15 	stw	r2,124(sp)
  80f1b0:	010001c4 	movi	r4,7
  80f1b4:	20823316 	blt	r4,r2,80fa84 <___svfprintf_internal_r+0x1714>
  80f1b8:	42000204 	addi	r8,r8,8
  80f1bc:	d8802617 	ldw	r2,152(sp)
  80f1c0:	dac03317 	ldw	r11,204(sp)
  80f1c4:	12c00216 	blt	r2,r11,80f1d0 <___svfprintf_internal_r+0xe60>
  80f1c8:	8880004c 	andi	r2,r17,1
  80f1cc:	103e3d26 	beq	r2,zero,80eac4 <__alt_data_end+0xff80eac4>
  80f1d0:	db003917 	ldw	r12,228(sp)
  80f1d4:	d8801f17 	ldw	r2,124(sp)
  80f1d8:	dac03517 	ldw	r11,212(sp)
  80f1dc:	1b07883a 	add	r3,r3,r12
  80f1e0:	10800044 	addi	r2,r2,1
  80f1e4:	42c00015 	stw	r11,0(r8)
  80f1e8:	43000115 	stw	r12,4(r8)
  80f1ec:	d8c02015 	stw	r3,128(sp)
  80f1f0:	d8801f15 	stw	r2,124(sp)
  80f1f4:	010001c4 	movi	r4,7
  80f1f8:	20826f16 	blt	r4,r2,80fbb8 <___svfprintf_internal_r+0x1848>
  80f1fc:	42000204 	addi	r8,r8,8
  80f200:	db003317 	ldw	r12,204(sp)
  80f204:	643fffc4 	addi	r16,r12,-1
  80f208:	043e2e0e 	bge	zero,r16,80eac4 <__alt_data_end+0xff80eac4>
  80f20c:	04800404 	movi	r18,16
  80f210:	d8801f17 	ldw	r2,124(sp)
  80f214:	9400a00e 	bge	r18,r16,80f498 <___svfprintf_internal_r+0x1128>
  80f218:	014020b4 	movhi	r5,130
  80f21c:	29700084 	addi	r5,r5,-16382
  80f220:	d9402b15 	stw	r5,172(sp)
  80f224:	054001c4 	movi	r21,7
  80f228:	dcc02f17 	ldw	r19,188(sp)
  80f22c:	00000306 	br	80f23c <___svfprintf_internal_r+0xecc>
  80f230:	42000204 	addi	r8,r8,8
  80f234:	843ffc04 	addi	r16,r16,-16
  80f238:	94009a0e 	bge	r18,r16,80f4a4 <___svfprintf_internal_r+0x1134>
  80f23c:	18c00404 	addi	r3,r3,16
  80f240:	10800044 	addi	r2,r2,1
  80f244:	45000015 	stw	r20,0(r8)
  80f248:	44800115 	stw	r18,4(r8)
  80f24c:	d8c02015 	stw	r3,128(sp)
  80f250:	d8801f15 	stw	r2,124(sp)
  80f254:	a8bff60e 	bge	r21,r2,80f230 <__alt_data_end+0xff80f230>
  80f258:	9809883a 	mov	r4,r19
  80f25c:	b80b883a 	mov	r5,r23
  80f260:	b00d883a 	mov	r6,r22
  80f264:	0812a940 	call	812a94 <__ssprint_r>
  80f268:	103d091e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f26c:	d8c02017 	ldw	r3,128(sp)
  80f270:	d8801f17 	ldw	r2,124(sp)
  80f274:	da000404 	addi	r8,sp,16
  80f278:	003fee06 	br	80f234 <__alt_data_end+0xff80f234>
  80f27c:	dac02e17 	ldw	r11,184(sp)
  80f280:	db002a17 	ldw	r12,168(sp)
  80f284:	5b2bc83a 	sub	r21,r11,r12
  80f288:	057dcd0e 	bge	zero,r21,80e9c0 <__alt_data_end+0xff80e9c0>
  80f28c:	07000404 	movi	fp,16
  80f290:	d8801f17 	ldw	r2,124(sp)
  80f294:	e5435d0e 	bge	fp,r21,81000c <___svfprintf_internal_r+0x1c9c>
  80f298:	014020b4 	movhi	r5,130
  80f29c:	a809883a 	mov	r4,r21
  80f2a0:	29700084 	addi	r5,r5,-16382
  80f2a4:	dc002c15 	stw	r16,176(sp)
  80f2a8:	902b883a 	mov	r21,r18
  80f2ac:	d9402b15 	stw	r5,172(sp)
  80f2b0:	8825883a 	mov	r18,r17
  80f2b4:	04c001c4 	movi	r19,7
  80f2b8:	dc002f17 	ldw	r16,188(sp)
  80f2bc:	2023883a 	mov	r17,r4
  80f2c0:	00000306 	br	80f2d0 <___svfprintf_internal_r+0xf60>
  80f2c4:	8c7ffc04 	addi	r17,r17,-16
  80f2c8:	42000204 	addi	r8,r8,8
  80f2cc:	e440110e 	bge	fp,r17,80f314 <___svfprintf_internal_r+0xfa4>
  80f2d0:	18c00404 	addi	r3,r3,16
  80f2d4:	10800044 	addi	r2,r2,1
  80f2d8:	45000015 	stw	r20,0(r8)
  80f2dc:	47000115 	stw	fp,4(r8)
  80f2e0:	d8c02015 	stw	r3,128(sp)
  80f2e4:	d8801f15 	stw	r2,124(sp)
  80f2e8:	98bff60e 	bge	r19,r2,80f2c4 <__alt_data_end+0xff80f2c4>
  80f2ec:	8009883a 	mov	r4,r16
  80f2f0:	b80b883a 	mov	r5,r23
  80f2f4:	b00d883a 	mov	r6,r22
  80f2f8:	0812a940 	call	812a94 <__ssprint_r>
  80f2fc:	103ce41e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f300:	8c7ffc04 	addi	r17,r17,-16
  80f304:	d8c02017 	ldw	r3,128(sp)
  80f308:	d8801f17 	ldw	r2,124(sp)
  80f30c:	da000404 	addi	r8,sp,16
  80f310:	e47fef16 	blt	fp,r17,80f2d0 <__alt_data_end+0xff80f2d0>
  80f314:	dc002c17 	ldw	r16,176(sp)
  80f318:	8809883a 	mov	r4,r17
  80f31c:	9023883a 	mov	r17,r18
  80f320:	a825883a 	mov	r18,r21
  80f324:	202b883a 	mov	r21,r4
  80f328:	dac02b17 	ldw	r11,172(sp)
  80f32c:	1d47883a 	add	r3,r3,r21
  80f330:	10800044 	addi	r2,r2,1
  80f334:	42c00015 	stw	r11,0(r8)
  80f338:	45400115 	stw	r21,4(r8)
  80f33c:	d8c02015 	stw	r3,128(sp)
  80f340:	d8801f15 	stw	r2,124(sp)
  80f344:	010001c4 	movi	r4,7
  80f348:	20818016 	blt	r4,r2,80f94c <___svfprintf_internal_r+0x15dc>
  80f34c:	42000204 	addi	r8,r8,8
  80f350:	003d9b06 	br	80e9c0 <__alt_data_end+0xff80e9c0>
  80f354:	d9403b17 	ldw	r5,236(sp)
  80f358:	b007883a 	mov	r3,r22
  80f35c:	988003cc 	andi	r2,r19,15
  80f360:	e008973a 	slli	r4,fp,28
  80f364:	2885883a 	add	r2,r5,r2
  80f368:	9826d13a 	srli	r19,r19,4
  80f36c:	10800003 	ldbu	r2,0(r2)
  80f370:	e038d13a 	srli	fp,fp,4
  80f374:	18ffffc4 	addi	r3,r3,-1
  80f378:	24e6b03a 	or	r19,r4,r19
  80f37c:	18800005 	stb	r2,0(r3)
  80f380:	9f04b03a 	or	r2,r19,fp
  80f384:	103ff51e 	bne	r2,zero,80f35c <__alt_data_end+0xff80f35c>
  80f388:	d8c03115 	stw	r3,196(sp)
  80f38c:	b0e5c83a 	sub	r18,r22,r3
  80f390:	003d1e06 	br	80e80c <__alt_data_end+0xff80e80c>
  80f394:	db003317 	ldw	r12,204(sp)
  80f398:	00800044 	movi	r2,1
  80f39c:	18c00044 	addi	r3,r3,1
  80f3a0:	13014b0e 	bge	r2,r12,80f8d0 <___svfprintf_internal_r+0x1560>
  80f3a4:	dc001f17 	ldw	r16,124(sp)
  80f3a8:	dac03117 	ldw	r11,196(sp)
  80f3ac:	00800044 	movi	r2,1
  80f3b0:	84000044 	addi	r16,r16,1
  80f3b4:	40800115 	stw	r2,4(r8)
  80f3b8:	42c00015 	stw	r11,0(r8)
  80f3bc:	d8c02015 	stw	r3,128(sp)
  80f3c0:	dc001f15 	stw	r16,124(sp)
  80f3c4:	008001c4 	movi	r2,7
  80f3c8:	14014e16 	blt	r2,r16,80f904 <___svfprintf_internal_r+0x1594>
  80f3cc:	42000204 	addi	r8,r8,8
  80f3d0:	db003917 	ldw	r12,228(sp)
  80f3d4:	dac03517 	ldw	r11,212(sp)
  80f3d8:	84000044 	addi	r16,r16,1
  80f3dc:	1b07883a 	add	r3,r3,r12
  80f3e0:	42c00015 	stw	r11,0(r8)
  80f3e4:	43000115 	stw	r12,4(r8)
  80f3e8:	d8c02015 	stw	r3,128(sp)
  80f3ec:	dc001f15 	stw	r16,124(sp)
  80f3f0:	008001c4 	movi	r2,7
  80f3f4:	14014c16 	blt	r2,r16,80f928 <___svfprintf_internal_r+0x15b8>
  80f3f8:	44800204 	addi	r18,r8,8
  80f3fc:	d9003717 	ldw	r4,220(sp)
  80f400:	d9403817 	ldw	r5,224(sp)
  80f404:	000d883a 	mov	r6,zero
  80f408:	000f883a 	mov	r7,zero
  80f40c:	d8c03e15 	stw	r3,248(sp)
  80f410:	0815f1c0 	call	815f1c <__eqdf2>
  80f414:	d8c03e17 	ldw	r3,248(sp)
  80f418:	db003317 	ldw	r12,204(sp)
  80f41c:	10009526 	beq	r2,zero,80f674 <___svfprintf_internal_r+0x1304>
  80f420:	dac03117 	ldw	r11,196(sp)
  80f424:	60bfffc4 	addi	r2,r12,-1
  80f428:	1887883a 	add	r3,r3,r2
  80f42c:	59000044 	addi	r4,r11,1
  80f430:	84000044 	addi	r16,r16,1
  80f434:	90800115 	stw	r2,4(r18)
  80f438:	91000015 	stw	r4,0(r18)
  80f43c:	d8c02015 	stw	r3,128(sp)
  80f440:	dc001f15 	stw	r16,124(sp)
  80f444:	008001c4 	movi	r2,7
  80f448:	1400b316 	blt	r2,r16,80f718 <___svfprintf_internal_r+0x13a8>
  80f44c:	94800204 	addi	r18,r18,8
  80f450:	dac03a17 	ldw	r11,232(sp)
  80f454:	dd4022c4 	addi	r21,sp,139
  80f458:	84000044 	addi	r16,r16,1
  80f45c:	1ac7883a 	add	r3,r3,r11
  80f460:	95400015 	stw	r21,0(r18)
  80f464:	92c00115 	stw	r11,4(r18)
  80f468:	d8c02015 	stw	r3,128(sp)
  80f46c:	dc001f15 	stw	r16,124(sp)
  80f470:	008001c4 	movi	r2,7
  80f474:	14001416 	blt	r2,r16,80f4c8 <___svfprintf_internal_r+0x1158>
  80f478:	92000204 	addi	r8,r18,8
  80f47c:	003d9106 	br	80eac4 <__alt_data_end+0xff80eac4>
  80f480:	d9002f17 	ldw	r4,188(sp)
  80f484:	b80b883a 	mov	r5,r23
  80f488:	b00d883a 	mov	r6,r22
  80f48c:	0812a940 	call	812a94 <__ssprint_r>
  80f490:	103dc826 	beq	r2,zero,80ebb4 <__alt_data_end+0xff80ebb4>
  80f494:	003c7e06 	br	80e690 <__alt_data_end+0xff80e690>
  80f498:	010020b4 	movhi	r4,130
  80f49c:	21300084 	addi	r4,r4,-16382
  80f4a0:	d9002b15 	stw	r4,172(sp)
  80f4a4:	dac02b17 	ldw	r11,172(sp)
  80f4a8:	1c07883a 	add	r3,r3,r16
  80f4ac:	44000115 	stw	r16,4(r8)
  80f4b0:	42c00015 	stw	r11,0(r8)
  80f4b4:	10800044 	addi	r2,r2,1
  80f4b8:	d8c02015 	stw	r3,128(sp)
  80f4bc:	d8801f15 	stw	r2,124(sp)
  80f4c0:	010001c4 	movi	r4,7
  80f4c4:	20bd7e0e 	bge	r4,r2,80eac0 <__alt_data_end+0xff80eac0>
  80f4c8:	d9002f17 	ldw	r4,188(sp)
  80f4cc:	b80b883a 	mov	r5,r23
  80f4d0:	b00d883a 	mov	r6,r22
  80f4d4:	0812a940 	call	812a94 <__ssprint_r>
  80f4d8:	103c6d1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f4dc:	d8c02017 	ldw	r3,128(sp)
  80f4e0:	da000404 	addi	r8,sp,16
  80f4e4:	003d7706 	br	80eac4 <__alt_data_end+0xff80eac4>
  80f4e8:	10803fcc 	andi	r2,r2,255
  80f4ec:	1000201e 	bne	r2,zero,80f570 <___svfprintf_internal_r+0x1200>
  80f4f0:	8880004c 	andi	r2,r17,1
  80f4f4:	10001e26 	beq	r2,zero,80f570 <___svfprintf_internal_r+0x1200>
  80f4f8:	00800c04 	movi	r2,48
  80f4fc:	d8c01dc4 	addi	r3,sp,119
  80f500:	d8801dc5 	stb	r2,119(sp)
  80f504:	dc803d17 	ldw	r18,244(sp)
  80f508:	d8c03115 	stw	r3,196(sp)
  80f50c:	003cbf06 	br	80e80c <__alt_data_end+0xff80e80c>
  80f510:	d9002f17 	ldw	r4,188(sp)
  80f514:	b80b883a 	mov	r5,r23
  80f518:	b00d883a 	mov	r6,r22
  80f51c:	0812a940 	call	812a94 <__ssprint_r>
  80f520:	103c5b1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f524:	d8c02017 	ldw	r3,128(sp)
  80f528:	da000404 	addi	r8,sp,16
  80f52c:	003d5806 	br	80ea90 <__alt_data_end+0xff80ea90>
  80f530:	d9002f17 	ldw	r4,188(sp)
  80f534:	b80b883a 	mov	r5,r23
  80f538:	b00d883a 	mov	r6,r22
  80f53c:	0812a940 	call	812a94 <__ssprint_r>
  80f540:	103c531e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f544:	d8c02017 	ldw	r3,128(sp)
  80f548:	da000404 	addi	r8,sp,16
  80f54c:	003d1906 	br	80e9b4 <__alt_data_end+0xff80e9b4>
  80f550:	d9002f17 	ldw	r4,188(sp)
  80f554:	b80b883a 	mov	r5,r23
  80f558:	b00d883a 	mov	r6,r22
  80f55c:	0812a940 	call	812a94 <__ssprint_r>
  80f560:	103c4b1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f564:	d8c02017 	ldw	r3,128(sp)
  80f568:	da000404 	addi	r8,sp,16
  80f56c:	003d0306 	br	80e97c <__alt_data_end+0xff80e97c>
  80f570:	0025883a 	mov	r18,zero
  80f574:	dd803115 	stw	r22,196(sp)
  80f578:	003ca406 	br	80e80c <__alt_data_end+0xff80e80c>
  80f57c:	dc002617 	ldw	r16,152(sp)
  80f580:	0401480e 	bge	zero,r16,80faa4 <___svfprintf_internal_r+0x1734>
  80f584:	db003117 	ldw	r12,196(sp)
  80f588:	dac03317 	ldw	r11,204(sp)
  80f58c:	62e1883a 	add	r16,r12,r11
  80f590:	db003417 	ldw	r12,208(sp)
  80f594:	5825883a 	mov	r18,r11
  80f598:	62c0010e 	bge	r12,r11,80f5a0 <___svfprintf_internal_r+0x1230>
  80f59c:	6025883a 	mov	r18,r12
  80f5a0:	04800b0e 	bge	zero,r18,80f5d0 <___svfprintf_internal_r+0x1260>
  80f5a4:	d8801f17 	ldw	r2,124(sp)
  80f5a8:	dac03117 	ldw	r11,196(sp)
  80f5ac:	1c87883a 	add	r3,r3,r18
  80f5b0:	10800044 	addi	r2,r2,1
  80f5b4:	42c00015 	stw	r11,0(r8)
  80f5b8:	44800115 	stw	r18,4(r8)
  80f5bc:	d8c02015 	stw	r3,128(sp)
  80f5c0:	d8801f15 	stw	r2,124(sp)
  80f5c4:	010001c4 	movi	r4,7
  80f5c8:	20823f16 	blt	r4,r2,80fec8 <___svfprintf_internal_r+0x1b58>
  80f5cc:	42000204 	addi	r8,r8,8
  80f5d0:	90023b16 	blt	r18,zero,80fec0 <___svfprintf_internal_r+0x1b50>
  80f5d4:	db003417 	ldw	r12,208(sp)
  80f5d8:	64a5c83a 	sub	r18,r12,r18
  80f5dc:	0480780e 	bge	zero,r18,80f7c0 <___svfprintf_internal_r+0x1450>
  80f5e0:	05400404 	movi	r21,16
  80f5e4:	d8801f17 	ldw	r2,124(sp)
  80f5e8:	ac81140e 	bge	r21,r18,80fa3c <___svfprintf_internal_r+0x16cc>
  80f5ec:	014020b4 	movhi	r5,130
  80f5f0:	29700084 	addi	r5,r5,-16382
  80f5f4:	d9402b15 	stw	r5,172(sp)
  80f5f8:	070001c4 	movi	fp,7
  80f5fc:	dcc02f17 	ldw	r19,188(sp)
  80f600:	00000306 	br	80f610 <___svfprintf_internal_r+0x12a0>
  80f604:	42000204 	addi	r8,r8,8
  80f608:	94bffc04 	addi	r18,r18,-16
  80f60c:	ac810e0e 	bge	r21,r18,80fa48 <___svfprintf_internal_r+0x16d8>
  80f610:	18c00404 	addi	r3,r3,16
  80f614:	10800044 	addi	r2,r2,1
  80f618:	45000015 	stw	r20,0(r8)
  80f61c:	45400115 	stw	r21,4(r8)
  80f620:	d8c02015 	stw	r3,128(sp)
  80f624:	d8801f15 	stw	r2,124(sp)
  80f628:	e0bff60e 	bge	fp,r2,80f604 <__alt_data_end+0xff80f604>
  80f62c:	9809883a 	mov	r4,r19
  80f630:	b80b883a 	mov	r5,r23
  80f634:	b00d883a 	mov	r6,r22
  80f638:	0812a940 	call	812a94 <__ssprint_r>
  80f63c:	103c141e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f640:	d8c02017 	ldw	r3,128(sp)
  80f644:	d8801f17 	ldw	r2,124(sp)
  80f648:	da000404 	addi	r8,sp,16
  80f64c:	003fee06 	br	80f608 <__alt_data_end+0xff80f608>
  80f650:	d9002f17 	ldw	r4,188(sp)
  80f654:	b80b883a 	mov	r5,r23
  80f658:	b00d883a 	mov	r6,r22
  80f65c:	0812a940 	call	812a94 <__ssprint_r>
  80f660:	103c0b1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f664:	d8c02017 	ldw	r3,128(sp)
  80f668:	d8802787 	ldb	r2,158(sp)
  80f66c:	da000404 	addi	r8,sp,16
  80f670:	003cb506 	br	80e948 <__alt_data_end+0xff80e948>
  80f674:	657fffc4 	addi	r21,r12,-1
  80f678:	057f750e 	bge	zero,r21,80f450 <__alt_data_end+0xff80f450>
  80f67c:	07000404 	movi	fp,16
  80f680:	e542ed0e 	bge	fp,r21,810238 <___svfprintf_internal_r+0x1ec8>
  80f684:	010020b4 	movhi	r4,130
  80f688:	21300084 	addi	r4,r4,-16382
  80f68c:	d9002b15 	stw	r4,172(sp)
  80f690:	01c001c4 	movi	r7,7
  80f694:	dcc02f17 	ldw	r19,188(sp)
  80f698:	00000306 	br	80f6a8 <___svfprintf_internal_r+0x1338>
  80f69c:	ad7ffc04 	addi	r21,r21,-16
  80f6a0:	94800204 	addi	r18,r18,8
  80f6a4:	e540130e 	bge	fp,r21,80f6f4 <___svfprintf_internal_r+0x1384>
  80f6a8:	18c00404 	addi	r3,r3,16
  80f6ac:	84000044 	addi	r16,r16,1
  80f6b0:	95000015 	stw	r20,0(r18)
  80f6b4:	97000115 	stw	fp,4(r18)
  80f6b8:	d8c02015 	stw	r3,128(sp)
  80f6bc:	dc001f15 	stw	r16,124(sp)
  80f6c0:	3c3ff60e 	bge	r7,r16,80f69c <__alt_data_end+0xff80f69c>
  80f6c4:	9809883a 	mov	r4,r19
  80f6c8:	b80b883a 	mov	r5,r23
  80f6cc:	b00d883a 	mov	r6,r22
  80f6d0:	d9c03e15 	stw	r7,248(sp)
  80f6d4:	0812a940 	call	812a94 <__ssprint_r>
  80f6d8:	d9c03e17 	ldw	r7,248(sp)
  80f6dc:	103bec1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f6e0:	ad7ffc04 	addi	r21,r21,-16
  80f6e4:	d8c02017 	ldw	r3,128(sp)
  80f6e8:	dc001f17 	ldw	r16,124(sp)
  80f6ec:	dc800404 	addi	r18,sp,16
  80f6f0:	e57fed16 	blt	fp,r21,80f6a8 <__alt_data_end+0xff80f6a8>
  80f6f4:	dac02b17 	ldw	r11,172(sp)
  80f6f8:	1d47883a 	add	r3,r3,r21
  80f6fc:	84000044 	addi	r16,r16,1
  80f700:	92c00015 	stw	r11,0(r18)
  80f704:	95400115 	stw	r21,4(r18)
  80f708:	d8c02015 	stw	r3,128(sp)
  80f70c:	dc001f15 	stw	r16,124(sp)
  80f710:	008001c4 	movi	r2,7
  80f714:	143f4d0e 	bge	r2,r16,80f44c <__alt_data_end+0xff80f44c>
  80f718:	d9002f17 	ldw	r4,188(sp)
  80f71c:	b80b883a 	mov	r5,r23
  80f720:	b00d883a 	mov	r6,r22
  80f724:	0812a940 	call	812a94 <__ssprint_r>
  80f728:	103bd91e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f72c:	d8c02017 	ldw	r3,128(sp)
  80f730:	dc001f17 	ldw	r16,124(sp)
  80f734:	dc800404 	addi	r18,sp,16
  80f738:	003f4506 	br	80f450 <__alt_data_end+0xff80f450>
  80f73c:	00800084 	movi	r2,2
  80f740:	9f06b03a 	or	r3,r19,fp
  80f744:	003d5706 	br	80eca4 <__alt_data_end+0xff80eca4>
  80f748:	1cc00017 	ldw	r19,0(r3)
  80f74c:	dac02d17 	ldw	r11,180(sp)
  80f750:	9839d7fa 	srai	fp,r19,31
  80f754:	5ac00104 	addi	r11,r11,4
  80f758:	dac02d15 	stw	r11,180(sp)
  80f75c:	e005883a 	mov	r2,fp
  80f760:	003c0306 	br	80e770 <__alt_data_end+0xff80e770>
  80f764:	dac02d17 	ldw	r11,180(sp)
  80f768:	0039883a 	mov	fp,zero
  80f76c:	0005883a 	mov	r2,zero
  80f770:	5cc00017 	ldw	r19,0(r11)
  80f774:	5ac00104 	addi	r11,r11,4
  80f778:	dac02d15 	stw	r11,180(sp)
  80f77c:	9807883a 	mov	r3,r19
  80f780:	003d4806 	br	80eca4 <__alt_data_end+0xff80eca4>
  80f784:	db002d17 	ldw	r12,180(sp)
  80f788:	14c00017 	ldw	r19,0(r2)
  80f78c:	0039883a 	mov	fp,zero
  80f790:	63000104 	addi	r12,r12,4
  80f794:	db002d15 	stw	r12,180(sp)
  80f798:	00800044 	movi	r2,1
  80f79c:	9807883a 	mov	r3,r19
  80f7a0:	003d4006 	br	80eca4 <__alt_data_end+0xff80eca4>
  80f7a4:	d9002f17 	ldw	r4,188(sp)
  80f7a8:	b80b883a 	mov	r5,r23
  80f7ac:	b00d883a 	mov	r6,r22
  80f7b0:	0812a940 	call	812a94 <__ssprint_r>
  80f7b4:	103bb61e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f7b8:	d8c02017 	ldw	r3,128(sp)
  80f7bc:	da000404 	addi	r8,sp,16
  80f7c0:	db003117 	ldw	r12,196(sp)
  80f7c4:	dac03417 	ldw	r11,208(sp)
  80f7c8:	d8802617 	ldw	r2,152(sp)
  80f7cc:	62e5883a 	add	r18,r12,r11
  80f7d0:	db003317 	ldw	r12,204(sp)
  80f7d4:	13000216 	blt	r2,r12,80f7e0 <___svfprintf_internal_r+0x1470>
  80f7d8:	8900004c 	andi	r4,r17,1
  80f7dc:	20000c26 	beq	r4,zero,80f810 <___svfprintf_internal_r+0x14a0>
  80f7e0:	dac03917 	ldw	r11,228(sp)
  80f7e4:	d9001f17 	ldw	r4,124(sp)
  80f7e8:	db003517 	ldw	r12,212(sp)
  80f7ec:	1ac7883a 	add	r3,r3,r11
  80f7f0:	21000044 	addi	r4,r4,1
  80f7f4:	43000015 	stw	r12,0(r8)
  80f7f8:	42c00115 	stw	r11,4(r8)
  80f7fc:	d8c02015 	stw	r3,128(sp)
  80f800:	d9001f15 	stw	r4,124(sp)
  80f804:	014001c4 	movi	r5,7
  80f808:	2901b716 	blt	r5,r4,80fee8 <___svfprintf_internal_r+0x1b78>
  80f80c:	42000204 	addi	r8,r8,8
  80f810:	dac03317 	ldw	r11,204(sp)
  80f814:	8489c83a 	sub	r4,r16,r18
  80f818:	5885c83a 	sub	r2,r11,r2
  80f81c:	1021883a 	mov	r16,r2
  80f820:	2080010e 	bge	r4,r2,80f828 <___svfprintf_internal_r+0x14b8>
  80f824:	2021883a 	mov	r16,r4
  80f828:	04000a0e 	bge	zero,r16,80f854 <___svfprintf_internal_r+0x14e4>
  80f82c:	d9001f17 	ldw	r4,124(sp)
  80f830:	1c07883a 	add	r3,r3,r16
  80f834:	44800015 	stw	r18,0(r8)
  80f838:	21000044 	addi	r4,r4,1
  80f83c:	44000115 	stw	r16,4(r8)
  80f840:	d8c02015 	stw	r3,128(sp)
  80f844:	d9001f15 	stw	r4,124(sp)
  80f848:	014001c4 	movi	r5,7
  80f84c:	2901bf16 	blt	r5,r4,80ff4c <___svfprintf_internal_r+0x1bdc>
  80f850:	42000204 	addi	r8,r8,8
  80f854:	8001bb16 	blt	r16,zero,80ff44 <___svfprintf_internal_r+0x1bd4>
  80f858:	1421c83a 	sub	r16,r2,r16
  80f85c:	043c990e 	bge	zero,r16,80eac4 <__alt_data_end+0xff80eac4>
  80f860:	04800404 	movi	r18,16
  80f864:	d8801f17 	ldw	r2,124(sp)
  80f868:	943f0b0e 	bge	r18,r16,80f498 <__alt_data_end+0xff80f498>
  80f86c:	014020b4 	movhi	r5,130
  80f870:	29700084 	addi	r5,r5,-16382
  80f874:	d9402b15 	stw	r5,172(sp)
  80f878:	054001c4 	movi	r21,7
  80f87c:	dcc02f17 	ldw	r19,188(sp)
  80f880:	00000306 	br	80f890 <___svfprintf_internal_r+0x1520>
  80f884:	42000204 	addi	r8,r8,8
  80f888:	843ffc04 	addi	r16,r16,-16
  80f88c:	943f050e 	bge	r18,r16,80f4a4 <__alt_data_end+0xff80f4a4>
  80f890:	18c00404 	addi	r3,r3,16
  80f894:	10800044 	addi	r2,r2,1
  80f898:	45000015 	stw	r20,0(r8)
  80f89c:	44800115 	stw	r18,4(r8)
  80f8a0:	d8c02015 	stw	r3,128(sp)
  80f8a4:	d8801f15 	stw	r2,124(sp)
  80f8a8:	a8bff60e 	bge	r21,r2,80f884 <__alt_data_end+0xff80f884>
  80f8ac:	9809883a 	mov	r4,r19
  80f8b0:	b80b883a 	mov	r5,r23
  80f8b4:	b00d883a 	mov	r6,r22
  80f8b8:	0812a940 	call	812a94 <__ssprint_r>
  80f8bc:	103b741e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f8c0:	d8c02017 	ldw	r3,128(sp)
  80f8c4:	d8801f17 	ldw	r2,124(sp)
  80f8c8:	da000404 	addi	r8,sp,16
  80f8cc:	003fee06 	br	80f888 <__alt_data_end+0xff80f888>
  80f8d0:	8888703a 	and	r4,r17,r2
  80f8d4:	203eb31e 	bne	r4,zero,80f3a4 <__alt_data_end+0xff80f3a4>
  80f8d8:	dc001f17 	ldw	r16,124(sp)
  80f8dc:	db003117 	ldw	r12,196(sp)
  80f8e0:	40800115 	stw	r2,4(r8)
  80f8e4:	84000044 	addi	r16,r16,1
  80f8e8:	43000015 	stw	r12,0(r8)
  80f8ec:	d8c02015 	stw	r3,128(sp)
  80f8f0:	dc001f15 	stw	r16,124(sp)
  80f8f4:	008001c4 	movi	r2,7
  80f8f8:	143f8716 	blt	r2,r16,80f718 <__alt_data_end+0xff80f718>
  80f8fc:	44800204 	addi	r18,r8,8
  80f900:	003ed306 	br	80f450 <__alt_data_end+0xff80f450>
  80f904:	d9002f17 	ldw	r4,188(sp)
  80f908:	b80b883a 	mov	r5,r23
  80f90c:	b00d883a 	mov	r6,r22
  80f910:	0812a940 	call	812a94 <__ssprint_r>
  80f914:	103b5e1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f918:	d8c02017 	ldw	r3,128(sp)
  80f91c:	dc001f17 	ldw	r16,124(sp)
  80f920:	da000404 	addi	r8,sp,16
  80f924:	003eaa06 	br	80f3d0 <__alt_data_end+0xff80f3d0>
  80f928:	d9002f17 	ldw	r4,188(sp)
  80f92c:	b80b883a 	mov	r5,r23
  80f930:	b00d883a 	mov	r6,r22
  80f934:	0812a940 	call	812a94 <__ssprint_r>
  80f938:	103b551e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f93c:	d8c02017 	ldw	r3,128(sp)
  80f940:	dc001f17 	ldw	r16,124(sp)
  80f944:	dc800404 	addi	r18,sp,16
  80f948:	003eac06 	br	80f3fc <__alt_data_end+0xff80f3fc>
  80f94c:	d9002f17 	ldw	r4,188(sp)
  80f950:	b80b883a 	mov	r5,r23
  80f954:	b00d883a 	mov	r6,r22
  80f958:	0812a940 	call	812a94 <__ssprint_r>
  80f95c:	103b4c1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80f960:	d8c02017 	ldw	r3,128(sp)
  80f964:	da000404 	addi	r8,sp,16
  80f968:	003c1506 	br	80e9c0 <__alt_data_end+0xff80e9c0>
  80f96c:	da004015 	stw	r8,256(sp)
  80f970:	da403f15 	stw	r9,252(sp)
  80f974:	080ab7c0 	call	80ab7c <__fpclassifyd>
  80f978:	da004017 	ldw	r8,256(sp)
  80f97c:	da403f17 	ldw	r9,252(sp)
  80f980:	1000951e 	bne	r2,zero,80fbd8 <___svfprintf_internal_r+0x1868>
  80f984:	008011c4 	movi	r2,71
  80f988:	1400fb16 	blt	r2,r16,80fd78 <___svfprintf_internal_r+0x1a08>
  80f98c:	030020b4 	movhi	r12,130
  80f990:	632ed904 	addi	r12,r12,-17564
  80f994:	db003115 	stw	r12,196(sp)
  80f998:	00c000c4 	movi	r3,3
  80f99c:	00bfdfc4 	movi	r2,-129
  80f9a0:	d8c02a15 	stw	r3,168(sp)
  80f9a4:	88a2703a 	and	r17,r17,r2
  80f9a8:	dd402783 	ldbu	r21,158(sp)
  80f9ac:	dcc02d15 	stw	r19,180(sp)
  80f9b0:	1825883a 	mov	r18,r3
  80f9b4:	d8003215 	stw	zero,200(sp)
  80f9b8:	d8003415 	stw	zero,208(sp)
  80f9bc:	003b9806 	br	80e820 <__alt_data_end+0xff80e820>
  80f9c0:	1c000007 	ldb	r16,0(r3)
  80f9c4:	1805883a 	mov	r2,r3
  80f9c8:	003abf06 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80f9cc:	00800084 	movi	r2,2
  80f9d0:	003cb406 	br	80eca4 <__alt_data_end+0xff80eca4>
  80f9d4:	88c0100c 	andi	r3,r17,64
  80f9d8:	1800f626 	beq	r3,zero,80fdb4 <___svfprintf_internal_r+0x1a44>
  80f9dc:	dac02d17 	ldw	r11,180(sp)
  80f9e0:	14c0000b 	ldhu	r19,0(r2)
  80f9e4:	0039883a 	mov	fp,zero
  80f9e8:	5ac00104 	addi	r11,r11,4
  80f9ec:	dac02d15 	stw	r11,180(sp)
  80f9f0:	003cbd06 	br	80ece8 <__alt_data_end+0xff80ece8>
  80f9f4:	8880040c 	andi	r2,r17,16
  80f9f8:	1000091e 	bne	r2,zero,80fa20 <___svfprintf_internal_r+0x16b0>
  80f9fc:	8c40100c 	andi	r17,r17,64
  80fa00:	88000726 	beq	r17,zero,80fa20 <___svfprintf_internal_r+0x16b0>
  80fa04:	db002d17 	ldw	r12,180(sp)
  80fa08:	dac03017 	ldw	r11,192(sp)
  80fa0c:	60800017 	ldw	r2,0(r12)
  80fa10:	63000104 	addi	r12,r12,4
  80fa14:	db002d15 	stw	r12,180(sp)
  80fa18:	12c0000d 	sth	r11,0(r2)
  80fa1c:	003a8006 	br	80e420 <__alt_data_end+0xff80e420>
  80fa20:	db002d17 	ldw	r12,180(sp)
  80fa24:	dac03017 	ldw	r11,192(sp)
  80fa28:	60800017 	ldw	r2,0(r12)
  80fa2c:	63000104 	addi	r12,r12,4
  80fa30:	db002d15 	stw	r12,180(sp)
  80fa34:	12c00015 	stw	r11,0(r2)
  80fa38:	003a7906 	br	80e420 <__alt_data_end+0xff80e420>
  80fa3c:	010020b4 	movhi	r4,130
  80fa40:	21300084 	addi	r4,r4,-16382
  80fa44:	d9002b15 	stw	r4,172(sp)
  80fa48:	dac02b17 	ldw	r11,172(sp)
  80fa4c:	1c87883a 	add	r3,r3,r18
  80fa50:	10800044 	addi	r2,r2,1
  80fa54:	42c00015 	stw	r11,0(r8)
  80fa58:	44800115 	stw	r18,4(r8)
  80fa5c:	d8c02015 	stw	r3,128(sp)
  80fa60:	d8801f15 	stw	r2,124(sp)
  80fa64:	010001c4 	movi	r4,7
  80fa68:	20bf4e16 	blt	r4,r2,80f7a4 <__alt_data_end+0xff80f7a4>
  80fa6c:	42000204 	addi	r8,r8,8
  80fa70:	003f5306 	br	80f7c0 <__alt_data_end+0xff80f7c0>
  80fa74:	010020b4 	movhi	r4,130
  80fa78:	21300084 	addi	r4,r4,-16382
  80fa7c:	d9002b15 	stw	r4,172(sp)
  80fa80:	003bf906 	br	80ea68 <__alt_data_end+0xff80ea68>
  80fa84:	d9002f17 	ldw	r4,188(sp)
  80fa88:	b80b883a 	mov	r5,r23
  80fa8c:	b00d883a 	mov	r6,r22
  80fa90:	0812a940 	call	812a94 <__ssprint_r>
  80fa94:	103afe1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80fa98:	d8c02017 	ldw	r3,128(sp)
  80fa9c:	da000404 	addi	r8,sp,16
  80faa0:	003dc606 	br	80f1bc <__alt_data_end+0xff80f1bc>
  80faa4:	d8801f17 	ldw	r2,124(sp)
  80faa8:	030020b4 	movhi	r12,130
  80faac:	01000044 	movi	r4,1
  80fab0:	18c00044 	addi	r3,r3,1
  80fab4:	10800044 	addi	r2,r2,1
  80fab8:	632ee704 	addi	r12,r12,-17508
  80fabc:	41000115 	stw	r4,4(r8)
  80fac0:	43000015 	stw	r12,0(r8)
  80fac4:	d8c02015 	stw	r3,128(sp)
  80fac8:	d8801f15 	stw	r2,124(sp)
  80facc:	010001c4 	movi	r4,7
  80fad0:	2080ad16 	blt	r4,r2,80fd88 <___svfprintf_internal_r+0x1a18>
  80fad4:	42000204 	addi	r8,r8,8
  80fad8:	8000041e 	bne	r16,zero,80faec <___svfprintf_internal_r+0x177c>
  80fadc:	dac03317 	ldw	r11,204(sp)
  80fae0:	5800021e 	bne	r11,zero,80faec <___svfprintf_internal_r+0x177c>
  80fae4:	8880004c 	andi	r2,r17,1
  80fae8:	103bf626 	beq	r2,zero,80eac4 <__alt_data_end+0xff80eac4>
  80faec:	db003917 	ldw	r12,228(sp)
  80faf0:	d8801f17 	ldw	r2,124(sp)
  80faf4:	dac03517 	ldw	r11,212(sp)
  80faf8:	1b07883a 	add	r3,r3,r12
  80fafc:	10800044 	addi	r2,r2,1
  80fb00:	42c00015 	stw	r11,0(r8)
  80fb04:	43000115 	stw	r12,4(r8)
  80fb08:	d8c02015 	stw	r3,128(sp)
  80fb0c:	d8801f15 	stw	r2,124(sp)
  80fb10:	010001c4 	movi	r4,7
  80fb14:	20818616 	blt	r4,r2,810130 <___svfprintf_internal_r+0x1dc0>
  80fb18:	42000204 	addi	r8,r8,8
  80fb1c:	0421c83a 	sub	r16,zero,r16
  80fb20:	0400bc0e 	bge	zero,r16,80fe14 <___svfprintf_internal_r+0x1aa4>
  80fb24:	04800404 	movi	r18,16
  80fb28:	9400f80e 	bge	r18,r16,80ff0c <___svfprintf_internal_r+0x1b9c>
  80fb2c:	010020b4 	movhi	r4,130
  80fb30:	21300084 	addi	r4,r4,-16382
  80fb34:	d9002b15 	stw	r4,172(sp)
  80fb38:	054001c4 	movi	r21,7
  80fb3c:	dcc02f17 	ldw	r19,188(sp)
  80fb40:	00000306 	br	80fb50 <___svfprintf_internal_r+0x17e0>
  80fb44:	42000204 	addi	r8,r8,8
  80fb48:	843ffc04 	addi	r16,r16,-16
  80fb4c:	9400f20e 	bge	r18,r16,80ff18 <___svfprintf_internal_r+0x1ba8>
  80fb50:	18c00404 	addi	r3,r3,16
  80fb54:	10800044 	addi	r2,r2,1
  80fb58:	45000015 	stw	r20,0(r8)
  80fb5c:	44800115 	stw	r18,4(r8)
  80fb60:	d8c02015 	stw	r3,128(sp)
  80fb64:	d8801f15 	stw	r2,124(sp)
  80fb68:	a8bff60e 	bge	r21,r2,80fb44 <__alt_data_end+0xff80fb44>
  80fb6c:	9809883a 	mov	r4,r19
  80fb70:	b80b883a 	mov	r5,r23
  80fb74:	b00d883a 	mov	r6,r22
  80fb78:	0812a940 	call	812a94 <__ssprint_r>
  80fb7c:	103ac41e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80fb80:	d8c02017 	ldw	r3,128(sp)
  80fb84:	d8801f17 	ldw	r2,124(sp)
  80fb88:	da000404 	addi	r8,sp,16
  80fb8c:	003fee06 	br	80fb48 <__alt_data_end+0xff80fb48>
  80fb90:	db002e17 	ldw	r12,184(sp)
  80fb94:	1805883a 	mov	r2,r3
  80fb98:	dac02d15 	stw	r11,180(sp)
  80fb9c:	0319c83a 	sub	r12,zero,r12
  80fba0:	db002e15 	stw	r12,184(sp)
  80fba4:	003acf06 	br	80e6e4 <__alt_data_end+0xff80e6e4>
  80fba8:	18800044 	addi	r2,r3,1
  80fbac:	8c400814 	ori	r17,r17,32
  80fbb0:	1c000047 	ldb	r16,1(r3)
  80fbb4:	003a4406 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  80fbb8:	d9002f17 	ldw	r4,188(sp)
  80fbbc:	b80b883a 	mov	r5,r23
  80fbc0:	b00d883a 	mov	r6,r22
  80fbc4:	0812a940 	call	812a94 <__ssprint_r>
  80fbc8:	103ab11e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80fbcc:	d8c02017 	ldw	r3,128(sp)
  80fbd0:	da000404 	addi	r8,sp,16
  80fbd4:	003d8a06 	br	80f200 <__alt_data_end+0xff80f200>
  80fbd8:	057ff7c4 	movi	r21,-33
  80fbdc:	00bfffc4 	movi	r2,-1
  80fbe0:	856a703a 	and	r21,r16,r21
  80fbe4:	48807126 	beq	r9,r2,80fdac <___svfprintf_internal_r+0x1a3c>
  80fbe8:	008011c4 	movi	r2,71
  80fbec:	a8814d26 	beq	r21,r2,810124 <___svfprintf_internal_r+0x1db4>
  80fbf0:	db003817 	ldw	r12,224(sp)
  80fbf4:	8ac04014 	ori	r11,r17,256
  80fbf8:	dac02d15 	stw	r11,180(sp)
  80fbfc:	60015616 	blt	r12,zero,810158 <___svfprintf_internal_r+0x1de8>
  80fc00:	dc803817 	ldw	r18,224(sp)
  80fc04:	d8002a05 	stb	zero,168(sp)
  80fc08:	00801984 	movi	r2,102
  80fc0c:	80808c26 	beq	r16,r2,80fe40 <___svfprintf_internal_r+0x1ad0>
  80fc10:	00801184 	movi	r2,70
  80fc14:	80808a26 	beq	r16,r2,80fe40 <___svfprintf_internal_r+0x1ad0>
  80fc18:	00801144 	movi	r2,69
  80fc1c:	a8815226 	beq	r21,r2,810168 <___svfprintf_internal_r+0x1df8>
  80fc20:	4839883a 	mov	fp,r9
  80fc24:	d8802604 	addi	r2,sp,152
  80fc28:	d8800115 	stw	r2,4(sp)
  80fc2c:	d9002f17 	ldw	r4,188(sp)
  80fc30:	d8802504 	addi	r2,sp,148
  80fc34:	d9403717 	ldw	r5,220(sp)
  80fc38:	d8800215 	stw	r2,8(sp)
  80fc3c:	d8802104 	addi	r2,sp,132
  80fc40:	df000015 	stw	fp,0(sp)
  80fc44:	d8800315 	stw	r2,12(sp)
  80fc48:	900d883a 	mov	r6,r18
  80fc4c:	01c00084 	movi	r7,2
  80fc50:	da004015 	stw	r8,256(sp)
  80fc54:	da403f15 	stw	r9,252(sp)
  80fc58:	08070b80 	call	8070b8 <_dtoa_r>
  80fc5c:	d8803115 	stw	r2,196(sp)
  80fc60:	008019c4 	movi	r2,103
  80fc64:	da004017 	ldw	r8,256(sp)
  80fc68:	da403f17 	ldw	r9,252(sp)
  80fc6c:	80800226 	beq	r16,r2,80fc78 <___svfprintf_internal_r+0x1908>
  80fc70:	008011c4 	movi	r2,71
  80fc74:	8080841e 	bne	r16,r2,80fe88 <___svfprintf_internal_r+0x1b18>
  80fc78:	8880004c 	andi	r2,r17,1
  80fc7c:	10014f26 	beq	r2,zero,8101bc <___svfprintf_internal_r+0x1e4c>
  80fc80:	db003117 	ldw	r12,196(sp)
  80fc84:	6715883a 	add	r10,r12,fp
  80fc88:	d9003717 	ldw	r4,220(sp)
  80fc8c:	900b883a 	mov	r5,r18
  80fc90:	000d883a 	mov	r6,zero
  80fc94:	000f883a 	mov	r7,zero
  80fc98:	da004015 	stw	r8,256(sp)
  80fc9c:	da403f15 	stw	r9,252(sp)
  80fca0:	da803e15 	stw	r10,248(sp)
  80fca4:	0815f1c0 	call	815f1c <__eqdf2>
  80fca8:	da004017 	ldw	r8,256(sp)
  80fcac:	da403f17 	ldw	r9,252(sp)
  80fcb0:	da803e17 	ldw	r10,248(sp)
  80fcb4:	1000d926 	beq	r2,zero,81001c <___svfprintf_internal_r+0x1cac>
  80fcb8:	d8802117 	ldw	r2,132(sp)
  80fcbc:	1280062e 	bgeu	r2,r10,80fcd8 <___svfprintf_internal_r+0x1968>
  80fcc0:	01000c04 	movi	r4,48
  80fcc4:	10c00044 	addi	r3,r2,1
  80fcc8:	d8c02115 	stw	r3,132(sp)
  80fccc:	11000005 	stb	r4,0(r2)
  80fcd0:	d8802117 	ldw	r2,132(sp)
  80fcd4:	12bffb36 	bltu	r2,r10,80fcc4 <__alt_data_end+0xff80fcc4>
  80fcd8:	db003117 	ldw	r12,196(sp)
  80fcdc:	1305c83a 	sub	r2,r2,r12
  80fce0:	d8803315 	stw	r2,204(sp)
  80fce4:	008011c4 	movi	r2,71
  80fce8:	a880b626 	beq	r21,r2,80ffc4 <___svfprintf_internal_r+0x1c54>
  80fcec:	00801944 	movi	r2,101
  80fcf0:	14017c0e 	bge	r2,r16,8102e4 <___svfprintf_internal_r+0x1f74>
  80fcf4:	00801984 	movi	r2,102
  80fcf8:	80812626 	beq	r16,r2,810194 <___svfprintf_internal_r+0x1e24>
  80fcfc:	db002617 	ldw	r12,152(sp)
  80fd00:	db003415 	stw	r12,208(sp)
  80fd04:	db003417 	ldw	r12,208(sp)
  80fd08:	dac03317 	ldw	r11,204(sp)
  80fd0c:	62c11816 	blt	r12,r11,810170 <___svfprintf_internal_r+0x1e00>
  80fd10:	8c40004c 	andi	r17,r17,1
  80fd14:	88013b1e 	bne	r17,zero,810204 <___svfprintf_internal_r+0x1e94>
  80fd18:	6005883a 	mov	r2,r12
  80fd1c:	60012516 	blt	r12,zero,8101b4 <___svfprintf_internal_r+0x1e44>
  80fd20:	dc803417 	ldw	r18,208(sp)
  80fd24:	df002a07 	ldb	fp,168(sp)
  80fd28:	e000b01e 	bne	fp,zero,80ffec <___svfprintf_internal_r+0x1c7c>
  80fd2c:	dc402d17 	ldw	r17,180(sp)
  80fd30:	dd402783 	ldbu	r21,158(sp)
  80fd34:	d8802a15 	stw	r2,168(sp)
  80fd38:	dcc02d15 	stw	r19,180(sp)
  80fd3c:	d8003215 	stw	zero,200(sp)
  80fd40:	003ab706 	br	80e820 <__alt_data_end+0xff80e820>
  80fd44:	008020b4 	movhi	r2,130
  80fd48:	10aed704 	addi	r2,r2,-17572
  80fd4c:	d8803115 	stw	r2,196(sp)
  80fd50:	003bbb06 	br	80ec40 <__alt_data_end+0xff80ec40>
  80fd54:	d9002f17 	ldw	r4,188(sp)
  80fd58:	04001004 	movi	r16,64
  80fd5c:	800b883a 	mov	r5,r16
  80fd60:	080258c0 	call	80258c <_malloc_r>
  80fd64:	b8800015 	stw	r2,0(r23)
  80fd68:	b8800415 	stw	r2,16(r23)
  80fd6c:	10015f26 	beq	r2,zero,8102ec <___svfprintf_internal_r+0x1f7c>
  80fd70:	bc000515 	stw	r16,20(r23)
  80fd74:	00399806 	br	80e3d8 <__alt_data_end+0xff80e3d8>
  80fd78:	008020b4 	movhi	r2,130
  80fd7c:	10aeda04 	addi	r2,r2,-17560
  80fd80:	d8803115 	stw	r2,196(sp)
  80fd84:	003f0406 	br	80f998 <__alt_data_end+0xff80f998>
  80fd88:	d9002f17 	ldw	r4,188(sp)
  80fd8c:	b80b883a 	mov	r5,r23
  80fd90:	b00d883a 	mov	r6,r22
  80fd94:	0812a940 	call	812a94 <__ssprint_r>
  80fd98:	103a3d1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80fd9c:	dc002617 	ldw	r16,152(sp)
  80fda0:	d8c02017 	ldw	r3,128(sp)
  80fda4:	da000404 	addi	r8,sp,16
  80fda8:	003f4b06 	br	80fad8 <__alt_data_end+0xff80fad8>
  80fdac:	02400184 	movi	r9,6
  80fdb0:	003f8f06 	br	80fbf0 <__alt_data_end+0xff80fbf0>
  80fdb4:	db002d17 	ldw	r12,180(sp)
  80fdb8:	14c00017 	ldw	r19,0(r2)
  80fdbc:	0039883a 	mov	fp,zero
  80fdc0:	63000104 	addi	r12,r12,4
  80fdc4:	db002d15 	stw	r12,180(sp)
  80fdc8:	003bc706 	br	80ece8 <__alt_data_end+0xff80ece8>
  80fdcc:	d8c03117 	ldw	r3,196(sp)
  80fdd0:	b0e5c83a 	sub	r18,r22,r3
  80fdd4:	003a8d06 	br	80e80c <__alt_data_end+0xff80e80c>
  80fdd8:	da004015 	stw	r8,256(sp)
  80fddc:	08034f40 	call	8034f4 <strlen>
  80fde0:	1025883a 	mov	r18,r2
  80fde4:	da004017 	ldw	r8,256(sp)
  80fde8:	903bf20e 	bge	r18,zero,80edb4 <__alt_data_end+0xff80edb4>
  80fdec:	0005883a 	mov	r2,zero
  80fdf0:	003bf006 	br	80edb4 <__alt_data_end+0xff80edb4>
  80fdf4:	d9002f17 	ldw	r4,188(sp)
  80fdf8:	b80b883a 	mov	r5,r23
  80fdfc:	b00d883a 	mov	r6,r22
  80fe00:	0812a940 	call	812a94 <__ssprint_r>
  80fe04:	103a221e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80fe08:	d8c02017 	ldw	r3,128(sp)
  80fe0c:	d8801f17 	ldw	r2,124(sp)
  80fe10:	da000404 	addi	r8,sp,16
  80fe14:	db003317 	ldw	r12,204(sp)
  80fe18:	dac03117 	ldw	r11,196(sp)
  80fe1c:	10800044 	addi	r2,r2,1
  80fe20:	1b07883a 	add	r3,r3,r12
  80fe24:	42c00015 	stw	r11,0(r8)
  80fe28:	43000115 	stw	r12,4(r8)
  80fe2c:	d8c02015 	stw	r3,128(sp)
  80fe30:	d8801f15 	stw	r2,124(sp)
  80fe34:	010001c4 	movi	r4,7
  80fe38:	20bb210e 	bge	r4,r2,80eac0 <__alt_data_end+0xff80eac0>
  80fe3c:	003da206 	br	80f4c8 <__alt_data_end+0xff80f4c8>
  80fe40:	d8802604 	addi	r2,sp,152
  80fe44:	d8800115 	stw	r2,4(sp)
  80fe48:	d9002f17 	ldw	r4,188(sp)
  80fe4c:	d8802504 	addi	r2,sp,148
  80fe50:	d9403717 	ldw	r5,220(sp)
  80fe54:	d8800215 	stw	r2,8(sp)
  80fe58:	d8802104 	addi	r2,sp,132
  80fe5c:	da400015 	stw	r9,0(sp)
  80fe60:	d8800315 	stw	r2,12(sp)
  80fe64:	900d883a 	mov	r6,r18
  80fe68:	01c000c4 	movi	r7,3
  80fe6c:	da004015 	stw	r8,256(sp)
  80fe70:	da403f15 	stw	r9,252(sp)
  80fe74:	08070b80 	call	8070b8 <_dtoa_r>
  80fe78:	da403f17 	ldw	r9,252(sp)
  80fe7c:	da004017 	ldw	r8,256(sp)
  80fe80:	d8803115 	stw	r2,196(sp)
  80fe84:	4839883a 	mov	fp,r9
  80fe88:	dac03117 	ldw	r11,196(sp)
  80fe8c:	00801184 	movi	r2,70
  80fe90:	5f15883a 	add	r10,r11,fp
  80fe94:	a8bf7c1e 	bne	r21,r2,80fc88 <__alt_data_end+0xff80fc88>
  80fe98:	59000007 	ldb	r4,0(r11)
  80fe9c:	00800c04 	movi	r2,48
  80fea0:	2080c826 	beq	r4,r2,8101c4 <___svfprintf_internal_r+0x1e54>
  80fea4:	d8c02617 	ldw	r3,152(sp)
  80fea8:	50d5883a 	add	r10,r10,r3
  80feac:	003f7606 	br	80fc88 <__alt_data_end+0xff80fc88>
  80feb0:	010020b4 	movhi	r4,130
  80feb4:	21300484 	addi	r4,r4,-16366
  80feb8:	d9003615 	stw	r4,216(sp)
  80febc:	003a9706 	br	80e91c <__alt_data_end+0xff80e91c>
  80fec0:	0025883a 	mov	r18,zero
  80fec4:	003dc306 	br	80f5d4 <__alt_data_end+0xff80f5d4>
  80fec8:	d9002f17 	ldw	r4,188(sp)
  80fecc:	b80b883a 	mov	r5,r23
  80fed0:	b00d883a 	mov	r6,r22
  80fed4:	0812a940 	call	812a94 <__ssprint_r>
  80fed8:	1039ed1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80fedc:	d8c02017 	ldw	r3,128(sp)
  80fee0:	da000404 	addi	r8,sp,16
  80fee4:	003dba06 	br	80f5d0 <__alt_data_end+0xff80f5d0>
  80fee8:	d9002f17 	ldw	r4,188(sp)
  80feec:	b80b883a 	mov	r5,r23
  80fef0:	b00d883a 	mov	r6,r22
  80fef4:	0812a940 	call	812a94 <__ssprint_r>
  80fef8:	1039e51e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80fefc:	d8802617 	ldw	r2,152(sp)
  80ff00:	d8c02017 	ldw	r3,128(sp)
  80ff04:	da000404 	addi	r8,sp,16
  80ff08:	003e4106 	br	80f810 <__alt_data_end+0xff80f810>
  80ff0c:	030020b4 	movhi	r12,130
  80ff10:	63300084 	addi	r12,r12,-16382
  80ff14:	db002b15 	stw	r12,172(sp)
  80ff18:	dac02b17 	ldw	r11,172(sp)
  80ff1c:	1c07883a 	add	r3,r3,r16
  80ff20:	10800044 	addi	r2,r2,1
  80ff24:	42c00015 	stw	r11,0(r8)
  80ff28:	44000115 	stw	r16,4(r8)
  80ff2c:	d8c02015 	stw	r3,128(sp)
  80ff30:	d8801f15 	stw	r2,124(sp)
  80ff34:	010001c4 	movi	r4,7
  80ff38:	20bfae16 	blt	r4,r2,80fdf4 <__alt_data_end+0xff80fdf4>
  80ff3c:	42000204 	addi	r8,r8,8
  80ff40:	003fb406 	br	80fe14 <__alt_data_end+0xff80fe14>
  80ff44:	0021883a 	mov	r16,zero
  80ff48:	003e4306 	br	80f858 <__alt_data_end+0xff80f858>
  80ff4c:	d9002f17 	ldw	r4,188(sp)
  80ff50:	b80b883a 	mov	r5,r23
  80ff54:	b00d883a 	mov	r6,r22
  80ff58:	0812a940 	call	812a94 <__ssprint_r>
  80ff5c:	1039cc1e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  80ff60:	d8802617 	ldw	r2,152(sp)
  80ff64:	db003317 	ldw	r12,204(sp)
  80ff68:	d8c02017 	ldw	r3,128(sp)
  80ff6c:	da000404 	addi	r8,sp,16
  80ff70:	6085c83a 	sub	r2,r12,r2
  80ff74:	003e3706 	br	80f854 <__alt_data_end+0xff80f854>
  80ff78:	00800184 	movi	r2,6
  80ff7c:	1240012e 	bgeu	r2,r9,80ff84 <___svfprintf_internal_r+0x1c14>
  80ff80:	1013883a 	mov	r9,r2
  80ff84:	4825883a 	mov	r18,r9
  80ff88:	4805883a 	mov	r2,r9
  80ff8c:	4800a216 	blt	r9,zero,810218 <___svfprintf_internal_r+0x1ea8>
  80ff90:	d8802a15 	stw	r2,168(sp)
  80ff94:	008020b4 	movhi	r2,130
  80ff98:	10aee504 	addi	r2,r2,-17516
  80ff9c:	d8803115 	stw	r2,196(sp)
  80ffa0:	dcc02d15 	stw	r19,180(sp)
  80ffa4:	d8003215 	stw	zero,200(sp)
  80ffa8:	d8003415 	stw	zero,208(sp)
  80ffac:	0005883a 	mov	r2,zero
  80ffb0:	003a2206 	br	80e83c <__alt_data_end+0xff80e83c>
  80ffb4:	030020b4 	movhi	r12,130
  80ffb8:	63300484 	addi	r12,r12,-16366
  80ffbc:	db003615 	stw	r12,216(sp)
  80ffc0:	003ae506 	br	80eb58 <__alt_data_end+0xff80eb58>
  80ffc4:	d8c02617 	ldw	r3,152(sp)
  80ffc8:	00bfff44 	movi	r2,-3
  80ffcc:	18801516 	blt	r3,r2,810024 <___svfprintf_internal_r+0x1cb4>
  80ffd0:	48c01416 	blt	r9,r3,810024 <___svfprintf_internal_r+0x1cb4>
  80ffd4:	d8c03415 	stw	r3,208(sp)
  80ffd8:	040019c4 	movi	r16,103
  80ffdc:	003f4906 	br	80fd04 <__alt_data_end+0xff80fd04>
  80ffe0:	05400b44 	movi	r21,45
  80ffe4:	dd402785 	stb	r21,158(sp)
  80ffe8:	003b1006 	br	80ec2c <__alt_data_end+0xff80ec2c>
  80ffec:	00c00b44 	movi	r3,45
  80fff0:	d8802a15 	stw	r2,168(sp)
  80fff4:	dc402d17 	ldw	r17,180(sp)
  80fff8:	d8c02785 	stb	r3,158(sp)
  80fffc:	dcc02d15 	stw	r19,180(sp)
  810000:	d8003215 	stw	zero,200(sp)
  810004:	00800b44 	movi	r2,45
  810008:	003a0906 	br	80e830 <__alt_data_end+0xff80e830>
  81000c:	010020b4 	movhi	r4,130
  810010:	21300084 	addi	r4,r4,-16382
  810014:	d9002b15 	stw	r4,172(sp)
  810018:	003cc306 	br	80f328 <__alt_data_end+0xff80f328>
  81001c:	5005883a 	mov	r2,r10
  810020:	003f2d06 	br	80fcd8 <__alt_data_end+0xff80fcd8>
  810024:	843fff84 	addi	r16,r16,-2
  810028:	1f3fffc4 	addi	fp,r3,-1
  81002c:	df002615 	stw	fp,152(sp)
  810030:	dc0022c5 	stb	r16,139(sp)
  810034:	e000a016 	blt	fp,zero,8102b8 <___svfprintf_internal_r+0x1f48>
  810038:	00800ac4 	movi	r2,43
  81003c:	d8802305 	stb	r2,140(sp)
  810040:	00800244 	movi	r2,9
  810044:	1700800e 	bge	r2,fp,810248 <___svfprintf_internal_r+0x1ed8>
  810048:	dd4022c4 	addi	r21,sp,139
  81004c:	dc002b15 	stw	r16,172(sp)
  810050:	4025883a 	mov	r18,r8
  810054:	a821883a 	mov	r16,r21
  810058:	e009883a 	mov	r4,fp
  81005c:	01400284 	movi	r5,10
  810060:	0814b640 	call	814b64 <__modsi3>
  810064:	10800c04 	addi	r2,r2,48
  810068:	843fffc4 	addi	r16,r16,-1
  81006c:	e009883a 	mov	r4,fp
  810070:	01400284 	movi	r5,10
  810074:	80800005 	stb	r2,0(r16)
  810078:	0814b100 	call	814b10 <__divsi3>
  81007c:	1039883a 	mov	fp,r2
  810080:	00800244 	movi	r2,9
  810084:	173ff416 	blt	r2,fp,810058 <__alt_data_end+0xff810058>
  810088:	9011883a 	mov	r8,r18
  81008c:	e0800c04 	addi	r2,fp,48
  810090:	8025883a 	mov	r18,r16
  810094:	913fffc4 	addi	r4,r18,-1
  810098:	90bfffc5 	stb	r2,-1(r18)
  81009c:	dc002b17 	ldw	r16,172(sp)
  8100a0:	25408e2e 	bgeu	r4,r21,8102dc <___svfprintf_internal_r+0x1f6c>
  8100a4:	d9402384 	addi	r5,sp,142
  8100a8:	2c8bc83a 	sub	r5,r5,r18
  8100ac:	d8c02344 	addi	r3,sp,141
  8100b0:	a94b883a 	add	r5,r21,r5
  8100b4:	00000106 	br	8100bc <___svfprintf_internal_r+0x1d4c>
  8100b8:	20800003 	ldbu	r2,0(r4)
  8100bc:	18800005 	stb	r2,0(r3)
  8100c0:	18c00044 	addi	r3,r3,1
  8100c4:	21000044 	addi	r4,r4,1
  8100c8:	197ffb1e 	bne	r3,r5,8100b8 <__alt_data_end+0xff8100b8>
  8100cc:	d8802304 	addi	r2,sp,140
  8100d0:	1485c83a 	sub	r2,r2,r18
  8100d4:	d8c02344 	addi	r3,sp,141
  8100d8:	1885883a 	add	r2,r3,r2
  8100dc:	dac03317 	ldw	r11,204(sp)
  8100e0:	156bc83a 	sub	r21,r2,r21
  8100e4:	dd403a15 	stw	r21,232(sp)
  8100e8:	00800044 	movi	r2,1
  8100ec:	5d65883a 	add	r18,r11,r21
  8100f0:	12c0770e 	bge	r2,r11,8102d0 <___svfprintf_internal_r+0x1f60>
  8100f4:	94800044 	addi	r18,r18,1
  8100f8:	9005883a 	mov	r2,r18
  8100fc:	90007216 	blt	r18,zero,8102c8 <___svfprintf_internal_r+0x1f58>
  810100:	d8003415 	stw	zero,208(sp)
  810104:	003f0706 	br	80fd24 <__alt_data_end+0xff80fd24>
  810108:	da402a15 	stw	r9,168(sp)
  81010c:	dd402783 	ldbu	r21,158(sp)
  810110:	4825883a 	mov	r18,r9
  810114:	dcc02d15 	stw	r19,180(sp)
  810118:	d8003215 	stw	zero,200(sp)
  81011c:	d8003415 	stw	zero,208(sp)
  810120:	0039bf06 	br	80e820 <__alt_data_end+0xff80e820>
  810124:	483eb21e 	bne	r9,zero,80fbf0 <__alt_data_end+0xff80fbf0>
  810128:	9013883a 	mov	r9,r18
  81012c:	003eb006 	br	80fbf0 <__alt_data_end+0xff80fbf0>
  810130:	d9002f17 	ldw	r4,188(sp)
  810134:	b80b883a 	mov	r5,r23
  810138:	b00d883a 	mov	r6,r22
  81013c:	0812a940 	call	812a94 <__ssprint_r>
  810140:	1039531e 	bne	r2,zero,80e690 <__alt_data_end+0xff80e690>
  810144:	dc002617 	ldw	r16,152(sp)
  810148:	d8c02017 	ldw	r3,128(sp)
  81014c:	d8801f17 	ldw	r2,124(sp)
  810150:	da000404 	addi	r8,sp,16
  810154:	003e7106 	br	80fb1c <__alt_data_end+0xff80fb1c>
  810158:	00c00b44 	movi	r3,45
  81015c:	64a0003c 	xorhi	r18,r12,32768
  810160:	d8c02a05 	stb	r3,168(sp)
  810164:	003ea806 	br	80fc08 <__alt_data_end+0xff80fc08>
  810168:	4f000044 	addi	fp,r9,1
  81016c:	003ead06 	br	80fc24 <__alt_data_end+0xff80fc24>
  810170:	d8c03417 	ldw	r3,208(sp)
  810174:	00c0410e 	bge	zero,r3,81027c <___svfprintf_internal_r+0x1f0c>
  810178:	04800044 	movi	r18,1
  81017c:	dac03317 	ldw	r11,204(sp)
  810180:	92e5883a 	add	r18,r18,r11
  810184:	9005883a 	mov	r2,r18
  810188:	903ee60e 	bge	r18,zero,80fd24 <__alt_data_end+0xff80fd24>
  81018c:	0005883a 	mov	r2,zero
  810190:	003ee406 	br	80fd24 <__alt_data_end+0xff80fd24>
  810194:	d8c02617 	ldw	r3,152(sp)
  810198:	d8c03415 	stw	r3,208(sp)
  81019c:	00c0310e 	bge	zero,r3,810264 <___svfprintf_internal_r+0x1ef4>
  8101a0:	48001f1e 	bne	r9,zero,810220 <___svfprintf_internal_r+0x1eb0>
  8101a4:	8c40004c 	andi	r17,r17,1
  8101a8:	88001d1e 	bne	r17,zero,810220 <___svfprintf_internal_r+0x1eb0>
  8101ac:	1805883a 	mov	r2,r3
  8101b0:	183edb0e 	bge	r3,zero,80fd20 <__alt_data_end+0xff80fd20>
  8101b4:	0005883a 	mov	r2,zero
  8101b8:	003ed906 	br	80fd20 <__alt_data_end+0xff80fd20>
  8101bc:	d8802117 	ldw	r2,132(sp)
  8101c0:	003ec506 	br	80fcd8 <__alt_data_end+0xff80fcd8>
  8101c4:	d9003717 	ldw	r4,220(sp)
  8101c8:	900b883a 	mov	r5,r18
  8101cc:	000d883a 	mov	r6,zero
  8101d0:	000f883a 	mov	r7,zero
  8101d4:	da004015 	stw	r8,256(sp)
  8101d8:	da403f15 	stw	r9,252(sp)
  8101dc:	da803e15 	stw	r10,248(sp)
  8101e0:	0815f1c0 	call	815f1c <__eqdf2>
  8101e4:	da004017 	ldw	r8,256(sp)
  8101e8:	da403f17 	ldw	r9,252(sp)
  8101ec:	da803e17 	ldw	r10,248(sp)
  8101f0:	103f2c26 	beq	r2,zero,80fea4 <__alt_data_end+0xff80fea4>
  8101f4:	00800044 	movi	r2,1
  8101f8:	1707c83a 	sub	r3,r2,fp
  8101fc:	d8c02615 	stw	r3,152(sp)
  810200:	003f2906 	br	80fea8 <__alt_data_end+0xff80fea8>
  810204:	db003417 	ldw	r12,208(sp)
  810208:	64800044 	addi	r18,r12,1
  81020c:	9005883a 	mov	r2,r18
  810210:	903ec40e 	bge	r18,zero,80fd24 <__alt_data_end+0xff80fd24>
  810214:	003fdd06 	br	81018c <__alt_data_end+0xff81018c>
  810218:	0005883a 	mov	r2,zero
  81021c:	003f5c06 	br	80ff90 <__alt_data_end+0xff80ff90>
  810220:	dac03417 	ldw	r11,208(sp)
  810224:	4a400044 	addi	r9,r9,1
  810228:	5a65883a 	add	r18,r11,r9
  81022c:	9005883a 	mov	r2,r18
  810230:	903ebc0e 	bge	r18,zero,80fd24 <__alt_data_end+0xff80fd24>
  810234:	003fd506 	br	81018c <__alt_data_end+0xff81018c>
  810238:	008020b4 	movhi	r2,130
  81023c:	10b00084 	addi	r2,r2,-16382
  810240:	d8802b15 	stw	r2,172(sp)
  810244:	003d2b06 	br	80f6f4 <__alt_data_end+0xff80f6f4>
  810248:	00800c04 	movi	r2,48
  81024c:	e0c00c04 	addi	r3,fp,48
  810250:	d8802345 	stb	r2,141(sp)
  810254:	d8c02385 	stb	r3,142(sp)
  810258:	d88023c4 	addi	r2,sp,143
  81025c:	dd4022c4 	addi	r21,sp,139
  810260:	003f9e06 	br	8100dc <__alt_data_end+0xff8100dc>
  810264:	4800081e 	bne	r9,zero,810288 <___svfprintf_internal_r+0x1f18>
  810268:	8c40004c 	andi	r17,r17,1
  81026c:	8800061e 	bne	r17,zero,810288 <___svfprintf_internal_r+0x1f18>
  810270:	00800044 	movi	r2,1
  810274:	1025883a 	mov	r18,r2
  810278:	003eaa06 	br	80fd24 <__alt_data_end+0xff80fd24>
  81027c:	04800084 	movi	r18,2
  810280:	90e5c83a 	sub	r18,r18,r3
  810284:	003fbd06 	br	81017c <__alt_data_end+0xff81017c>
  810288:	4c800084 	addi	r18,r9,2
  81028c:	9005883a 	mov	r2,r18
  810290:	903ea40e 	bge	r18,zero,80fd24 <__alt_data_end+0xff80fd24>
  810294:	003fbd06 	br	81018c <__alt_data_end+0xff81018c>
  810298:	dac02d17 	ldw	r11,180(sp)
  81029c:	5a400017 	ldw	r9,0(r11)
  8102a0:	5ac00104 	addi	r11,r11,4
  8102a4:	dac02d15 	stw	r11,180(sp)
  8102a8:	483e410e 	bge	r9,zero,80fbb0 <__alt_data_end+0xff80fbb0>
  8102ac:	027fffc4 	movi	r9,-1
  8102b0:	1c000047 	ldb	r16,1(r3)
  8102b4:	00388406 	br	80e4c8 <__alt_data_end+0xff80e4c8>
  8102b8:	00800b44 	movi	r2,45
  8102bc:	0739c83a 	sub	fp,zero,fp
  8102c0:	d8802305 	stb	r2,140(sp)
  8102c4:	003f5e06 	br	810040 <__alt_data_end+0xff810040>
  8102c8:	0005883a 	mov	r2,zero
  8102cc:	003f8c06 	br	810100 <__alt_data_end+0xff810100>
  8102d0:	88a2703a 	and	r17,r17,r2
  8102d4:	883f8826 	beq	r17,zero,8100f8 <__alt_data_end+0xff8100f8>
  8102d8:	003f8606 	br	8100f4 <__alt_data_end+0xff8100f4>
  8102dc:	d8802344 	addi	r2,sp,141
  8102e0:	003f7e06 	br	8100dc <__alt_data_end+0xff8100dc>
  8102e4:	d8c02617 	ldw	r3,152(sp)
  8102e8:	003f4f06 	br	810028 <__alt_data_end+0xff810028>
  8102ec:	dac02f17 	ldw	r11,188(sp)
  8102f0:	00800304 	movi	r2,12
  8102f4:	58800015 	stw	r2,0(r11)
  8102f8:	00bfffc4 	movi	r2,-1
  8102fc:	0038e806 	br	80e6a0 <__alt_data_end+0xff80e6a0>

00810300 <__submore>:
  810300:	defffa04 	addi	sp,sp,-24
  810304:	dc000015 	stw	r16,0(sp)
  810308:	2821883a 	mov	r16,r5
  81030c:	29400c17 	ldw	r5,48(r5)
  810310:	dfc00515 	stw	ra,20(sp)
  810314:	dd000415 	stw	r20,16(sp)
  810318:	dcc00315 	stw	r19,12(sp)
  81031c:	dc800215 	stw	r18,8(sp)
  810320:	dc400115 	stw	r17,4(sp)
  810324:	80801004 	addi	r2,r16,64
  810328:	28801726 	beq	r5,r2,810388 <__submore+0x88>
  81032c:	84400d17 	ldw	r17,52(r16)
  810330:	8c67883a 	add	r19,r17,r17
  810334:	980d883a 	mov	r6,r19
  810338:	080a6140 	call	80a614 <_realloc_r>
  81033c:	1025883a 	mov	r18,r2
  810340:	10002226 	beq	r2,zero,8103cc <__submore+0xcc>
  810344:	1469883a 	add	r20,r2,r17
  810348:	a009883a 	mov	r4,r20
  81034c:	100b883a 	mov	r5,r2
  810350:	880d883a 	mov	r6,r17
  810354:	08092180 	call	809218 <memcpy>
  810358:	0005883a 	mov	r2,zero
  81035c:	85000015 	stw	r20,0(r16)
  810360:	84800c15 	stw	r18,48(r16)
  810364:	84c00d15 	stw	r19,52(r16)
  810368:	dfc00517 	ldw	ra,20(sp)
  81036c:	dd000417 	ldw	r20,16(sp)
  810370:	dcc00317 	ldw	r19,12(sp)
  810374:	dc800217 	ldw	r18,8(sp)
  810378:	dc400117 	ldw	r17,4(sp)
  81037c:	dc000017 	ldw	r16,0(sp)
  810380:	dec00604 	addi	sp,sp,24
  810384:	f800283a 	ret
  810388:	04410004 	movi	r17,1024
  81038c:	880b883a 	mov	r5,r17
  810390:	080258c0 	call	80258c <_malloc_r>
  810394:	1007883a 	mov	r3,r2
  810398:	10000c26 	beq	r2,zero,8103cc <__submore+0xcc>
  81039c:	80801083 	ldbu	r2,66(r16)
  8103a0:	80c00c15 	stw	r3,48(r16)
  8103a4:	84400d15 	stw	r17,52(r16)
  8103a8:	1880ffc5 	stb	r2,1023(r3)
  8103ac:	81401043 	ldbu	r5,65(r16)
  8103b0:	1900ff44 	addi	r4,r3,1021
  8103b4:	0005883a 	mov	r2,zero
  8103b8:	1940ff85 	stb	r5,1022(r3)
  8103bc:	81401003 	ldbu	r5,64(r16)
  8103c0:	1940ff45 	stb	r5,1021(r3)
  8103c4:	81000015 	stw	r4,0(r16)
  8103c8:	003fe706 	br	810368 <__alt_data_end+0xff810368>
  8103cc:	00bfffc4 	movi	r2,-1
  8103d0:	003fe506 	br	810368 <__alt_data_end+0xff810368>

008103d4 <_ungetc_r>:
  8103d4:	00bfffc4 	movi	r2,-1
  8103d8:	28805e26 	beq	r5,r2,810554 <_ungetc_r+0x180>
  8103dc:	defffc04 	addi	sp,sp,-16
  8103e0:	dc800215 	stw	r18,8(sp)
  8103e4:	dc400115 	stw	r17,4(sp)
  8103e8:	dc000015 	stw	r16,0(sp)
  8103ec:	dfc00315 	stw	ra,12(sp)
  8103f0:	2025883a 	mov	r18,r4
  8103f4:	3021883a 	mov	r16,r6
  8103f8:	2823883a 	mov	r17,r5
  8103fc:	20000226 	beq	r4,zero,810408 <_ungetc_r+0x34>
  810400:	20800e17 	ldw	r2,56(r4)
  810404:	10002d26 	beq	r2,zero,8104bc <_ungetc_r+0xe8>
  810408:	80c0030b 	ldhu	r3,12(r16)
  81040c:	1888000c 	andi	r2,r3,8192
  810410:	1000051e 	bne	r2,zero,810428 <_ungetc_r+0x54>
  810414:	81001917 	ldw	r4,100(r16)
  810418:	00b7ffc4 	movi	r2,-8193
  81041c:	18c80014 	ori	r3,r3,8192
  810420:	2084703a 	and	r2,r4,r2
  810424:	80801915 	stw	r2,100(r16)
  810428:	00bff7c4 	movi	r2,-33
  81042c:	1884703a 	and	r2,r3,r2
  810430:	8080030d 	sth	r2,12(r16)
  810434:	1900010c 	andi	r4,r3,4
  810438:	2000061e 	bne	r4,zero,810454 <_ungetc_r+0x80>
  81043c:	1900040c 	andi	r4,r3,16
  810440:	20001c26 	beq	r4,zero,8104b4 <_ungetc_r+0xe0>
  810444:	18c0020c 	andi	r3,r3,8
  810448:	1800321e 	bne	r3,zero,810514 <_ungetc_r+0x140>
  81044c:	10800114 	ori	r2,r2,4
  810450:	8080030d 	sth	r2,12(r16)
  810454:	80800c17 	ldw	r2,48(r16)
  810458:	8c403fcc 	andi	r17,r17,255
  81045c:	10001926 	beq	r2,zero,8104c4 <_ungetc_r+0xf0>
  810460:	80c00117 	ldw	r3,4(r16)
  810464:	80800d17 	ldw	r2,52(r16)
  810468:	18800e0e 	bge	r3,r2,8104a4 <_ungetc_r+0xd0>
  81046c:	80c00017 	ldw	r3,0(r16)
  810470:	8805883a 	mov	r2,r17
  810474:	193fffc4 	addi	r4,r3,-1
  810478:	81000015 	stw	r4,0(r16)
  81047c:	1c7fffc5 	stb	r17,-1(r3)
  810480:	80c00117 	ldw	r3,4(r16)
  810484:	18c00044 	addi	r3,r3,1
  810488:	80c00115 	stw	r3,4(r16)
  81048c:	dfc00317 	ldw	ra,12(sp)
  810490:	dc800217 	ldw	r18,8(sp)
  810494:	dc400117 	ldw	r17,4(sp)
  810498:	dc000017 	ldw	r16,0(sp)
  81049c:	dec00404 	addi	sp,sp,16
  8104a0:	f800283a 	ret
  8104a4:	9009883a 	mov	r4,r18
  8104a8:	800b883a 	mov	r5,r16
  8104ac:	08103000 	call	810300 <__submore>
  8104b0:	103fee26 	beq	r2,zero,81046c <__alt_data_end+0xff81046c>
  8104b4:	00bfffc4 	movi	r2,-1
  8104b8:	003ff406 	br	81048c <__alt_data_end+0xff81048c>
  8104bc:	08015a40 	call	8015a4 <__sinit>
  8104c0:	003fd106 	br	810408 <__alt_data_end+0xff810408>
  8104c4:	80800417 	ldw	r2,16(r16)
  8104c8:	80c00017 	ldw	r3,0(r16)
  8104cc:	10000326 	beq	r2,zero,8104dc <_ungetc_r+0x108>
  8104d0:	10c0022e 	bgeu	r2,r3,8104dc <_ungetc_r+0x108>
  8104d4:	18bfffc3 	ldbu	r2,-1(r3)
  8104d8:	14401826 	beq	r2,r17,81053c <_ungetc_r+0x168>
  8104dc:	81400117 	ldw	r5,4(r16)
  8104e0:	80801084 	addi	r2,r16,66
  8104e4:	81001004 	addi	r4,r16,64
  8104e8:	80c00e15 	stw	r3,56(r16)
  8104ec:	80800015 	stw	r2,0(r16)
  8104f0:	00c000c4 	movi	r3,3
  8104f4:	00800044 	movi	r2,1
  8104f8:	80800115 	stw	r2,4(r16)
  8104fc:	81400f15 	stw	r5,60(r16)
  810500:	81000c15 	stw	r4,48(r16)
  810504:	80c00d15 	stw	r3,52(r16)
  810508:	84401085 	stb	r17,66(r16)
  81050c:	8805883a 	mov	r2,r17
  810510:	003fde06 	br	81048c <__alt_data_end+0xff81048c>
  810514:	9009883a 	mov	r4,r18
  810518:	800b883a 	mov	r5,r16
  81051c:	08011c80 	call	8011c8 <_fflush_r>
  810520:	103fe41e 	bne	r2,zero,8104b4 <__alt_data_end+0xff8104b4>
  810524:	8080030b 	ldhu	r2,12(r16)
  810528:	00fffdc4 	movi	r3,-9
  81052c:	80000215 	stw	zero,8(r16)
  810530:	1884703a 	and	r2,r3,r2
  810534:	80000615 	stw	zero,24(r16)
  810538:	003fc406 	br	81044c <__alt_data_end+0xff81044c>
  81053c:	81000117 	ldw	r4,4(r16)
  810540:	18ffffc4 	addi	r3,r3,-1
  810544:	80c00015 	stw	r3,0(r16)
  810548:	20c00044 	addi	r3,r4,1
  81054c:	80c00115 	stw	r3,4(r16)
  810550:	003fce06 	br	81048c <__alt_data_end+0xff81048c>
  810554:	00bfffc4 	movi	r2,-1
  810558:	f800283a 	ret

0081055c <ungetc>:
  81055c:	00c020b4 	movhi	r3,130
  810560:	18f7f804 	addi	r3,r3,-8224
  810564:	2005883a 	mov	r2,r4
  810568:	19000017 	ldw	r4,0(r3)
  81056c:	280d883a 	mov	r6,r5
  810570:	100b883a 	mov	r5,r2
  810574:	08103d41 	jmpi	8103d4 <_ungetc_r>

00810578 <__sprint_r.part.0>:
  810578:	28801917 	ldw	r2,100(r5)
  81057c:	defff604 	addi	sp,sp,-40
  810580:	dd400515 	stw	r21,20(sp)
  810584:	dcc00315 	stw	r19,12(sp)
  810588:	dfc00915 	stw	ra,36(sp)
  81058c:	df000815 	stw	fp,32(sp)
  810590:	ddc00715 	stw	r23,28(sp)
  810594:	dd800615 	stw	r22,24(sp)
  810598:	dd000415 	stw	r20,16(sp)
  81059c:	dc800215 	stw	r18,8(sp)
  8105a0:	dc400115 	stw	r17,4(sp)
  8105a4:	dc000015 	stw	r16,0(sp)
  8105a8:	1088000c 	andi	r2,r2,8192
  8105ac:	2827883a 	mov	r19,r5
  8105b0:	302b883a 	mov	r21,r6
  8105b4:	10002d26 	beq	r2,zero,81066c <__sprint_r.part.0+0xf4>
  8105b8:	30800217 	ldw	r2,8(r6)
  8105bc:	35800017 	ldw	r22,0(r6)
  8105c0:	10002826 	beq	r2,zero,810664 <__sprint_r.part.0+0xec>
  8105c4:	2029883a 	mov	r20,r4
  8105c8:	b5c00104 	addi	r23,r22,4
  8105cc:	04bfffc4 	movi	r18,-1
  8105d0:	bc400017 	ldw	r17,0(r23)
  8105d4:	b4000017 	ldw	r16,0(r22)
  8105d8:	0039883a 	mov	fp,zero
  8105dc:	8822d0ba 	srli	r17,r17,2
  8105e0:	04400316 	blt	zero,r17,8105f0 <__sprint_r.part.0+0x78>
  8105e4:	00001806 	br	810648 <__sprint_r.part.0+0xd0>
  8105e8:	84000104 	addi	r16,r16,4
  8105ec:	8f001526 	beq	r17,fp,810644 <__sprint_r.part.0+0xcc>
  8105f0:	81400017 	ldw	r5,0(r16)
  8105f4:	a009883a 	mov	r4,r20
  8105f8:	980d883a 	mov	r6,r19
  8105fc:	0811c540 	call	811c54 <_fputwc_r>
  810600:	e7000044 	addi	fp,fp,1
  810604:	14bff81e 	bne	r2,r18,8105e8 <__alt_data_end+0xff8105e8>
  810608:	9005883a 	mov	r2,r18
  81060c:	a8000215 	stw	zero,8(r21)
  810610:	a8000115 	stw	zero,4(r21)
  810614:	dfc00917 	ldw	ra,36(sp)
  810618:	df000817 	ldw	fp,32(sp)
  81061c:	ddc00717 	ldw	r23,28(sp)
  810620:	dd800617 	ldw	r22,24(sp)
  810624:	dd400517 	ldw	r21,20(sp)
  810628:	dd000417 	ldw	r20,16(sp)
  81062c:	dcc00317 	ldw	r19,12(sp)
  810630:	dc800217 	ldw	r18,8(sp)
  810634:	dc400117 	ldw	r17,4(sp)
  810638:	dc000017 	ldw	r16,0(sp)
  81063c:	dec00a04 	addi	sp,sp,40
  810640:	f800283a 	ret
  810644:	a8800217 	ldw	r2,8(r21)
  810648:	8c63883a 	add	r17,r17,r17
  81064c:	8c63883a 	add	r17,r17,r17
  810650:	1445c83a 	sub	r2,r2,r17
  810654:	a8800215 	stw	r2,8(r21)
  810658:	b5800204 	addi	r22,r22,8
  81065c:	bdc00204 	addi	r23,r23,8
  810660:	103fdb1e 	bne	r2,zero,8105d0 <__alt_data_end+0xff8105d0>
  810664:	0005883a 	mov	r2,zero
  810668:	003fe806 	br	81060c <__alt_data_end+0xff81060c>
  81066c:	080888c0 	call	80888c <__sfvwrite_r>
  810670:	003fe606 	br	81060c <__alt_data_end+0xff81060c>

00810674 <__sprint_r>:
  810674:	30c00217 	ldw	r3,8(r6)
  810678:	18000126 	beq	r3,zero,810680 <__sprint_r+0xc>
  81067c:	08105781 	jmpi	810578 <__sprint_r.part.0>
  810680:	30000115 	stw	zero,4(r6)
  810684:	0005883a 	mov	r2,zero
  810688:	f800283a 	ret

0081068c <___vfiprintf_internal_r>:
  81068c:	deffca04 	addi	sp,sp,-216
  810690:	dd803215 	stw	r22,200(sp)
  810694:	dd403115 	stw	r21,196(sp)
  810698:	dfc03515 	stw	ra,212(sp)
  81069c:	df003415 	stw	fp,208(sp)
  8106a0:	ddc03315 	stw	r23,204(sp)
  8106a4:	dd003015 	stw	r20,192(sp)
  8106a8:	dcc02f15 	stw	r19,188(sp)
  8106ac:	dc802e15 	stw	r18,184(sp)
  8106b0:	dc402d15 	stw	r17,180(sp)
  8106b4:	dc002c15 	stw	r16,176(sp)
  8106b8:	d9002015 	stw	r4,128(sp)
  8106bc:	d9c02215 	stw	r7,136(sp)
  8106c0:	282b883a 	mov	r21,r5
  8106c4:	302d883a 	mov	r22,r6
  8106c8:	20000226 	beq	r4,zero,8106d4 <___vfiprintf_internal_r+0x48>
  8106cc:	20800e17 	ldw	r2,56(r4)
  8106d0:	1001b126 	beq	r2,zero,810d98 <___vfiprintf_internal_r+0x70c>
  8106d4:	a880030b 	ldhu	r2,12(r21)
  8106d8:	10c8000c 	andi	r3,r2,8192
  8106dc:	1800061e 	bne	r3,zero,8106f8 <___vfiprintf_internal_r+0x6c>
  8106e0:	a9001917 	ldw	r4,100(r21)
  8106e4:	00f7ffc4 	movi	r3,-8193
  8106e8:	10880014 	ori	r2,r2,8192
  8106ec:	20c6703a 	and	r3,r4,r3
  8106f0:	a880030d 	sth	r2,12(r21)
  8106f4:	a8c01915 	stw	r3,100(r21)
  8106f8:	10c0020c 	andi	r3,r2,8
  8106fc:	18018926 	beq	r3,zero,810d24 <___vfiprintf_internal_r+0x698>
  810700:	a8c00417 	ldw	r3,16(r21)
  810704:	18018726 	beq	r3,zero,810d24 <___vfiprintf_internal_r+0x698>
  810708:	1080068c 	andi	r2,r2,26
  81070c:	00c00284 	movi	r3,10
  810710:	10c18c26 	beq	r2,r3,810d44 <___vfiprintf_internal_r+0x6b8>
  810714:	d8801a04 	addi	r2,sp,104
  810718:	d8c019c4 	addi	r3,sp,103
  81071c:	070020b4 	movhi	fp,130
  810720:	05c020b4 	movhi	r23,130
  810724:	10c9c83a 	sub	r4,r2,r3
  810728:	e7300c84 	addi	fp,fp,-16334
  81072c:	bdf00884 	addi	r23,r23,-16350
  810730:	d8801e15 	stw	r2,120(sp)
  810734:	d8c01f15 	stw	r3,124(sp)
  810738:	dec01a15 	stw	sp,104(sp)
  81073c:	d8001c15 	stw	zero,112(sp)
  810740:	d8001b15 	stw	zero,108(sp)
  810744:	d8002615 	stw	zero,152(sp)
  810748:	d8002315 	stw	zero,140(sp)
  81074c:	d9002715 	stw	r4,156(sp)
  810750:	d811883a 	mov	r8,sp
  810754:	dd402115 	stw	r21,132(sp)
  810758:	b021883a 	mov	r16,r22
  81075c:	80800007 	ldb	r2,0(r16)
  810760:	10037226 	beq	r2,zero,81152c <___vfiprintf_internal_r+0xea0>
  810764:	01000944 	movi	r4,37
  810768:	11037026 	beq	r2,r4,81152c <___vfiprintf_internal_r+0xea0>
  81076c:	8005883a 	mov	r2,r16
  810770:	00000106 	br	810778 <___vfiprintf_internal_r+0xec>
  810774:	19000326 	beq	r3,r4,810784 <___vfiprintf_internal_r+0xf8>
  810778:	10800044 	addi	r2,r2,1
  81077c:	10c00007 	ldb	r3,0(r2)
  810780:	183ffc1e 	bne	r3,zero,810774 <__alt_data_end+0xff810774>
  810784:	1425c83a 	sub	r18,r2,r16
  810788:	1023883a 	mov	r17,r2
  81078c:	90001026 	beq	r18,zero,8107d0 <___vfiprintf_internal_r+0x144>
  810790:	d8c01c17 	ldw	r3,112(sp)
  810794:	d8801b17 	ldw	r2,108(sp)
  810798:	44000015 	stw	r16,0(r8)
  81079c:	90c7883a 	add	r3,r18,r3
  8107a0:	10800044 	addi	r2,r2,1
  8107a4:	44800115 	stw	r18,4(r8)
  8107a8:	d8c01c15 	stw	r3,112(sp)
  8107ac:	d8801b15 	stw	r2,108(sp)
  8107b0:	010001c4 	movi	r4,7
  8107b4:	2080750e 	bge	r4,r2,81098c <___vfiprintf_internal_r+0x300>
  8107b8:	18036f1e 	bne	r3,zero,811578 <___vfiprintf_internal_r+0xeec>
  8107bc:	d8802317 	ldw	r2,140(sp)
  8107c0:	d8001b15 	stw	zero,108(sp)
  8107c4:	d811883a 	mov	r8,sp
  8107c8:	1485883a 	add	r2,r2,r18
  8107cc:	d8802315 	stw	r2,140(sp)
  8107d0:	88800007 	ldb	r2,0(r17)
  8107d4:	10041026 	beq	r2,zero,811818 <___vfiprintf_internal_r+0x118c>
  8107d8:	88c00047 	ldb	r3,1(r17)
  8107dc:	88800044 	addi	r2,r17,1
  8107e0:	d8001d85 	stb	zero,118(sp)
  8107e4:	000f883a 	mov	r7,zero
  8107e8:	027fffc4 	movi	r9,-1
  8107ec:	0025883a 	mov	r18,zero
  8107f0:	002b883a 	mov	r21,zero
  8107f4:	01401604 	movi	r5,88
  8107f8:	01800244 	movi	r6,9
  8107fc:	03400a84 	movi	r13,42
  810800:	03001b04 	movi	r12,108
  810804:	14000044 	addi	r16,r2,1
  810808:	18bff804 	addi	r2,r3,-32
  81080c:	28825536 	bltu	r5,r2,811164 <___vfiprintf_internal_r+0xad8>
  810810:	100490ba 	slli	r2,r2,2
  810814:	01002074 	movhi	r4,129
  810818:	21020a04 	addi	r4,r4,2088
  81081c:	1105883a 	add	r2,r2,r4
  810820:	10800017 	ldw	r2,0(r2)
  810824:	1000683a 	jmp	r2
  810828:	00810f28 	cmpgeui	r2,zero,1084
  81082c:	00811164 	muli	r2,zero,1093
  810830:	00811164 	muli	r2,zero,1093
  810834:	00810f48 	cmpgei	r2,zero,1085
  810838:	00811164 	muli	r2,zero,1093
  81083c:	00811164 	muli	r2,zero,1093
  810840:	00811164 	muli	r2,zero,1093
  810844:	00811164 	muli	r2,zero,1093
  810848:	00811164 	muli	r2,zero,1093
  81084c:	00811164 	muli	r2,zero,1093
  810850:	00810f58 	cmpnei	r2,zero,1085
  810854:	00810f78 	rdprs	r2,zero,1085
  810858:	00811164 	muli	r2,zero,1093
  81085c:	00810da0 	cmpeqi	r2,zero,1078
  810860:	00810e8c 	andi	r2,zero,1082
  810864:	00811164 	muli	r2,zero,1093
  810868:	00810e0c 	andi	r2,zero,1080
  81086c:	00810e1c 	xori	r2,zero,1080
  810870:	00810e1c 	xori	r2,zero,1080
  810874:	00810e1c 	xori	r2,zero,1080
  810878:	00810e1c 	xori	r2,zero,1080
  81087c:	00810e1c 	xori	r2,zero,1080
  810880:	00810e1c 	xori	r2,zero,1080
  810884:	00810e1c 	xori	r2,zero,1080
  810888:	00810e1c 	xori	r2,zero,1080
  81088c:	00810e1c 	xori	r2,zero,1080
  810890:	00811164 	muli	r2,zero,1093
  810894:	00811164 	muli	r2,zero,1093
  810898:	00811164 	muli	r2,zero,1093
  81089c:	00811164 	muli	r2,zero,1093
  8108a0:	00811164 	muli	r2,zero,1093
  8108a4:	00811164 	muli	r2,zero,1093
  8108a8:	00811164 	muli	r2,zero,1093
  8108ac:	00811164 	muli	r2,zero,1093
  8108b0:	00811164 	muli	r2,zero,1093
  8108b4:	00811164 	muli	r2,zero,1093
  8108b8:	00810e48 	cmpgei	r2,zero,1081
  8108bc:	00811164 	muli	r2,zero,1093
  8108c0:	00811164 	muli	r2,zero,1093
  8108c4:	00811164 	muli	r2,zero,1093
  8108c8:	00811164 	muli	r2,zero,1093
  8108cc:	00811164 	muli	r2,zero,1093
  8108d0:	00811164 	muli	r2,zero,1093
  8108d4:	00811164 	muli	r2,zero,1093
  8108d8:	00811164 	muli	r2,zero,1093
  8108dc:	00811164 	muli	r2,zero,1093
  8108e0:	00811164 	muli	r2,zero,1093
  8108e4:	008109d4 	movui	r2,1063
  8108e8:	00811164 	muli	r2,zero,1093
  8108ec:	00811164 	muli	r2,zero,1093
  8108f0:	00811164 	muli	r2,zero,1093
  8108f4:	00811164 	muli	r2,zero,1093
  8108f8:	00811164 	muli	r2,zero,1093
  8108fc:	008109a0 	cmpeqi	r2,zero,1062
  810900:	00811164 	muli	r2,zero,1093
  810904:	00811164 	muli	r2,zero,1093
  810908:	00810fe8 	cmpgeui	r2,zero,1087
  81090c:	00811164 	muli	r2,zero,1093
  810910:	00811164 	muli	r2,zero,1093
  810914:	00811164 	muli	r2,zero,1093
  810918:	00811164 	muli	r2,zero,1093
  81091c:	00811164 	muli	r2,zero,1093
  810920:	00811164 	muli	r2,zero,1093
  810924:	00811164 	muli	r2,zero,1093
  810928:	00811164 	muli	r2,zero,1093
  81092c:	00811164 	muli	r2,zero,1093
  810930:	00811164 	muli	r2,zero,1093
  810934:	00810f88 	cmpgei	r2,zero,1086
  810938:	00810fb4 	movhi	r2,1086
  81093c:	00811164 	muli	r2,zero,1093
  810940:	00811164 	muli	r2,zero,1093
  810944:	00811164 	muli	r2,zero,1093
  810948:	00811090 	cmplti	r2,zero,1090
  81094c:	00810fb4 	movhi	r2,1086
  810950:	00811164 	muli	r2,zero,1093
  810954:	00811164 	muli	r2,zero,1093
  810958:	008110a0 	cmpeqi	r2,zero,1090
  81095c:	00811164 	muli	r2,zero,1093
  810960:	00810ecc 	andi	r2,zero,1083
  810964:	008109d8 	cmpnei	r2,zero,1063
  810968:	008110b4 	movhi	r2,1090
  81096c:	008110f4 	movhi	r2,1091
  810970:	00811164 	muli	r2,zero,1093
  810974:	0081103c 	xorhi	r2,zero,1088
  810978:	00811164 	muli	r2,zero,1093
  81097c:	008109a4 	muli	r2,zero,1062
  810980:	00811164 	muli	r2,zero,1093
  810984:	00811164 	muli	r2,zero,1093
  810988:	00811104 	movi	r2,1092
  81098c:	42000204 	addi	r8,r8,8
  810990:	d8802317 	ldw	r2,140(sp)
  810994:	1485883a 	add	r2,r2,r18
  810998:	d8802315 	stw	r2,140(sp)
  81099c:	003f8c06 	br	8107d0 <__alt_data_end+0xff8107d0>
  8109a0:	ad400414 	ori	r21,r21,16
  8109a4:	a880080c 	andi	r2,r21,32
  8109a8:	1001e61e 	bne	r2,zero,811144 <___vfiprintf_internal_r+0xab8>
  8109ac:	a880040c 	andi	r2,r21,16
  8109b0:	10034726 	beq	r2,zero,8116d0 <___vfiprintf_internal_r+0x1044>
  8109b4:	d8802217 	ldw	r2,136(sp)
  8109b8:	001b883a 	mov	r13,zero
  8109bc:	15800017 	ldw	r22,0(r2)
  8109c0:	10800104 	addi	r2,r2,4
  8109c4:	d8802215 	stw	r2,136(sp)
  8109c8:	b009883a 	mov	r4,r22
  8109cc:	00800044 	movi	r2,1
  8109d0:	00000c06 	br	810a04 <___vfiprintf_internal_r+0x378>
  8109d4:	ad400414 	ori	r21,r21,16
  8109d8:	a880080c 	andi	r2,r21,32
  8109dc:	1001491e 	bne	r2,zero,810f04 <___vfiprintf_internal_r+0x878>
  8109e0:	a880040c 	andi	r2,r21,16
  8109e4:	10032d26 	beq	r2,zero,81169c <___vfiprintf_internal_r+0x1010>
  8109e8:	d9002217 	ldw	r4,136(sp)
  8109ec:	001b883a 	mov	r13,zero
  8109f0:	0005883a 	mov	r2,zero
  8109f4:	25800017 	ldw	r22,0(r4)
  8109f8:	21000104 	addi	r4,r4,4
  8109fc:	d9002215 	stw	r4,136(sp)
  810a00:	b009883a 	mov	r4,r22
  810a04:	d8001d85 	stb	zero,118(sp)
  810a08:	4827883a 	mov	r19,r9
  810a0c:	001d883a 	mov	r14,zero
  810a10:	48000216 	blt	r9,zero,810a1c <___vfiprintf_internal_r+0x390>
  810a14:	00ffdfc4 	movi	r3,-129
  810a18:	a8ea703a 	and	r21,r21,r3
  810a1c:	2002071e 	bne	r4,zero,81123c <___vfiprintf_internal_r+0xbb0>
  810a20:	4802ad26 	beq	r9,zero,8114d8 <___vfiprintf_internal_r+0xe4c>
  810a24:	10803fcc 	andi	r2,r2,255
  810a28:	00c00044 	movi	r3,1
  810a2c:	10c22b26 	beq	r2,r3,8112dc <___vfiprintf_internal_r+0xc50>
  810a30:	00c00084 	movi	r3,2
  810a34:	dd001a04 	addi	r20,sp,104
  810a38:	10c0dd1e 	bne	r2,r3,810db0 <___vfiprintf_internal_r+0x724>
  810a3c:	d9002617 	ldw	r4,152(sp)
  810a40:	b08003cc 	andi	r2,r22,15
  810a44:	6806973a 	slli	r3,r13,28
  810a48:	2085883a 	add	r2,r4,r2
  810a4c:	b02cd13a 	srli	r22,r22,4
  810a50:	10800003 	ldbu	r2,0(r2)
  810a54:	681ad13a 	srli	r13,r13,4
  810a58:	a53fffc4 	addi	r20,r20,-1
  810a5c:	1dacb03a 	or	r22,r3,r22
  810a60:	a0800005 	stb	r2,0(r20)
  810a64:	b344b03a 	or	r2,r22,r13
  810a68:	103ff51e 	bne	r2,zero,810a40 <__alt_data_end+0xff810a40>
  810a6c:	d9001e17 	ldw	r4,120(sp)
  810a70:	2527c83a 	sub	r19,r4,r20
  810a74:	9823883a 	mov	r17,r19
  810a78:	9a40010e 	bge	r19,r9,810a80 <___vfiprintf_internal_r+0x3f4>
  810a7c:	4823883a 	mov	r17,r9
  810a80:	73803fcc 	andi	r14,r14,255
  810a84:	7380201c 	xori	r14,r14,128
  810a88:	73bfe004 	addi	r14,r14,-128
  810a8c:	70000126 	beq	r14,zero,810a94 <___vfiprintf_internal_r+0x408>
  810a90:	8c400044 	addi	r17,r17,1
  810a94:	ab40008c 	andi	r13,r21,2
  810a98:	68000126 	beq	r13,zero,810aa0 <___vfiprintf_internal_r+0x414>
  810a9c:	8c400084 	addi	r17,r17,2
  810aa0:	ad80210c 	andi	r22,r21,132
  810aa4:	b001c51e 	bne	r22,zero,8111bc <___vfiprintf_internal_r+0xb30>
  810aa8:	9447c83a 	sub	r3,r18,r17
  810aac:	00c1c30e 	bge	zero,r3,8111bc <___vfiprintf_internal_r+0xb30>
  810ab0:	01c00404 	movi	r7,16
  810ab4:	d8801c17 	ldw	r2,112(sp)
  810ab8:	38c37b0e 	bge	r7,r3,8118a8 <___vfiprintf_internal_r+0x121c>
  810abc:	010020b4 	movhi	r4,130
  810ac0:	21300c84 	addi	r4,r4,-16334
  810ac4:	dc002915 	stw	r16,164(sp)
  810ac8:	d9801b17 	ldw	r6,108(sp)
  810acc:	d9002415 	stw	r4,144(sp)
  810ad0:	03c001c4 	movi	r15,7
  810ad4:	da402515 	stw	r9,148(sp)
  810ad8:	db402815 	stw	r13,160(sp)
  810adc:	1821883a 	mov	r16,r3
  810ae0:	00000506 	br	810af8 <___vfiprintf_internal_r+0x46c>
  810ae4:	31400084 	addi	r5,r6,2
  810ae8:	42000204 	addi	r8,r8,8
  810aec:	200d883a 	mov	r6,r4
  810af0:	843ffc04 	addi	r16,r16,-16
  810af4:	3c000d0e 	bge	r7,r16,810b2c <___vfiprintf_internal_r+0x4a0>
  810af8:	10800404 	addi	r2,r2,16
  810afc:	31000044 	addi	r4,r6,1
  810b00:	47000015 	stw	fp,0(r8)
  810b04:	41c00115 	stw	r7,4(r8)
  810b08:	d8801c15 	stw	r2,112(sp)
  810b0c:	d9001b15 	stw	r4,108(sp)
  810b10:	793ff40e 	bge	r15,r4,810ae4 <__alt_data_end+0xff810ae4>
  810b14:	10019b1e 	bne	r2,zero,811184 <___vfiprintf_internal_r+0xaf8>
  810b18:	843ffc04 	addi	r16,r16,-16
  810b1c:	000d883a 	mov	r6,zero
  810b20:	01400044 	movi	r5,1
  810b24:	d811883a 	mov	r8,sp
  810b28:	3c3ff316 	blt	r7,r16,810af8 <__alt_data_end+0xff810af8>
  810b2c:	8007883a 	mov	r3,r16
  810b30:	da402517 	ldw	r9,148(sp)
  810b34:	db402817 	ldw	r13,160(sp)
  810b38:	dc002917 	ldw	r16,164(sp)
  810b3c:	d9002417 	ldw	r4,144(sp)
  810b40:	1885883a 	add	r2,r3,r2
  810b44:	40c00115 	stw	r3,4(r8)
  810b48:	41000015 	stw	r4,0(r8)
  810b4c:	d8801c15 	stw	r2,112(sp)
  810b50:	d9401b15 	stw	r5,108(sp)
  810b54:	00c001c4 	movi	r3,7
  810b58:	19426a16 	blt	r3,r5,811504 <___vfiprintf_internal_r+0xe78>
  810b5c:	d8c01d87 	ldb	r3,118(sp)
  810b60:	42000204 	addi	r8,r8,8
  810b64:	29000044 	addi	r4,r5,1
  810b68:	1801991e 	bne	r3,zero,8111d0 <___vfiprintf_internal_r+0xb44>
  810b6c:	68000c26 	beq	r13,zero,810ba0 <___vfiprintf_internal_r+0x514>
  810b70:	d8c01d04 	addi	r3,sp,116
  810b74:	10800084 	addi	r2,r2,2
  810b78:	40c00015 	stw	r3,0(r8)
  810b7c:	00c00084 	movi	r3,2
  810b80:	40c00115 	stw	r3,4(r8)
  810b84:	d8801c15 	stw	r2,112(sp)
  810b88:	d9001b15 	stw	r4,108(sp)
  810b8c:	00c001c4 	movi	r3,7
  810b90:	19024c16 	blt	r3,r4,8114c4 <___vfiprintf_internal_r+0xe38>
  810b94:	200b883a 	mov	r5,r4
  810b98:	42000204 	addi	r8,r8,8
  810b9c:	21000044 	addi	r4,r4,1
  810ba0:	00c02004 	movi	r3,128
  810ba4:	b0c20126 	beq	r22,r3,8113ac <___vfiprintf_internal_r+0xd20>
  810ba8:	4cedc83a 	sub	r22,r9,r19
  810bac:	0580230e 	bge	zero,r22,810c3c <___vfiprintf_internal_r+0x5b0>
  810bb0:	01c00404 	movi	r7,16
  810bb4:	3d83140e 	bge	r7,r22,811808 <___vfiprintf_internal_r+0x117c>
  810bb8:	010020b4 	movhi	r4,130
  810bbc:	21300884 	addi	r4,r4,-16350
  810bc0:	d9002415 	stw	r4,144(sp)
  810bc4:	034001c4 	movi	r13,7
  810bc8:	00000506 	br	810be0 <___vfiprintf_internal_r+0x554>
  810bcc:	29000084 	addi	r4,r5,2
  810bd0:	42000204 	addi	r8,r8,8
  810bd4:	180b883a 	mov	r5,r3
  810bd8:	b5bffc04 	addi	r22,r22,-16
  810bdc:	3d800d0e 	bge	r7,r22,810c14 <___vfiprintf_internal_r+0x588>
  810be0:	10800404 	addi	r2,r2,16
  810be4:	28c00044 	addi	r3,r5,1
  810be8:	45c00015 	stw	r23,0(r8)
  810bec:	41c00115 	stw	r7,4(r8)
  810bf0:	d8801c15 	stw	r2,112(sp)
  810bf4:	d8c01b15 	stw	r3,108(sp)
  810bf8:	68fff40e 	bge	r13,r3,810bcc <__alt_data_end+0xff810bcc>
  810bfc:	1001811e 	bne	r2,zero,811204 <___vfiprintf_internal_r+0xb78>
  810c00:	b5bffc04 	addi	r22,r22,-16
  810c04:	01000044 	movi	r4,1
  810c08:	000b883a 	mov	r5,zero
  810c0c:	d811883a 	mov	r8,sp
  810c10:	3dbff316 	blt	r7,r22,810be0 <__alt_data_end+0xff810be0>
  810c14:	d8c02417 	ldw	r3,144(sp)
  810c18:	1585883a 	add	r2,r2,r22
  810c1c:	45800115 	stw	r22,4(r8)
  810c20:	40c00015 	stw	r3,0(r8)
  810c24:	d8801c15 	stw	r2,112(sp)
  810c28:	d9001b15 	stw	r4,108(sp)
  810c2c:	00c001c4 	movi	r3,7
  810c30:	1901d016 	blt	r3,r4,811374 <___vfiprintf_internal_r+0xce8>
  810c34:	42000204 	addi	r8,r8,8
  810c38:	21000044 	addi	r4,r4,1
  810c3c:	14c5883a 	add	r2,r2,r19
  810c40:	45000015 	stw	r20,0(r8)
  810c44:	44c00115 	stw	r19,4(r8)
  810c48:	d8801c15 	stw	r2,112(sp)
  810c4c:	d9001b15 	stw	r4,108(sp)
  810c50:	00c001c4 	movi	r3,7
  810c54:	1901cf0e 	bge	r3,r4,811394 <___vfiprintf_internal_r+0xd08>
  810c58:	1002361e 	bne	r2,zero,811534 <___vfiprintf_internal_r+0xea8>
  810c5c:	d8001b15 	stw	zero,108(sp)
  810c60:	aac0010c 	andi	r11,r21,4
  810c64:	58002826 	beq	r11,zero,810d08 <___vfiprintf_internal_r+0x67c>
  810c68:	9467c83a 	sub	r19,r18,r17
  810c6c:	d811883a 	mov	r8,sp
  810c70:	04c3340e 	bge	zero,r19,811944 <___vfiprintf_internal_r+0x12b8>
  810c74:	01c00404 	movi	r7,16
  810c78:	3cc31b0e 	bge	r7,r19,8118e8 <___vfiprintf_internal_r+0x125c>
  810c7c:	00c020b4 	movhi	r3,130
  810c80:	18f00c84 	addi	r3,r3,-16334
  810c84:	d9001b17 	ldw	r4,108(sp)
  810c88:	d8c02415 	stw	r3,144(sp)
  810c8c:	382b883a 	mov	r21,r7
  810c90:	050001c4 	movi	r20,7
  810c94:	dd802017 	ldw	r22,128(sp)
  810c98:	00000506 	br	810cb0 <___vfiprintf_internal_r+0x624>
  810c9c:	21400084 	addi	r5,r4,2
  810ca0:	42000204 	addi	r8,r8,8
  810ca4:	1809883a 	mov	r4,r3
  810ca8:	9cfffc04 	addi	r19,r19,-16
  810cac:	acc00d0e 	bge	r21,r19,810ce4 <___vfiprintf_internal_r+0x658>
  810cb0:	10800404 	addi	r2,r2,16
  810cb4:	20c00044 	addi	r3,r4,1
  810cb8:	47000015 	stw	fp,0(r8)
  810cbc:	45400115 	stw	r21,4(r8)
  810cc0:	d8801c15 	stw	r2,112(sp)
  810cc4:	d8c01b15 	stw	r3,108(sp)
  810cc8:	a0fff40e 	bge	r20,r3,810c9c <__alt_data_end+0xff810c9c>
  810ccc:	10019f1e 	bne	r2,zero,81134c <___vfiprintf_internal_r+0xcc0>
  810cd0:	9cfffc04 	addi	r19,r19,-16
  810cd4:	01400044 	movi	r5,1
  810cd8:	0009883a 	mov	r4,zero
  810cdc:	d811883a 	mov	r8,sp
  810ce0:	acfff316 	blt	r21,r19,810cb0 <__alt_data_end+0xff810cb0>
  810ce4:	d8c02417 	ldw	r3,144(sp)
  810ce8:	14c5883a 	add	r2,r2,r19
  810cec:	44c00115 	stw	r19,4(r8)
  810cf0:	40c00015 	stw	r3,0(r8)
  810cf4:	d8801c15 	stw	r2,112(sp)
  810cf8:	d9401b15 	stw	r5,108(sp)
  810cfc:	00c001c4 	movi	r3,7
  810d00:	1941810e 	bge	r3,r5,811308 <___vfiprintf_internal_r+0xc7c>
  810d04:	10017a1e 	bne	r2,zero,8112f0 <___vfiprintf_internal_r+0xc64>
  810d08:	8c82a416 	blt	r17,r18,81179c <___vfiprintf_internal_r+0x1110>
  810d0c:	d9002317 	ldw	r4,140(sp)
  810d10:	2449883a 	add	r4,r4,r17
  810d14:	d9002315 	stw	r4,140(sp)
  810d18:	d8001b15 	stw	zero,108(sp)
  810d1c:	d811883a 	mov	r8,sp
  810d20:	003e8e06 	br	81075c <__alt_data_end+0xff81075c>
  810d24:	d9002017 	ldw	r4,128(sp)
  810d28:	a80b883a 	mov	r5,r21
  810d2c:	0806d100 	call	806d10 <__swsetup_r>
  810d30:	10000c1e 	bne	r2,zero,810d64 <___vfiprintf_internal_r+0x6d8>
  810d34:	a880030b 	ldhu	r2,12(r21)
  810d38:	00c00284 	movi	r3,10
  810d3c:	1080068c 	andi	r2,r2,26
  810d40:	10fe741e 	bne	r2,r3,810714 <__alt_data_end+0xff810714>
  810d44:	a880038f 	ldh	r2,14(r21)
  810d48:	103e7216 	blt	r2,zero,810714 <__alt_data_end+0xff810714>
  810d4c:	d9002017 	ldw	r4,128(sp)
  810d50:	d9c02217 	ldw	r7,136(sp)
  810d54:	a80b883a 	mov	r5,r21
  810d58:	b00d883a 	mov	r6,r22
  810d5c:	08119800 	call	811980 <__sbprintf>
  810d60:	00000106 	br	810d68 <___vfiprintf_internal_r+0x6dc>
  810d64:	00bfffc4 	movi	r2,-1
  810d68:	dfc03517 	ldw	ra,212(sp)
  810d6c:	df003417 	ldw	fp,208(sp)
  810d70:	ddc03317 	ldw	r23,204(sp)
  810d74:	dd803217 	ldw	r22,200(sp)
  810d78:	dd403117 	ldw	r21,196(sp)
  810d7c:	dd003017 	ldw	r20,192(sp)
  810d80:	dcc02f17 	ldw	r19,188(sp)
  810d84:	dc802e17 	ldw	r18,184(sp)
  810d88:	dc402d17 	ldw	r17,180(sp)
  810d8c:	dc002c17 	ldw	r16,176(sp)
  810d90:	dec03604 	addi	sp,sp,216
  810d94:	f800283a 	ret
  810d98:	08015a40 	call	8015a4 <__sinit>
  810d9c:	003e4d06 	br	8106d4 <__alt_data_end+0xff8106d4>
  810da0:	8005883a 	mov	r2,r16
  810da4:	ad400114 	ori	r21,r21,4
  810da8:	80c00007 	ldb	r3,0(r16)
  810dac:	003e9506 	br	810804 <__alt_data_end+0xff810804>
  810db0:	b006d0fa 	srli	r3,r22,3
  810db4:	6808977a 	slli	r4,r13,29
  810db8:	681ad0fa 	srli	r13,r13,3
  810dbc:	b58001cc 	andi	r22,r22,7
  810dc0:	b0800c04 	addi	r2,r22,48
  810dc4:	a53fffc4 	addi	r20,r20,-1
  810dc8:	20ecb03a 	or	r22,r4,r3
  810dcc:	a0800005 	stb	r2,0(r20)
  810dd0:	b346b03a 	or	r3,r22,r13
  810dd4:	183ff61e 	bne	r3,zero,810db0 <__alt_data_end+0xff810db0>
  810dd8:	a8c0004c 	andi	r3,r21,1
  810ddc:	a009883a 	mov	r4,r20
  810de0:	18013b26 	beq	r3,zero,8112d0 <___vfiprintf_internal_r+0xc44>
  810de4:	10803fcc 	andi	r2,r2,255
  810de8:	1080201c 	xori	r2,r2,128
  810dec:	10bfe004 	addi	r2,r2,-128
  810df0:	00c00c04 	movi	r3,48
  810df4:	10ff1d26 	beq	r2,r3,810a6c <__alt_data_end+0xff810a6c>
  810df8:	d8801e17 	ldw	r2,120(sp)
  810dfc:	a53fffc4 	addi	r20,r20,-1
  810e00:	20ffffc5 	stb	r3,-1(r4)
  810e04:	1527c83a 	sub	r19,r2,r20
  810e08:	003f1a06 	br	810a74 <__alt_data_end+0xff810a74>
  810e0c:	ad402014 	ori	r21,r21,128
  810e10:	8005883a 	mov	r2,r16
  810e14:	80c00007 	ldb	r3,0(r16)
  810e18:	003e7a06 	br	810804 <__alt_data_end+0xff810804>
  810e1c:	8005883a 	mov	r2,r16
  810e20:	0025883a 	mov	r18,zero
  810e24:	193ff404 	addi	r4,r3,-48
  810e28:	10c00007 	ldb	r3,0(r2)
  810e2c:	948002a4 	muli	r18,r18,10
  810e30:	84000044 	addi	r16,r16,1
  810e34:	8005883a 	mov	r2,r16
  810e38:	9125883a 	add	r18,r18,r4
  810e3c:	193ff404 	addi	r4,r3,-48
  810e40:	313ff92e 	bgeu	r6,r4,810e28 <__alt_data_end+0xff810e28>
  810e44:	003e7006 	br	810808 <__alt_data_end+0xff810808>
  810e48:	ad400414 	ori	r21,r21,16
  810e4c:	d9c01d85 	stb	r7,118(sp)
  810e50:	a880080c 	andi	r2,r21,32
  810e54:	d8c02217 	ldw	r3,136(sp)
  810e58:	10005a26 	beq	r2,zero,810fc4 <___vfiprintf_internal_r+0x938>
  810e5c:	d9002217 	ldw	r4,136(sp)
  810e60:	18800117 	ldw	r2,4(r3)
  810e64:	1d800017 	ldw	r22,0(r3)
  810e68:	21000204 	addi	r4,r4,8
  810e6c:	d9002215 	stw	r4,136(sp)
  810e70:	101b883a 	mov	r13,r2
  810e74:	1001f416 	blt	r2,zero,811648 <___vfiprintf_internal_r+0xfbc>
  810e78:	db801d83 	ldbu	r14,118(sp)
  810e7c:	4827883a 	mov	r19,r9
  810e80:	00800044 	movi	r2,1
  810e84:	b348b03a 	or	r4,r22,r13
  810e88:	003ee106 	br	810a10 <__alt_data_end+0xff810a10>
  810e8c:	80c00007 	ldb	r3,0(r16)
  810e90:	80800044 	addi	r2,r16,1
  810e94:	1b42a326 	beq	r3,r13,811924 <___vfiprintf_internal_r+0x1298>
  810e98:	193ff404 	addi	r4,r3,-48
  810e9c:	1021883a 	mov	r16,r2
  810ea0:	0013883a 	mov	r9,zero
  810ea4:	313e5836 	bltu	r6,r4,810808 <__alt_data_end+0xff810808>
  810ea8:	80c00007 	ldb	r3,0(r16)
  810eac:	4a4002a4 	muli	r9,r9,10
  810eb0:	84000044 	addi	r16,r16,1
  810eb4:	2253883a 	add	r9,r4,r9
  810eb8:	193ff404 	addi	r4,r3,-48
  810ebc:	313ffa2e 	bgeu	r6,r4,810ea8 <__alt_data_end+0xff810ea8>
  810ec0:	483e510e 	bge	r9,zero,810808 <__alt_data_end+0xff810808>
  810ec4:	027fffc4 	movi	r9,-1
  810ec8:	003e4f06 	br	810808 <__alt_data_end+0xff810808>
  810ecc:	d9c01d85 	stb	r7,118(sp)
  810ed0:	a880080c 	andi	r2,r21,32
  810ed4:	10020826 	beq	r2,zero,8116f8 <___vfiprintf_internal_r+0x106c>
  810ed8:	d8c02217 	ldw	r3,136(sp)
  810edc:	d9002317 	ldw	r4,140(sp)
  810ee0:	18800017 	ldw	r2,0(r3)
  810ee4:	2007d7fa 	srai	r3,r4,31
  810ee8:	d9002217 	ldw	r4,136(sp)
  810eec:	10c00115 	stw	r3,4(r2)
  810ef0:	21000104 	addi	r4,r4,4
  810ef4:	d9002215 	stw	r4,136(sp)
  810ef8:	d9002317 	ldw	r4,140(sp)
  810efc:	11000015 	stw	r4,0(r2)
  810f00:	003e1606 	br	81075c <__alt_data_end+0xff81075c>
  810f04:	d8802217 	ldw	r2,136(sp)
  810f08:	d8c02217 	ldw	r3,136(sp)
  810f0c:	15800017 	ldw	r22,0(r2)
  810f10:	13400117 	ldw	r13,4(r2)
  810f14:	18c00204 	addi	r3,r3,8
  810f18:	0005883a 	mov	r2,zero
  810f1c:	d8c02215 	stw	r3,136(sp)
  810f20:	b348b03a 	or	r4,r22,r13
  810f24:	003eb706 	br	810a04 <__alt_data_end+0xff810a04>
  810f28:	38803fcc 	andi	r2,r7,255
  810f2c:	1080201c 	xori	r2,r2,128
  810f30:	10bfe004 	addi	r2,r2,-128
  810f34:	1001e31e 	bne	r2,zero,8116c4 <___vfiprintf_internal_r+0x1038>
  810f38:	8005883a 	mov	r2,r16
  810f3c:	01c00804 	movi	r7,32
  810f40:	80c00007 	ldb	r3,0(r16)
  810f44:	003e2f06 	br	810804 <__alt_data_end+0xff810804>
  810f48:	ad400054 	ori	r21,r21,1
  810f4c:	8005883a 	mov	r2,r16
  810f50:	80c00007 	ldb	r3,0(r16)
  810f54:	003e2b06 	br	810804 <__alt_data_end+0xff810804>
  810f58:	d8c02217 	ldw	r3,136(sp)
  810f5c:	1c800017 	ldw	r18,0(r3)
  810f60:	18c00104 	addi	r3,r3,4
  810f64:	90023816 	blt	r18,zero,811848 <___vfiprintf_internal_r+0x11bc>
  810f68:	d8c02215 	stw	r3,136(sp)
  810f6c:	8005883a 	mov	r2,r16
  810f70:	80c00007 	ldb	r3,0(r16)
  810f74:	003e2306 	br	810804 <__alt_data_end+0xff810804>
  810f78:	8005883a 	mov	r2,r16
  810f7c:	01c00ac4 	movi	r7,43
  810f80:	80c00007 	ldb	r3,0(r16)
  810f84:	003e1f06 	br	810804 <__alt_data_end+0xff810804>
  810f88:	d8c02217 	ldw	r3,136(sp)
  810f8c:	04400044 	movi	r17,1
  810f90:	d8001d85 	stb	zero,118(sp)
  810f94:	18800017 	ldw	r2,0(r3)
  810f98:	18c00104 	addi	r3,r3,4
  810f9c:	d8c02215 	stw	r3,136(sp)
  810fa0:	d8801005 	stb	r2,64(sp)
  810fa4:	8827883a 	mov	r19,r17
  810fa8:	dd001004 	addi	r20,sp,64
  810fac:	0013883a 	mov	r9,zero
  810fb0:	003eb806 	br	810a94 <__alt_data_end+0xff810a94>
  810fb4:	d9c01d85 	stb	r7,118(sp)
  810fb8:	a880080c 	andi	r2,r21,32
  810fbc:	d8c02217 	ldw	r3,136(sp)
  810fc0:	103fa61e 	bne	r2,zero,810e5c <__alt_data_end+0xff810e5c>
  810fc4:	a880040c 	andi	r2,r21,16
  810fc8:	1001dd26 	beq	r2,zero,811740 <___vfiprintf_internal_r+0x10b4>
  810fcc:	1d800017 	ldw	r22,0(r3)
  810fd0:	d8802217 	ldw	r2,136(sp)
  810fd4:	b01bd7fa 	srai	r13,r22,31
  810fd8:	10800104 	addi	r2,r2,4
  810fdc:	d8802215 	stw	r2,136(sp)
  810fe0:	6805883a 	mov	r2,r13
  810fe4:	003fa306 	br	810e74 <__alt_data_end+0xff810e74>
  810fe8:	008020b4 	movhi	r2,130
  810fec:	10aedb04 	addi	r2,r2,-17556
  810ff0:	d8802615 	stw	r2,152(sp)
  810ff4:	d9c01d85 	stb	r7,118(sp)
  810ff8:	a880080c 	andi	r2,r21,32
  810ffc:	10004726 	beq	r2,zero,81111c <___vfiprintf_internal_r+0xa90>
  811000:	d9002217 	ldw	r4,136(sp)
  811004:	25800017 	ldw	r22,0(r4)
  811008:	23400117 	ldw	r13,4(r4)
  81100c:	21000204 	addi	r4,r4,8
  811010:	d9002215 	stw	r4,136(sp)
  811014:	a880004c 	andi	r2,r21,1
  811018:	10014e26 	beq	r2,zero,811554 <___vfiprintf_internal_r+0xec8>
  81101c:	b348b03a 	or	r4,r22,r13
  811020:	20019c26 	beq	r4,zero,811694 <___vfiprintf_internal_r+0x1008>
  811024:	00800c04 	movi	r2,48
  811028:	d8801d05 	stb	r2,116(sp)
  81102c:	d8c01d45 	stb	r3,117(sp)
  811030:	ad400094 	ori	r21,r21,2
  811034:	00800084 	movi	r2,2
  811038:	003e7206 	br	810a04 <__alt_data_end+0xff810a04>
  81103c:	d8c02217 	ldw	r3,136(sp)
  811040:	d8001d85 	stb	zero,118(sp)
  811044:	1d000017 	ldw	r20,0(r3)
  811048:	1d800104 	addi	r22,r3,4
  81104c:	a0021c26 	beq	r20,zero,8118c0 <___vfiprintf_internal_r+0x1234>
  811050:	a009883a 	mov	r4,r20
  811054:	48020016 	blt	r9,zero,811858 <___vfiprintf_internal_r+0x11cc>
  811058:	480d883a 	mov	r6,r9
  81105c:	000b883a 	mov	r5,zero
  811060:	da002a15 	stw	r8,168(sp)
  811064:	da402b15 	stw	r9,172(sp)
  811068:	08091300 	call	809130 <memchr>
  81106c:	da002a17 	ldw	r8,168(sp)
  811070:	da402b17 	ldw	r9,172(sp)
  811074:	10022226 	beq	r2,zero,811900 <___vfiprintf_internal_r+0x1274>
  811078:	1527c83a 	sub	r19,r2,r20
  81107c:	4cc1c916 	blt	r9,r19,8117a4 <___vfiprintf_internal_r+0x1118>
  811080:	db801d83 	ldbu	r14,118(sp)
  811084:	dd802215 	stw	r22,136(sp)
  811088:	0013883a 	mov	r9,zero
  81108c:	003e7906 	br	810a74 <__alt_data_end+0xff810a74>
  811090:	ad401014 	ori	r21,r21,64
  811094:	8005883a 	mov	r2,r16
  811098:	80c00007 	ldb	r3,0(r16)
  81109c:	003dd906 	br	810804 <__alt_data_end+0xff810804>
  8110a0:	80c00007 	ldb	r3,0(r16)
  8110a4:	8005883a 	mov	r2,r16
  8110a8:	1b01e326 	beq	r3,r12,811838 <___vfiprintf_internal_r+0x11ac>
  8110ac:	ad400414 	ori	r21,r21,16
  8110b0:	003dd406 	br	810804 <__alt_data_end+0xff810804>
  8110b4:	d9002217 	ldw	r4,136(sp)
  8110b8:	00800c04 	movi	r2,48
  8110bc:	d8801d05 	stb	r2,116(sp)
  8110c0:	25800017 	ldw	r22,0(r4)
  8110c4:	00801e04 	movi	r2,120
  8110c8:	d8801d45 	stb	r2,117(sp)
  8110cc:	008020b4 	movhi	r2,130
  8110d0:	21000104 	addi	r4,r4,4
  8110d4:	10aee004 	addi	r2,r2,-17536
  8110d8:	d9002215 	stw	r4,136(sp)
  8110dc:	d8802615 	stw	r2,152(sp)
  8110e0:	001b883a 	mov	r13,zero
  8110e4:	ad400094 	ori	r21,r21,2
  8110e8:	00800084 	movi	r2,2
  8110ec:	b009883a 	mov	r4,r22
  8110f0:	003e4406 	br	810a04 <__alt_data_end+0xff810a04>
  8110f4:	ad400814 	ori	r21,r21,32
  8110f8:	8005883a 	mov	r2,r16
  8110fc:	80c00007 	ldb	r3,0(r16)
  811100:	003dc006 	br	810804 <__alt_data_end+0xff810804>
  811104:	008020b4 	movhi	r2,130
  811108:	10aee004 	addi	r2,r2,-17536
  81110c:	d8802615 	stw	r2,152(sp)
  811110:	d9c01d85 	stb	r7,118(sp)
  811114:	a880080c 	andi	r2,r21,32
  811118:	103fb91e 	bne	r2,zero,811000 <__alt_data_end+0xff811000>
  81111c:	a880040c 	andi	r2,r21,16
  811120:	10010f1e 	bne	r2,zero,811560 <___vfiprintf_internal_r+0xed4>
  811124:	a880100c 	andi	r2,r21,64
  811128:	10010d26 	beq	r2,zero,811560 <___vfiprintf_internal_r+0xed4>
  81112c:	d9002217 	ldw	r4,136(sp)
  811130:	001b883a 	mov	r13,zero
  811134:	2580000b 	ldhu	r22,0(r4)
  811138:	21000104 	addi	r4,r4,4
  81113c:	d9002215 	stw	r4,136(sp)
  811140:	003fb406 	br	811014 <__alt_data_end+0xff811014>
  811144:	d9002217 	ldw	r4,136(sp)
  811148:	00800044 	movi	r2,1
  81114c:	25800017 	ldw	r22,0(r4)
  811150:	23400117 	ldw	r13,4(r4)
  811154:	21000204 	addi	r4,r4,8
  811158:	d9002215 	stw	r4,136(sp)
  81115c:	b348b03a 	or	r4,r22,r13
  811160:	003e2806 	br	810a04 <__alt_data_end+0xff810a04>
  811164:	d9c01d85 	stb	r7,118(sp)
  811168:	1801ab26 	beq	r3,zero,811818 <___vfiprintf_internal_r+0x118c>
  81116c:	04400044 	movi	r17,1
  811170:	d8c01005 	stb	r3,64(sp)
  811174:	d8001d85 	stb	zero,118(sp)
  811178:	8827883a 	mov	r19,r17
  81117c:	dd001004 	addi	r20,sp,64
  811180:	003f8a06 	br	810fac <__alt_data_end+0xff810fac>
  811184:	d9002017 	ldw	r4,128(sp)
  811188:	d9402117 	ldw	r5,132(sp)
  81118c:	d9801a04 	addi	r6,sp,104
  811190:	d9c02b15 	stw	r7,172(sp)
  811194:	dbc02a15 	stw	r15,168(sp)
  811198:	08105780 	call	810578 <__sprint_r.part.0>
  81119c:	d9c02b17 	ldw	r7,172(sp)
  8111a0:	dbc02a17 	ldw	r15,168(sp)
  8111a4:	1000631e 	bne	r2,zero,811334 <___vfiprintf_internal_r+0xca8>
  8111a8:	d9801b17 	ldw	r6,108(sp)
  8111ac:	d8801c17 	ldw	r2,112(sp)
  8111b0:	d811883a 	mov	r8,sp
  8111b4:	31400044 	addi	r5,r6,1
  8111b8:	003e4d06 	br	810af0 <__alt_data_end+0xff810af0>
  8111bc:	d9401b17 	ldw	r5,108(sp)
  8111c0:	d8801c17 	ldw	r2,112(sp)
  8111c4:	29000044 	addi	r4,r5,1
  8111c8:	d8c01d87 	ldb	r3,118(sp)
  8111cc:	183e6726 	beq	r3,zero,810b6c <__alt_data_end+0xff810b6c>
  8111d0:	00c00044 	movi	r3,1
  8111d4:	d9401d84 	addi	r5,sp,118
  8111d8:	10c5883a 	add	r2,r2,r3
  8111dc:	41400015 	stw	r5,0(r8)
  8111e0:	40c00115 	stw	r3,4(r8)
  8111e4:	d8801c15 	stw	r2,112(sp)
  8111e8:	d9001b15 	stw	r4,108(sp)
  8111ec:	014001c4 	movi	r5,7
  8111f0:	2900ab16 	blt	r5,r4,8114a0 <___vfiprintf_internal_r+0xe14>
  8111f4:	200b883a 	mov	r5,r4
  8111f8:	42000204 	addi	r8,r8,8
  8111fc:	21000044 	addi	r4,r4,1
  811200:	003e5a06 	br	810b6c <__alt_data_end+0xff810b6c>
  811204:	d9002017 	ldw	r4,128(sp)
  811208:	d9402117 	ldw	r5,132(sp)
  81120c:	d9801a04 	addi	r6,sp,104
  811210:	d9c02b15 	stw	r7,172(sp)
  811214:	db402a15 	stw	r13,168(sp)
  811218:	08105780 	call	810578 <__sprint_r.part.0>
  81121c:	d9c02b17 	ldw	r7,172(sp)
  811220:	db402a17 	ldw	r13,168(sp)
  811224:	1000431e 	bne	r2,zero,811334 <___vfiprintf_internal_r+0xca8>
  811228:	d9401b17 	ldw	r5,108(sp)
  81122c:	d8801c17 	ldw	r2,112(sp)
  811230:	d811883a 	mov	r8,sp
  811234:	29000044 	addi	r4,r5,1
  811238:	003e6706 	br	810bd8 <__alt_data_end+0xff810bd8>
  81123c:	10803fcc 	andi	r2,r2,255
  811240:	00c00044 	movi	r3,1
  811244:	10fdfa1e 	bne	r2,r3,810a30 <__alt_data_end+0xff810a30>
  811248:	6800021e 	bne	r13,zero,811254 <___vfiprintf_internal_r+0xbc8>
  81124c:	00800244 	movi	r2,9
  811250:	1580222e 	bgeu	r2,r22,8112dc <___vfiprintf_internal_r+0xc50>
  811254:	dc802415 	stw	r18,144(sp)
  811258:	dc002515 	stw	r16,148(sp)
  81125c:	dc401a04 	addi	r17,sp,104
  811260:	b021883a 	mov	r16,r22
  811264:	4827883a 	mov	r19,r9
  811268:	4029883a 	mov	r20,r8
  81126c:	702d883a 	mov	r22,r14
  811270:	6825883a 	mov	r18,r13
  811274:	8009883a 	mov	r4,r16
  811278:	900b883a 	mov	r5,r18
  81127c:	01800284 	movi	r6,10
  811280:	000f883a 	mov	r7,zero
  811284:	08145140 	call	814514 <__umoddi3>
  811288:	10800c04 	addi	r2,r2,48
  81128c:	8c7fffc4 	addi	r17,r17,-1
  811290:	8009883a 	mov	r4,r16
  811294:	900b883a 	mov	r5,r18
  811298:	01800284 	movi	r6,10
  81129c:	000f883a 	mov	r7,zero
  8112a0:	88800005 	stb	r2,0(r17)
  8112a4:	0813f540 	call	813f54 <__udivdi3>
  8112a8:	1021883a 	mov	r16,r2
  8112ac:	10c4b03a 	or	r2,r2,r3
  8112b0:	1825883a 	mov	r18,r3
  8112b4:	103fef1e 	bne	r2,zero,811274 <__alt_data_end+0xff811274>
  8112b8:	dc802417 	ldw	r18,144(sp)
  8112bc:	dc002517 	ldw	r16,148(sp)
  8112c0:	a011883a 	mov	r8,r20
  8112c4:	9813883a 	mov	r9,r19
  8112c8:	b01d883a 	mov	r14,r22
  8112cc:	8829883a 	mov	r20,r17
  8112d0:	d8c01e17 	ldw	r3,120(sp)
  8112d4:	1d27c83a 	sub	r19,r3,r20
  8112d8:	003de606 	br	810a74 <__alt_data_end+0xff810a74>
  8112dc:	b5800c04 	addi	r22,r22,48
  8112e0:	dd8019c5 	stb	r22,103(sp)
  8112e4:	dcc02717 	ldw	r19,156(sp)
  8112e8:	dd0019c4 	addi	r20,sp,103
  8112ec:	003de106 	br	810a74 <__alt_data_end+0xff810a74>
  8112f0:	d9002017 	ldw	r4,128(sp)
  8112f4:	d9402117 	ldw	r5,132(sp)
  8112f8:	d9801a04 	addi	r6,sp,104
  8112fc:	08105780 	call	810578 <__sprint_r.part.0>
  811300:	10000c1e 	bne	r2,zero,811334 <___vfiprintf_internal_r+0xca8>
  811304:	d8801c17 	ldw	r2,112(sp)
  811308:	8c80010e 	bge	r17,r18,811310 <___vfiprintf_internal_r+0xc84>
  81130c:	9023883a 	mov	r17,r18
  811310:	d8c02317 	ldw	r3,140(sp)
  811314:	1c47883a 	add	r3,r3,r17
  811318:	d8c02315 	stw	r3,140(sp)
  81131c:	103e7e26 	beq	r2,zero,810d18 <__alt_data_end+0xff810d18>
  811320:	d9002017 	ldw	r4,128(sp)
  811324:	d9402117 	ldw	r5,132(sp)
  811328:	d9801a04 	addi	r6,sp,104
  81132c:	08105780 	call	810578 <__sprint_r.part.0>
  811330:	103e7926 	beq	r2,zero,810d18 <__alt_data_end+0xff810d18>
  811334:	dd402117 	ldw	r21,132(sp)
  811338:	a880030b 	ldhu	r2,12(r21)
  81133c:	1080100c 	andi	r2,r2,64
  811340:	103e881e 	bne	r2,zero,810d64 <__alt_data_end+0xff810d64>
  811344:	d8802317 	ldw	r2,140(sp)
  811348:	003e8706 	br	810d68 <__alt_data_end+0xff810d68>
  81134c:	d9402117 	ldw	r5,132(sp)
  811350:	b009883a 	mov	r4,r22
  811354:	d9801a04 	addi	r6,sp,104
  811358:	08105780 	call	810578 <__sprint_r.part.0>
  81135c:	103ff51e 	bne	r2,zero,811334 <__alt_data_end+0xff811334>
  811360:	d9001b17 	ldw	r4,108(sp)
  811364:	d8801c17 	ldw	r2,112(sp)
  811368:	d811883a 	mov	r8,sp
  81136c:	21400044 	addi	r5,r4,1
  811370:	003e4d06 	br	810ca8 <__alt_data_end+0xff810ca8>
  811374:	1000aa1e 	bne	r2,zero,811620 <___vfiprintf_internal_r+0xf94>
  811378:	00c00044 	movi	r3,1
  81137c:	9805883a 	mov	r2,r19
  811380:	dd000015 	stw	r20,0(sp)
  811384:	dcc00115 	stw	r19,4(sp)
  811388:	dcc01c15 	stw	r19,112(sp)
  81138c:	d8c01b15 	stw	r3,108(sp)
  811390:	d811883a 	mov	r8,sp
  811394:	42000204 	addi	r8,r8,8
  811398:	aac0010c 	andi	r11,r21,4
  81139c:	583fda26 	beq	r11,zero,811308 <__alt_data_end+0xff811308>
  8113a0:	9467c83a 	sub	r19,r18,r17
  8113a4:	04fe3316 	blt	zero,r19,810c74 <__alt_data_end+0xff810c74>
  8113a8:	003fd706 	br	811308 <__alt_data_end+0xff811308>
  8113ac:	946dc83a 	sub	r22,r18,r17
  8113b0:	05bdfd0e 	bge	zero,r22,810ba8 <__alt_data_end+0xff810ba8>
  8113b4:	00c020b4 	movhi	r3,130
  8113b8:	18f00884 	addi	r3,r3,-16350
  8113bc:	01c00404 	movi	r7,16
  8113c0:	d8c02415 	stw	r3,144(sp)
  8113c4:	3d81530e 	bge	r7,r22,811914 <___vfiprintf_internal_r+0x1288>
  8113c8:	8007883a 	mov	r3,r16
  8113cc:	034001c4 	movi	r13,7
  8113d0:	b021883a 	mov	r16,r22
  8113d4:	da402515 	stw	r9,148(sp)
  8113d8:	182d883a 	mov	r22,r3
  8113dc:	00000506 	br	8113f4 <___vfiprintf_internal_r+0xd68>
  8113e0:	29800084 	addi	r6,r5,2
  8113e4:	42000204 	addi	r8,r8,8
  8113e8:	180b883a 	mov	r5,r3
  8113ec:	843ffc04 	addi	r16,r16,-16
  8113f0:	3c000d0e 	bge	r7,r16,811428 <___vfiprintf_internal_r+0xd9c>
  8113f4:	10800404 	addi	r2,r2,16
  8113f8:	28c00044 	addi	r3,r5,1
  8113fc:	45c00015 	stw	r23,0(r8)
  811400:	41c00115 	stw	r7,4(r8)
  811404:	d8801c15 	stw	r2,112(sp)
  811408:	d8c01b15 	stw	r3,108(sp)
  81140c:	68fff40e 	bge	r13,r3,8113e0 <__alt_data_end+0xff8113e0>
  811410:	1000151e 	bne	r2,zero,811468 <___vfiprintf_internal_r+0xddc>
  811414:	843ffc04 	addi	r16,r16,-16
  811418:	01800044 	movi	r6,1
  81141c:	000b883a 	mov	r5,zero
  811420:	d811883a 	mov	r8,sp
  811424:	3c3ff316 	blt	r7,r16,8113f4 <__alt_data_end+0xff8113f4>
  811428:	da402517 	ldw	r9,148(sp)
  81142c:	b007883a 	mov	r3,r22
  811430:	802d883a 	mov	r22,r16
  811434:	1821883a 	mov	r16,r3
  811438:	d8c02417 	ldw	r3,144(sp)
  81143c:	1585883a 	add	r2,r2,r22
  811440:	45800115 	stw	r22,4(r8)
  811444:	40c00015 	stw	r3,0(r8)
  811448:	d8801c15 	stw	r2,112(sp)
  81144c:	d9801b15 	stw	r6,108(sp)
  811450:	00c001c4 	movi	r3,7
  811454:	19806d16 	blt	r3,r6,81160c <___vfiprintf_internal_r+0xf80>
  811458:	42000204 	addi	r8,r8,8
  81145c:	31000044 	addi	r4,r6,1
  811460:	300b883a 	mov	r5,r6
  811464:	003dd006 	br	810ba8 <__alt_data_end+0xff810ba8>
  811468:	d9002017 	ldw	r4,128(sp)
  81146c:	d9402117 	ldw	r5,132(sp)
  811470:	d9801a04 	addi	r6,sp,104
  811474:	d9c02b15 	stw	r7,172(sp)
  811478:	db402a15 	stw	r13,168(sp)
  81147c:	08105780 	call	810578 <__sprint_r.part.0>
  811480:	d9c02b17 	ldw	r7,172(sp)
  811484:	db402a17 	ldw	r13,168(sp)
  811488:	103faa1e 	bne	r2,zero,811334 <__alt_data_end+0xff811334>
  81148c:	d9401b17 	ldw	r5,108(sp)
  811490:	d8801c17 	ldw	r2,112(sp)
  811494:	d811883a 	mov	r8,sp
  811498:	29800044 	addi	r6,r5,1
  81149c:	003fd306 	br	8113ec <__alt_data_end+0xff8113ec>
  8114a0:	1000401e 	bne	r2,zero,8115a4 <___vfiprintf_internal_r+0xf18>
  8114a4:	68003b26 	beq	r13,zero,811594 <___vfiprintf_internal_r+0xf08>
  8114a8:	d9001d04 	addi	r4,sp,116
  8114ac:	00800084 	movi	r2,2
  8114b0:	d9000015 	stw	r4,0(sp)
  8114b4:	d8800115 	stw	r2,4(sp)
  8114b8:	1809883a 	mov	r4,r3
  8114bc:	d811883a 	mov	r8,sp
  8114c0:	003db406 	br	810b94 <__alt_data_end+0xff810b94>
  8114c4:	1000451e 	bne	r2,zero,8115dc <___vfiprintf_internal_r+0xf50>
  8114c8:	01000044 	movi	r4,1
  8114cc:	000b883a 	mov	r5,zero
  8114d0:	d811883a 	mov	r8,sp
  8114d4:	003db206 	br	810ba0 <__alt_data_end+0xff810ba0>
  8114d8:	10803fcc 	andi	r2,r2,255
  8114dc:	1000071e 	bne	r2,zero,8114fc <___vfiprintf_internal_r+0xe70>
  8114e0:	a880004c 	andi	r2,r21,1
  8114e4:	10000526 	beq	r2,zero,8114fc <___vfiprintf_internal_r+0xe70>
  8114e8:	00800c04 	movi	r2,48
  8114ec:	d88019c5 	stb	r2,103(sp)
  8114f0:	dcc02717 	ldw	r19,156(sp)
  8114f4:	dd0019c4 	addi	r20,sp,103
  8114f8:	003d5e06 	br	810a74 <__alt_data_end+0xff810a74>
  8114fc:	dd001a04 	addi	r20,sp,104
  811500:	003d5c06 	br	810a74 <__alt_data_end+0xff810a74>
  811504:	1000971e 	bne	r2,zero,811764 <___vfiprintf_internal_r+0x10d8>
  811508:	d8c01d87 	ldb	r3,118(sp)
  81150c:	18005826 	beq	r3,zero,811670 <___vfiprintf_internal_r+0xfe4>
  811510:	00800044 	movi	r2,1
  811514:	d8c01d84 	addi	r3,sp,118
  811518:	1009883a 	mov	r4,r2
  81151c:	d8c00015 	stw	r3,0(sp)
  811520:	d8800115 	stw	r2,4(sp)
  811524:	d811883a 	mov	r8,sp
  811528:	003f3206 	br	8111f4 <__alt_data_end+0xff8111f4>
  81152c:	8023883a 	mov	r17,r16
  811530:	003ca706 	br	8107d0 <__alt_data_end+0xff8107d0>
  811534:	d9002017 	ldw	r4,128(sp)
  811538:	d9402117 	ldw	r5,132(sp)
  81153c:	d9801a04 	addi	r6,sp,104
  811540:	08105780 	call	810578 <__sprint_r.part.0>
  811544:	103f7b1e 	bne	r2,zero,811334 <__alt_data_end+0xff811334>
  811548:	d8801c17 	ldw	r2,112(sp)
  81154c:	d811883a 	mov	r8,sp
  811550:	003f9106 	br	811398 <__alt_data_end+0xff811398>
  811554:	00800084 	movi	r2,2
  811558:	b348b03a 	or	r4,r22,r13
  81155c:	003d2906 	br	810a04 <__alt_data_end+0xff810a04>
  811560:	d8802217 	ldw	r2,136(sp)
  811564:	001b883a 	mov	r13,zero
  811568:	15800017 	ldw	r22,0(r2)
  81156c:	10800104 	addi	r2,r2,4
  811570:	d8802215 	stw	r2,136(sp)
  811574:	003ea706 	br	811014 <__alt_data_end+0xff811014>
  811578:	d9002017 	ldw	r4,128(sp)
  81157c:	d9402117 	ldw	r5,132(sp)
  811580:	d9801a04 	addi	r6,sp,104
  811584:	08105780 	call	810578 <__sprint_r.part.0>
  811588:	103f6a1e 	bne	r2,zero,811334 <__alt_data_end+0xff811334>
  81158c:	d811883a 	mov	r8,sp
  811590:	003cff06 	br	810990 <__alt_data_end+0xff810990>
  811594:	000b883a 	mov	r5,zero
  811598:	1809883a 	mov	r4,r3
  81159c:	d811883a 	mov	r8,sp
  8115a0:	003d7f06 	br	810ba0 <__alt_data_end+0xff810ba0>
  8115a4:	d9002017 	ldw	r4,128(sp)
  8115a8:	d9402117 	ldw	r5,132(sp)
  8115ac:	d9801a04 	addi	r6,sp,104
  8115b0:	da402b15 	stw	r9,172(sp)
  8115b4:	db402a15 	stw	r13,168(sp)
  8115b8:	08105780 	call	810578 <__sprint_r.part.0>
  8115bc:	da402b17 	ldw	r9,172(sp)
  8115c0:	db402a17 	ldw	r13,168(sp)
  8115c4:	103f5b1e 	bne	r2,zero,811334 <__alt_data_end+0xff811334>
  8115c8:	d9401b17 	ldw	r5,108(sp)
  8115cc:	d8801c17 	ldw	r2,112(sp)
  8115d0:	d811883a 	mov	r8,sp
  8115d4:	29000044 	addi	r4,r5,1
  8115d8:	003d6406 	br	810b6c <__alt_data_end+0xff810b6c>
  8115dc:	d9002017 	ldw	r4,128(sp)
  8115e0:	d9402117 	ldw	r5,132(sp)
  8115e4:	d9801a04 	addi	r6,sp,104
  8115e8:	da402b15 	stw	r9,172(sp)
  8115ec:	08105780 	call	810578 <__sprint_r.part.0>
  8115f0:	da402b17 	ldw	r9,172(sp)
  8115f4:	103f4f1e 	bne	r2,zero,811334 <__alt_data_end+0xff811334>
  8115f8:	d9401b17 	ldw	r5,108(sp)
  8115fc:	d8801c17 	ldw	r2,112(sp)
  811600:	d811883a 	mov	r8,sp
  811604:	29000044 	addi	r4,r5,1
  811608:	003d6506 	br	810ba0 <__alt_data_end+0xff810ba0>
  81160c:	10009a1e 	bne	r2,zero,811878 <___vfiprintf_internal_r+0x11ec>
  811610:	01000044 	movi	r4,1
  811614:	000b883a 	mov	r5,zero
  811618:	d811883a 	mov	r8,sp
  81161c:	003d6206 	br	810ba8 <__alt_data_end+0xff810ba8>
  811620:	d9002017 	ldw	r4,128(sp)
  811624:	d9402117 	ldw	r5,132(sp)
  811628:	d9801a04 	addi	r6,sp,104
  81162c:	08105780 	call	810578 <__sprint_r.part.0>
  811630:	103f401e 	bne	r2,zero,811334 <__alt_data_end+0xff811334>
  811634:	d9001b17 	ldw	r4,108(sp)
  811638:	d8801c17 	ldw	r2,112(sp)
  81163c:	d811883a 	mov	r8,sp
  811640:	21000044 	addi	r4,r4,1
  811644:	003d7d06 	br	810c3c <__alt_data_end+0xff810c3c>
  811648:	05adc83a 	sub	r22,zero,r22
  81164c:	b004c03a 	cmpne	r2,r22,zero
  811650:	035bc83a 	sub	r13,zero,r13
  811654:	689bc83a 	sub	r13,r13,r2
  811658:	03800b44 	movi	r14,45
  81165c:	db801d85 	stb	r14,118(sp)
  811660:	4827883a 	mov	r19,r9
  811664:	00800044 	movi	r2,1
  811668:	b348b03a 	or	r4,r22,r13
  81166c:	003ce806 	br	810a10 <__alt_data_end+0xff810a10>
  811670:	000b883a 	mov	r5,zero
  811674:	01000044 	movi	r4,1
  811678:	d811883a 	mov	r8,sp
  81167c:	683d4826 	beq	r13,zero,810ba0 <__alt_data_end+0xff810ba0>
  811680:	00800084 	movi	r2,2
  811684:	d8c01d04 	addi	r3,sp,116
  811688:	d8c00015 	stw	r3,0(sp)
  81168c:	d8800115 	stw	r2,4(sp)
  811690:	003d4006 	br	810b94 <__alt_data_end+0xff810b94>
  811694:	00800084 	movi	r2,2
  811698:	003cda06 	br	810a04 <__alt_data_end+0xff810a04>
  81169c:	a880100c 	andi	r2,r21,64
  8116a0:	10004226 	beq	r2,zero,8117ac <___vfiprintf_internal_r+0x1120>
  8116a4:	d8802217 	ldw	r2,136(sp)
  8116a8:	001b883a 	mov	r13,zero
  8116ac:	1580000b 	ldhu	r22,0(r2)
  8116b0:	10800104 	addi	r2,r2,4
  8116b4:	d8802215 	stw	r2,136(sp)
  8116b8:	b009883a 	mov	r4,r22
  8116bc:	0005883a 	mov	r2,zero
  8116c0:	003cd006 	br	810a04 <__alt_data_end+0xff810a04>
  8116c4:	80c00007 	ldb	r3,0(r16)
  8116c8:	8005883a 	mov	r2,r16
  8116cc:	003c4d06 	br	810804 <__alt_data_end+0xff810804>
  8116d0:	a880100c 	andi	r2,r21,64
  8116d4:	10004426 	beq	r2,zero,8117e8 <___vfiprintf_internal_r+0x115c>
  8116d8:	d8c02217 	ldw	r3,136(sp)
  8116dc:	001b883a 	mov	r13,zero
  8116e0:	00800044 	movi	r2,1
  8116e4:	1d80000b 	ldhu	r22,0(r3)
  8116e8:	18c00104 	addi	r3,r3,4
  8116ec:	d8c02215 	stw	r3,136(sp)
  8116f0:	b009883a 	mov	r4,r22
  8116f4:	003cc306 	br	810a04 <__alt_data_end+0xff810a04>
  8116f8:	a880040c 	andi	r2,r21,16
  8116fc:	1000091e 	bne	r2,zero,811724 <___vfiprintf_internal_r+0x1098>
  811700:	aac0100c 	andi	r11,r21,64
  811704:	58000726 	beq	r11,zero,811724 <___vfiprintf_internal_r+0x1098>
  811708:	d8c02217 	ldw	r3,136(sp)
  81170c:	d9002317 	ldw	r4,140(sp)
  811710:	18800017 	ldw	r2,0(r3)
  811714:	18c00104 	addi	r3,r3,4
  811718:	d8c02215 	stw	r3,136(sp)
  81171c:	1100000d 	sth	r4,0(r2)
  811720:	003c0e06 	br	81075c <__alt_data_end+0xff81075c>
  811724:	d8c02217 	ldw	r3,136(sp)
  811728:	d9002317 	ldw	r4,140(sp)
  81172c:	18800017 	ldw	r2,0(r3)
  811730:	18c00104 	addi	r3,r3,4
  811734:	d8c02215 	stw	r3,136(sp)
  811738:	11000015 	stw	r4,0(r2)
  81173c:	003c0706 	br	81075c <__alt_data_end+0xff81075c>
  811740:	a880100c 	andi	r2,r21,64
  811744:	10002126 	beq	r2,zero,8117cc <___vfiprintf_internal_r+0x1140>
  811748:	1d80000f 	ldh	r22,0(r3)
  81174c:	d8c02217 	ldw	r3,136(sp)
  811750:	b01bd7fa 	srai	r13,r22,31
  811754:	18c00104 	addi	r3,r3,4
  811758:	d8c02215 	stw	r3,136(sp)
  81175c:	6805883a 	mov	r2,r13
  811760:	003dc406 	br	810e74 <__alt_data_end+0xff810e74>
  811764:	d9002017 	ldw	r4,128(sp)
  811768:	d9402117 	ldw	r5,132(sp)
  81176c:	d9801a04 	addi	r6,sp,104
  811770:	da402b15 	stw	r9,172(sp)
  811774:	db402a15 	stw	r13,168(sp)
  811778:	08105780 	call	810578 <__sprint_r.part.0>
  81177c:	da402b17 	ldw	r9,172(sp)
  811780:	db402a17 	ldw	r13,168(sp)
  811784:	103eeb1e 	bne	r2,zero,811334 <__alt_data_end+0xff811334>
  811788:	d9401b17 	ldw	r5,108(sp)
  81178c:	d8801c17 	ldw	r2,112(sp)
  811790:	d811883a 	mov	r8,sp
  811794:	29000044 	addi	r4,r5,1
  811798:	003e8b06 	br	8111c8 <__alt_data_end+0xff8111c8>
  81179c:	9023883a 	mov	r17,r18
  8117a0:	003d5a06 	br	810d0c <__alt_data_end+0xff810d0c>
  8117a4:	4827883a 	mov	r19,r9
  8117a8:	003e3506 	br	811080 <__alt_data_end+0xff811080>
  8117ac:	d8c02217 	ldw	r3,136(sp)
  8117b0:	001b883a 	mov	r13,zero
  8117b4:	0005883a 	mov	r2,zero
  8117b8:	1d800017 	ldw	r22,0(r3)
  8117bc:	18c00104 	addi	r3,r3,4
  8117c0:	d8c02215 	stw	r3,136(sp)
  8117c4:	b009883a 	mov	r4,r22
  8117c8:	003c8e06 	br	810a04 <__alt_data_end+0xff810a04>
  8117cc:	1d800017 	ldw	r22,0(r3)
  8117d0:	d9002217 	ldw	r4,136(sp)
  8117d4:	b01bd7fa 	srai	r13,r22,31
  8117d8:	21000104 	addi	r4,r4,4
  8117dc:	d9002215 	stw	r4,136(sp)
  8117e0:	6805883a 	mov	r2,r13
  8117e4:	003da306 	br	810e74 <__alt_data_end+0xff810e74>
  8117e8:	d9002217 	ldw	r4,136(sp)
  8117ec:	001b883a 	mov	r13,zero
  8117f0:	00800044 	movi	r2,1
  8117f4:	25800017 	ldw	r22,0(r4)
  8117f8:	21000104 	addi	r4,r4,4
  8117fc:	d9002215 	stw	r4,136(sp)
  811800:	b009883a 	mov	r4,r22
  811804:	003c7f06 	br	810a04 <__alt_data_end+0xff810a04>
  811808:	00c020b4 	movhi	r3,130
  81180c:	18f00884 	addi	r3,r3,-16350
  811810:	d8c02415 	stw	r3,144(sp)
  811814:	003cff06 	br	810c14 <__alt_data_end+0xff810c14>
  811818:	d8801c17 	ldw	r2,112(sp)
  81181c:	dd402117 	ldw	r21,132(sp)
  811820:	103ec526 	beq	r2,zero,811338 <__alt_data_end+0xff811338>
  811824:	d9002017 	ldw	r4,128(sp)
  811828:	a80b883a 	mov	r5,r21
  81182c:	d9801a04 	addi	r6,sp,104
  811830:	08105780 	call	810578 <__sprint_r.part.0>
  811834:	003ec006 	br	811338 <__alt_data_end+0xff811338>
  811838:	80800044 	addi	r2,r16,1
  81183c:	ad400814 	ori	r21,r21,32
  811840:	80c00047 	ldb	r3,1(r16)
  811844:	003bef06 	br	810804 <__alt_data_end+0xff810804>
  811848:	04a5c83a 	sub	r18,zero,r18
  81184c:	8005883a 	mov	r2,r16
  811850:	d8c02215 	stw	r3,136(sp)
  811854:	003d5306 	br	810da4 <__alt_data_end+0xff810da4>
  811858:	da002a15 	stw	r8,168(sp)
  81185c:	08034f40 	call	8034f4 <strlen>
  811860:	1027883a 	mov	r19,r2
  811864:	db801d83 	ldbu	r14,118(sp)
  811868:	dd802215 	stw	r22,136(sp)
  81186c:	0013883a 	mov	r9,zero
  811870:	da002a17 	ldw	r8,168(sp)
  811874:	003c7f06 	br	810a74 <__alt_data_end+0xff810a74>
  811878:	d9002017 	ldw	r4,128(sp)
  81187c:	d9402117 	ldw	r5,132(sp)
  811880:	d9801a04 	addi	r6,sp,104
  811884:	da402b15 	stw	r9,172(sp)
  811888:	08105780 	call	810578 <__sprint_r.part.0>
  81188c:	da402b17 	ldw	r9,172(sp)
  811890:	103ea81e 	bne	r2,zero,811334 <__alt_data_end+0xff811334>
  811894:	d9401b17 	ldw	r5,108(sp)
  811898:	d8801c17 	ldw	r2,112(sp)
  81189c:	d811883a 	mov	r8,sp
  8118a0:	29000044 	addi	r4,r5,1
  8118a4:	003cc006 	br	810ba8 <__alt_data_end+0xff810ba8>
  8118a8:	d9401b17 	ldw	r5,108(sp)
  8118ac:	010020b4 	movhi	r4,130
  8118b0:	21300c84 	addi	r4,r4,-16334
  8118b4:	d9002415 	stw	r4,144(sp)
  8118b8:	29400044 	addi	r5,r5,1
  8118bc:	003c9f06 	br	810b3c <__alt_data_end+0xff810b3c>
  8118c0:	00800184 	movi	r2,6
  8118c4:	1240012e 	bgeu	r2,r9,8118cc <___vfiprintf_internal_r+0x1240>
  8118c8:	1013883a 	mov	r9,r2
  8118cc:	4827883a 	mov	r19,r9
  8118d0:	4823883a 	mov	r17,r9
  8118d4:	48001116 	blt	r9,zero,81191c <___vfiprintf_internal_r+0x1290>
  8118d8:	050020b4 	movhi	r20,130
  8118dc:	dd802215 	stw	r22,136(sp)
  8118e0:	a52ee504 	addi	r20,r20,-17516
  8118e4:	003db106 	br	810fac <__alt_data_end+0xff810fac>
  8118e8:	d9401b17 	ldw	r5,108(sp)
  8118ec:	010020b4 	movhi	r4,130
  8118f0:	21300c84 	addi	r4,r4,-16334
  8118f4:	d9002415 	stw	r4,144(sp)
  8118f8:	29400044 	addi	r5,r5,1
  8118fc:	003cf906 	br	810ce4 <__alt_data_end+0xff810ce4>
  811900:	4827883a 	mov	r19,r9
  811904:	db801d83 	ldbu	r14,118(sp)
  811908:	dd802215 	stw	r22,136(sp)
  81190c:	0013883a 	mov	r9,zero
  811910:	003c5806 	br	810a74 <__alt_data_end+0xff810a74>
  811914:	200d883a 	mov	r6,r4
  811918:	003ec706 	br	811438 <__alt_data_end+0xff811438>
  81191c:	0023883a 	mov	r17,zero
  811920:	003fed06 	br	8118d8 <__alt_data_end+0xff8118d8>
  811924:	d9002217 	ldw	r4,136(sp)
  811928:	22400017 	ldw	r9,0(r4)
  81192c:	20c00104 	addi	r3,r4,4
  811930:	d8c02215 	stw	r3,136(sp)
  811934:	483fc20e 	bge	r9,zero,811840 <__alt_data_end+0xff811840>
  811938:	027fffc4 	movi	r9,-1
  81193c:	80c00047 	ldb	r3,1(r16)
  811940:	003bb006 	br	810804 <__alt_data_end+0xff810804>
  811944:	8c80010e 	bge	r17,r18,81194c <___vfiprintf_internal_r+0x12c0>
  811948:	9023883a 	mov	r17,r18
  81194c:	d8802317 	ldw	r2,140(sp)
  811950:	1445883a 	add	r2,r2,r17
  811954:	d8802315 	stw	r2,140(sp)
  811958:	003cef06 	br	810d18 <__alt_data_end+0xff810d18>

0081195c <__vfiprintf_internal>:
  81195c:	2007883a 	mov	r3,r4
  811960:	010020b4 	movhi	r4,130
  811964:	2137f804 	addi	r4,r4,-8224
  811968:	21000017 	ldw	r4,0(r4)
  81196c:	2805883a 	mov	r2,r5
  811970:	300f883a 	mov	r7,r6
  811974:	180b883a 	mov	r5,r3
  811978:	100d883a 	mov	r6,r2
  81197c:	081068c1 	jmpi	81068c <___vfiprintf_internal_r>

00811980 <__sbprintf>:
  811980:	2880030b 	ldhu	r2,12(r5)
  811984:	2ac01917 	ldw	r11,100(r5)
  811988:	2a80038b 	ldhu	r10,14(r5)
  81198c:	2a400717 	ldw	r9,28(r5)
  811990:	2a000917 	ldw	r8,36(r5)
  811994:	defee204 	addi	sp,sp,-1144
  811998:	00c10004 	movi	r3,1024
  81199c:	dc011a15 	stw	r16,1128(sp)
  8119a0:	10bfff4c 	andi	r2,r2,65533
  8119a4:	2821883a 	mov	r16,r5
  8119a8:	d8cb883a 	add	r5,sp,r3
  8119ac:	dc811c15 	stw	r18,1136(sp)
  8119b0:	dc411b15 	stw	r17,1132(sp)
  8119b4:	dfc11d15 	stw	ra,1140(sp)
  8119b8:	2025883a 	mov	r18,r4
  8119bc:	d881030d 	sth	r2,1036(sp)
  8119c0:	dac11915 	stw	r11,1124(sp)
  8119c4:	da81038d 	sth	r10,1038(sp)
  8119c8:	da410715 	stw	r9,1052(sp)
  8119cc:	da010915 	stw	r8,1060(sp)
  8119d0:	dec10015 	stw	sp,1024(sp)
  8119d4:	dec10415 	stw	sp,1040(sp)
  8119d8:	d8c10215 	stw	r3,1032(sp)
  8119dc:	d8c10515 	stw	r3,1044(sp)
  8119e0:	d8010615 	stw	zero,1048(sp)
  8119e4:	081068c0 	call	81068c <___vfiprintf_internal_r>
  8119e8:	1023883a 	mov	r17,r2
  8119ec:	10000416 	blt	r2,zero,811a00 <__sbprintf+0x80>
  8119f0:	9009883a 	mov	r4,r18
  8119f4:	d9410004 	addi	r5,sp,1024
  8119f8:	08011c80 	call	8011c8 <_fflush_r>
  8119fc:	10000d1e 	bne	r2,zero,811a34 <__sbprintf+0xb4>
  811a00:	d8c1030b 	ldhu	r3,1036(sp)
  811a04:	18c0100c 	andi	r3,r3,64
  811a08:	18000326 	beq	r3,zero,811a18 <__sbprintf+0x98>
  811a0c:	8080030b 	ldhu	r2,12(r16)
  811a10:	10801014 	ori	r2,r2,64
  811a14:	8080030d 	sth	r2,12(r16)
  811a18:	8805883a 	mov	r2,r17
  811a1c:	dfc11d17 	ldw	ra,1140(sp)
  811a20:	dc811c17 	ldw	r18,1136(sp)
  811a24:	dc411b17 	ldw	r17,1132(sp)
  811a28:	dc011a17 	ldw	r16,1128(sp)
  811a2c:	dec11e04 	addi	sp,sp,1144
  811a30:	f800283a 	ret
  811a34:	047fffc4 	movi	r17,-1
  811a38:	003ff106 	br	811a00 <__alt_data_end+0xff811a00>

00811a3c <__swbuf_r>:
  811a3c:	defffc04 	addi	sp,sp,-16
  811a40:	dc800215 	stw	r18,8(sp)
  811a44:	dc400115 	stw	r17,4(sp)
  811a48:	dc000015 	stw	r16,0(sp)
  811a4c:	dfc00315 	stw	ra,12(sp)
  811a50:	2025883a 	mov	r18,r4
  811a54:	2823883a 	mov	r17,r5
  811a58:	3021883a 	mov	r16,r6
  811a5c:	20000226 	beq	r4,zero,811a68 <__swbuf_r+0x2c>
  811a60:	20800e17 	ldw	r2,56(r4)
  811a64:	10004126 	beq	r2,zero,811b6c <__swbuf_r+0x130>
  811a68:	80c00617 	ldw	r3,24(r16)
  811a6c:	8180030b 	ldhu	r6,12(r16)
  811a70:	80c00215 	stw	r3,8(r16)
  811a74:	30c0020c 	andi	r3,r6,8
  811a78:	18003526 	beq	r3,zero,811b50 <__swbuf_r+0x114>
  811a7c:	80c00417 	ldw	r3,16(r16)
  811a80:	18003326 	beq	r3,zero,811b50 <__swbuf_r+0x114>
  811a84:	3088000c 	andi	r2,r6,8192
  811a88:	8c403fcc 	andi	r17,r17,255
  811a8c:	10001726 	beq	r2,zero,811aec <__swbuf_r+0xb0>
  811a90:	80800017 	ldw	r2,0(r16)
  811a94:	81000517 	ldw	r4,20(r16)
  811a98:	10c7c83a 	sub	r3,r2,r3
  811a9c:	19001d0e 	bge	r3,r4,811b14 <__swbuf_r+0xd8>
  811aa0:	18c00044 	addi	r3,r3,1
  811aa4:	81400217 	ldw	r5,8(r16)
  811aa8:	11000044 	addi	r4,r2,1
  811aac:	81000015 	stw	r4,0(r16)
  811ab0:	297fffc4 	addi	r5,r5,-1
  811ab4:	81400215 	stw	r5,8(r16)
  811ab8:	14400005 	stb	r17,0(r2)
  811abc:	80800517 	ldw	r2,20(r16)
  811ac0:	10c01d26 	beq	r2,r3,811b38 <__swbuf_r+0xfc>
  811ac4:	8080030b 	ldhu	r2,12(r16)
  811ac8:	1080004c 	andi	r2,r2,1
  811acc:	1000181e 	bne	r2,zero,811b30 <__swbuf_r+0xf4>
  811ad0:	8805883a 	mov	r2,r17
  811ad4:	dfc00317 	ldw	ra,12(sp)
  811ad8:	dc800217 	ldw	r18,8(sp)
  811adc:	dc400117 	ldw	r17,4(sp)
  811ae0:	dc000017 	ldw	r16,0(sp)
  811ae4:	dec00404 	addi	sp,sp,16
  811ae8:	f800283a 	ret
  811aec:	81001917 	ldw	r4,100(r16)
  811af0:	00b7ffc4 	movi	r2,-8193
  811af4:	31880014 	ori	r6,r6,8192
  811af8:	2084703a 	and	r2,r4,r2
  811afc:	80801915 	stw	r2,100(r16)
  811b00:	80800017 	ldw	r2,0(r16)
  811b04:	81000517 	ldw	r4,20(r16)
  811b08:	8180030d 	sth	r6,12(r16)
  811b0c:	10c7c83a 	sub	r3,r2,r3
  811b10:	193fe316 	blt	r3,r4,811aa0 <__alt_data_end+0xff811aa0>
  811b14:	9009883a 	mov	r4,r18
  811b18:	800b883a 	mov	r5,r16
  811b1c:	08011c80 	call	8011c8 <_fflush_r>
  811b20:	1000091e 	bne	r2,zero,811b48 <__swbuf_r+0x10c>
  811b24:	80800017 	ldw	r2,0(r16)
  811b28:	00c00044 	movi	r3,1
  811b2c:	003fdd06 	br	811aa4 <__alt_data_end+0xff811aa4>
  811b30:	00800284 	movi	r2,10
  811b34:	88bfe61e 	bne	r17,r2,811ad0 <__alt_data_end+0xff811ad0>
  811b38:	9009883a 	mov	r4,r18
  811b3c:	800b883a 	mov	r5,r16
  811b40:	08011c80 	call	8011c8 <_fflush_r>
  811b44:	103fe226 	beq	r2,zero,811ad0 <__alt_data_end+0xff811ad0>
  811b48:	00bfffc4 	movi	r2,-1
  811b4c:	003fe106 	br	811ad4 <__alt_data_end+0xff811ad4>
  811b50:	9009883a 	mov	r4,r18
  811b54:	800b883a 	mov	r5,r16
  811b58:	0806d100 	call	806d10 <__swsetup_r>
  811b5c:	103ffa1e 	bne	r2,zero,811b48 <__alt_data_end+0xff811b48>
  811b60:	8180030b 	ldhu	r6,12(r16)
  811b64:	80c00417 	ldw	r3,16(r16)
  811b68:	003fc606 	br	811a84 <__alt_data_end+0xff811a84>
  811b6c:	08015a40 	call	8015a4 <__sinit>
  811b70:	003fbd06 	br	811a68 <__alt_data_end+0xff811a68>

00811b74 <__swbuf>:
  811b74:	00c020b4 	movhi	r3,130
  811b78:	18f7f804 	addi	r3,r3,-8224
  811b7c:	2005883a 	mov	r2,r4
  811b80:	19000017 	ldw	r4,0(r3)
  811b84:	280d883a 	mov	r6,r5
  811b88:	100b883a 	mov	r5,r2
  811b8c:	0811a3c1 	jmpi	811a3c <__swbuf_r>

00811b90 <_calloc_r>:
  811b90:	298b383a 	mul	r5,r5,r6
  811b94:	defffe04 	addi	sp,sp,-8
  811b98:	dc000015 	stw	r16,0(sp)
  811b9c:	dfc00115 	stw	ra,4(sp)
  811ba0:	080258c0 	call	80258c <_malloc_r>
  811ba4:	1021883a 	mov	r16,r2
  811ba8:	10002826 	beq	r2,zero,811c4c <_calloc_r+0xbc>
  811bac:	11bfff17 	ldw	r6,-4(r2)
  811bb0:	00bfff04 	movi	r2,-4
  811bb4:	00c00904 	movi	r3,36
  811bb8:	308c703a 	and	r6,r6,r2
  811bbc:	308d883a 	add	r6,r6,r2
  811bc0:	19801436 	bltu	r3,r6,811c14 <_calloc_r+0x84>
  811bc4:	008004c4 	movi	r2,19
  811bc8:	11800936 	bltu	r2,r6,811bf0 <_calloc_r+0x60>
  811bcc:	8005883a 	mov	r2,r16
  811bd0:	10000015 	stw	zero,0(r2)
  811bd4:	10000115 	stw	zero,4(r2)
  811bd8:	10000215 	stw	zero,8(r2)
  811bdc:	8005883a 	mov	r2,r16
  811be0:	dfc00117 	ldw	ra,4(sp)
  811be4:	dc000017 	ldw	r16,0(sp)
  811be8:	dec00204 	addi	sp,sp,8
  811bec:	f800283a 	ret
  811bf0:	80000015 	stw	zero,0(r16)
  811bf4:	80000115 	stw	zero,4(r16)
  811bf8:	008006c4 	movi	r2,27
  811bfc:	11800d2e 	bgeu	r2,r6,811c34 <_calloc_r+0xa4>
  811c00:	80000215 	stw	zero,8(r16)
  811c04:	80000315 	stw	zero,12(r16)
  811c08:	30c00c26 	beq	r6,r3,811c3c <_calloc_r+0xac>
  811c0c:	80800404 	addi	r2,r16,16
  811c10:	003fef06 	br	811bd0 <__alt_data_end+0xff811bd0>
  811c14:	8009883a 	mov	r4,r16
  811c18:	000b883a 	mov	r5,zero
  811c1c:	0802d340 	call	802d34 <memset>
  811c20:	8005883a 	mov	r2,r16
  811c24:	dfc00117 	ldw	ra,4(sp)
  811c28:	dc000017 	ldw	r16,0(sp)
  811c2c:	dec00204 	addi	sp,sp,8
  811c30:	f800283a 	ret
  811c34:	80800204 	addi	r2,r16,8
  811c38:	003fe506 	br	811bd0 <__alt_data_end+0xff811bd0>
  811c3c:	80000415 	stw	zero,16(r16)
  811c40:	80800604 	addi	r2,r16,24
  811c44:	80000515 	stw	zero,20(r16)
  811c48:	003fe106 	br	811bd0 <__alt_data_end+0xff811bd0>
  811c4c:	0005883a 	mov	r2,zero
  811c50:	003fe306 	br	811be0 <__alt_data_end+0xff811be0>

00811c54 <_fputwc_r>:
  811c54:	3080030b 	ldhu	r2,12(r6)
  811c58:	defff804 	addi	sp,sp,-32
  811c5c:	dcc00415 	stw	r19,16(sp)
  811c60:	dc800315 	stw	r18,12(sp)
  811c64:	dc000115 	stw	r16,4(sp)
  811c68:	dfc00715 	stw	ra,28(sp)
  811c6c:	dd400615 	stw	r21,24(sp)
  811c70:	dd000515 	stw	r20,20(sp)
  811c74:	dc400215 	stw	r17,8(sp)
  811c78:	10c8000c 	andi	r3,r2,8192
  811c7c:	3021883a 	mov	r16,r6
  811c80:	2027883a 	mov	r19,r4
  811c84:	2825883a 	mov	r18,r5
  811c88:	1800051e 	bne	r3,zero,811ca0 <_fputwc_r+0x4c>
  811c8c:	30c01917 	ldw	r3,100(r6)
  811c90:	10880014 	ori	r2,r2,8192
  811c94:	3080030d 	sth	r2,12(r6)
  811c98:	18880014 	ori	r2,r3,8192
  811c9c:	30801915 	stw	r2,100(r6)
  811ca0:	0808e580 	call	808e58 <__locale_mb_cur_max>
  811ca4:	00c00044 	movi	r3,1
  811ca8:	10c03e26 	beq	r2,r3,811da4 <_fputwc_r+0x150>
  811cac:	9809883a 	mov	r4,r19
  811cb0:	d80b883a 	mov	r5,sp
  811cb4:	900d883a 	mov	r6,r18
  811cb8:	81c01704 	addi	r7,r16,92
  811cbc:	0813c980 	call	813c98 <_wcrtomb_r>
  811cc0:	1029883a 	mov	r20,r2
  811cc4:	00bfffc4 	movi	r2,-1
  811cc8:	a0802026 	beq	r20,r2,811d4c <_fputwc_r+0xf8>
  811ccc:	d9400003 	ldbu	r5,0(sp)
  811cd0:	a0001c26 	beq	r20,zero,811d44 <_fputwc_r+0xf0>
  811cd4:	0023883a 	mov	r17,zero
  811cd8:	05400284 	movi	r21,10
  811cdc:	00000906 	br	811d04 <_fputwc_r+0xb0>
  811ce0:	80800017 	ldw	r2,0(r16)
  811ce4:	11400005 	stb	r5,0(r2)
  811ce8:	80c00017 	ldw	r3,0(r16)
  811cec:	18c00044 	addi	r3,r3,1
  811cf0:	80c00015 	stw	r3,0(r16)
  811cf4:	8c400044 	addi	r17,r17,1
  811cf8:	dc45883a 	add	r2,sp,r17
  811cfc:	8d00112e 	bgeu	r17,r20,811d44 <_fputwc_r+0xf0>
  811d00:	11400003 	ldbu	r5,0(r2)
  811d04:	80c00217 	ldw	r3,8(r16)
  811d08:	18ffffc4 	addi	r3,r3,-1
  811d0c:	80c00215 	stw	r3,8(r16)
  811d10:	183ff30e 	bge	r3,zero,811ce0 <__alt_data_end+0xff811ce0>
  811d14:	80800617 	ldw	r2,24(r16)
  811d18:	18801916 	blt	r3,r2,811d80 <_fputwc_r+0x12c>
  811d1c:	80800017 	ldw	r2,0(r16)
  811d20:	11400005 	stb	r5,0(r2)
  811d24:	80800017 	ldw	r2,0(r16)
  811d28:	10c00003 	ldbu	r3,0(r2)
  811d2c:	10800044 	addi	r2,r2,1
  811d30:	1d402326 	beq	r3,r21,811dc0 <_fputwc_r+0x16c>
  811d34:	80800015 	stw	r2,0(r16)
  811d38:	8c400044 	addi	r17,r17,1
  811d3c:	dc45883a 	add	r2,sp,r17
  811d40:	8d3fef36 	bltu	r17,r20,811d00 <__alt_data_end+0xff811d00>
  811d44:	9005883a 	mov	r2,r18
  811d48:	00000406 	br	811d5c <_fputwc_r+0x108>
  811d4c:	80c0030b 	ldhu	r3,12(r16)
  811d50:	a005883a 	mov	r2,r20
  811d54:	18c01014 	ori	r3,r3,64
  811d58:	80c0030d 	sth	r3,12(r16)
  811d5c:	dfc00717 	ldw	ra,28(sp)
  811d60:	dd400617 	ldw	r21,24(sp)
  811d64:	dd000517 	ldw	r20,20(sp)
  811d68:	dcc00417 	ldw	r19,16(sp)
  811d6c:	dc800317 	ldw	r18,12(sp)
  811d70:	dc400217 	ldw	r17,8(sp)
  811d74:	dc000117 	ldw	r16,4(sp)
  811d78:	dec00804 	addi	sp,sp,32
  811d7c:	f800283a 	ret
  811d80:	9809883a 	mov	r4,r19
  811d84:	29403fcc 	andi	r5,r5,255
  811d88:	800d883a 	mov	r6,r16
  811d8c:	0811a3c0 	call	811a3c <__swbuf_r>
  811d90:	10bfffe0 	cmpeqi	r2,r2,-1
  811d94:	10803fcc 	andi	r2,r2,255
  811d98:	103fd626 	beq	r2,zero,811cf4 <__alt_data_end+0xff811cf4>
  811d9c:	00bfffc4 	movi	r2,-1
  811da0:	003fee06 	br	811d5c <__alt_data_end+0xff811d5c>
  811da4:	90ffffc4 	addi	r3,r18,-1
  811da8:	01003f84 	movi	r4,254
  811dac:	20ffbf36 	bltu	r4,r3,811cac <__alt_data_end+0xff811cac>
  811db0:	900b883a 	mov	r5,r18
  811db4:	dc800005 	stb	r18,0(sp)
  811db8:	1029883a 	mov	r20,r2
  811dbc:	003fc506 	br	811cd4 <__alt_data_end+0xff811cd4>
  811dc0:	9809883a 	mov	r4,r19
  811dc4:	a80b883a 	mov	r5,r21
  811dc8:	800d883a 	mov	r6,r16
  811dcc:	0811a3c0 	call	811a3c <__swbuf_r>
  811dd0:	10bfffe0 	cmpeqi	r2,r2,-1
  811dd4:	003fef06 	br	811d94 <__alt_data_end+0xff811d94>

00811dd8 <fputwc>:
  811dd8:	008020b4 	movhi	r2,130
  811ddc:	defffc04 	addi	sp,sp,-16
  811de0:	10b7f804 	addi	r2,r2,-8224
  811de4:	dc000115 	stw	r16,4(sp)
  811de8:	14000017 	ldw	r16,0(r2)
  811dec:	dc400215 	stw	r17,8(sp)
  811df0:	dfc00315 	stw	ra,12(sp)
  811df4:	2023883a 	mov	r17,r4
  811df8:	280d883a 	mov	r6,r5
  811dfc:	80000626 	beq	r16,zero,811e18 <fputwc+0x40>
  811e00:	80800e17 	ldw	r2,56(r16)
  811e04:	1000041e 	bne	r2,zero,811e18 <fputwc+0x40>
  811e08:	8009883a 	mov	r4,r16
  811e0c:	d9400015 	stw	r5,0(sp)
  811e10:	08015a40 	call	8015a4 <__sinit>
  811e14:	d9800017 	ldw	r6,0(sp)
  811e18:	8009883a 	mov	r4,r16
  811e1c:	880b883a 	mov	r5,r17
  811e20:	dfc00317 	ldw	ra,12(sp)
  811e24:	dc400217 	ldw	r17,8(sp)
  811e28:	dc000117 	ldw	r16,4(sp)
  811e2c:	dec00404 	addi	sp,sp,16
  811e30:	0811c541 	jmpi	811c54 <_fputwc_r>

00811e34 <rshift>:
  811e34:	2807d17a 	srai	r3,r5,5
  811e38:	20800417 	ldw	r2,16(r4)
  811e3c:	22400504 	addi	r9,r4,20
  811e40:	1880250e 	bge	r3,r2,811ed8 <rshift+0xa4>
  811e44:	1085883a 	add	r2,r2,r2
  811e48:	18c7883a 	add	r3,r3,r3
  811e4c:	1085883a 	add	r2,r2,r2
  811e50:	18c7883a 	add	r3,r3,r3
  811e54:	294007cc 	andi	r5,r5,31
  811e58:	4885883a 	add	r2,r9,r2
  811e5c:	48c7883a 	add	r3,r9,r3
  811e60:	28002026 	beq	r5,zero,811ee4 <rshift+0xb0>
  811e64:	19800017 	ldw	r6,0(r3)
  811e68:	02c00804 	movi	r11,32
  811e6c:	19c00104 	addi	r7,r3,4
  811e70:	5957c83a 	sub	r11,r11,r5
  811e74:	3150d83a 	srl	r8,r6,r5
  811e78:	38802c2e 	bgeu	r7,r2,811f2c <rshift+0xf8>
  811e7c:	4815883a 	mov	r10,r9
  811e80:	39800017 	ldw	r6,0(r7)
  811e84:	52800104 	addi	r10,r10,4
  811e88:	39c00104 	addi	r7,r7,4
  811e8c:	32cc983a 	sll	r6,r6,r11
  811e90:	418cb03a 	or	r6,r8,r6
  811e94:	51bfff15 	stw	r6,-4(r10)
  811e98:	39bfff17 	ldw	r6,-4(r7)
  811e9c:	3150d83a 	srl	r8,r6,r5
  811ea0:	38bff736 	bltu	r7,r2,811e80 <__alt_data_end+0xff811e80>
  811ea4:	10c7c83a 	sub	r3,r2,r3
  811ea8:	18fffec4 	addi	r3,r3,-5
  811eac:	1806d0ba 	srli	r3,r3,2
  811eb0:	18c00044 	addi	r3,r3,1
  811eb4:	18c7883a 	add	r3,r3,r3
  811eb8:	18c7883a 	add	r3,r3,r3
  811ebc:	48c7883a 	add	r3,r9,r3
  811ec0:	1a000015 	stw	r8,0(r3)
  811ec4:	40000126 	beq	r8,zero,811ecc <rshift+0x98>
  811ec8:	18c00104 	addi	r3,r3,4
  811ecc:	1a45c83a 	sub	r2,r3,r9
  811ed0:	1005d0ba 	srai	r2,r2,2
  811ed4:	00001206 	br	811f20 <rshift+0xec>
  811ed8:	20000415 	stw	zero,16(r4)
  811edc:	20000515 	stw	zero,20(r4)
  811ee0:	f800283a 	ret
  811ee4:	18bffc2e 	bgeu	r3,r2,811ed8 <__alt_data_end+0xff811ed8>
  811ee8:	180d883a 	mov	r6,r3
  811eec:	480b883a 	mov	r5,r9
  811ef0:	31c00017 	ldw	r7,0(r6)
  811ef4:	29400104 	addi	r5,r5,4
  811ef8:	31800104 	addi	r6,r6,4
  811efc:	29ffff15 	stw	r7,-4(r5)
  811f00:	30bffb36 	bltu	r6,r2,811ef0 <__alt_data_end+0xff811ef0>
  811f04:	00c6303a 	nor	r3,zero,r3
  811f08:	1885883a 	add	r2,r3,r2
  811f0c:	1004d0ba 	srli	r2,r2,2
  811f10:	10800044 	addi	r2,r2,1
  811f14:	1085883a 	add	r2,r2,r2
  811f18:	1085883a 	add	r2,r2,r2
  811f1c:	1005d0ba 	srai	r2,r2,2
  811f20:	20800415 	stw	r2,16(r4)
  811f24:	103fed26 	beq	r2,zero,811edc <__alt_data_end+0xff811edc>
  811f28:	f800283a 	ret
  811f2c:	4807883a 	mov	r3,r9
  811f30:	003fe306 	br	811ec0 <__alt_data_end+0xff811ec0>

00811f34 <__gethex>:
  811f34:	deffeb04 	addi	sp,sp,-84
  811f38:	d9c00415 	stw	r7,16(sp)
  811f3c:	dfc01415 	stw	ra,80(sp)
  811f40:	dd801115 	stw	r22,68(sp)
  811f44:	dcc00e15 	stw	r19,56(sp)
  811f48:	dc800d15 	stw	r18,52(sp)
  811f4c:	2827883a 	mov	r19,r5
  811f50:	d9000115 	stw	r4,4(sp)
  811f54:	d9800015 	stw	r6,0(sp)
  811f58:	df001315 	stw	fp,76(sp)
  811f5c:	ddc01215 	stw	r23,72(sp)
  811f60:	dd401015 	stw	r21,64(sp)
  811f64:	dd000f15 	stw	r20,60(sp)
  811f68:	dc400c15 	stw	r17,48(sp)
  811f6c:	dc000b15 	stw	r16,44(sp)
  811f70:	0808e7c0 	call	808e7c <_localeconv_r>
  811f74:	14800017 	ldw	r18,0(r2)
  811f78:	9009883a 	mov	r4,r18
  811f7c:	08034f40 	call	8034f4 <strlen>
  811f80:	99c00017 	ldw	r7,0(r19)
  811f84:	9087883a 	add	r3,r18,r2
  811f88:	18ffffc3 	ldbu	r3,-1(r3)
  811f8c:	102d883a 	mov	r22,r2
  811f90:	38800083 	ldbu	r2,2(r7)
  811f94:	d8c00305 	stb	r3,12(sp)
  811f98:	00c00c04 	movi	r3,48
  811f9c:	10c14c1e 	bne	r2,r3,8124d0 <__gethex+0x59c>
  811fa0:	013fff84 	movi	r4,-2
  811fa4:	38c000c4 	addi	r3,r7,3
  811fa8:	21c9c83a 	sub	r4,r4,r7
  811fac:	100b883a 	mov	r5,r2
  811fb0:	20e3883a 	add	r17,r4,r3
  811fb4:	182b883a 	mov	r21,r3
  811fb8:	18c00044 	addi	r3,r3,1
  811fbc:	18bfffc3 	ldbu	r2,-1(r3)
  811fc0:	117ffb26 	beq	r2,r5,811fb0 <__alt_data_end+0xff811fb0>
  811fc4:	050020b4 	movhi	r20,130
  811fc8:	a5301084 	addi	r20,r20,-16318
  811fcc:	a085883a 	add	r2,r20,r2
  811fd0:	10800003 	ldbu	r2,0(r2)
  811fd4:	1000c526 	beq	r2,zero,8122ec <__gethex+0x3b8>
  811fd8:	a8800003 	ldbu	r2,0(r21)
  811fdc:	0017883a 	mov	r11,zero
  811fe0:	002f883a 	mov	r23,zero
  811fe4:	a085883a 	add	r2,r20,r2
  811fe8:	10800003 	ldbu	r2,0(r2)
  811fec:	a821883a 	mov	r16,r21
  811ff0:	10000526 	beq	r2,zero,812008 <__gethex+0xd4>
  811ff4:	84000044 	addi	r16,r16,1
  811ff8:	80c00003 	ldbu	r3,0(r16)
  811ffc:	a0c7883a 	add	r3,r20,r3
  812000:	18800003 	ldbu	r2,0(r3)
  812004:	103ffb1e 	bne	r2,zero,811ff4 <__alt_data_end+0xff811ff4>
  812008:	8009883a 	mov	r4,r16
  81200c:	900b883a 	mov	r5,r18
  812010:	b00d883a 	mov	r6,r22
  812014:	dac00a15 	stw	r11,40(sp)
  812018:	08129d40 	call	8129d4 <strncmp>
  81201c:	dac00a17 	ldw	r11,40(sp)
  812020:	1000031e 	bne	r2,zero,812030 <__gethex+0xfc>
  812024:	b8014c26 	beq	r23,zero,812558 <__gethex+0x624>
  812028:	80800003 	ldbu	r2,0(r16)
  81202c:	00000206 	br	812038 <__gethex+0x104>
  812030:	80800003 	ldbu	r2,0(r16)
  812034:	b8011926 	beq	r23,zero,81249c <__gethex+0x568>
  812038:	85efc83a 	sub	r23,r16,r23
  81203c:	bdef883a 	add	r23,r23,r23
  812040:	bdef883a 	add	r23,r23,r23
  812044:	05efc83a 	sub	r23,zero,r23
  812048:	10803fcc 	andi	r2,r2,255
  81204c:	00c01404 	movi	r3,80
  812050:	10c07926 	beq	r2,r3,812238 <__gethex+0x304>
  812054:	00c01c04 	movi	r3,112
  812058:	10c07726 	beq	r2,r3,812238 <__gethex+0x304>
  81205c:	8039883a 	mov	fp,r16
  812060:	9c000015 	stw	r16,0(r19)
  812064:	58000e26 	beq	r11,zero,8120a0 <__gethex+0x16c>
  812068:	8800ae1e 	bne	r17,zero,812324 <__gethex+0x3f0>
  81206c:	00800184 	movi	r2,6
  812070:	dfc01417 	ldw	ra,80(sp)
  812074:	df001317 	ldw	fp,76(sp)
  812078:	ddc01217 	ldw	r23,72(sp)
  81207c:	dd801117 	ldw	r22,68(sp)
  812080:	dd401017 	ldw	r21,64(sp)
  812084:	dd000f17 	ldw	r20,60(sp)
  812088:	dcc00e17 	ldw	r19,56(sp)
  81208c:	dc800d17 	ldw	r18,52(sp)
  812090:	dc400c17 	ldw	r17,48(sp)
  812094:	dc000b17 	ldw	r16,44(sp)
  812098:	dec01504 	addi	sp,sp,84
  81209c:	f800283a 	ret
  8120a0:	e545c83a 	sub	r2,fp,r21
  8120a4:	10bfffc4 	addi	r2,r2,-1
  8120a8:	00c001c4 	movi	r3,7
  8120ac:	000b883a 	mov	r5,zero
  8120b0:	1880030e 	bge	r3,r2,8120c0 <__gethex+0x18c>
  8120b4:	1005d07a 	srai	r2,r2,1
  8120b8:	29400044 	addi	r5,r5,1
  8120bc:	18bffd16 	blt	r3,r2,8120b4 <__alt_data_end+0xff8120b4>
  8120c0:	d9000117 	ldw	r4,4(sp)
  8120c4:	08094ac0 	call	8094ac <_Balloc>
  8120c8:	10c00504 	addi	r3,r2,20
  8120cc:	d8c00215 	stw	r3,8(sp)
  8120d0:	1021883a 	mov	r16,r2
  8120d4:	af01612e 	bgeu	r21,fp,81265c <__gethex+0x728>
  8120d8:	dc400303 	ldbu	r17,12(sp)
  8120dc:	03800044 	movi	r14,1
  8120e0:	1817883a 	mov	r11,r3
  8120e4:	0015883a 	mov	r10,zero
  8120e8:	0027883a 	mov	r19,zero
  8120ec:	759dc83a 	sub	r14,r14,r22
  8120f0:	03000804 	movi	r12,32
  8120f4:	e0bfffc3 	ldbu	r2,-1(fp)
  8120f8:	e3ffffc4 	addi	r15,fp,-1
  8120fc:	14403026 	beq	r2,r17,8121c0 <__gethex+0x28c>
  812100:	9b004526 	beq	r19,r12,812218 <__gethex+0x2e4>
  812104:	9809883a 	mov	r4,r19
  812108:	9cc00104 	addi	r19,r19,4
  81210c:	e0bfffc3 	ldbu	r2,-1(fp)
  812110:	7839883a 	mov	fp,r15
  812114:	a085883a 	add	r2,r20,r2
  812118:	10c00003 	ldbu	r3,0(r2)
  81211c:	18c003cc 	andi	r3,r3,15
  812120:	1906983a 	sll	r3,r3,r4
  812124:	50d4b03a 	or	r10,r10,r3
  812128:	af3ff236 	bltu	r21,fp,8120f4 <__alt_data_end+0xff8120f4>
  81212c:	d8c00217 	ldw	r3,8(sp)
  812130:	58800104 	addi	r2,r11,4
  812134:	5a800015 	stw	r10,0(r11)
  812138:	10c5c83a 	sub	r2,r2,r3
  81213c:	1005d0ba 	srai	r2,r2,2
  812140:	5009883a 	mov	r4,r10
  812144:	80800415 	stw	r2,16(r16)
  812148:	1022917a 	slli	r17,r2,5
  81214c:	08097a00 	call	8097a0 <__hi0bits>
  812150:	d8c00017 	ldw	r3,0(sp)
  812154:	8885c83a 	sub	r2,r17,r2
  812158:	1c800017 	ldw	r18,0(r3)
  81215c:	9080b316 	blt	r18,r2,81242c <__gethex+0x4f8>
  812160:	1480d016 	blt	r2,r18,8124a4 <__gethex+0x570>
  812164:	0027883a 	mov	r19,zero
  812168:	d8c00017 	ldw	r3,0(sp)
  81216c:	18800217 	ldw	r2,8(r3)
  812170:	15c07b16 	blt	r2,r23,812360 <__gethex+0x42c>
  812174:	d8c00017 	ldw	r3,0(sp)
  812178:	18800117 	ldw	r2,4(r3)
  81217c:	b880980e 	bge	r23,r2,8123e0 <__gethex+0x4ac>
  812180:	15efc83a 	sub	r23,r2,r23
  812184:	bc80d916 	blt	r23,r18,8124ec <__gethex+0x5b8>
  812188:	18c00317 	ldw	r3,12(r3)
  81218c:	01000084 	movi	r4,2
  812190:	19014026 	beq	r3,r4,812694 <__gethex+0x760>
  812194:	010000c4 	movi	r4,3
  812198:	19011c26 	beq	r3,r4,81260c <__gethex+0x6d8>
  81219c:	01000044 	movi	r4,1
  8121a0:	19013326 	beq	r3,r4,812670 <__gethex+0x73c>
  8121a4:	d9000117 	ldw	r4,4(sp)
  8121a8:	800b883a 	mov	r5,r16
  8121ac:	08095540 	call	809554 <_Bfree>
  8121b0:	d8801517 	ldw	r2,84(sp)
  8121b4:	10000015 	stw	zero,0(r2)
  8121b8:	00801404 	movi	r2,80
  8121bc:	003fac06 	br	812070 <__alt_data_end+0xff812070>
  8121c0:	7b87883a 	add	r3,r15,r14
  8121c4:	1d7fce36 	bltu	r3,r21,812100 <__alt_data_end+0xff812100>
  8121c8:	1809883a 	mov	r4,r3
  8121cc:	900b883a 	mov	r5,r18
  8121d0:	b00d883a 	mov	r6,r22
  8121d4:	d8c00615 	stw	r3,24(sp)
  8121d8:	da800715 	stw	r10,28(sp)
  8121dc:	dac00a15 	stw	r11,40(sp)
  8121e0:	db000915 	stw	r12,36(sp)
  8121e4:	db800815 	stw	r14,32(sp)
  8121e8:	dbc00515 	stw	r15,20(sp)
  8121ec:	08129d40 	call	8129d4 <strncmp>
  8121f0:	d8c00617 	ldw	r3,24(sp)
  8121f4:	da800717 	ldw	r10,28(sp)
  8121f8:	dac00a17 	ldw	r11,40(sp)
  8121fc:	db000917 	ldw	r12,36(sp)
  812200:	db800817 	ldw	r14,32(sp)
  812204:	dbc00517 	ldw	r15,20(sp)
  812208:	103fbd1e 	bne	r2,zero,812100 <__alt_data_end+0xff812100>
  81220c:	1839883a 	mov	fp,r3
  812210:	af3fb836 	bltu	r21,fp,8120f4 <__alt_data_end+0xff8120f4>
  812214:	003fc506 	br	81212c <__alt_data_end+0xff81212c>
  812218:	04c00104 	movi	r19,4
  81221c:	5a800015 	stw	r10,0(r11)
  812220:	0009883a 	mov	r4,zero
  812224:	5cd7883a 	add	r11,r11,r19
  812228:	0015883a 	mov	r10,zero
  81222c:	003fb706 	br	81210c <__alt_data_end+0xff81210c>
  812230:	002f883a 	mov	r23,zero
  812234:	02c00044 	movi	r11,1
  812238:	80800043 	ldbu	r2,1(r16)
  81223c:	01000ac4 	movi	r4,43
  812240:	10c03fcc 	andi	r3,r2,255
  812244:	19007726 	beq	r3,r4,812424 <__gethex+0x4f0>
  812248:	01000b44 	movi	r4,45
  81224c:	19004b26 	beq	r3,r4,81237c <__gethex+0x448>
  812250:	81000044 	addi	r4,r16,1
  812254:	000b883a 	mov	r5,zero
  812258:	10803fcc 	andi	r2,r2,255
  81225c:	a085883a 	add	r2,r20,r2
  812260:	10c00003 	ldbu	r3,0(r2)
  812264:	03000604 	movi	r12,24
  812268:	18bfffc4 	addi	r2,r3,-1
  81226c:	10803fcc 	andi	r2,r2,255
  812270:	60bf7a36 	bltu	r12,r2,81205c <__alt_data_end+0xff81205c>
  812274:	21800043 	ldbu	r6,1(r4)
  812278:	18803fcc 	andi	r2,r3,255
  81227c:	00c020b4 	movhi	r3,130
  812280:	18f01084 	addi	r3,r3,-16318
  812284:	1987883a 	add	r3,r3,r6
  812288:	1b400003 	ldbu	r13,0(r3)
  81228c:	10bffc04 	addi	r2,r2,-16
  812290:	21000044 	addi	r4,r4,1
  812294:	68ffffc4 	addi	r3,r13,-1
  812298:	18c03fcc 	andi	r3,r3,255
  81229c:	6b403fcc 	andi	r13,r13,255
  8122a0:	60c00b36 	bltu	r12,r3,8122d0 <__gethex+0x39c>
  8122a4:	21000044 	addi	r4,r4,1
  8122a8:	20c00003 	ldbu	r3,0(r4)
  8122ac:	108002a4 	muli	r2,r2,10
  8122b0:	a0c7883a 	add	r3,r20,r3
  8122b4:	19800003 	ldbu	r6,0(r3)
  8122b8:	1345883a 	add	r2,r2,r13
  8122bc:	10bffc04 	addi	r2,r2,-16
  8122c0:	30ffffc4 	addi	r3,r6,-1
  8122c4:	18c03fcc 	andi	r3,r3,255
  8122c8:	33403fcc 	andi	r13,r6,255
  8122cc:	60fff52e 	bgeu	r12,r3,8122a4 <__alt_data_end+0xff8122a4>
  8122d0:	0147c83a 	sub	r3,zero,r5
  8122d4:	10c4f03a 	xor	r2,r2,r3
  8122d8:	114b883a 	add	r5,r2,r5
  8122dc:	8039883a 	mov	fp,r16
  8122e0:	b96f883a 	add	r23,r23,r5
  8122e4:	2021883a 	mov	r16,r4
  8122e8:	003f5d06 	br	812060 <__alt_data_end+0xff812060>
  8122ec:	a809883a 	mov	r4,r21
  8122f0:	900b883a 	mov	r5,r18
  8122f4:	b00d883a 	mov	r6,r22
  8122f8:	08129d40 	call	8129d4 <strncmp>
  8122fc:	10002326 	beq	r2,zero,81238c <__gethex+0x458>
  812300:	a8800003 	ldbu	r2,0(r21)
  812304:	a821883a 	mov	r16,r21
  812308:	10803fcc 	andi	r2,r2,255
  81230c:	00c01404 	movi	r3,80
  812310:	10ffc726 	beq	r2,r3,812230 <__alt_data_end+0xff812230>
  812314:	00c01c04 	movi	r3,112
  812318:	10ffc526 	beq	r2,r3,812230 <__alt_data_end+0xff812230>
  81231c:	9c000015 	stw	r16,0(r19)
  812320:	883f5226 	beq	r17,zero,81206c <__alt_data_end+0xff81206c>
  812324:	0005883a 	mov	r2,zero
  812328:	003f5106 	br	812070 <__alt_data_end+0xff812070>
  81232c:	2ce7883a 	add	r19,r5,r19
  812330:	993fff17 	ldw	r4,-4(r19)
  812334:	08097a00 	call	8097a0 <__hi0bits>
  812338:	00c00804 	movi	r3,32
  81233c:	1c63c83a 	sub	r17,r3,r17
  812340:	1440ae0e 	bge	r2,r17,8125fc <__gethex+0x6c8>
  812344:	8009883a 	mov	r4,r16
  812348:	01400044 	movi	r5,1
  81234c:	0811e340 	call	811e34 <rshift>
  812350:	d8c00017 	ldw	r3,0(sp)
  812354:	bdc00044 	addi	r23,r23,1
  812358:	18800217 	ldw	r2,8(r3)
  81235c:	15c0a70e 	bge	r2,r23,8125fc <__gethex+0x6c8>
  812360:	d9000117 	ldw	r4,4(sp)
  812364:	800b883a 	mov	r5,r16
  812368:	08095540 	call	809554 <_Bfree>
  81236c:	d9001517 	ldw	r4,84(sp)
  812370:	008028c4 	movi	r2,163
  812374:	20000015 	stw	zero,0(r4)
  812378:	003f3d06 	br	812070 <__alt_data_end+0xff812070>
  81237c:	01400044 	movi	r5,1
  812380:	80800083 	ldbu	r2,2(r16)
  812384:	81000084 	addi	r4,r16,2
  812388:	003fb306 	br	812258 <__alt_data_end+0xff812258>
  81238c:	ada1883a 	add	r16,r21,r22
  812390:	80c00003 	ldbu	r3,0(r16)
  812394:	19003fcc 	andi	r4,r3,255
  812398:	a105883a 	add	r2,r20,r4
  81239c:	10800003 	ldbu	r2,0(r2)
  8123a0:	11403fcc 	andi	r5,r2,255
  8123a4:	28004f26 	beq	r5,zero,8124e4 <__gethex+0x5b0>
  8123a8:	00c00c04 	movi	r3,48
  8123ac:	802b883a 	mov	r21,r16
  8123b0:	20c0061e 	bne	r4,r3,8123cc <__gethex+0x498>
  8123b4:	2007883a 	mov	r3,r4
  8123b8:	ad400044 	addi	r21,r21,1
  8123bc:	a8800003 	ldbu	r2,0(r21)
  8123c0:	10fffd26 	beq	r2,r3,8123b8 <__alt_data_end+0xff8123b8>
  8123c4:	a085883a 	add	r2,r20,r2
  8123c8:	10800003 	ldbu	r2,0(r2)
  8123cc:	10803fcc 	andi	r2,r2,255
  8123d0:	1017003a 	cmpeq	r11,r2,zero
  8123d4:	802f883a 	mov	r23,r16
  8123d8:	04400044 	movi	r17,1
  8123dc:	003f0306 	br	811fec <__alt_data_end+0xff811fec>
  8123e0:	04400044 	movi	r17,1
  8123e4:	98000926 	beq	r19,zero,81240c <__gethex+0x4d8>
  8123e8:	d8c00017 	ldw	r3,0(sp)
  8123ec:	18800317 	ldw	r2,12(r3)
  8123f0:	00c00084 	movi	r3,2
  8123f4:	10c06626 	beq	r2,r3,812590 <__gethex+0x65c>
  8123f8:	00c000c4 	movi	r3,3
  8123fc:	10c06826 	beq	r2,r3,8125a0 <__gethex+0x66c>
  812400:	00c00044 	movi	r3,1
  812404:	10c08d26 	beq	r2,r3,81263c <__gethex+0x708>
  812408:	8c400414 	ori	r17,r17,16
  81240c:	d9001517 	ldw	r4,84(sp)
  812410:	d8c00417 	ldw	r3,16(sp)
  812414:	8805883a 	mov	r2,r17
  812418:	24000015 	stw	r16,0(r4)
  81241c:	1dc00015 	stw	r23,0(r3)
  812420:	003f1306 	br	812070 <__alt_data_end+0xff812070>
  812424:	000b883a 	mov	r5,zero
  812428:	003fd506 	br	812380 <__alt_data_end+0xff812380>
  81242c:	14a3c83a 	sub	r17,r2,r18
  812430:	8009883a 	mov	r4,r16
  812434:	880b883a 	mov	r5,r17
  812438:	080a3c00 	call	80a3c0 <__any_on>
  81243c:	10002726 	beq	r2,zero,8124dc <__gethex+0x5a8>
  812440:	897fffc4 	addi	r5,r17,-1
  812444:	2807d17a 	srai	r3,r5,5
  812448:	d8800217 	ldw	r2,8(sp)
  81244c:	290007cc 	andi	r4,r5,31
  812450:	18c7883a 	add	r3,r3,r3
  812454:	18c7883a 	add	r3,r3,r3
  812458:	04c00044 	movi	r19,1
  81245c:	10c7883a 	add	r3,r2,r3
  812460:	9908983a 	sll	r4,r19,r4
  812464:	18c00017 	ldw	r3,0(r3)
  812468:	20c6703a 	and	r3,r4,r3
  81246c:	18000626 	beq	r3,zero,812488 <__gethex+0x554>
  812470:	99407d0e 	bge	r19,r5,812668 <__gethex+0x734>
  812474:	8009883a 	mov	r4,r16
  812478:	897fff84 	addi	r5,r17,-2
  81247c:	080a3c00 	call	80a3c0 <__any_on>
  812480:	10007926 	beq	r2,zero,812668 <__gethex+0x734>
  812484:	04c000c4 	movi	r19,3
  812488:	8009883a 	mov	r4,r16
  81248c:	880b883a 	mov	r5,r17
  812490:	0811e340 	call	811e34 <rshift>
  812494:	bc6f883a 	add	r23,r23,r17
  812498:	003f3306 	br	812168 <__alt_data_end+0xff812168>
  81249c:	002f883a 	mov	r23,zero
  8124a0:	003ee906 	br	812048 <__alt_data_end+0xff812048>
  8124a4:	d9000117 	ldw	r4,4(sp)
  8124a8:	90a3c83a 	sub	r17,r18,r2
  8124ac:	800b883a 	mov	r5,r16
  8124b0:	880d883a 	mov	r6,r17
  8124b4:	0809c300 	call	809c30 <__lshift>
  8124b8:	10c00504 	addi	r3,r2,20
  8124bc:	1021883a 	mov	r16,r2
  8124c0:	bc6fc83a 	sub	r23,r23,r17
  8124c4:	d8c00215 	stw	r3,8(sp)
  8124c8:	0027883a 	mov	r19,zero
  8124cc:	003f2606 	br	812168 <__alt_data_end+0xff812168>
  8124d0:	3d400084 	addi	r21,r7,2
  8124d4:	0023883a 	mov	r17,zero
  8124d8:	003eba06 	br	811fc4 <__alt_data_end+0xff811fc4>
  8124dc:	0027883a 	mov	r19,zero
  8124e0:	003fe906 	br	812488 <__alt_data_end+0xff812488>
  8124e4:	1805883a 	mov	r2,r3
  8124e8:	003f8706 	br	812308 <__alt_data_end+0xff812308>
  8124ec:	bc7fffc4 	addi	r17,r23,-1
  8124f0:	9800441e 	bne	r19,zero,812604 <__gethex+0x6d0>
  8124f4:	0440040e 	bge	zero,r17,812508 <__gethex+0x5d4>
  8124f8:	8009883a 	mov	r4,r16
  8124fc:	880b883a 	mov	r5,r17
  812500:	080a3c00 	call	80a3c0 <__any_on>
  812504:	1027883a 	mov	r19,r2
  812508:	8805d17a 	srai	r2,r17,5
  81250c:	d8c00217 	ldw	r3,8(sp)
  812510:	8c4007cc 	andi	r17,r17,31
  812514:	1085883a 	add	r2,r2,r2
  812518:	1085883a 	add	r2,r2,r2
  81251c:	1885883a 	add	r2,r3,r2
  812520:	00c00044 	movi	r3,1
  812524:	1c62983a 	sll	r17,r3,r17
  812528:	10800017 	ldw	r2,0(r2)
  81252c:	8884703a 	and	r2,r17,r2
  812530:	10000126 	beq	r2,zero,812538 <__gethex+0x604>
  812534:	9cc00094 	ori	r19,r19,2
  812538:	b80b883a 	mov	r5,r23
  81253c:	8009883a 	mov	r4,r16
  812540:	0811e340 	call	811e34 <rshift>
  812544:	d8c00017 	ldw	r3,0(sp)
  812548:	95e5c83a 	sub	r18,r18,r23
  81254c:	04400084 	movi	r17,2
  812550:	1dc00117 	ldw	r23,4(r3)
  812554:	003fa306 	br	8123e4 <__alt_data_end+0xff8123e4>
  812558:	85af883a 	add	r23,r16,r22
  81255c:	b8800003 	ldbu	r2,0(r23)
  812560:	b821883a 	mov	r16,r23
  812564:	10c03fcc 	andi	r3,r2,255
  812568:	a0c7883a 	add	r3,r20,r3
  81256c:	18c00003 	ldbu	r3,0(r3)
  812570:	183eb026 	beq	r3,zero,812034 <__alt_data_end+0xff812034>
  812574:	84000044 	addi	r16,r16,1
  812578:	80800003 	ldbu	r2,0(r16)
  81257c:	10c03fcc 	andi	r3,r2,255
  812580:	a0c7883a 	add	r3,r20,r3
  812584:	18c00003 	ldbu	r3,0(r3)
  812588:	183ffa1e 	bne	r3,zero,812574 <__alt_data_end+0xff812574>
  81258c:	003ea906 	br	812034 <__alt_data_end+0xff812034>
  812590:	d9001617 	ldw	r4,88(sp)
  812594:	00800044 	movi	r2,1
  812598:	1109c83a 	sub	r4,r2,r4
  81259c:	d9001615 	stw	r4,88(sp)
  8125a0:	d8801617 	ldw	r2,88(sp)
  8125a4:	103f9826 	beq	r2,zero,812408 <__alt_data_end+0xff812408>
  8125a8:	87000417 	ldw	fp,16(r16)
  8125ac:	d8800217 	ldw	r2,8(sp)
  8125b0:	013fffc4 	movi	r4,-1
  8125b4:	e727883a 	add	r19,fp,fp
  8125b8:	9ce7883a 	add	r19,r19,r19
  8125bc:	14cb883a 	add	r5,r2,r19
  8125c0:	00000306 	br	8125d0 <__gethex+0x69c>
  8125c4:	10000015 	stw	zero,0(r2)
  8125c8:	10800104 	addi	r2,r2,4
  8125cc:	1140342e 	bgeu	r2,r5,8126a0 <__gethex+0x76c>
  8125d0:	10c00017 	ldw	r3,0(r2)
  8125d4:	193ffb26 	beq	r3,r4,8125c4 <__alt_data_end+0xff8125c4>
  8125d8:	d9400217 	ldw	r5,8(sp)
  8125dc:	18c00044 	addi	r3,r3,1
  8125e0:	10c00015 	stw	r3,0(r2)
  8125e4:	00800084 	movi	r2,2
  8125e8:	88803a26 	beq	r17,r2,8126d4 <__gethex+0x7a0>
  8125ec:	80800417 	ldw	r2,16(r16)
  8125f0:	e0bf5416 	blt	fp,r2,812344 <__alt_data_end+0xff812344>
  8125f4:	944007cc 	andi	r17,r18,31
  8125f8:	883f4c1e 	bne	r17,zero,81232c <__alt_data_end+0xff81232c>
  8125fc:	04400844 	movi	r17,33
  812600:	003f8206 	br	81240c <__alt_data_end+0xff81240c>
  812604:	04c00044 	movi	r19,1
  812608:	003fbf06 	br	812508 <__alt_data_end+0xff812508>
  81260c:	d8c01617 	ldw	r3,88(sp)
  812610:	183ee426 	beq	r3,zero,8121a4 <__alt_data_end+0xff8121a4>
  812614:	d8c00417 	ldw	r3,16(sp)
  812618:	d9001517 	ldw	r4,84(sp)
  81261c:	18800015 	stw	r2,0(r3)
  812620:	d8c00217 	ldw	r3,8(sp)
  812624:	00800044 	movi	r2,1
  812628:	80800415 	stw	r2,16(r16)
  81262c:	18800015 	stw	r2,0(r3)
  812630:	24000015 	stw	r16,0(r4)
  812634:	00801884 	movi	r2,98
  812638:	003e8d06 	br	812070 <__alt_data_end+0xff812070>
  81263c:	9880008c 	andi	r2,r19,2
  812640:	103f7126 	beq	r2,zero,812408 <__alt_data_end+0xff812408>
  812644:	d8c00217 	ldw	r3,8(sp)
  812648:	18800017 	ldw	r2,0(r3)
  81264c:	9884b03a 	or	r2,r19,r2
  812650:	1080004c 	andi	r2,r2,1
  812654:	103fd41e 	bne	r2,zero,8125a8 <__alt_data_end+0xff8125a8>
  812658:	003f6b06 	br	812408 <__alt_data_end+0xff812408>
  81265c:	dac00217 	ldw	r11,8(sp)
  812660:	0015883a 	mov	r10,zero
  812664:	003eb106 	br	81212c <__alt_data_end+0xff81212c>
  812668:	04c00084 	movi	r19,2
  81266c:	003f8606 	br	812488 <__alt_data_end+0xff812488>
  812670:	bcbecc1e 	bne	r23,r18,8121a4 <__alt_data_end+0xff8121a4>
  812674:	1cbfe70e 	bge	r3,r18,812614 <__alt_data_end+0xff812614>
  812678:	8009883a 	mov	r4,r16
  81267c:	917fffc4 	addi	r5,r18,-1
  812680:	080a3c00 	call	80a3c0 <__any_on>
  812684:	103ec726 	beq	r2,zero,8121a4 <__alt_data_end+0xff8121a4>
  812688:	d8c00017 	ldw	r3,0(sp)
  81268c:	18800117 	ldw	r2,4(r3)
  812690:	003fe006 	br	812614 <__alt_data_end+0xff812614>
  812694:	d9001617 	ldw	r4,88(sp)
  812698:	203fde26 	beq	r4,zero,812614 <__alt_data_end+0xff812614>
  81269c:	003ec106 	br	8121a4 <__alt_data_end+0xff8121a4>
  8126a0:	80800217 	ldw	r2,8(r16)
  8126a4:	e080110e 	bge	fp,r2,8126ec <__gethex+0x7b8>
  8126a8:	d9400217 	ldw	r5,8(sp)
  8126ac:	e009883a 	mov	r4,fp
  8126b0:	20c00144 	addi	r3,r4,5
  8126b4:	18c7883a 	add	r3,r3,r3
  8126b8:	21000044 	addi	r4,r4,1
  8126bc:	18c7883a 	add	r3,r3,r3
  8126c0:	81000415 	stw	r4,16(r16)
  8126c4:	80c7883a 	add	r3,r16,r3
  8126c8:	00800044 	movi	r2,1
  8126cc:	18800015 	stw	r2,0(r3)
  8126d0:	003fc406 	br	8125e4 <__alt_data_end+0xff8125e4>
  8126d4:	d8c00017 	ldw	r3,0(sp)
  8126d8:	18800017 	ldw	r2,0(r3)
  8126dc:	10bfffc4 	addi	r2,r2,-1
  8126e0:	14801526 	beq	r2,r18,812738 <__gethex+0x804>
  8126e4:	04400884 	movi	r17,34
  8126e8:	003f4806 	br	81240c <__alt_data_end+0xff81240c>
  8126ec:	81400117 	ldw	r5,4(r16)
  8126f0:	d9000117 	ldw	r4,4(sp)
  8126f4:	29400044 	addi	r5,r5,1
  8126f8:	08094ac0 	call	8094ac <_Balloc>
  8126fc:	81800417 	ldw	r6,16(r16)
  812700:	81400304 	addi	r5,r16,12
  812704:	11000304 	addi	r4,r2,12
  812708:	31800084 	addi	r6,r6,2
  81270c:	318d883a 	add	r6,r6,r6
  812710:	318d883a 	add	r6,r6,r6
  812714:	1029883a 	mov	r20,r2
  812718:	08092180 	call	809218 <memcpy>
  81271c:	d9000117 	ldw	r4,4(sp)
  812720:	800b883a 	mov	r5,r16
  812724:	a021883a 	mov	r16,r20
  812728:	08095540 	call	809554 <_Bfree>
  81272c:	a1000417 	ldw	r4,16(r20)
  812730:	a1400504 	addi	r5,r20,20
  812734:	003fde06 	br	8126b0 <__alt_data_end+0xff8126b0>
  812738:	9005d17a 	srai	r2,r18,5
  81273c:	944007cc 	andi	r17,r18,31
  812740:	00c00044 	movi	r3,1
  812744:	1085883a 	add	r2,r2,r2
  812748:	1085883a 	add	r2,r2,r2
  81274c:	2885883a 	add	r2,r5,r2
  812750:	1c62983a 	sll	r17,r3,r17
  812754:	10800017 	ldw	r2,0(r2)
  812758:	8884703a 	and	r2,r17,r2
  81275c:	1023003a 	cmpeq	r17,r2,zero
  812760:	8c400844 	addi	r17,r17,33
  812764:	003f2906 	br	81240c <__alt_data_end+0xff81240c>

00812768 <__hexnan>:
  812768:	defff904 	addi	sp,sp,-28
  81276c:	dcc00315 	stw	r19,12(sp)
  812770:	2cc00017 	ldw	r19,0(r5)
  812774:	dd800615 	stw	r22,24(sp)
  812778:	dd400515 	stw	r21,20(sp)
  81277c:	981fd17a 	srai	r15,r19,5
  812780:	dd000415 	stw	r20,16(sp)
  812784:	dc800215 	stw	r18,8(sp)
  812788:	7bdf883a 	add	r15,r15,r15
  81278c:	7bdf883a 	add	r15,r15,r15
  812790:	dc400115 	stw	r17,4(sp)
  812794:	dc000015 	stw	r16,0(sp)
  812798:	9cc007cc 	andi	r19,r19,31
  81279c:	33df883a 	add	r15,r6,r15
  8127a0:	98000126 	beq	r19,zero,8127a8 <__hexnan+0x40>
  8127a4:	7bc00104 	addi	r15,r15,4
  8127a8:	21c00017 	ldw	r7,0(r4)
  8127ac:	7affff04 	addi	r11,r15,-4
  8127b0:	038020b4 	movhi	r14,130
  8127b4:	783fff15 	stw	zero,-4(r15)
  8127b8:	581b883a 	mov	r13,r11
  8127bc:	5813883a 	mov	r9,r11
  8127c0:	000b883a 	mov	r5,zero
  8127c4:	0021883a 	mov	r16,zero
  8127c8:	0019883a 	mov	r12,zero
  8127cc:	73b01084 	addi	r14,r14,-16318
  8127d0:	04800204 	movi	r18,8
  8127d4:	04400804 	movi	r17,32
  8127d8:	050001c4 	movi	r20,7
  8127dc:	39c00044 	addi	r7,r7,1
  8127e0:	38c00003 	ldbu	r3,0(r7)
  8127e4:	18001d26 	beq	r3,zero,81285c <__hexnan+0xf4>
  8127e8:	70c5883a 	add	r2,r14,r3
  8127ec:	10800003 	ldbu	r2,0(r2)
  8127f0:	12003fcc 	andi	r8,r2,255
  8127f4:	4000441e 	bne	r8,zero,812908 <__hexnan+0x1a0>
  8127f8:	88c05836 	bltu	r17,r3,81295c <__hexnan+0x1f4>
  8127fc:	833ff70e 	bge	r16,r12,8127dc <__alt_data_end+0xff8127dc>
  812800:	4b40112e 	bgeu	r9,r13,812848 <__hexnan+0xe0>
  812804:	a1401016 	blt	r20,r5,812848 <__hexnan+0xe0>
  812808:	914bc83a 	sub	r5,r18,r5
  81280c:	294b883a 	add	r5,r5,r5
  812810:	4a800017 	ldw	r10,0(r9)
  812814:	294b883a 	add	r5,r5,r5
  812818:	896dc83a 	sub	r22,r17,r5
  81281c:	48c00104 	addi	r3,r9,4
  812820:	4805883a 	mov	r2,r9
  812824:	1d400017 	ldw	r21,0(r3)
  812828:	10800104 	addi	r2,r2,4
  81282c:	18c00104 	addi	r3,r3,4
  812830:	ad90983a 	sll	r8,r21,r22
  812834:	5210b03a 	or	r8,r10,r8
  812838:	a954d83a 	srl	r10,r21,r5
  81283c:	123fff15 	stw	r8,-4(r2)
  812840:	1abfff15 	stw	r10,-4(r3)
  812844:	137ff736 	bltu	r2,r13,812824 <__alt_data_end+0xff812824>
  812848:	32403e36 	bltu	r6,r9,812944 <__hexnan+0x1dc>
  81284c:	39c00044 	addi	r7,r7,1
  812850:	38c00003 	ldbu	r3,0(r7)
  812854:	01400204 	movi	r5,8
  812858:	183fe31e 	bne	r3,zero,8127e8 <__alt_data_end+0xff8127e8>
  81285c:	4807883a 	mov	r3,r9
  812860:	60004026 	beq	r12,zero,812964 <__hexnan+0x1fc>
  812864:	4b40162e 	bgeu	r9,r13,8128c0 <__hexnan+0x158>
  812868:	008001c4 	movi	r2,7
  81286c:	11401416 	blt	r2,r5,8128c0 <__hexnan+0x158>
  812870:	02800204 	movi	r10,8
  812874:	5155c83a 	sub	r10,r10,r5
  812878:	5295883a 	add	r10,r10,r10
  81287c:	5295883a 	add	r10,r10,r10
  812880:	49400104 	addi	r5,r9,4
  812884:	03000804 	movi	r12,32
  812888:	49c00017 	ldw	r7,0(r9)
  81288c:	6299c83a 	sub	r12,r12,r10
  812890:	2805883a 	mov	r2,r5
  812894:	00000106 	br	81289c <__hexnan+0x134>
  812898:	29400104 	addi	r5,r5,4
  81289c:	12000017 	ldw	r8,0(r2)
  8128a0:	10800104 	addi	r2,r2,4
  8128a4:	4308983a 	sll	r4,r8,r12
  8128a8:	3908b03a 	or	r4,r7,r4
  8128ac:	428ed83a 	srl	r7,r8,r10
  8128b0:	49000015 	stw	r4,0(r9)
  8128b4:	2813883a 	mov	r9,r5
  8128b8:	11ffff15 	stw	r7,-4(r2)
  8128bc:	2b7ff636 	bltu	r5,r13,812898 <__alt_data_end+0xff812898>
  8128c0:	30c0322e 	bgeu	r6,r3,81298c <__hexnan+0x224>
  8128c4:	3005883a 	mov	r2,r6
  8128c8:	19000017 	ldw	r4,0(r3)
  8128cc:	10800104 	addi	r2,r2,4
  8128d0:	18c00104 	addi	r3,r3,4
  8128d4:	113fff15 	stw	r4,-4(r2)
  8128d8:	58fffb2e 	bgeu	r11,r3,8128c8 <__alt_data_end+0xff8128c8>
  8128dc:	10000015 	stw	zero,0(r2)
  8128e0:	10800104 	addi	r2,r2,4
  8128e4:	58bffd2e 	bgeu	r11,r2,8128dc <__alt_data_end+0xff8128dc>
  8128e8:	78bfff17 	ldw	r2,-4(r15)
  8128ec:	1000041e 	bne	r2,zero,812900 <__hexnan+0x198>
  8128f0:	32c02f26 	beq	r6,r11,8129b0 <__hexnan+0x248>
  8128f4:	5affff04 	addi	r11,r11,-4
  8128f8:	58800017 	ldw	r2,0(r11)
  8128fc:	103ffc26 	beq	r2,zero,8128f0 <__alt_data_end+0xff8128f0>
  812900:	00800144 	movi	r2,5
  812904:	00001806 	br	812968 <__hexnan+0x200>
  812908:	29400044 	addi	r5,r5,1
  81290c:	63000044 	addi	r12,r12,1
  812910:	91400616 	blt	r18,r5,81292c <__hexnan+0x1c4>
  812914:	48c00017 	ldw	r3,0(r9)
  812918:	1806913a 	slli	r3,r3,4
  81291c:	108003cc 	andi	r2,r2,15
  812920:	1884b03a 	or	r2,r3,r2
  812924:	48800015 	stw	r2,0(r9)
  812928:	003fac06 	br	8127dc <__alt_data_end+0xff8127dc>
  81292c:	327fab2e 	bgeu	r6,r9,8127dc <__alt_data_end+0xff8127dc>
  812930:	483fff15 	stw	zero,-4(r9)
  812934:	0007883a 	mov	r3,zero
  812938:	4a7fff04 	addi	r9,r9,-4
  81293c:	01400044 	movi	r5,1
  812940:	003ff606 	br	81291c <__alt_data_end+0xff81291c>
  812944:	4b7fff04 	addi	r13,r9,-4
  812948:	483fff15 	stw	zero,-4(r9)
  81294c:	6021883a 	mov	r16,r12
  812950:	6813883a 	mov	r9,r13
  812954:	000b883a 	mov	r5,zero
  812958:	003fa006 	br	8127dc <__alt_data_end+0xff8127dc>
  81295c:	00800a44 	movi	r2,41
  812960:	18801726 	beq	r3,r2,8129c0 <__hexnan+0x258>
  812964:	00800104 	movi	r2,4
  812968:	dd800617 	ldw	r22,24(sp)
  81296c:	dd400517 	ldw	r21,20(sp)
  812970:	dd000417 	ldw	r20,16(sp)
  812974:	dcc00317 	ldw	r19,12(sp)
  812978:	dc800217 	ldw	r18,8(sp)
  81297c:	dc400117 	ldw	r17,4(sp)
  812980:	dc000017 	ldw	r16,0(sp)
  812984:	dec00704 	addi	sp,sp,28
  812988:	f800283a 	ret
  81298c:	983fd626 	beq	r19,zero,8128e8 <__alt_data_end+0xff8128e8>
  812990:	00c00804 	movi	r3,32
  812994:	1ce7c83a 	sub	r19,r3,r19
  812998:	00ffffc4 	movi	r3,-1
  81299c:	78bfff17 	ldw	r2,-4(r15)
  8129a0:	1cc6d83a 	srl	r3,r3,r19
  8129a4:	1884703a 	and	r2,r3,r2
  8129a8:	78bfff15 	stw	r2,-4(r15)
  8129ac:	003fcf06 	br	8128ec <__alt_data_end+0xff8128ec>
  8129b0:	00800044 	movi	r2,1
  8129b4:	58800015 	stw	r2,0(r11)
  8129b8:	00800144 	movi	r2,5
  8129bc:	003fea06 	br	812968 <__alt_data_end+0xff812968>
  8129c0:	39c00044 	addi	r7,r7,1
  8129c4:	21c00015 	stw	r7,0(r4)
  8129c8:	4807883a 	mov	r3,r9
  8129cc:	603fa51e 	bne	r12,zero,812864 <__alt_data_end+0xff812864>
  8129d0:	003fe406 	br	812964 <__alt_data_end+0xff812964>

008129d4 <strncmp>:
  8129d4:	30002126 	beq	r6,zero,812a5c <strncmp+0x88>
  8129d8:	2144b03a 	or	r2,r4,r5
  8129dc:	108000cc 	andi	r2,r2,3
  8129e0:	1000241e 	bne	r2,zero,812a74 <strncmp+0xa0>
  8129e4:	024000c4 	movi	r9,3
  8129e8:	4980222e 	bgeu	r9,r6,812a74 <strncmp+0xa0>
  8129ec:	20800017 	ldw	r2,0(r4)
  8129f0:	28c00017 	ldw	r3,0(r5)
  8129f4:	10c01f1e 	bne	r2,r3,812a74 <strncmp+0xa0>
  8129f8:	31bfff04 	addi	r6,r6,-4
  8129fc:	30001726 	beq	r6,zero,812a5c <strncmp+0x88>
  812a00:	02ffbff4 	movhi	r11,65279
  812a04:	5affbfc4 	addi	r11,r11,-257
  812a08:	0086303a 	nor	r3,zero,r2
  812a0c:	02a02074 	movhi	r10,32897
  812a10:	12c5883a 	add	r2,r2,r11
  812a14:	52a02004 	addi	r10,r10,-32640
  812a18:	10c4703a 	and	r2,r2,r3
  812a1c:	1284703a 	and	r2,r2,r10
  812a20:	10000226 	beq	r2,zero,812a2c <strncmp+0x58>
  812a24:	00000d06 	br	812a5c <strncmp+0x88>
  812a28:	10000c1e 	bne	r2,zero,812a5c <strncmp+0x88>
  812a2c:	21000104 	addi	r4,r4,4
  812a30:	29400104 	addi	r5,r5,4
  812a34:	49800f2e 	bgeu	r9,r6,812a74 <strncmp+0xa0>
  812a38:	20c00017 	ldw	r3,0(r4)
  812a3c:	29c00017 	ldw	r7,0(r5)
  812a40:	1ad1883a 	add	r8,r3,r11
  812a44:	00c4303a 	nor	r2,zero,r3
  812a48:	4084703a 	and	r2,r8,r2
  812a4c:	1284703a 	and	r2,r2,r10
  812a50:	19c0081e 	bne	r3,r7,812a74 <strncmp+0xa0>
  812a54:	31bfff04 	addi	r6,r6,-4
  812a58:	303ff31e 	bne	r6,zero,812a28 <__alt_data_end+0xff812a28>
  812a5c:	0005883a 	mov	r2,zero
  812a60:	f800283a 	ret
  812a64:	303ffd26 	beq	r6,zero,812a5c <__alt_data_end+0xff812a5c>
  812a68:	103ffc26 	beq	r2,zero,812a5c <__alt_data_end+0xff812a5c>
  812a6c:	21000044 	addi	r4,r4,1
  812a70:	29400044 	addi	r5,r5,1
  812a74:	20800007 	ldb	r2,0(r4)
  812a78:	28c00007 	ldb	r3,0(r5)
  812a7c:	31bfffc4 	addi	r6,r6,-1
  812a80:	10fff826 	beq	r2,r3,812a64 <__alt_data_end+0xff812a64>
  812a84:	20800003 	ldbu	r2,0(r4)
  812a88:	28c00003 	ldbu	r3,0(r5)
  812a8c:	10c5c83a 	sub	r2,r2,r3
  812a90:	f800283a 	ret

00812a94 <__ssprint_r>:
  812a94:	30800217 	ldw	r2,8(r6)
  812a98:	defff604 	addi	sp,sp,-40
  812a9c:	ddc00715 	stw	r23,28(sp)
  812aa0:	dc800215 	stw	r18,8(sp)
  812aa4:	dfc00915 	stw	ra,36(sp)
  812aa8:	df000815 	stw	fp,32(sp)
  812aac:	dd800615 	stw	r22,24(sp)
  812ab0:	dd400515 	stw	r21,20(sp)
  812ab4:	dd000415 	stw	r20,16(sp)
  812ab8:	dcc00315 	stw	r19,12(sp)
  812abc:	dc400115 	stw	r17,4(sp)
  812ac0:	dc000015 	stw	r16,0(sp)
  812ac4:	3025883a 	mov	r18,r6
  812ac8:	35c00017 	ldw	r23,0(r6)
  812acc:	10005626 	beq	r2,zero,812c28 <__ssprint_r+0x194>
  812ad0:	2027883a 	mov	r19,r4
  812ad4:	28800217 	ldw	r2,8(r5)
  812ad8:	29000017 	ldw	r4,0(r5)
  812adc:	2823883a 	mov	r17,r5
  812ae0:	0039883a 	mov	fp,zero
  812ae4:	0021883a 	mov	r16,zero
  812ae8:	80003926 	beq	r16,zero,812bd0 <__ssprint_r+0x13c>
  812aec:	102b883a 	mov	r21,r2
  812af0:	102d883a 	mov	r22,r2
  812af4:	80803a36 	bltu	r16,r2,812be0 <__ssprint_r+0x14c>
  812af8:	88c0030b 	ldhu	r3,12(r17)
  812afc:	1881200c 	andi	r2,r3,1152
  812b00:	10002626 	beq	r2,zero,812b9c <__ssprint_r+0x108>
  812b04:	88800517 	ldw	r2,20(r17)
  812b08:	89400417 	ldw	r5,16(r17)
  812b0c:	81c00044 	addi	r7,r16,1
  812b10:	108d883a 	add	r6,r2,r2
  812b14:	3085883a 	add	r2,r6,r2
  812b18:	100cd7fa 	srli	r6,r2,31
  812b1c:	216dc83a 	sub	r22,r4,r5
  812b20:	3d89883a 	add	r4,r7,r22
  812b24:	3085883a 	add	r2,r6,r2
  812b28:	102bd07a 	srai	r21,r2,1
  812b2c:	a80d883a 	mov	r6,r21
  812b30:	a900022e 	bgeu	r21,r4,812b3c <__ssprint_r+0xa8>
  812b34:	202b883a 	mov	r21,r4
  812b38:	200d883a 	mov	r6,r4
  812b3c:	18c1000c 	andi	r3,r3,1024
  812b40:	9809883a 	mov	r4,r19
  812b44:	18002926 	beq	r3,zero,812bec <__ssprint_r+0x158>
  812b48:	300b883a 	mov	r5,r6
  812b4c:	080258c0 	call	80258c <_malloc_r>
  812b50:	1029883a 	mov	r20,r2
  812b54:	10002b26 	beq	r2,zero,812c04 <__ssprint_r+0x170>
  812b58:	89400417 	ldw	r5,16(r17)
  812b5c:	1009883a 	mov	r4,r2
  812b60:	b00d883a 	mov	r6,r22
  812b64:	08092180 	call	809218 <memcpy>
  812b68:	8880030b 	ldhu	r2,12(r17)
  812b6c:	00fedfc4 	movi	r3,-1153
  812b70:	10c4703a 	and	r2,r2,r3
  812b74:	10802014 	ori	r2,r2,128
  812b78:	8880030d 	sth	r2,12(r17)
  812b7c:	a589883a 	add	r4,r20,r22
  812b80:	adadc83a 	sub	r22,r21,r22
  812b84:	8d400515 	stw	r21,20(r17)
  812b88:	8d800215 	stw	r22,8(r17)
  812b8c:	8d000415 	stw	r20,16(r17)
  812b90:	89000015 	stw	r4,0(r17)
  812b94:	802b883a 	mov	r21,r16
  812b98:	802d883a 	mov	r22,r16
  812b9c:	e00b883a 	mov	r5,fp
  812ba0:	b00d883a 	mov	r6,r22
  812ba4:	08093500 	call	809350 <memmove>
  812ba8:	88800217 	ldw	r2,8(r17)
  812bac:	89000017 	ldw	r4,0(r17)
  812bb0:	90c00217 	ldw	r3,8(r18)
  812bb4:	1545c83a 	sub	r2,r2,r21
  812bb8:	2589883a 	add	r4,r4,r22
  812bbc:	88800215 	stw	r2,8(r17)
  812bc0:	89000015 	stw	r4,0(r17)
  812bc4:	1c21c83a 	sub	r16,r3,r16
  812bc8:	94000215 	stw	r16,8(r18)
  812bcc:	80001626 	beq	r16,zero,812c28 <__ssprint_r+0x194>
  812bd0:	bf000017 	ldw	fp,0(r23)
  812bd4:	bc000117 	ldw	r16,4(r23)
  812bd8:	bdc00204 	addi	r23,r23,8
  812bdc:	003fc206 	br	812ae8 <__alt_data_end+0xff812ae8>
  812be0:	802b883a 	mov	r21,r16
  812be4:	802d883a 	mov	r22,r16
  812be8:	003fec06 	br	812b9c <__alt_data_end+0xff812b9c>
  812bec:	080a6140 	call	80a614 <_realloc_r>
  812bf0:	1029883a 	mov	r20,r2
  812bf4:	103fe11e 	bne	r2,zero,812b7c <__alt_data_end+0xff812b7c>
  812bf8:	89400417 	ldw	r5,16(r17)
  812bfc:	9809883a 	mov	r4,r19
  812c00:	08018700 	call	801870 <_free_r>
  812c04:	88c0030b 	ldhu	r3,12(r17)
  812c08:	00800304 	movi	r2,12
  812c0c:	98800015 	stw	r2,0(r19)
  812c10:	18c01014 	ori	r3,r3,64
  812c14:	88c0030d 	sth	r3,12(r17)
  812c18:	00bfffc4 	movi	r2,-1
  812c1c:	90000215 	stw	zero,8(r18)
  812c20:	90000115 	stw	zero,4(r18)
  812c24:	00000206 	br	812c30 <__ssprint_r+0x19c>
  812c28:	90000115 	stw	zero,4(r18)
  812c2c:	0005883a 	mov	r2,zero
  812c30:	dfc00917 	ldw	ra,36(sp)
  812c34:	df000817 	ldw	fp,32(sp)
  812c38:	ddc00717 	ldw	r23,28(sp)
  812c3c:	dd800617 	ldw	r22,24(sp)
  812c40:	dd400517 	ldw	r21,20(sp)
  812c44:	dd000417 	ldw	r20,16(sp)
  812c48:	dcc00317 	ldw	r19,12(sp)
  812c4c:	dc800217 	ldw	r18,8(sp)
  812c50:	dc400117 	ldw	r17,4(sp)
  812c54:	dc000017 	ldw	r16,0(sp)
  812c58:	dec00a04 	addi	sp,sp,40
  812c5c:	f800283a 	ret

00812c60 <___svfiprintf_internal_r>:
  812c60:	2880030b 	ldhu	r2,12(r5)
  812c64:	deffc904 	addi	sp,sp,-220
  812c68:	dd403215 	stw	r21,200(sp)
  812c6c:	dfc03615 	stw	ra,216(sp)
  812c70:	df003515 	stw	fp,212(sp)
  812c74:	ddc03415 	stw	r23,208(sp)
  812c78:	dd803315 	stw	r22,204(sp)
  812c7c:	dd003115 	stw	r20,196(sp)
  812c80:	dcc03015 	stw	r19,192(sp)
  812c84:	dc802f15 	stw	r18,188(sp)
  812c88:	dc402e15 	stw	r17,184(sp)
  812c8c:	dc002d15 	stw	r16,180(sp)
  812c90:	d9402715 	stw	r5,156(sp)
  812c94:	d9002915 	stw	r4,164(sp)
  812c98:	1080200c 	andi	r2,r2,128
  812c9c:	d9c02315 	stw	r7,140(sp)
  812ca0:	302b883a 	mov	r21,r6
  812ca4:	10000226 	beq	r2,zero,812cb0 <___svfiprintf_internal_r+0x50>
  812ca8:	28800417 	ldw	r2,16(r5)
  812cac:	1003ce26 	beq	r2,zero,813be8 <___svfiprintf_internal_r+0xf88>
  812cb0:	dac01a04 	addi	r11,sp,104
  812cb4:	da8019c4 	addi	r10,sp,103
  812cb8:	dc802917 	ldw	r18,164(sp)
  812cbc:	dd002717 	ldw	r20,156(sp)
  812cc0:	04c020b4 	movhi	r19,130
  812cc4:	dac01e15 	stw	r11,120(sp)
  812cc8:	5a97c83a 	sub	r11,r11,r10
  812ccc:	9cf05084 	addi	r19,r19,-16062
  812cd0:	da801f15 	stw	r10,124(sp)
  812cd4:	dec01a15 	stw	sp,104(sp)
  812cd8:	d8001c15 	stw	zero,112(sp)
  812cdc:	d8001b15 	stw	zero,108(sp)
  812ce0:	d811883a 	mov	r8,sp
  812ce4:	d8002a15 	stw	zero,168(sp)
  812ce8:	d8002415 	stw	zero,144(sp)
  812cec:	dac02b15 	stw	r11,172(sp)
  812cf0:	a8800007 	ldb	r2,0(r21)
  812cf4:	10026a26 	beq	r2,zero,8136a0 <___svfiprintf_internal_r+0xa40>
  812cf8:	01000944 	movi	r4,37
  812cfc:	11026826 	beq	r2,r4,8136a0 <___svfiprintf_internal_r+0xa40>
  812d00:	a805883a 	mov	r2,r21
  812d04:	00000106 	br	812d0c <___svfiprintf_internal_r+0xac>
  812d08:	19000326 	beq	r3,r4,812d18 <___svfiprintf_internal_r+0xb8>
  812d0c:	10800044 	addi	r2,r2,1
  812d10:	10c00007 	ldb	r3,0(r2)
  812d14:	183ffc1e 	bne	r3,zero,812d08 <__alt_data_end+0xff812d08>
  812d18:	1561c83a 	sub	r16,r2,r21
  812d1c:	102d883a 	mov	r22,r2
  812d20:	80000e26 	beq	r16,zero,812d5c <___svfiprintf_internal_r+0xfc>
  812d24:	d8c01c17 	ldw	r3,112(sp)
  812d28:	d8801b17 	ldw	r2,108(sp)
  812d2c:	45400015 	stw	r21,0(r8)
  812d30:	1c07883a 	add	r3,r3,r16
  812d34:	10800044 	addi	r2,r2,1
  812d38:	d8c01c15 	stw	r3,112(sp)
  812d3c:	44000115 	stw	r16,4(r8)
  812d40:	d8801b15 	stw	r2,108(sp)
  812d44:	00c001c4 	movi	r3,7
  812d48:	1882d816 	blt	r3,r2,8138ac <___svfiprintf_internal_r+0xc4c>
  812d4c:	42000204 	addi	r8,r8,8
  812d50:	da802417 	ldw	r10,144(sp)
  812d54:	5415883a 	add	r10,r10,r16
  812d58:	da802415 	stw	r10,144(sp)
  812d5c:	b0800007 	ldb	r2,0(r22)
  812d60:	10027526 	beq	r2,zero,813738 <___svfiprintf_internal_r+0xad8>
  812d64:	b1000047 	ldb	r4,1(r22)
  812d68:	b5400044 	addi	r21,r22,1
  812d6c:	d8001d85 	stb	zero,118(sp)
  812d70:	000d883a 	mov	r6,zero
  812d74:	043fffc4 	movi	r16,-1
  812d78:	d8002115 	stw	zero,132(sp)
  812d7c:	0023883a 	mov	r17,zero
  812d80:	00c01604 	movi	r3,88
  812d84:	01400244 	movi	r5,9
  812d88:	02400a84 	movi	r9,42
  812d8c:	01c01b04 	movi	r7,108
  812d90:	ad400044 	addi	r21,r21,1
  812d94:	20bff804 	addi	r2,r4,-32
  812d98:	18819736 	bltu	r3,r2,8133f8 <___svfiprintf_internal_r+0x798>
  812d9c:	100490ba 	slli	r2,r2,2
  812da0:	02c02074 	movhi	r11,129
  812da4:	5acb6d04 	addi	r11,r11,11700
  812da8:	12c5883a 	add	r2,r2,r11
  812dac:	10800017 	ldw	r2,0(r2)
  812db0:	1000683a 	jmp	r2
  812db4:	008132f0 	cmpltui	r2,zero,1227
  812db8:	008133f8 	rdprs	r2,zero,1231
  812dbc:	008133f8 	rdprs	r2,zero,1231
  812dc0:	008132e4 	muli	r2,zero,1227
  812dc4:	008133f8 	rdprs	r2,zero,1231
  812dc8:	008133f8 	rdprs	r2,zero,1231
  812dcc:	008133f8 	rdprs	r2,zero,1231
  812dd0:	008133f8 	rdprs	r2,zero,1231
  812dd4:	008133f8 	rdprs	r2,zero,1231
  812dd8:	008133f8 	rdprs	r2,zero,1231
  812ddc:	00813010 	cmplti	r2,zero,1216
  812de0:	0081342c 	andhi	r2,zero,1232
  812de4:	008133f8 	rdprs	r2,zero,1231
  812de8:	00813038 	rdprs	r2,zero,1216
  812dec:	00813438 	rdprs	r2,zero,1232
  812df0:	008133f8 	rdprs	r2,zero,1231
  812df4:	00813420 	cmpeqi	r2,zero,1232
  812df8:	008133c0 	call	8133c <__alt_mem_sdram_0-0x77ecc4>
  812dfc:	008133c0 	call	8133c <__alt_mem_sdram_0-0x77ecc4>
  812e00:	008133c0 	call	8133c <__alt_mem_sdram_0-0x77ecc4>
  812e04:	008133c0 	call	8133c <__alt_mem_sdram_0-0x77ecc4>
  812e08:	008133c0 	call	8133c <__alt_mem_sdram_0-0x77ecc4>
  812e0c:	008133c0 	call	8133c <__alt_mem_sdram_0-0x77ecc4>
  812e10:	008133c0 	call	8133c <__alt_mem_sdram_0-0x77ecc4>
  812e14:	008133c0 	call	8133c <__alt_mem_sdram_0-0x77ecc4>
  812e18:	008133c0 	call	8133c <__alt_mem_sdram_0-0x77ecc4>
  812e1c:	008133f8 	rdprs	r2,zero,1231
  812e20:	008133f8 	rdprs	r2,zero,1231
  812e24:	008133f8 	rdprs	r2,zero,1231
  812e28:	008133f8 	rdprs	r2,zero,1231
  812e2c:	008133f8 	rdprs	r2,zero,1231
  812e30:	008133f8 	rdprs	r2,zero,1231
  812e34:	008133f8 	rdprs	r2,zero,1231
  812e38:	008133f8 	rdprs	r2,zero,1231
  812e3c:	008133f8 	rdprs	r2,zero,1231
  812e40:	008133f8 	rdprs	r2,zero,1231
  812e44:	00813358 	cmpnei	r2,zero,1229
  812e48:	008133f8 	rdprs	r2,zero,1231
  812e4c:	008133f8 	rdprs	r2,zero,1231
  812e50:	008133f8 	rdprs	r2,zero,1231
  812e54:	008133f8 	rdprs	r2,zero,1231
  812e58:	008133f8 	rdprs	r2,zero,1231
  812e5c:	008133f8 	rdprs	r2,zero,1231
  812e60:	008133f8 	rdprs	r2,zero,1231
  812e64:	008133f8 	rdprs	r2,zero,1231
  812e68:	008133f8 	rdprs	r2,zero,1231
  812e6c:	008133f8 	rdprs	r2,zero,1231
  812e70:	00812fe4 	muli	r2,zero,1215
  812e74:	008133f8 	rdprs	r2,zero,1231
  812e78:	008133f8 	rdprs	r2,zero,1231
  812e7c:	008133f8 	rdprs	r2,zero,1231
  812e80:	008133f8 	rdprs	r2,zero,1231
  812e84:	008133f8 	rdprs	r2,zero,1231
  812e88:	00812f18 	cmpnei	r2,zero,1212
  812e8c:	008133f8 	rdprs	r2,zero,1231
  812e90:	008133f8 	rdprs	r2,zero,1231
  812e94:	00813244 	movi	r2,1225
  812e98:	008133f8 	rdprs	r2,zero,1231
  812e9c:	008133f8 	rdprs	r2,zero,1231
  812ea0:	008133f8 	rdprs	r2,zero,1231
  812ea4:	008133f8 	rdprs	r2,zero,1231
  812ea8:	008133f8 	rdprs	r2,zero,1231
  812eac:	008133f8 	rdprs	r2,zero,1231
  812eb0:	008133f8 	rdprs	r2,zero,1231
  812eb4:	008133f8 	rdprs	r2,zero,1231
  812eb8:	008133f8 	rdprs	r2,zero,1231
  812ebc:	008133f8 	rdprs	r2,zero,1231
  812ec0:	00813130 	cmpltui	r2,zero,1220
  812ec4:	008130f0 	cmpltui	r2,zero,1219
  812ec8:	008133f8 	rdprs	r2,zero,1231
  812ecc:	008133f8 	rdprs	r2,zero,1231
  812ed0:	008133f8 	rdprs	r2,zero,1231
  812ed4:	008132a0 	cmpeqi	r2,zero,1226
  812ed8:	008130f0 	cmpltui	r2,zero,1219
  812edc:	008133f8 	rdprs	r2,zero,1231
  812ee0:	008133f8 	rdprs	r2,zero,1231
  812ee4:	0081328c 	andi	r2,zero,1226
  812ee8:	008133f8 	rdprs	r2,zero,1231
  812eec:	008132ac 	andhi	r2,zero,1226
  812ef0:	00812fe8 	cmpgeui	r2,zero,1215
  812ef4:	008130ac 	andhi	r2,zero,1218
  812ef8:	008130a0 	cmpeqi	r2,zero,1218
  812efc:	008133f8 	rdprs	r2,zero,1231
  812f00:	00813044 	movi	r2,1217
  812f04:	008133f8 	rdprs	r2,zero,1231
  812f08:	00812f1c 	xori	r2,zero,1212
  812f0c:	008133f8 	rdprs	r2,zero,1231
  812f10:	008133f8 	rdprs	r2,zero,1231
  812f14:	0081330c 	andi	r2,zero,1228
  812f18:	8c400414 	ori	r17,r17,16
  812f1c:	8880080c 	andi	r2,r17,32
  812f20:	10029626 	beq	r2,zero,81397c <___svfiprintf_internal_r+0xd1c>
  812f24:	da802317 	ldw	r10,140(sp)
  812f28:	dac02317 	ldw	r11,140(sp)
  812f2c:	00800044 	movi	r2,1
  812f30:	52400017 	ldw	r9,0(r10)
  812f34:	52800117 	ldw	r10,4(r10)
  812f38:	5ac00204 	addi	r11,r11,8
  812f3c:	dac02315 	stw	r11,140(sp)
  812f40:	4a86b03a 	or	r3,r9,r10
  812f44:	d8001d85 	stb	zero,118(sp)
  812f48:	8039883a 	mov	fp,r16
  812f4c:	0017883a 	mov	r11,zero
  812f50:	80000216 	blt	r16,zero,812f5c <___svfiprintf_internal_r+0x2fc>
  812f54:	013fdfc4 	movi	r4,-129
  812f58:	8922703a 	and	r17,r17,r4
  812f5c:	1801d21e 	bne	r3,zero,8136a8 <___svfiprintf_internal_r+0xa48>
  812f60:	80024626 	beq	r16,zero,81387c <___svfiprintf_internal_r+0xc1c>
  812f64:	10803fcc 	andi	r2,r2,255
  812f68:	00c00044 	movi	r3,1
  812f6c:	10c2b426 	beq	r2,r3,813a40 <___svfiprintf_internal_r+0xde0>
  812f70:	00c00084 	movi	r3,2
  812f74:	10c25d26 	beq	r2,r3,8138ec <___svfiprintf_internal_r+0xc8c>
  812f78:	d8c01a04 	addi	r3,sp,104
  812f7c:	4808d0fa 	srli	r4,r9,3
  812f80:	500a977a 	slli	r5,r10,29
  812f84:	5014d0fa 	srli	r10,r10,3
  812f88:	4a4001cc 	andi	r9,r9,7
  812f8c:	48800c04 	addi	r2,r9,48
  812f90:	18ffffc4 	addi	r3,r3,-1
  812f94:	2912b03a 	or	r9,r5,r4
  812f98:	18800005 	stb	r2,0(r3)
  812f9c:	4a88b03a 	or	r4,r9,r10
  812fa0:	203ff61e 	bne	r4,zero,812f7c <__alt_data_end+0xff812f7c>
  812fa4:	8900004c 	andi	r4,r17,1
  812fa8:	d8c02615 	stw	r3,152(sp)
  812fac:	2002961e 	bne	r4,zero,813a08 <___svfiprintf_internal_r+0xda8>
  812fb0:	da801e17 	ldw	r10,120(sp)
  812fb4:	50f9c83a 	sub	fp,r10,r3
  812fb8:	df002015 	stw	fp,128(sp)
  812fbc:	e400010e 	bge	fp,r16,812fc4 <___svfiprintf_internal_r+0x364>
  812fc0:	dc002015 	stw	r16,128(sp)
  812fc4:	5ac03fcc 	andi	r11,r11,255
  812fc8:	5ac0201c 	xori	r11,r11,128
  812fcc:	5affe004 	addi	r11,r11,-128
  812fd0:	58006326 	beq	r11,zero,813160 <___svfiprintf_internal_r+0x500>
  812fd4:	d8c02017 	ldw	r3,128(sp)
  812fd8:	18c00044 	addi	r3,r3,1
  812fdc:	d8c02015 	stw	r3,128(sp)
  812fe0:	00005f06 	br	813160 <___svfiprintf_internal_r+0x500>
  812fe4:	8c400414 	ori	r17,r17,16
  812fe8:	8880080c 	andi	r2,r17,32
  812fec:	10027926 	beq	r2,zero,8139d4 <___svfiprintf_internal_r+0xd74>
  812ff0:	dac02317 	ldw	r11,140(sp)
  812ff4:	0005883a 	mov	r2,zero
  812ff8:	5a400017 	ldw	r9,0(r11)
  812ffc:	5a800117 	ldw	r10,4(r11)
  813000:	5ac00204 	addi	r11,r11,8
  813004:	dac02315 	stw	r11,140(sp)
  813008:	4a86b03a 	or	r3,r9,r10
  81300c:	003fcd06 	br	812f44 <__alt_data_end+0xff812f44>
  813010:	da802317 	ldw	r10,140(sp)
  813014:	dac02317 	ldw	r11,140(sp)
  813018:	52800017 	ldw	r10,0(r10)
  81301c:	58800104 	addi	r2,r11,4
  813020:	da802115 	stw	r10,132(sp)
  813024:	50028c0e 	bge	r10,zero,813a58 <___svfiprintf_internal_r+0xdf8>
  813028:	da802117 	ldw	r10,132(sp)
  81302c:	d8802315 	stw	r2,140(sp)
  813030:	0295c83a 	sub	r10,zero,r10
  813034:	da802115 	stw	r10,132(sp)
  813038:	8c400114 	ori	r17,r17,4
  81303c:	a9000007 	ldb	r4,0(r21)
  813040:	003f5306 	br	812d90 <__alt_data_end+0xff812d90>
  813044:	da802317 	ldw	r10,140(sp)
  813048:	dac02317 	ldw	r11,140(sp)
  81304c:	d8001d85 	stb	zero,118(sp)
  813050:	52800017 	ldw	r10,0(r10)
  813054:	5dc00104 	addi	r23,r11,4
  813058:	da802615 	stw	r10,152(sp)
  81305c:	5002d626 	beq	r10,zero,813bb8 <___svfiprintf_internal_r+0xf58>
  813060:	d9002617 	ldw	r4,152(sp)
  813064:	8002cc16 	blt	r16,zero,813b98 <___svfiprintf_internal_r+0xf38>
  813068:	000b883a 	mov	r5,zero
  81306c:	800d883a 	mov	r6,r16
  813070:	da002c15 	stw	r8,176(sp)
  813074:	08091300 	call	809130 <memchr>
  813078:	da002c17 	ldw	r8,176(sp)
  81307c:	1002f026 	beq	r2,zero,813c40 <___svfiprintf_internal_r+0xfe0>
  813080:	d8c02617 	ldw	r3,152(sp)
  813084:	10f9c83a 	sub	fp,r2,r3
  813088:	8700010e 	bge	r16,fp,813090 <___svfiprintf_internal_r+0x430>
  81308c:	8039883a 	mov	fp,r16
  813090:	dac01d83 	ldbu	r11,118(sp)
  813094:	ddc02315 	stw	r23,140(sp)
  813098:	0021883a 	mov	r16,zero
  81309c:	003fc606 	br	812fb8 <__alt_data_end+0xff812fb8>
  8130a0:	8c400814 	ori	r17,r17,32
  8130a4:	a9000007 	ldb	r4,0(r21)
  8130a8:	003f3906 	br	812d90 <__alt_data_end+0xff812d90>
  8130ac:	da802317 	ldw	r10,140(sp)
  8130b0:	00800c04 	movi	r2,48
  8130b4:	dac02317 	ldw	r11,140(sp)
  8130b8:	52400017 	ldw	r9,0(r10)
  8130bc:	d8801d05 	stb	r2,116(sp)
  8130c0:	00801e04 	movi	r2,120
  8130c4:	d8801d45 	stb	r2,117(sp)
  8130c8:	008020b4 	movhi	r2,130
  8130cc:	10aee004 	addi	r2,r2,-17536
  8130d0:	5ac00104 	addi	r11,r11,4
  8130d4:	d8802a15 	stw	r2,168(sp)
  8130d8:	0015883a 	mov	r10,zero
  8130dc:	8c400094 	ori	r17,r17,2
  8130e0:	dac02315 	stw	r11,140(sp)
  8130e4:	00800084 	movi	r2,2
  8130e8:	4807883a 	mov	r3,r9
  8130ec:	003f9506 	br	812f44 <__alt_data_end+0xff812f44>
  8130f0:	d9801d85 	stb	r6,118(sp)
  8130f4:	8880080c 	andi	r2,r17,32
  8130f8:	d8c02317 	ldw	r3,140(sp)
  8130fc:	10009b26 	beq	r2,zero,81336c <___svfiprintf_internal_r+0x70c>
  813100:	dac02317 	ldw	r11,140(sp)
  813104:	18800117 	ldw	r2,4(r3)
  813108:	1a400017 	ldw	r9,0(r3)
  81310c:	5ac00204 	addi	r11,r11,8
  813110:	dac02315 	stw	r11,140(sp)
  813114:	1015883a 	mov	r10,r2
  813118:	10009f16 	blt	r2,zero,813398 <___svfiprintf_internal_r+0x738>
  81311c:	dac01d83 	ldbu	r11,118(sp)
  813120:	8039883a 	mov	fp,r16
  813124:	00800044 	movi	r2,1
  813128:	4a86b03a 	or	r3,r9,r10
  81312c:	003f8806 	br	812f50 <__alt_data_end+0xff812f50>
  813130:	dac02317 	ldw	r11,140(sp)
  813134:	00c00044 	movi	r3,1
  813138:	da801004 	addi	r10,sp,64
  81313c:	58800017 	ldw	r2,0(r11)
  813140:	5ac00104 	addi	r11,r11,4
  813144:	d8c02015 	stw	r3,128(sp)
  813148:	d8001d85 	stb	zero,118(sp)
  81314c:	d8801005 	stb	r2,64(sp)
  813150:	dac02315 	stw	r11,140(sp)
  813154:	1839883a 	mov	fp,r3
  813158:	da802615 	stw	r10,152(sp)
  81315c:	0021883a 	mov	r16,zero
  813160:	8a80008c 	andi	r10,r17,2
  813164:	da802215 	stw	r10,136(sp)
  813168:	50000326 	beq	r10,zero,813178 <___svfiprintf_internal_r+0x518>
  81316c:	dac02017 	ldw	r11,128(sp)
  813170:	5ac00084 	addi	r11,r11,2
  813174:	dac02015 	stw	r11,128(sp)
  813178:	88c0210c 	andi	r3,r17,132
  81317c:	d8c02515 	stw	r3,148(sp)
  813180:	1800bd1e 	bne	r3,zero,813478 <___svfiprintf_internal_r+0x818>
  813184:	da802117 	ldw	r10,132(sp)
  813188:	dac02017 	ldw	r11,128(sp)
  81318c:	52edc83a 	sub	r22,r10,r11
  813190:	0580b90e 	bge	zero,r22,813478 <___svfiprintf_internal_r+0x818>
  813194:	02400404 	movi	r9,16
  813198:	d8c01c17 	ldw	r3,112(sp)
  81319c:	d8801b17 	ldw	r2,108(sp)
  8131a0:	4d829b0e 	bge	r9,r22,813c10 <___svfiprintf_internal_r+0xfb0>
  8131a4:	014020b4 	movhi	r5,130
  8131a8:	29705484 	addi	r5,r5,-16046
  8131ac:	d9402815 	stw	r5,160(sp)
  8131b0:	05c001c4 	movi	r23,7
  8131b4:	00000306 	br	8131c4 <___svfiprintf_internal_r+0x564>
  8131b8:	b5bffc04 	addi	r22,r22,-16
  8131bc:	42000204 	addi	r8,r8,8
  8131c0:	4d80150e 	bge	r9,r22,813218 <___svfiprintf_internal_r+0x5b8>
  8131c4:	028020b4 	movhi	r10,130
  8131c8:	18c00404 	addi	r3,r3,16
  8131cc:	10800044 	addi	r2,r2,1
  8131d0:	52b05484 	addi	r10,r10,-16046
  8131d4:	42800015 	stw	r10,0(r8)
  8131d8:	42400115 	stw	r9,4(r8)
  8131dc:	d8c01c15 	stw	r3,112(sp)
  8131e0:	d8801b15 	stw	r2,108(sp)
  8131e4:	b8bff40e 	bge	r23,r2,8131b8 <__alt_data_end+0xff8131b8>
  8131e8:	9009883a 	mov	r4,r18
  8131ec:	a00b883a 	mov	r5,r20
  8131f0:	d9801a04 	addi	r6,sp,104
  8131f4:	da402c15 	stw	r9,176(sp)
  8131f8:	0812a940 	call	812a94 <__ssprint_r>
  8131fc:	da402c17 	ldw	r9,176(sp)
  813200:	1001531e 	bne	r2,zero,813750 <___svfiprintf_internal_r+0xaf0>
  813204:	b5bffc04 	addi	r22,r22,-16
  813208:	d8c01c17 	ldw	r3,112(sp)
  81320c:	d8801b17 	ldw	r2,108(sp)
  813210:	d811883a 	mov	r8,sp
  813214:	4dbfeb16 	blt	r9,r22,8131c4 <__alt_data_end+0xff8131c4>
  813218:	dac02817 	ldw	r11,160(sp)
  81321c:	b0c7883a 	add	r3,r22,r3
  813220:	10800044 	addi	r2,r2,1
  813224:	42c00015 	stw	r11,0(r8)
  813228:	45800115 	stw	r22,4(r8)
  81322c:	d8c01c15 	stw	r3,112(sp)
  813230:	d8801b15 	stw	r2,108(sp)
  813234:	010001c4 	movi	r4,7
  813238:	2081dd16 	blt	r4,r2,8139b0 <___svfiprintf_internal_r+0xd50>
  81323c:	42000204 	addi	r8,r8,8
  813240:	00008f06 	br	813480 <___svfiprintf_internal_r+0x820>
  813244:	008020b4 	movhi	r2,130
  813248:	10aedb04 	addi	r2,r2,-17556
  81324c:	d8802a15 	stw	r2,168(sp)
  813250:	d9801d85 	stb	r6,118(sp)
  813254:	8880080c 	andi	r2,r17,32
  813258:	10003226 	beq	r2,zero,813324 <___svfiprintf_internal_r+0x6c4>
  81325c:	da802317 	ldw	r10,140(sp)
  813260:	dac02317 	ldw	r11,140(sp)
  813264:	52400017 	ldw	r9,0(r10)
  813268:	52800117 	ldw	r10,4(r10)
  81326c:	5ac00204 	addi	r11,r11,8
  813270:	dac02315 	stw	r11,140(sp)
  813274:	8880004c 	andi	r2,r17,1
  813278:	10003426 	beq	r2,zero,81334c <___svfiprintf_internal_r+0x6ec>
  81327c:	4a86b03a 	or	r3,r9,r10
  813280:	1802231e 	bne	r3,zero,813b10 <___svfiprintf_internal_r+0xeb0>
  813284:	00800084 	movi	r2,2
  813288:	003f2e06 	br	812f44 <__alt_data_end+0xff812f44>
  81328c:	a9000007 	ldb	r4,0(r21)
  813290:	a805883a 	mov	r2,r21
  813294:	21c22426 	beq	r4,r7,813b28 <___svfiprintf_internal_r+0xec8>
  813298:	8c400414 	ori	r17,r17,16
  81329c:	003ebc06 	br	812d90 <__alt_data_end+0xff812d90>
  8132a0:	8c401014 	ori	r17,r17,64
  8132a4:	a9000007 	ldb	r4,0(r21)
  8132a8:	003eb906 	br	812d90 <__alt_data_end+0xff812d90>
  8132ac:	d9801d85 	stb	r6,118(sp)
  8132b0:	8880080c 	andi	r2,r17,32
  8132b4:	10020d1e 	bne	r2,zero,813aec <___svfiprintf_internal_r+0xe8c>
  8132b8:	8880040c 	andi	r2,r17,16
  8132bc:	10021e1e 	bne	r2,zero,813b38 <___svfiprintf_internal_r+0xed8>
  8132c0:	8c40100c 	andi	r17,r17,64
  8132c4:	88021c26 	beq	r17,zero,813b38 <___svfiprintf_internal_r+0xed8>
  8132c8:	dac02317 	ldw	r11,140(sp)
  8132cc:	da802417 	ldw	r10,144(sp)
  8132d0:	58800017 	ldw	r2,0(r11)
  8132d4:	5ac00104 	addi	r11,r11,4
  8132d8:	dac02315 	stw	r11,140(sp)
  8132dc:	1280000d 	sth	r10,0(r2)
  8132e0:	003e8306 	br	812cf0 <__alt_data_end+0xff812cf0>
  8132e4:	8c400054 	ori	r17,r17,1
  8132e8:	a9000007 	ldb	r4,0(r21)
  8132ec:	003ea806 	br	812d90 <__alt_data_end+0xff812d90>
  8132f0:	30803fcc 	andi	r2,r6,255
  8132f4:	1080201c 	xori	r2,r2,128
  8132f8:	10bfe004 	addi	r2,r2,-128
  8132fc:	1001f91e 	bne	r2,zero,813ae4 <___svfiprintf_internal_r+0xe84>
  813300:	01800804 	movi	r6,32
  813304:	a9000007 	ldb	r4,0(r21)
  813308:	003ea106 	br	812d90 <__alt_data_end+0xff812d90>
  81330c:	008020b4 	movhi	r2,130
  813310:	10aee004 	addi	r2,r2,-17536
  813314:	d8802a15 	stw	r2,168(sp)
  813318:	d9801d85 	stb	r6,118(sp)
  81331c:	8880080c 	andi	r2,r17,32
  813320:	103fce1e 	bne	r2,zero,81325c <__alt_data_end+0xff81325c>
  813324:	8880040c 	andi	r2,r17,16
  813328:	1001e526 	beq	r2,zero,813ac0 <___svfiprintf_internal_r+0xe60>
  81332c:	da802317 	ldw	r10,140(sp)
  813330:	dac02317 	ldw	r11,140(sp)
  813334:	52400017 	ldw	r9,0(r10)
  813338:	8880004c 	andi	r2,r17,1
  81333c:	5ac00104 	addi	r11,r11,4
  813340:	dac02315 	stw	r11,140(sp)
  813344:	0015883a 	mov	r10,zero
  813348:	103fcc1e 	bne	r2,zero,81327c <__alt_data_end+0xff81327c>
  81334c:	00800084 	movi	r2,2
  813350:	4a86b03a 	or	r3,r9,r10
  813354:	003efb06 	br	812f44 <__alt_data_end+0xff812f44>
  813358:	8c400414 	ori	r17,r17,16
  81335c:	d9801d85 	stb	r6,118(sp)
  813360:	8880080c 	andi	r2,r17,32
  813364:	d8c02317 	ldw	r3,140(sp)
  813368:	103f651e 	bne	r2,zero,813100 <__alt_data_end+0xff813100>
  81336c:	8880040c 	andi	r2,r17,16
  813370:	1001c61e 	bne	r2,zero,813a8c <___svfiprintf_internal_r+0xe2c>
  813374:	8880100c 	andi	r2,r17,64
  813378:	1001c426 	beq	r2,zero,813a8c <___svfiprintf_internal_r+0xe2c>
  81337c:	1a40000f 	ldh	r9,0(r3)
  813380:	dac02317 	ldw	r11,140(sp)
  813384:	4815d7fa 	srai	r10,r9,31
  813388:	5ac00104 	addi	r11,r11,4
  81338c:	dac02315 	stw	r11,140(sp)
  813390:	5005883a 	mov	r2,r10
  813394:	103f610e 	bge	r2,zero,81311c <__alt_data_end+0xff81311c>
  813398:	0253c83a 	sub	r9,zero,r9
  81339c:	4804c03a 	cmpne	r2,r9,zero
  8133a0:	0295c83a 	sub	r10,zero,r10
  8133a4:	5095c83a 	sub	r10,r10,r2
  8133a8:	02c00b44 	movi	r11,45
  8133ac:	dac01d85 	stb	r11,118(sp)
  8133b0:	8039883a 	mov	fp,r16
  8133b4:	00800044 	movi	r2,1
  8133b8:	4a86b03a 	or	r3,r9,r10
  8133bc:	003ee406 	br	812f50 <__alt_data_end+0xff812f50>
  8133c0:	a815883a 	mov	r10,r21
  8133c4:	d8002115 	stw	zero,132(sp)
  8133c8:	20bff404 	addi	r2,r4,-48
  8133cc:	51000007 	ldb	r4,0(r10)
  8133d0:	da802117 	ldw	r10,132(sp)
  8133d4:	ad400044 	addi	r21,r21,1
  8133d8:	52c002a4 	muli	r11,r10,10
  8133dc:	a815883a 	mov	r10,r21
  8133e0:	5885883a 	add	r2,r11,r2
  8133e4:	d8802115 	stw	r2,132(sp)
  8133e8:	20bff404 	addi	r2,r4,-48
  8133ec:	28bff72e 	bgeu	r5,r2,8133cc <__alt_data_end+0xff8133cc>
  8133f0:	20bff804 	addi	r2,r4,-32
  8133f4:	18be692e 	bgeu	r3,r2,812d9c <__alt_data_end+0xff812d9c>
  8133f8:	d9801d85 	stb	r6,118(sp)
  8133fc:	2000ce26 	beq	r4,zero,813738 <___svfiprintf_internal_r+0xad8>
  813400:	02800044 	movi	r10,1
  813404:	dac01004 	addi	r11,sp,64
  813408:	da802015 	stw	r10,128(sp)
  81340c:	d9001005 	stb	r4,64(sp)
  813410:	d8001d85 	stb	zero,118(sp)
  813414:	5039883a 	mov	fp,r10
  813418:	dac02615 	stw	r11,152(sp)
  81341c:	003f4f06 	br	81315c <__alt_data_end+0xff81315c>
  813420:	8c402014 	ori	r17,r17,128
  813424:	a9000007 	ldb	r4,0(r21)
  813428:	003e5906 	br	812d90 <__alt_data_end+0xff812d90>
  81342c:	01800ac4 	movi	r6,43
  813430:	a9000007 	ldb	r4,0(r21)
  813434:	003e5606 	br	812d90 <__alt_data_end+0xff812d90>
  813438:	a9000007 	ldb	r4,0(r21)
  81343c:	aa800044 	addi	r10,r21,1
  813440:	22420626 	beq	r4,r9,813c5c <___svfiprintf_internal_r+0xffc>
  813444:	20bff404 	addi	r2,r4,-48
  813448:	502b883a 	mov	r21,r10
  81344c:	0021883a 	mov	r16,zero
  813450:	28be5036 	bltu	r5,r2,812d94 <__alt_data_end+0xff812d94>
  813454:	a9000007 	ldb	r4,0(r21)
  813458:	840002a4 	muli	r16,r16,10
  81345c:	ad400044 	addi	r21,r21,1
  813460:	1421883a 	add	r16,r2,r16
  813464:	20bff404 	addi	r2,r4,-48
  813468:	28bffa2e 	bgeu	r5,r2,813454 <__alt_data_end+0xff813454>
  81346c:	803e490e 	bge	r16,zero,812d94 <__alt_data_end+0xff812d94>
  813470:	043fffc4 	movi	r16,-1
  813474:	003e4706 	br	812d94 <__alt_data_end+0xff812d94>
  813478:	d8c01c17 	ldw	r3,112(sp)
  81347c:	d8801b17 	ldw	r2,108(sp)
  813480:	d9001d87 	ldb	r4,118(sp)
  813484:	20000b26 	beq	r4,zero,8134b4 <___svfiprintf_internal_r+0x854>
  813488:	d9001d84 	addi	r4,sp,118
  81348c:	18c00044 	addi	r3,r3,1
  813490:	10800044 	addi	r2,r2,1
  813494:	41000015 	stw	r4,0(r8)
  813498:	01000044 	movi	r4,1
  81349c:	41000115 	stw	r4,4(r8)
  8134a0:	d8c01c15 	stw	r3,112(sp)
  8134a4:	d8801b15 	stw	r2,108(sp)
  8134a8:	010001c4 	movi	r4,7
  8134ac:	20811e16 	blt	r4,r2,813928 <___svfiprintf_internal_r+0xcc8>
  8134b0:	42000204 	addi	r8,r8,8
  8134b4:	da802217 	ldw	r10,136(sp)
  8134b8:	50000b26 	beq	r10,zero,8134e8 <___svfiprintf_internal_r+0x888>
  8134bc:	d9001d04 	addi	r4,sp,116
  8134c0:	18c00084 	addi	r3,r3,2
  8134c4:	10800044 	addi	r2,r2,1
  8134c8:	41000015 	stw	r4,0(r8)
  8134cc:	01000084 	movi	r4,2
  8134d0:	41000115 	stw	r4,4(r8)
  8134d4:	d8c01c15 	stw	r3,112(sp)
  8134d8:	d8801b15 	stw	r2,108(sp)
  8134dc:	010001c4 	movi	r4,7
  8134e0:	20811a16 	blt	r4,r2,81394c <___svfiprintf_internal_r+0xcec>
  8134e4:	42000204 	addi	r8,r8,8
  8134e8:	dac02517 	ldw	r11,148(sp)
  8134ec:	01002004 	movi	r4,128
  8134f0:	5900a826 	beq	r11,r4,813794 <___svfiprintf_internal_r+0xb34>
  8134f4:	8721c83a 	sub	r16,r16,fp
  8134f8:	0400260e 	bge	zero,r16,813594 <___svfiprintf_internal_r+0x934>
  8134fc:	01c00404 	movi	r7,16
  813500:	3c019d0e 	bge	r7,r16,813b78 <___svfiprintf_internal_r+0xf18>
  813504:	010020b4 	movhi	r4,130
  813508:	21305084 	addi	r4,r4,-16062
  81350c:	d9002215 	stw	r4,136(sp)
  813510:	382f883a 	mov	r23,r7
  813514:	058001c4 	movi	r22,7
  813518:	00000306 	br	813528 <___svfiprintf_internal_r+0x8c8>
  81351c:	843ffc04 	addi	r16,r16,-16
  813520:	42000204 	addi	r8,r8,8
  813524:	bc00110e 	bge	r23,r16,81356c <___svfiprintf_internal_r+0x90c>
  813528:	18c00404 	addi	r3,r3,16
  81352c:	10800044 	addi	r2,r2,1
  813530:	44c00015 	stw	r19,0(r8)
  813534:	45c00115 	stw	r23,4(r8)
  813538:	d8c01c15 	stw	r3,112(sp)
  81353c:	d8801b15 	stw	r2,108(sp)
  813540:	b0bff60e 	bge	r22,r2,81351c <__alt_data_end+0xff81351c>
  813544:	9009883a 	mov	r4,r18
  813548:	a00b883a 	mov	r5,r20
  81354c:	d9801a04 	addi	r6,sp,104
  813550:	0812a940 	call	812a94 <__ssprint_r>
  813554:	10007e1e 	bne	r2,zero,813750 <___svfiprintf_internal_r+0xaf0>
  813558:	843ffc04 	addi	r16,r16,-16
  81355c:	d8c01c17 	ldw	r3,112(sp)
  813560:	d8801b17 	ldw	r2,108(sp)
  813564:	d811883a 	mov	r8,sp
  813568:	bc3fef16 	blt	r23,r16,813528 <__alt_data_end+0xff813528>
  81356c:	da802217 	ldw	r10,136(sp)
  813570:	1c07883a 	add	r3,r3,r16
  813574:	10800044 	addi	r2,r2,1
  813578:	42800015 	stw	r10,0(r8)
  81357c:	44000115 	stw	r16,4(r8)
  813580:	d8c01c15 	stw	r3,112(sp)
  813584:	d8801b15 	stw	r2,108(sp)
  813588:	010001c4 	movi	r4,7
  81358c:	2080ce16 	blt	r4,r2,8138c8 <___svfiprintf_internal_r+0xc68>
  813590:	42000204 	addi	r8,r8,8
  813594:	dac02617 	ldw	r11,152(sp)
  813598:	1f07883a 	add	r3,r3,fp
  81359c:	10800044 	addi	r2,r2,1
  8135a0:	42c00015 	stw	r11,0(r8)
  8135a4:	47000115 	stw	fp,4(r8)
  8135a8:	d8c01c15 	stw	r3,112(sp)
  8135ac:	d8801b15 	stw	r2,108(sp)
  8135b0:	010001c4 	movi	r4,7
  8135b4:	2080a316 	blt	r4,r2,813844 <___svfiprintf_internal_r+0xbe4>
  8135b8:	42000204 	addi	r8,r8,8
  8135bc:	8c40010c 	andi	r17,r17,4
  8135c0:	88002b26 	beq	r17,zero,813670 <___svfiprintf_internal_r+0xa10>
  8135c4:	da802117 	ldw	r10,132(sp)
  8135c8:	dac02017 	ldw	r11,128(sp)
  8135cc:	52e1c83a 	sub	r16,r10,r11
  8135d0:	0400270e 	bge	zero,r16,813670 <___svfiprintf_internal_r+0xa10>
  8135d4:	04400404 	movi	r17,16
  8135d8:	d8801b17 	ldw	r2,108(sp)
  8135dc:	8c01900e 	bge	r17,r16,813c20 <___svfiprintf_internal_r+0xfc0>
  8135e0:	014020b4 	movhi	r5,130
  8135e4:	29705484 	addi	r5,r5,-16046
  8135e8:	d9402815 	stw	r5,160(sp)
  8135ec:	070001c4 	movi	fp,7
  8135f0:	00000306 	br	813600 <___svfiprintf_internal_r+0x9a0>
  8135f4:	843ffc04 	addi	r16,r16,-16
  8135f8:	42000204 	addi	r8,r8,8
  8135fc:	8c00130e 	bge	r17,r16,81364c <___svfiprintf_internal_r+0x9ec>
  813600:	028020b4 	movhi	r10,130
  813604:	18c00404 	addi	r3,r3,16
  813608:	10800044 	addi	r2,r2,1
  81360c:	52b05484 	addi	r10,r10,-16046
  813610:	42800015 	stw	r10,0(r8)
  813614:	44400115 	stw	r17,4(r8)
  813618:	d8c01c15 	stw	r3,112(sp)
  81361c:	d8801b15 	stw	r2,108(sp)
  813620:	e0bff40e 	bge	fp,r2,8135f4 <__alt_data_end+0xff8135f4>
  813624:	9009883a 	mov	r4,r18
  813628:	a00b883a 	mov	r5,r20
  81362c:	d9801a04 	addi	r6,sp,104
  813630:	0812a940 	call	812a94 <__ssprint_r>
  813634:	1000461e 	bne	r2,zero,813750 <___svfiprintf_internal_r+0xaf0>
  813638:	843ffc04 	addi	r16,r16,-16
  81363c:	d8c01c17 	ldw	r3,112(sp)
  813640:	d8801b17 	ldw	r2,108(sp)
  813644:	d811883a 	mov	r8,sp
  813648:	8c3fed16 	blt	r17,r16,813600 <__alt_data_end+0xff813600>
  81364c:	dac02817 	ldw	r11,160(sp)
  813650:	1c07883a 	add	r3,r3,r16
  813654:	10800044 	addi	r2,r2,1
  813658:	42c00015 	stw	r11,0(r8)
  81365c:	44000115 	stw	r16,4(r8)
  813660:	d8c01c15 	stw	r3,112(sp)
  813664:	d8801b15 	stw	r2,108(sp)
  813668:	010001c4 	movi	r4,7
  81366c:	2080fd16 	blt	r4,r2,813a64 <___svfiprintf_internal_r+0xe04>
  813670:	dd802017 	ldw	r22,128(sp)
  813674:	da802117 	ldw	r10,132(sp)
  813678:	b280010e 	bge	r22,r10,813680 <___svfiprintf_internal_r+0xa20>
  81367c:	502d883a 	mov	r22,r10
  813680:	dac02417 	ldw	r11,144(sp)
  813684:	5d97883a 	add	r11,r11,r22
  813688:	dac02415 	stw	r11,144(sp)
  81368c:	1800751e 	bne	r3,zero,813864 <___svfiprintf_internal_r+0xc04>
  813690:	a8800007 	ldb	r2,0(r21)
  813694:	d8001b15 	stw	zero,108(sp)
  813698:	d811883a 	mov	r8,sp
  81369c:	103d961e 	bne	r2,zero,812cf8 <__alt_data_end+0xff812cf8>
  8136a0:	a82d883a 	mov	r22,r21
  8136a4:	003dad06 	br	812d5c <__alt_data_end+0xff812d5c>
  8136a8:	10803fcc 	andi	r2,r2,255
  8136ac:	00c00044 	movi	r3,1
  8136b0:	10fe2f1e 	bne	r2,r3,812f70 <__alt_data_end+0xff812f70>
  8136b4:	5000e026 	beq	r10,zero,813a38 <___svfiprintf_internal_r+0xdd8>
  8136b8:	dc002015 	stw	r16,128(sp)
  8136bc:	dc402215 	stw	r17,136(sp)
  8136c0:	dd801a04 	addi	r22,sp,104
  8136c4:	402f883a 	mov	r23,r8
  8136c8:	5839883a 	mov	fp,r11
  8136cc:	4821883a 	mov	r16,r9
  8136d0:	5023883a 	mov	r17,r10
  8136d4:	8009883a 	mov	r4,r16
  8136d8:	880b883a 	mov	r5,r17
  8136dc:	01800284 	movi	r6,10
  8136e0:	000f883a 	mov	r7,zero
  8136e4:	08145140 	call	814514 <__umoddi3>
  8136e8:	10800c04 	addi	r2,r2,48
  8136ec:	b5bfffc4 	addi	r22,r22,-1
  8136f0:	8009883a 	mov	r4,r16
  8136f4:	880b883a 	mov	r5,r17
  8136f8:	01800284 	movi	r6,10
  8136fc:	000f883a 	mov	r7,zero
  813700:	b0800005 	stb	r2,0(r22)
  813704:	0813f540 	call	813f54 <__udivdi3>
  813708:	1021883a 	mov	r16,r2
  81370c:	10c4b03a 	or	r2,r2,r3
  813710:	1823883a 	mov	r17,r3
  813714:	103fef1e 	bne	r2,zero,8136d4 <__alt_data_end+0xff8136d4>
  813718:	da801e17 	ldw	r10,120(sp)
  81371c:	e017883a 	mov	r11,fp
  813720:	dc002017 	ldw	r16,128(sp)
  813724:	dc402217 	ldw	r17,136(sp)
  813728:	b811883a 	mov	r8,r23
  81372c:	dd802615 	stw	r22,152(sp)
  813730:	55b9c83a 	sub	fp,r10,r22
  813734:	003e2006 	br	812fb8 <__alt_data_end+0xff812fb8>
  813738:	d8801c17 	ldw	r2,112(sp)
  81373c:	10000426 	beq	r2,zero,813750 <___svfiprintf_internal_r+0xaf0>
  813740:	d9002917 	ldw	r4,164(sp)
  813744:	d9402717 	ldw	r5,156(sp)
  813748:	d9801a04 	addi	r6,sp,104
  81374c:	0812a940 	call	812a94 <__ssprint_r>
  813750:	da802717 	ldw	r10,156(sp)
  813754:	5080030b 	ldhu	r2,12(r10)
  813758:	1080100c 	andi	r2,r2,64
  81375c:	1000511e 	bne	r2,zero,8138a4 <___svfiprintf_internal_r+0xc44>
  813760:	d8802417 	ldw	r2,144(sp)
  813764:	dfc03617 	ldw	ra,216(sp)
  813768:	df003517 	ldw	fp,212(sp)
  81376c:	ddc03417 	ldw	r23,208(sp)
  813770:	dd803317 	ldw	r22,204(sp)
  813774:	dd403217 	ldw	r21,200(sp)
  813778:	dd003117 	ldw	r20,196(sp)
  81377c:	dcc03017 	ldw	r19,192(sp)
  813780:	dc802f17 	ldw	r18,188(sp)
  813784:	dc402e17 	ldw	r17,184(sp)
  813788:	dc002d17 	ldw	r16,180(sp)
  81378c:	dec03704 	addi	sp,sp,220
  813790:	f800283a 	ret
  813794:	da802117 	ldw	r10,132(sp)
  813798:	dac02017 	ldw	r11,128(sp)
  81379c:	52edc83a 	sub	r22,r10,r11
  8137a0:	05bf540e 	bge	zero,r22,8134f4 <__alt_data_end+0xff8134f4>
  8137a4:	02400404 	movi	r9,16
  8137a8:	4d81210e 	bge	r9,r22,813c30 <___svfiprintf_internal_r+0xfd0>
  8137ac:	014020b4 	movhi	r5,130
  8137b0:	29705084 	addi	r5,r5,-16062
  8137b4:	d9402215 	stw	r5,136(sp)
  8137b8:	05c001c4 	movi	r23,7
  8137bc:	00000306 	br	8137cc <___svfiprintf_internal_r+0xb6c>
  8137c0:	b5bffc04 	addi	r22,r22,-16
  8137c4:	42000204 	addi	r8,r8,8
  8137c8:	4d80130e 	bge	r9,r22,813818 <___svfiprintf_internal_r+0xbb8>
  8137cc:	18c00404 	addi	r3,r3,16
  8137d0:	10800044 	addi	r2,r2,1
  8137d4:	44c00015 	stw	r19,0(r8)
  8137d8:	42400115 	stw	r9,4(r8)
  8137dc:	d8c01c15 	stw	r3,112(sp)
  8137e0:	d8801b15 	stw	r2,108(sp)
  8137e4:	b8bff60e 	bge	r23,r2,8137c0 <__alt_data_end+0xff8137c0>
  8137e8:	9009883a 	mov	r4,r18
  8137ec:	a00b883a 	mov	r5,r20
  8137f0:	d9801a04 	addi	r6,sp,104
  8137f4:	da402c15 	stw	r9,176(sp)
  8137f8:	0812a940 	call	812a94 <__ssprint_r>
  8137fc:	da402c17 	ldw	r9,176(sp)
  813800:	103fd31e 	bne	r2,zero,813750 <__alt_data_end+0xff813750>
  813804:	b5bffc04 	addi	r22,r22,-16
  813808:	d8c01c17 	ldw	r3,112(sp)
  81380c:	d8801b17 	ldw	r2,108(sp)
  813810:	d811883a 	mov	r8,sp
  813814:	4dbfed16 	blt	r9,r22,8137cc <__alt_data_end+0xff8137cc>
  813818:	da802217 	ldw	r10,136(sp)
  81381c:	1d87883a 	add	r3,r3,r22
  813820:	10800044 	addi	r2,r2,1
  813824:	42800015 	stw	r10,0(r8)
  813828:	45800115 	stw	r22,4(r8)
  81382c:	d8c01c15 	stw	r3,112(sp)
  813830:	d8801b15 	stw	r2,108(sp)
  813834:	010001c4 	movi	r4,7
  813838:	2080c616 	blt	r4,r2,813b54 <___svfiprintf_internal_r+0xef4>
  81383c:	42000204 	addi	r8,r8,8
  813840:	003f2c06 	br	8134f4 <__alt_data_end+0xff8134f4>
  813844:	9009883a 	mov	r4,r18
  813848:	a00b883a 	mov	r5,r20
  81384c:	d9801a04 	addi	r6,sp,104
  813850:	0812a940 	call	812a94 <__ssprint_r>
  813854:	103fbe1e 	bne	r2,zero,813750 <__alt_data_end+0xff813750>
  813858:	d8c01c17 	ldw	r3,112(sp)
  81385c:	d811883a 	mov	r8,sp
  813860:	003f5606 	br	8135bc <__alt_data_end+0xff8135bc>
  813864:	9009883a 	mov	r4,r18
  813868:	a00b883a 	mov	r5,r20
  81386c:	d9801a04 	addi	r6,sp,104
  813870:	0812a940 	call	812a94 <__ssprint_r>
  813874:	103f8626 	beq	r2,zero,813690 <__alt_data_end+0xff813690>
  813878:	003fb506 	br	813750 <__alt_data_end+0xff813750>
  81387c:	10803fcc 	andi	r2,r2,255
  813880:	10003b1e 	bne	r2,zero,813970 <___svfiprintf_internal_r+0xd10>
  813884:	8880004c 	andi	r2,r17,1
  813888:	10007d26 	beq	r2,zero,813a80 <___svfiprintf_internal_r+0xe20>
  81388c:	00800c04 	movi	r2,48
  813890:	d8c019c4 	addi	r3,sp,103
  813894:	d88019c5 	stb	r2,103(sp)
  813898:	df002b17 	ldw	fp,172(sp)
  81389c:	d8c02615 	stw	r3,152(sp)
  8138a0:	003dc506 	br	812fb8 <__alt_data_end+0xff812fb8>
  8138a4:	00bfffc4 	movi	r2,-1
  8138a8:	003fae06 	br	813764 <__alt_data_end+0xff813764>
  8138ac:	9009883a 	mov	r4,r18
  8138b0:	a00b883a 	mov	r5,r20
  8138b4:	d9801a04 	addi	r6,sp,104
  8138b8:	0812a940 	call	812a94 <__ssprint_r>
  8138bc:	103fa41e 	bne	r2,zero,813750 <__alt_data_end+0xff813750>
  8138c0:	d811883a 	mov	r8,sp
  8138c4:	003d2206 	br	812d50 <__alt_data_end+0xff812d50>
  8138c8:	9009883a 	mov	r4,r18
  8138cc:	a00b883a 	mov	r5,r20
  8138d0:	d9801a04 	addi	r6,sp,104
  8138d4:	0812a940 	call	812a94 <__ssprint_r>
  8138d8:	103f9d1e 	bne	r2,zero,813750 <__alt_data_end+0xff813750>
  8138dc:	d8c01c17 	ldw	r3,112(sp)
  8138e0:	d8801b17 	ldw	r2,108(sp)
  8138e4:	d811883a 	mov	r8,sp
  8138e8:	003f2a06 	br	813594 <__alt_data_end+0xff813594>
  8138ec:	d9402a17 	ldw	r5,168(sp)
  8138f0:	d8c01a04 	addi	r3,sp,104
  8138f4:	488003cc 	andi	r2,r9,15
  8138f8:	5008973a 	slli	r4,r10,28
  8138fc:	2885883a 	add	r2,r5,r2
  813900:	4812d13a 	srli	r9,r9,4
  813904:	10800003 	ldbu	r2,0(r2)
  813908:	5014d13a 	srli	r10,r10,4
  81390c:	18ffffc4 	addi	r3,r3,-1
  813910:	2252b03a 	or	r9,r4,r9
  813914:	18800005 	stb	r2,0(r3)
  813918:	4a84b03a 	or	r2,r9,r10
  81391c:	103ff51e 	bne	r2,zero,8138f4 <__alt_data_end+0xff8138f4>
  813920:	d8c02615 	stw	r3,152(sp)
  813924:	003da206 	br	812fb0 <__alt_data_end+0xff812fb0>
  813928:	9009883a 	mov	r4,r18
  81392c:	a00b883a 	mov	r5,r20
  813930:	d9801a04 	addi	r6,sp,104
  813934:	0812a940 	call	812a94 <__ssprint_r>
  813938:	103f851e 	bne	r2,zero,813750 <__alt_data_end+0xff813750>
  81393c:	d8c01c17 	ldw	r3,112(sp)
  813940:	d8801b17 	ldw	r2,108(sp)
  813944:	d811883a 	mov	r8,sp
  813948:	003eda06 	br	8134b4 <__alt_data_end+0xff8134b4>
  81394c:	9009883a 	mov	r4,r18
  813950:	a00b883a 	mov	r5,r20
  813954:	d9801a04 	addi	r6,sp,104
  813958:	0812a940 	call	812a94 <__ssprint_r>
  81395c:	103f7c1e 	bne	r2,zero,813750 <__alt_data_end+0xff813750>
  813960:	d8c01c17 	ldw	r3,112(sp)
  813964:	d8801b17 	ldw	r2,108(sp)
  813968:	d811883a 	mov	r8,sp
  81396c:	003ede06 	br	8134e8 <__alt_data_end+0xff8134e8>
  813970:	da801a04 	addi	r10,sp,104
  813974:	da802615 	stw	r10,152(sp)
  813978:	003d8f06 	br	812fb8 <__alt_data_end+0xff812fb8>
  81397c:	8880040c 	andi	r2,r17,16
  813980:	10004c1e 	bne	r2,zero,813ab4 <___svfiprintf_internal_r+0xe54>
  813984:	8880100c 	andi	r2,r17,64
  813988:	da802317 	ldw	r10,140(sp)
  81398c:	10004a26 	beq	r2,zero,813ab8 <___svfiprintf_internal_r+0xe58>
  813990:	5240000b 	ldhu	r9,0(r10)
  813994:	dac02317 	ldw	r11,140(sp)
  813998:	0015883a 	mov	r10,zero
  81399c:	00800044 	movi	r2,1
  8139a0:	5ac00104 	addi	r11,r11,4
  8139a4:	dac02315 	stw	r11,140(sp)
  8139a8:	4807883a 	mov	r3,r9
  8139ac:	003d6506 	br	812f44 <__alt_data_end+0xff812f44>
  8139b0:	9009883a 	mov	r4,r18
  8139b4:	a00b883a 	mov	r5,r20
  8139b8:	d9801a04 	addi	r6,sp,104
  8139bc:	0812a940 	call	812a94 <__ssprint_r>
  8139c0:	103f631e 	bne	r2,zero,813750 <__alt_data_end+0xff813750>
  8139c4:	d8c01c17 	ldw	r3,112(sp)
  8139c8:	d8801b17 	ldw	r2,108(sp)
  8139cc:	d811883a 	mov	r8,sp
  8139d0:	003eab06 	br	813480 <__alt_data_end+0xff813480>
  8139d4:	8880040c 	andi	r2,r17,16
  8139d8:	1000331e 	bne	r2,zero,813aa8 <___svfiprintf_internal_r+0xe48>
  8139dc:	8880100c 	andi	r2,r17,64
  8139e0:	da802317 	ldw	r10,140(sp)
  8139e4:	10003126 	beq	r2,zero,813aac <___svfiprintf_internal_r+0xe4c>
  8139e8:	5240000b 	ldhu	r9,0(r10)
  8139ec:	dac02317 	ldw	r11,140(sp)
  8139f0:	0015883a 	mov	r10,zero
  8139f4:	0005883a 	mov	r2,zero
  8139f8:	5ac00104 	addi	r11,r11,4
  8139fc:	dac02315 	stw	r11,140(sp)
  813a00:	4807883a 	mov	r3,r9
  813a04:	003d4f06 	br	812f44 <__alt_data_end+0xff812f44>
  813a08:	10803fcc 	andi	r2,r2,255
  813a0c:	1080201c 	xori	r2,r2,128
  813a10:	10bfe004 	addi	r2,r2,-128
  813a14:	01000c04 	movi	r4,48
  813a18:	11005b26 	beq	r2,r4,813b88 <___svfiprintf_internal_r+0xf28>
  813a1c:	da802617 	ldw	r10,152(sp)
  813a20:	d8801e17 	ldw	r2,120(sp)
  813a24:	193fffc5 	stb	r4,-1(r3)
  813a28:	52bfffc4 	addi	r10,r10,-1
  813a2c:	da802615 	stw	r10,152(sp)
  813a30:	12b9c83a 	sub	fp,r2,r10
  813a34:	003d6006 	br	812fb8 <__alt_data_end+0xff812fb8>
  813a38:	00800244 	movi	r2,9
  813a3c:	127f1e36 	bltu	r2,r9,8136b8 <__alt_data_end+0xff8136b8>
  813a40:	4a400c04 	addi	r9,r9,48
  813a44:	d8c019c4 	addi	r3,sp,103
  813a48:	da4019c5 	stb	r9,103(sp)
  813a4c:	df002b17 	ldw	fp,172(sp)
  813a50:	d8c02615 	stw	r3,152(sp)
  813a54:	003d5806 	br	812fb8 <__alt_data_end+0xff812fb8>
  813a58:	d8802315 	stw	r2,140(sp)
  813a5c:	a9000007 	ldb	r4,0(r21)
  813a60:	003ccb06 	br	812d90 <__alt_data_end+0xff812d90>
  813a64:	9009883a 	mov	r4,r18
  813a68:	a00b883a 	mov	r5,r20
  813a6c:	d9801a04 	addi	r6,sp,104
  813a70:	0812a940 	call	812a94 <__ssprint_r>
  813a74:	103f361e 	bne	r2,zero,813750 <__alt_data_end+0xff813750>
  813a78:	d8c01c17 	ldw	r3,112(sp)
  813a7c:	003efc06 	br	813670 <__alt_data_end+0xff813670>
  813a80:	d8c01a04 	addi	r3,sp,104
  813a84:	d8c02615 	stw	r3,152(sp)
  813a88:	003d4b06 	br	812fb8 <__alt_data_end+0xff812fb8>
  813a8c:	da802317 	ldw	r10,140(sp)
  813a90:	1a400017 	ldw	r9,0(r3)
  813a94:	52800104 	addi	r10,r10,4
  813a98:	da802315 	stw	r10,140(sp)
  813a9c:	4815d7fa 	srai	r10,r9,31
  813aa0:	5005883a 	mov	r2,r10
  813aa4:	003d9c06 	br	813118 <__alt_data_end+0xff813118>
  813aa8:	da802317 	ldw	r10,140(sp)
  813aac:	52400017 	ldw	r9,0(r10)
  813ab0:	003fce06 	br	8139ec <__alt_data_end+0xff8139ec>
  813ab4:	da802317 	ldw	r10,140(sp)
  813ab8:	52400017 	ldw	r9,0(r10)
  813abc:	003fb506 	br	813994 <__alt_data_end+0xff813994>
  813ac0:	8880100c 	andi	r2,r17,64
  813ac4:	da802317 	ldw	r10,140(sp)
  813ac8:	103e1926 	beq	r2,zero,813330 <__alt_data_end+0xff813330>
  813acc:	dac02317 	ldw	r11,140(sp)
  813ad0:	5240000b 	ldhu	r9,0(r10)
  813ad4:	0015883a 	mov	r10,zero
  813ad8:	5ac00104 	addi	r11,r11,4
  813adc:	dac02315 	stw	r11,140(sp)
  813ae0:	003de406 	br	813274 <__alt_data_end+0xff813274>
  813ae4:	a9000007 	ldb	r4,0(r21)
  813ae8:	003ca906 	br	812d90 <__alt_data_end+0xff812d90>
  813aec:	dac02317 	ldw	r11,140(sp)
  813af0:	da802417 	ldw	r10,144(sp)
  813af4:	58800017 	ldw	r2,0(r11)
  813af8:	5007d7fa 	srai	r3,r10,31
  813afc:	5ac00104 	addi	r11,r11,4
  813b00:	dac02315 	stw	r11,140(sp)
  813b04:	12800015 	stw	r10,0(r2)
  813b08:	10c00115 	stw	r3,4(r2)
  813b0c:	003c7806 	br	812cf0 <__alt_data_end+0xff812cf0>
  813b10:	00800c04 	movi	r2,48
  813b14:	d8801d05 	stb	r2,116(sp)
  813b18:	d9001d45 	stb	r4,117(sp)
  813b1c:	8c400094 	ori	r17,r17,2
  813b20:	00800084 	movi	r2,2
  813b24:	003d0706 	br	812f44 <__alt_data_end+0xff812f44>
  813b28:	ad400044 	addi	r21,r21,1
  813b2c:	8c400814 	ori	r17,r17,32
  813b30:	11000047 	ldb	r4,1(r2)
  813b34:	003c9606 	br	812d90 <__alt_data_end+0xff812d90>
  813b38:	dac02317 	ldw	r11,140(sp)
  813b3c:	da802417 	ldw	r10,144(sp)
  813b40:	58800017 	ldw	r2,0(r11)
  813b44:	5ac00104 	addi	r11,r11,4
  813b48:	dac02315 	stw	r11,140(sp)
  813b4c:	12800015 	stw	r10,0(r2)
  813b50:	003c6706 	br	812cf0 <__alt_data_end+0xff812cf0>
  813b54:	9009883a 	mov	r4,r18
  813b58:	a00b883a 	mov	r5,r20
  813b5c:	d9801a04 	addi	r6,sp,104
  813b60:	0812a940 	call	812a94 <__ssprint_r>
  813b64:	103efa1e 	bne	r2,zero,813750 <__alt_data_end+0xff813750>
  813b68:	d8c01c17 	ldw	r3,112(sp)
  813b6c:	d8801b17 	ldw	r2,108(sp)
  813b70:	d811883a 	mov	r8,sp
  813b74:	003e5f06 	br	8134f4 <__alt_data_end+0xff8134f4>
  813b78:	02c020b4 	movhi	r11,130
  813b7c:	5af05084 	addi	r11,r11,-16062
  813b80:	dac02215 	stw	r11,136(sp)
  813b84:	003e7906 	br	81356c <__alt_data_end+0xff81356c>
  813b88:	da801e17 	ldw	r10,120(sp)
  813b8c:	d8c02617 	ldw	r3,152(sp)
  813b90:	50f9c83a 	sub	fp,r10,r3
  813b94:	003d0806 	br	812fb8 <__alt_data_end+0xff812fb8>
  813b98:	da002c15 	stw	r8,176(sp)
  813b9c:	08034f40 	call	8034f4 <strlen>
  813ba0:	1039883a 	mov	fp,r2
  813ba4:	dac01d83 	ldbu	r11,118(sp)
  813ba8:	ddc02315 	stw	r23,140(sp)
  813bac:	0021883a 	mov	r16,zero
  813bb0:	da002c17 	ldw	r8,176(sp)
  813bb4:	003d0006 	br	812fb8 <__alt_data_end+0xff812fb8>
  813bb8:	00800184 	movi	r2,6
  813bbc:	1400012e 	bgeu	r2,r16,813bc4 <___svfiprintf_internal_r+0xf64>
  813bc0:	1021883a 	mov	r16,r2
  813bc4:	8039883a 	mov	fp,r16
  813bc8:	802d883a 	mov	r22,r16
  813bcc:	80002116 	blt	r16,zero,813c54 <___svfiprintf_internal_r+0xff4>
  813bd0:	008020b4 	movhi	r2,130
  813bd4:	10aee504 	addi	r2,r2,-17516
  813bd8:	dd802015 	stw	r22,128(sp)
  813bdc:	ddc02315 	stw	r23,140(sp)
  813be0:	d8802615 	stw	r2,152(sp)
  813be4:	003d5d06 	br	81315c <__alt_data_end+0xff81315c>
  813be8:	04001004 	movi	r16,64
  813bec:	800b883a 	mov	r5,r16
  813bf0:	080258c0 	call	80258c <_malloc_r>
  813bf4:	da802717 	ldw	r10,156(sp)
  813bf8:	50800015 	stw	r2,0(r10)
  813bfc:	50800415 	stw	r2,16(r10)
  813c00:	10002026 	beq	r2,zero,813c84 <___svfiprintf_internal_r+0x1024>
  813c04:	da802717 	ldw	r10,156(sp)
  813c08:	54000515 	stw	r16,20(r10)
  813c0c:	003c2806 	br	812cb0 <__alt_data_end+0xff812cb0>
  813c10:	010020b4 	movhi	r4,130
  813c14:	21305484 	addi	r4,r4,-16046
  813c18:	d9002815 	stw	r4,160(sp)
  813c1c:	003d7e06 	br	813218 <__alt_data_end+0xff813218>
  813c20:	010020b4 	movhi	r4,130
  813c24:	21305484 	addi	r4,r4,-16046
  813c28:	d9002815 	stw	r4,160(sp)
  813c2c:	003e8706 	br	81364c <__alt_data_end+0xff81364c>
  813c30:	010020b4 	movhi	r4,130
  813c34:	21305084 	addi	r4,r4,-16062
  813c38:	d9002215 	stw	r4,136(sp)
  813c3c:	003ef606 	br	813818 <__alt_data_end+0xff813818>
  813c40:	8039883a 	mov	fp,r16
  813c44:	dac01d83 	ldbu	r11,118(sp)
  813c48:	ddc02315 	stw	r23,140(sp)
  813c4c:	0021883a 	mov	r16,zero
  813c50:	003cd906 	br	812fb8 <__alt_data_end+0xff812fb8>
  813c54:	002d883a 	mov	r22,zero
  813c58:	003fdd06 	br	813bd0 <__alt_data_end+0xff813bd0>
  813c5c:	dac02317 	ldw	r11,140(sp)
  813c60:	a805883a 	mov	r2,r21
  813c64:	502b883a 	mov	r21,r10
  813c68:	5c000017 	ldw	r16,0(r11)
  813c6c:	59000104 	addi	r4,r11,4
  813c70:	d9002315 	stw	r4,140(sp)
  813c74:	803fae0e 	bge	r16,zero,813b30 <__alt_data_end+0xff813b30>
  813c78:	043fffc4 	movi	r16,-1
  813c7c:	11000047 	ldb	r4,1(r2)
  813c80:	003c4306 	br	812d90 <__alt_data_end+0xff812d90>
  813c84:	dac02917 	ldw	r11,164(sp)
  813c88:	00800304 	movi	r2,12
  813c8c:	58800015 	stw	r2,0(r11)
  813c90:	00bfffc4 	movi	r2,-1
  813c94:	003eb306 	br	813764 <__alt_data_end+0xff813764>

00813c98 <_wcrtomb_r>:
  813c98:	defff604 	addi	sp,sp,-40
  813c9c:	008020b4 	movhi	r2,130
  813ca0:	dc800815 	stw	r18,32(sp)
  813ca4:	dc400715 	stw	r17,28(sp)
  813ca8:	dc000615 	stw	r16,24(sp)
  813cac:	10b7fe04 	addi	r2,r2,-8200
  813cb0:	dfc00915 	stw	ra,36(sp)
  813cb4:	2021883a 	mov	r16,r4
  813cb8:	3823883a 	mov	r17,r7
  813cbc:	14800017 	ldw	r18,0(r2)
  813cc0:	28001426 	beq	r5,zero,813d14 <_wcrtomb_r+0x7c>
  813cc4:	d9400415 	stw	r5,16(sp)
  813cc8:	d9800515 	stw	r6,20(sp)
  813ccc:	0808e4c0 	call	808e4c <__locale_charset>
  813cd0:	d9400417 	ldw	r5,16(sp)
  813cd4:	d9800517 	ldw	r6,20(sp)
  813cd8:	8009883a 	mov	r4,r16
  813cdc:	dc400015 	stw	r17,0(sp)
  813ce0:	100f883a 	mov	r7,r2
  813ce4:	903ee83a 	callr	r18
  813ce8:	00ffffc4 	movi	r3,-1
  813cec:	10c0031e 	bne	r2,r3,813cfc <_wcrtomb_r+0x64>
  813cf0:	88000015 	stw	zero,0(r17)
  813cf4:	00c02284 	movi	r3,138
  813cf8:	80c00015 	stw	r3,0(r16)
  813cfc:	dfc00917 	ldw	ra,36(sp)
  813d00:	dc800817 	ldw	r18,32(sp)
  813d04:	dc400717 	ldw	r17,28(sp)
  813d08:	dc000617 	ldw	r16,24(sp)
  813d0c:	dec00a04 	addi	sp,sp,40
  813d10:	f800283a 	ret
  813d14:	0808e4c0 	call	808e4c <__locale_charset>
  813d18:	8009883a 	mov	r4,r16
  813d1c:	dc400015 	stw	r17,0(sp)
  813d20:	d9400104 	addi	r5,sp,4
  813d24:	000d883a 	mov	r6,zero
  813d28:	100f883a 	mov	r7,r2
  813d2c:	903ee83a 	callr	r18
  813d30:	003fed06 	br	813ce8 <__alt_data_end+0xff813ce8>

00813d34 <wcrtomb>:
  813d34:	defff604 	addi	sp,sp,-40
  813d38:	008020b4 	movhi	r2,130
  813d3c:	dc800615 	stw	r18,24(sp)
  813d40:	dc400515 	stw	r17,20(sp)
  813d44:	dc000415 	stw	r16,16(sp)
  813d48:	10b7f804 	addi	r2,r2,-8224
  813d4c:	dfc00915 	stw	ra,36(sp)
  813d50:	dd000815 	stw	r20,32(sp)
  813d54:	dcc00715 	stw	r19,28(sp)
  813d58:	2021883a 	mov	r16,r4
  813d5c:	3025883a 	mov	r18,r6
  813d60:	14400017 	ldw	r17,0(r2)
  813d64:	20001826 	beq	r4,zero,813dc8 <wcrtomb+0x94>
  813d68:	008020b4 	movhi	r2,130
  813d6c:	10b7fe04 	addi	r2,r2,-8200
  813d70:	15000017 	ldw	r20,0(r2)
  813d74:	2827883a 	mov	r19,r5
  813d78:	0808e4c0 	call	808e4c <__locale_charset>
  813d7c:	8809883a 	mov	r4,r17
  813d80:	dc800015 	stw	r18,0(sp)
  813d84:	800b883a 	mov	r5,r16
  813d88:	980d883a 	mov	r6,r19
  813d8c:	100f883a 	mov	r7,r2
  813d90:	a03ee83a 	callr	r20
  813d94:	00ffffc4 	movi	r3,-1
  813d98:	10c0031e 	bne	r2,r3,813da8 <wcrtomb+0x74>
  813d9c:	90000015 	stw	zero,0(r18)
  813da0:	00c02284 	movi	r3,138
  813da4:	88c00015 	stw	r3,0(r17)
  813da8:	dfc00917 	ldw	ra,36(sp)
  813dac:	dd000817 	ldw	r20,32(sp)
  813db0:	dcc00717 	ldw	r19,28(sp)
  813db4:	dc800617 	ldw	r18,24(sp)
  813db8:	dc400517 	ldw	r17,20(sp)
  813dbc:	dc000417 	ldw	r16,16(sp)
  813dc0:	dec00a04 	addi	sp,sp,40
  813dc4:	f800283a 	ret
  813dc8:	008020b4 	movhi	r2,130
  813dcc:	10b7fe04 	addi	r2,r2,-8200
  813dd0:	14000017 	ldw	r16,0(r2)
  813dd4:	0808e4c0 	call	808e4c <__locale_charset>
  813dd8:	8809883a 	mov	r4,r17
  813ddc:	dc800015 	stw	r18,0(sp)
  813de0:	d9400104 	addi	r5,sp,4
  813de4:	000d883a 	mov	r6,zero
  813de8:	100f883a 	mov	r7,r2
  813dec:	803ee83a 	callr	r16
  813df0:	003fe806 	br	813d94 <__alt_data_end+0xff813d94>

00813df4 <__ascii_wctomb>:
  813df4:	28000526 	beq	r5,zero,813e0c <__ascii_wctomb+0x18>
  813df8:	00803fc4 	movi	r2,255
  813dfc:	11800536 	bltu	r2,r6,813e14 <__ascii_wctomb+0x20>
  813e00:	29800005 	stb	r6,0(r5)
  813e04:	00800044 	movi	r2,1
  813e08:	f800283a 	ret
  813e0c:	0005883a 	mov	r2,zero
  813e10:	f800283a 	ret
  813e14:	00802284 	movi	r2,138
  813e18:	20800015 	stw	r2,0(r4)
  813e1c:	00bfffc4 	movi	r2,-1
  813e20:	f800283a 	ret

00813e24 <_wctomb_r>:
  813e24:	008020b4 	movhi	r2,130
  813e28:	defff904 	addi	sp,sp,-28
  813e2c:	10b7fe04 	addi	r2,r2,-8200
  813e30:	dfc00615 	stw	ra,24(sp)
  813e34:	dc400515 	stw	r17,20(sp)
  813e38:	dc000415 	stw	r16,16(sp)
  813e3c:	3823883a 	mov	r17,r7
  813e40:	14000017 	ldw	r16,0(r2)
  813e44:	d9000115 	stw	r4,4(sp)
  813e48:	d9400215 	stw	r5,8(sp)
  813e4c:	d9800315 	stw	r6,12(sp)
  813e50:	0808e4c0 	call	808e4c <__locale_charset>
  813e54:	d9000117 	ldw	r4,4(sp)
  813e58:	d9400217 	ldw	r5,8(sp)
  813e5c:	d9800317 	ldw	r6,12(sp)
  813e60:	dc400015 	stw	r17,0(sp)
  813e64:	100f883a 	mov	r7,r2
  813e68:	803ee83a 	callr	r16
  813e6c:	dfc00617 	ldw	ra,24(sp)
  813e70:	dc400517 	ldw	r17,20(sp)
  813e74:	dc000417 	ldw	r16,16(sp)
  813e78:	dec00704 	addi	sp,sp,28
  813e7c:	f800283a 	ret

00813e80 <__muldi3>:
  813e80:	223fffcc 	andi	r8,r4,65535
  813e84:	2012d43a 	srli	r9,r4,16
  813e88:	32bfffcc 	andi	r10,r6,65535
  813e8c:	3006d43a 	srli	r3,r6,16
  813e90:	5217383a 	mul	r11,r10,r8
  813e94:	5255383a 	mul	r10,r10,r9
  813e98:	1a05383a 	mul	r2,r3,r8
  813e9c:	5810d43a 	srli	r8,r11,16
  813ea0:	5085883a 	add	r2,r10,r2
  813ea4:	1205883a 	add	r2,r2,r8
  813ea8:	1a51383a 	mul	r8,r3,r9
  813eac:	1280022e 	bgeu	r2,r10,813eb8 <__muldi3+0x38>
  813eb0:	00c00074 	movhi	r3,1
  813eb4:	40d1883a 	add	r8,r8,r3
  813eb8:	1006d43a 	srli	r3,r2,16
  813ebc:	21cf383a 	mul	r7,r4,r7
  813ec0:	314b383a 	mul	r5,r6,r5
  813ec4:	1004943a 	slli	r2,r2,16
  813ec8:	40c7883a 	add	r3,r8,r3
  813ecc:	5affffcc 	andi	r11,r11,65535
  813ed0:	3949883a 	add	r4,r7,r5
  813ed4:	12c5883a 	add	r2,r2,r11
  813ed8:	20c7883a 	add	r3,r4,r3
  813edc:	f800283a 	ret

00813ee0 <__fixunsdfsi>:
  813ee0:	defffd04 	addi	sp,sp,-12
  813ee4:	000d883a 	mov	r6,zero
  813ee8:	01d07834 	movhi	r7,16864
  813eec:	dc400115 	stw	r17,4(sp)
  813ef0:	dc000015 	stw	r16,0(sp)
  813ef4:	dfc00215 	stw	ra,8(sp)
  813ef8:	2023883a 	mov	r17,r4
  813efc:	2821883a 	mov	r16,r5
  813f00:	0815fa00 	call	815fa0 <__gedf2>
  813f04:	1000080e 	bge	r2,zero,813f28 <__fixunsdfsi+0x48>
  813f08:	8809883a 	mov	r4,r17
  813f0c:	800b883a 	mov	r5,r16
  813f10:	08171540 	call	817154 <__fixdfsi>
  813f14:	dfc00217 	ldw	ra,8(sp)
  813f18:	dc400117 	ldw	r17,4(sp)
  813f1c:	dc000017 	ldw	r16,0(sp)
  813f20:	dec00304 	addi	sp,sp,12
  813f24:	f800283a 	ret
  813f28:	000d883a 	mov	r6,zero
  813f2c:	01d07834 	movhi	r7,16864
  813f30:	8809883a 	mov	r4,r17
  813f34:	800b883a 	mov	r5,r16
  813f38:	08168840 	call	816884 <__subdf3>
  813f3c:	180b883a 	mov	r5,r3
  813f40:	1009883a 	mov	r4,r2
  813f44:	08171540 	call	817154 <__fixdfsi>
  813f48:	00e00034 	movhi	r3,32768
  813f4c:	10c5883a 	add	r2,r2,r3
  813f50:	003ff006 	br	813f14 <__alt_data_end+0xff813f14>

00813f54 <__udivdi3>:
  813f54:	defff504 	addi	sp,sp,-44
  813f58:	dcc00415 	stw	r19,16(sp)
  813f5c:	dc000115 	stw	r16,4(sp)
  813f60:	dfc00a15 	stw	ra,40(sp)
  813f64:	df000915 	stw	fp,36(sp)
  813f68:	ddc00815 	stw	r23,32(sp)
  813f6c:	dd800715 	stw	r22,28(sp)
  813f70:	dd400615 	stw	r21,24(sp)
  813f74:	dd000515 	stw	r20,20(sp)
  813f78:	dc800315 	stw	r18,12(sp)
  813f7c:	dc400215 	stw	r17,8(sp)
  813f80:	2027883a 	mov	r19,r4
  813f84:	2821883a 	mov	r16,r5
  813f88:	3800421e 	bne	r7,zero,814094 <__udivdi3+0x140>
  813f8c:	3025883a 	mov	r18,r6
  813f90:	2023883a 	mov	r17,r4
  813f94:	2980542e 	bgeu	r5,r6,8140e8 <__udivdi3+0x194>
  813f98:	00bfffd4 	movui	r2,65535
  813f9c:	282d883a 	mov	r22,r5
  813fa0:	1180a836 	bltu	r2,r6,814244 <__udivdi3+0x2f0>
  813fa4:	00803fc4 	movi	r2,255
  813fa8:	1181422e 	bgeu	r2,r6,8144b4 <__udivdi3+0x560>
  813fac:	00800204 	movi	r2,8
  813fb0:	1007883a 	mov	r3,r2
  813fb4:	3084d83a 	srl	r2,r6,r2
  813fb8:	010020b4 	movhi	r4,130
  813fbc:	21305884 	addi	r4,r4,-16030
  813fc0:	2085883a 	add	r2,r4,r2
  813fc4:	10800003 	ldbu	r2,0(r2)
  813fc8:	10c7883a 	add	r3,r2,r3
  813fcc:	00800804 	movi	r2,32
  813fd0:	10c5c83a 	sub	r2,r2,r3
  813fd4:	10000526 	beq	r2,zero,813fec <__udivdi3+0x98>
  813fd8:	80a0983a 	sll	r16,r16,r2
  813fdc:	98c6d83a 	srl	r3,r19,r3
  813fe0:	30a4983a 	sll	r18,r6,r2
  813fe4:	98a2983a 	sll	r17,r19,r2
  813fe8:	80ecb03a 	or	r22,r16,r3
  813fec:	902ad43a 	srli	r21,r18,16
  813ff0:	b009883a 	mov	r4,r22
  813ff4:	953fffcc 	andi	r20,r18,65535
  813ff8:	a80b883a 	mov	r5,r21
  813ffc:	0814bc80 	call	814bc8 <__umodsi3>
  814000:	b009883a 	mov	r4,r22
  814004:	a80b883a 	mov	r5,r21
  814008:	1027883a 	mov	r19,r2
  81400c:	0814bc00 	call	814bc0 <__udivsi3>
  814010:	1021883a 	mov	r16,r2
  814014:	8806d43a 	srli	r3,r17,16
  814018:	9804943a 	slli	r2,r19,16
  81401c:	8527383a 	mul	r19,r16,r20
  814020:	10c4b03a 	or	r2,r2,r3
  814024:	14c0052e 	bgeu	r2,r19,81403c <__udivdi3+0xe8>
  814028:	1485883a 	add	r2,r2,r18
  81402c:	80ffffc4 	addi	r3,r16,-1
  814030:	14800136 	bltu	r2,r18,814038 <__udivdi3+0xe4>
  814034:	14c13436 	bltu	r2,r19,814508 <__udivdi3+0x5b4>
  814038:	1821883a 	mov	r16,r3
  81403c:	14e7c83a 	sub	r19,r2,r19
  814040:	9809883a 	mov	r4,r19
  814044:	a80b883a 	mov	r5,r21
  814048:	0814bc80 	call	814bc8 <__umodsi3>
  81404c:	102d883a 	mov	r22,r2
  814050:	9809883a 	mov	r4,r19
  814054:	a80b883a 	mov	r5,r21
  814058:	0814bc00 	call	814bc0 <__udivsi3>
  81405c:	b02c943a 	slli	r22,r22,16
  814060:	1529383a 	mul	r20,r2,r20
  814064:	8c7fffcc 	andi	r17,r17,65535
  814068:	b462b03a 	or	r17,r22,r17
  81406c:	8d00052e 	bgeu	r17,r20,814084 <__udivdi3+0x130>
  814070:	8ca3883a 	add	r17,r17,r18
  814074:	10ffffc4 	addi	r3,r2,-1
  814078:	8c80f636 	bltu	r17,r18,814454 <__udivdi3+0x500>
  81407c:	8d00f52e 	bgeu	r17,r20,814454 <__udivdi3+0x500>
  814080:	10bfff84 	addi	r2,r2,-2
  814084:	8020943a 	slli	r16,r16,16
  814088:	0007883a 	mov	r3,zero
  81408c:	1404b03a 	or	r2,r2,r16
  814090:	00005b06 	br	814200 <__udivdi3+0x2ac>
  814094:	29c05836 	bltu	r5,r7,8141f8 <__udivdi3+0x2a4>
  814098:	00bfffd4 	movui	r2,65535
  81409c:	11c0642e 	bgeu	r2,r7,814230 <__udivdi3+0x2dc>
  8140a0:	00804034 	movhi	r2,256
  8140a4:	10bfffc4 	addi	r2,r2,-1
  8140a8:	11c0f32e 	bgeu	r2,r7,814478 <__udivdi3+0x524>
  8140ac:	00c00604 	movi	r3,24
  8140b0:	180b883a 	mov	r5,r3
  8140b4:	38c6d83a 	srl	r3,r7,r3
  8140b8:	008020b4 	movhi	r2,130
  8140bc:	10b05884 	addi	r2,r2,-16030
  8140c0:	10c7883a 	add	r3,r2,r3
  8140c4:	18c00003 	ldbu	r3,0(r3)
  8140c8:	01000804 	movi	r4,32
  8140cc:	1947883a 	add	r3,r3,r5
  8140d0:	20e5c83a 	sub	r18,r4,r3
  8140d4:	9000661e 	bne	r18,zero,814270 <__udivdi3+0x31c>
  8140d8:	3c00f936 	bltu	r7,r16,8144c0 <__udivdi3+0x56c>
  8140dc:	9985403a 	cmpgeu	r2,r19,r6
  8140e0:	0007883a 	mov	r3,zero
  8140e4:	00004606 	br	814200 <__udivdi3+0x2ac>
  8140e8:	3000041e 	bne	r6,zero,8140fc <__udivdi3+0x1a8>
  8140ec:	01000044 	movi	r4,1
  8140f0:	000b883a 	mov	r5,zero
  8140f4:	0814bc00 	call	814bc0 <__udivsi3>
  8140f8:	1025883a 	mov	r18,r2
  8140fc:	00bfffd4 	movui	r2,65535
  814100:	1480562e 	bgeu	r2,r18,81425c <__udivdi3+0x308>
  814104:	00804034 	movhi	r2,256
  814108:	10bfffc4 	addi	r2,r2,-1
  81410c:	1480e32e 	bgeu	r2,r18,81449c <__udivdi3+0x548>
  814110:	00800604 	movi	r2,24
  814114:	1007883a 	mov	r3,r2
  814118:	9084d83a 	srl	r2,r18,r2
  81411c:	010020b4 	movhi	r4,130
  814120:	21305884 	addi	r4,r4,-16030
  814124:	2085883a 	add	r2,r4,r2
  814128:	10800003 	ldbu	r2,0(r2)
  81412c:	10c5883a 	add	r2,r2,r3
  814130:	00c00804 	movi	r3,32
  814134:	1887c83a 	sub	r3,r3,r2
  814138:	1800911e 	bne	r3,zero,814380 <__udivdi3+0x42c>
  81413c:	9028d43a 	srli	r20,r18,16
  814140:	84a1c83a 	sub	r16,r16,r18
  814144:	957fffcc 	andi	r21,r18,65535
  814148:	00c00044 	movi	r3,1
  81414c:	8009883a 	mov	r4,r16
  814150:	a00b883a 	mov	r5,r20
  814154:	d8c00015 	stw	r3,0(sp)
  814158:	0814bc80 	call	814bc8 <__umodsi3>
  81415c:	8009883a 	mov	r4,r16
  814160:	a00b883a 	mov	r5,r20
  814164:	1027883a 	mov	r19,r2
  814168:	0814bc00 	call	814bc0 <__udivsi3>
  81416c:	1021883a 	mov	r16,r2
  814170:	880cd43a 	srli	r6,r17,16
  814174:	9804943a 	slli	r2,r19,16
  814178:	8567383a 	mul	r19,r16,r21
  81417c:	d8c00017 	ldw	r3,0(sp)
  814180:	1188b03a 	or	r4,r2,r6
  814184:	24c0052e 	bgeu	r4,r19,81419c <__udivdi3+0x248>
  814188:	2489883a 	add	r4,r4,r18
  81418c:	80bfffc4 	addi	r2,r16,-1
  814190:	24800136 	bltu	r4,r18,814198 <__udivdi3+0x244>
  814194:	24c0d936 	bltu	r4,r19,8144fc <__udivdi3+0x5a8>
  814198:	1021883a 	mov	r16,r2
  81419c:	24e7c83a 	sub	r19,r4,r19
  8141a0:	9809883a 	mov	r4,r19
  8141a4:	a00b883a 	mov	r5,r20
  8141a8:	d8c00015 	stw	r3,0(sp)
  8141ac:	0814bc80 	call	814bc8 <__umodsi3>
  8141b0:	102d883a 	mov	r22,r2
  8141b4:	9809883a 	mov	r4,r19
  8141b8:	a00b883a 	mov	r5,r20
  8141bc:	0814bc00 	call	814bc0 <__udivsi3>
  8141c0:	b02c943a 	slli	r22,r22,16
  8141c4:	156b383a 	mul	r21,r2,r21
  8141c8:	8c7fffcc 	andi	r17,r17,65535
  8141cc:	b462b03a 	or	r17,r22,r17
  8141d0:	d8c00017 	ldw	r3,0(sp)
  8141d4:	8d40052e 	bgeu	r17,r21,8141ec <__udivdi3+0x298>
  8141d8:	8ca3883a 	add	r17,r17,r18
  8141dc:	113fffc4 	addi	r4,r2,-1
  8141e0:	8c809a36 	bltu	r17,r18,81444c <__udivdi3+0x4f8>
  8141e4:	8d40992e 	bgeu	r17,r21,81444c <__udivdi3+0x4f8>
  8141e8:	10bfff84 	addi	r2,r2,-2
  8141ec:	8020943a 	slli	r16,r16,16
  8141f0:	1404b03a 	or	r2,r2,r16
  8141f4:	00000206 	br	814200 <__udivdi3+0x2ac>
  8141f8:	0007883a 	mov	r3,zero
  8141fc:	0005883a 	mov	r2,zero
  814200:	dfc00a17 	ldw	ra,40(sp)
  814204:	df000917 	ldw	fp,36(sp)
  814208:	ddc00817 	ldw	r23,32(sp)
  81420c:	dd800717 	ldw	r22,28(sp)
  814210:	dd400617 	ldw	r21,24(sp)
  814214:	dd000517 	ldw	r20,20(sp)
  814218:	dcc00417 	ldw	r19,16(sp)
  81421c:	dc800317 	ldw	r18,12(sp)
  814220:	dc400217 	ldw	r17,8(sp)
  814224:	dc000117 	ldw	r16,4(sp)
  814228:	dec00b04 	addi	sp,sp,44
  81422c:	f800283a 	ret
  814230:	00803fc4 	movi	r2,255
  814234:	11c0932e 	bgeu	r2,r7,814484 <__udivdi3+0x530>
  814238:	00c00204 	movi	r3,8
  81423c:	180b883a 	mov	r5,r3
  814240:	003f9c06 	br	8140b4 <__alt_data_end+0xff8140b4>
  814244:	00804034 	movhi	r2,256
  814248:	10bfffc4 	addi	r2,r2,-1
  81424c:	1180902e 	bgeu	r2,r6,814490 <__udivdi3+0x53c>
  814250:	00800604 	movi	r2,24
  814254:	1007883a 	mov	r3,r2
  814258:	003f5606 	br	813fb4 <__alt_data_end+0xff813fb4>
  81425c:	00803fc4 	movi	r2,255
  814260:	1480912e 	bgeu	r2,r18,8144a8 <__udivdi3+0x554>
  814264:	00800204 	movi	r2,8
  814268:	1007883a 	mov	r3,r2
  81426c:	003faa06 	br	814118 <__alt_data_end+0xff814118>
  814270:	30eed83a 	srl	r23,r6,r3
  814274:	3c8e983a 	sll	r7,r7,r18
  814278:	80f8d83a 	srl	fp,r16,r3
  81427c:	98c6d83a 	srl	r3,r19,r3
  814280:	3deeb03a 	or	r23,r7,r23
  814284:	b828d43a 	srli	r20,r23,16
  814288:	84a0983a 	sll	r16,r16,r18
  81428c:	e009883a 	mov	r4,fp
  814290:	a00b883a 	mov	r5,r20
  814294:	80e2b03a 	or	r17,r16,r3
  814298:	34aa983a 	sll	r21,r6,r18
  81429c:	0814bc80 	call	814bc8 <__umodsi3>
  8142a0:	e009883a 	mov	r4,fp
  8142a4:	a00b883a 	mov	r5,r20
  8142a8:	102d883a 	mov	r22,r2
  8142ac:	0814bc00 	call	814bc0 <__udivsi3>
  8142b0:	1021883a 	mov	r16,r2
  8142b4:	bf3fffcc 	andi	fp,r23,65535
  8142b8:	b004943a 	slli	r2,r22,16
  8142bc:	8808d43a 	srli	r4,r17,16
  8142c0:	872d383a 	mul	r22,r16,fp
  8142c4:	1104b03a 	or	r2,r2,r4
  8142c8:	1580042e 	bgeu	r2,r22,8142dc <__udivdi3+0x388>
  8142cc:	15c5883a 	add	r2,r2,r23
  8142d0:	80ffffc4 	addi	r3,r16,-1
  8142d4:	15c0812e 	bgeu	r2,r23,8144dc <__udivdi3+0x588>
  8142d8:	1821883a 	mov	r16,r3
  8142dc:	15adc83a 	sub	r22,r2,r22
  8142e0:	b009883a 	mov	r4,r22
  8142e4:	a00b883a 	mov	r5,r20
  8142e8:	0814bc80 	call	814bc8 <__umodsi3>
  8142ec:	a00b883a 	mov	r5,r20
  8142f0:	b009883a 	mov	r4,r22
  8142f4:	d8800015 	stw	r2,0(sp)
  8142f8:	0814bc00 	call	814bc0 <__udivsi3>
  8142fc:	d8c00017 	ldw	r3,0(sp)
  814300:	170b383a 	mul	r5,r2,fp
  814304:	8c7fffcc 	andi	r17,r17,65535
  814308:	1806943a 	slli	r3,r3,16
  81430c:	1c46b03a 	or	r3,r3,r17
  814310:	1940042e 	bgeu	r3,r5,814324 <__udivdi3+0x3d0>
  814314:	1dc7883a 	add	r3,r3,r23
  814318:	113fffc4 	addi	r4,r2,-1
  81431c:	1dc06b2e 	bgeu	r3,r23,8144cc <__udivdi3+0x578>
  814320:	2005883a 	mov	r2,r4
  814324:	8020943a 	slli	r16,r16,16
  814328:	a9ffffcc 	andi	r7,r21,65535
  81432c:	a82ad43a 	srli	r21,r21,16
  814330:	1404b03a 	or	r2,r2,r16
  814334:	113fffcc 	andi	r4,r2,65535
  814338:	100cd43a 	srli	r6,r2,16
  81433c:	21d3383a 	mul	r9,r4,r7
  814340:	2549383a 	mul	r4,r4,r21
  814344:	31cf383a 	mul	r7,r6,r7
  814348:	4810d43a 	srli	r8,r9,16
  81434c:	1947c83a 	sub	r3,r3,r5
  814350:	3909883a 	add	r4,r7,r4
  814354:	2209883a 	add	r4,r4,r8
  814358:	354d383a 	mul	r6,r6,r21
  81435c:	21c0022e 	bgeu	r4,r7,814368 <__udivdi3+0x414>
  814360:	01400074 	movhi	r5,1
  814364:	314d883a 	add	r6,r6,r5
  814368:	202ad43a 	srli	r21,r4,16
  81436c:	354d883a 	add	r6,r6,r21
  814370:	19803f36 	bltu	r3,r6,814470 <__udivdi3+0x51c>
  814374:	19803926 	beq	r3,r6,81445c <__udivdi3+0x508>
  814378:	0007883a 	mov	r3,zero
  81437c:	003fa006 	br	814200 <__alt_data_end+0xff814200>
  814380:	90e4983a 	sll	r18,r18,r3
  814384:	80aad83a 	srl	r21,r16,r2
  814388:	80e0983a 	sll	r16,r16,r3
  81438c:	9028d43a 	srli	r20,r18,16
  814390:	9884d83a 	srl	r2,r19,r2
  814394:	a809883a 	mov	r4,r21
  814398:	a00b883a 	mov	r5,r20
  81439c:	80acb03a 	or	r22,r16,r2
  8143a0:	98e2983a 	sll	r17,r19,r3
  8143a4:	0814bc80 	call	814bc8 <__umodsi3>
  8143a8:	a809883a 	mov	r4,r21
  8143ac:	a00b883a 	mov	r5,r20
  8143b0:	1021883a 	mov	r16,r2
  8143b4:	0814bc00 	call	814bc0 <__udivsi3>
  8143b8:	957fffcc 	andi	r21,r18,65535
  8143bc:	8020943a 	slli	r16,r16,16
  8143c0:	b00ad43a 	srli	r5,r22,16
  8143c4:	1567383a 	mul	r19,r2,r21
  8143c8:	102f883a 	mov	r23,r2
  8143cc:	8148b03a 	or	r4,r16,r5
  8143d0:	24c0062e 	bgeu	r4,r19,8143ec <__udivdi3+0x498>
  8143d4:	2489883a 	add	r4,r4,r18
  8143d8:	10bfffc4 	addi	r2,r2,-1
  8143dc:	24804536 	bltu	r4,r18,8144f4 <__udivdi3+0x5a0>
  8143e0:	24c0442e 	bgeu	r4,r19,8144f4 <__udivdi3+0x5a0>
  8143e4:	bdffff84 	addi	r23,r23,-2
  8143e8:	2489883a 	add	r4,r4,r18
  8143ec:	24e7c83a 	sub	r19,r4,r19
  8143f0:	9809883a 	mov	r4,r19
  8143f4:	a00b883a 	mov	r5,r20
  8143f8:	0814bc80 	call	814bc8 <__umodsi3>
  8143fc:	1021883a 	mov	r16,r2
  814400:	9809883a 	mov	r4,r19
  814404:	a00b883a 	mov	r5,r20
  814408:	0814bc00 	call	814bc0 <__udivsi3>
  81440c:	8020943a 	slli	r16,r16,16
  814410:	1007883a 	mov	r3,r2
  814414:	1545383a 	mul	r2,r2,r21
  814418:	b13fffcc 	andi	r4,r22,65535
  81441c:	8108b03a 	or	r4,r16,r4
  814420:	2080062e 	bgeu	r4,r2,81443c <__udivdi3+0x4e8>
  814424:	2489883a 	add	r4,r4,r18
  814428:	197fffc4 	addi	r5,r3,-1
  81442c:	24802f36 	bltu	r4,r18,8144ec <__udivdi3+0x598>
  814430:	20802e2e 	bgeu	r4,r2,8144ec <__udivdi3+0x598>
  814434:	18ffff84 	addi	r3,r3,-2
  814438:	2489883a 	add	r4,r4,r18
  81443c:	b82e943a 	slli	r23,r23,16
  814440:	20a1c83a 	sub	r16,r4,r2
  814444:	1dc6b03a 	or	r3,r3,r23
  814448:	003f4006 	br	81414c <__alt_data_end+0xff81414c>
  81444c:	2005883a 	mov	r2,r4
  814450:	003f6606 	br	8141ec <__alt_data_end+0xff8141ec>
  814454:	1805883a 	mov	r2,r3
  814458:	003f0a06 	br	814084 <__alt_data_end+0xff814084>
  81445c:	2006943a 	slli	r3,r4,16
  814460:	9c88983a 	sll	r4,r19,r18
  814464:	4a7fffcc 	andi	r9,r9,65535
  814468:	1a47883a 	add	r3,r3,r9
  81446c:	20ffc22e 	bgeu	r4,r3,814378 <__alt_data_end+0xff814378>
  814470:	10bfffc4 	addi	r2,r2,-1
  814474:	003fc006 	br	814378 <__alt_data_end+0xff814378>
  814478:	00c00404 	movi	r3,16
  81447c:	180b883a 	mov	r5,r3
  814480:	003f0c06 	br	8140b4 <__alt_data_end+0xff8140b4>
  814484:	0007883a 	mov	r3,zero
  814488:	000b883a 	mov	r5,zero
  81448c:	003f0906 	br	8140b4 <__alt_data_end+0xff8140b4>
  814490:	00800404 	movi	r2,16
  814494:	1007883a 	mov	r3,r2
  814498:	003ec606 	br	813fb4 <__alt_data_end+0xff813fb4>
  81449c:	00800404 	movi	r2,16
  8144a0:	1007883a 	mov	r3,r2
  8144a4:	003f1c06 	br	814118 <__alt_data_end+0xff814118>
  8144a8:	0005883a 	mov	r2,zero
  8144ac:	0007883a 	mov	r3,zero
  8144b0:	003f1906 	br	814118 <__alt_data_end+0xff814118>
  8144b4:	0005883a 	mov	r2,zero
  8144b8:	0007883a 	mov	r3,zero
  8144bc:	003ebd06 	br	813fb4 <__alt_data_end+0xff813fb4>
  8144c0:	0007883a 	mov	r3,zero
  8144c4:	00800044 	movi	r2,1
  8144c8:	003f4d06 	br	814200 <__alt_data_end+0xff814200>
  8144cc:	197f942e 	bgeu	r3,r5,814320 <__alt_data_end+0xff814320>
  8144d0:	10bfff84 	addi	r2,r2,-2
  8144d4:	1dc7883a 	add	r3,r3,r23
  8144d8:	003f9206 	br	814324 <__alt_data_end+0xff814324>
  8144dc:	15bf7e2e 	bgeu	r2,r22,8142d8 <__alt_data_end+0xff8142d8>
  8144e0:	843fff84 	addi	r16,r16,-2
  8144e4:	15c5883a 	add	r2,r2,r23
  8144e8:	003f7c06 	br	8142dc <__alt_data_end+0xff8142dc>
  8144ec:	2807883a 	mov	r3,r5
  8144f0:	003fd206 	br	81443c <__alt_data_end+0xff81443c>
  8144f4:	102f883a 	mov	r23,r2
  8144f8:	003fbc06 	br	8143ec <__alt_data_end+0xff8143ec>
  8144fc:	843fff84 	addi	r16,r16,-2
  814500:	2489883a 	add	r4,r4,r18
  814504:	003f2506 	br	81419c <__alt_data_end+0xff81419c>
  814508:	843fff84 	addi	r16,r16,-2
  81450c:	1485883a 	add	r2,r2,r18
  814510:	003eca06 	br	81403c <__alt_data_end+0xff81403c>

00814514 <__umoddi3>:
  814514:	defff404 	addi	sp,sp,-48
  814518:	ddc00915 	stw	r23,36(sp)
  81451c:	dc400315 	stw	r17,12(sp)
  814520:	dc000215 	stw	r16,8(sp)
  814524:	dfc00b15 	stw	ra,44(sp)
  814528:	df000a15 	stw	fp,40(sp)
  81452c:	dd800815 	stw	r22,32(sp)
  814530:	dd400715 	stw	r21,28(sp)
  814534:	dd000615 	stw	r20,24(sp)
  814538:	dcc00515 	stw	r19,20(sp)
  81453c:	dc800415 	stw	r18,16(sp)
  814540:	2021883a 	mov	r16,r4
  814544:	2823883a 	mov	r17,r5
  814548:	282f883a 	mov	r23,r5
  81454c:	3800381e 	bne	r7,zero,814630 <__umoddi3+0x11c>
  814550:	3027883a 	mov	r19,r6
  814554:	2029883a 	mov	r20,r4
  814558:	29804e2e 	bgeu	r5,r6,814694 <__umoddi3+0x180>
  81455c:	00bfffd4 	movui	r2,65535
  814560:	11809c36 	bltu	r2,r6,8147d4 <__umoddi3+0x2c0>
  814564:	00803fc4 	movi	r2,255
  814568:	11813b2e 	bgeu	r2,r6,814a58 <__umoddi3+0x544>
  81456c:	01400204 	movi	r5,8
  814570:	2805883a 	mov	r2,r5
  814574:	314ad83a 	srl	r5,r6,r5
  814578:	00c020b4 	movhi	r3,130
  81457c:	18f05884 	addi	r3,r3,-16030
  814580:	194b883a 	add	r5,r3,r5
  814584:	29000003 	ldbu	r4,0(r5)
  814588:	2089883a 	add	r4,r4,r2
  81458c:	00800804 	movi	r2,32
  814590:	1105c83a 	sub	r2,r2,r4
  814594:	1000ec26 	beq	r2,zero,814948 <__umoddi3+0x434>
  814598:	88a2983a 	sll	r17,r17,r2
  81459c:	8108d83a 	srl	r4,r16,r4
  8145a0:	30a6983a 	sll	r19,r6,r2
  8145a4:	80a8983a 	sll	r20,r16,r2
  8145a8:	1025883a 	mov	r18,r2
  8145ac:	892eb03a 	or	r23,r17,r4
  8145b0:	982cd43a 	srli	r22,r19,16
  8145b4:	b809883a 	mov	r4,r23
  8145b8:	9d7fffcc 	andi	r21,r19,65535
  8145bc:	b00b883a 	mov	r5,r22
  8145c0:	0814bc80 	call	814bc8 <__umodsi3>
  8145c4:	b809883a 	mov	r4,r23
  8145c8:	b00b883a 	mov	r5,r22
  8145cc:	1021883a 	mov	r16,r2
  8145d0:	0814bc00 	call	814bc0 <__udivsi3>
  8145d4:	8020943a 	slli	r16,r16,16
  8145d8:	a00cd43a 	srli	r6,r20,16
  8145dc:	1545383a 	mul	r2,r2,r21
  8145e0:	8188b03a 	or	r4,r16,r6
  8145e4:	2080042e 	bgeu	r4,r2,8145f8 <__umoddi3+0xe4>
  8145e8:	24c9883a 	add	r4,r4,r19
  8145ec:	24c00236 	bltu	r4,r19,8145f8 <__umoddi3+0xe4>
  8145f0:	2080012e 	bgeu	r4,r2,8145f8 <__umoddi3+0xe4>
  8145f4:	24c9883a 	add	r4,r4,r19
  8145f8:	20a3c83a 	sub	r17,r4,r2
  8145fc:	8809883a 	mov	r4,r17
  814600:	b00b883a 	mov	r5,r22
  814604:	0814bc80 	call	814bc8 <__umodsi3>
  814608:	8809883a 	mov	r4,r17
  81460c:	b00b883a 	mov	r5,r22
  814610:	1021883a 	mov	r16,r2
  814614:	0814bc00 	call	814bc0 <__udivsi3>
  814618:	8006943a 	slli	r3,r16,16
  81461c:	1545383a 	mul	r2,r2,r21
  814620:	a13fffcc 	andi	r4,r20,65535
  814624:	1906b03a 	or	r3,r3,r4
  814628:	1880532e 	bgeu	r3,r2,814778 <__umoddi3+0x264>
  81462c:	00004e06 	br	814768 <__umoddi3+0x254>
  814630:	29c05536 	bltu	r5,r7,814788 <__umoddi3+0x274>
  814634:	00bfffd4 	movui	r2,65535
  814638:	11c0612e 	bgeu	r2,r7,8147c0 <__umoddi3+0x2ac>
  81463c:	00804034 	movhi	r2,256
  814640:	10bfffc4 	addi	r2,r2,-1
  814644:	11c0f82e 	bgeu	r2,r7,814a28 <__umoddi3+0x514>
  814648:	01400604 	movi	r5,24
  81464c:	282b883a 	mov	r21,r5
  814650:	394ad83a 	srl	r5,r7,r5
  814654:	00c020b4 	movhi	r3,130
  814658:	18f05884 	addi	r3,r3,-16030
  81465c:	194b883a 	add	r5,r3,r5
  814660:	28800003 	ldbu	r2,0(r5)
  814664:	00c00804 	movi	r3,32
  814668:	156b883a 	add	r21,r2,r21
  81466c:	1d69c83a 	sub	r20,r3,r21
  814670:	a000631e 	bne	r20,zero,814800 <__umoddi3+0x2ec>
  814674:	3c400136 	bltu	r7,r17,81467c <__umoddi3+0x168>
  814678:	81810436 	bltu	r16,r6,814a8c <__umoddi3+0x578>
  81467c:	8185c83a 	sub	r2,r16,r6
  814680:	89e3c83a 	sub	r17,r17,r7
  814684:	8087803a 	cmpltu	r3,r16,r2
  814688:	88efc83a 	sub	r23,r17,r3
  81468c:	b807883a 	mov	r3,r23
  814690:	00003f06 	br	814790 <__umoddi3+0x27c>
  814694:	3000041e 	bne	r6,zero,8146a8 <__umoddi3+0x194>
  814698:	01000044 	movi	r4,1
  81469c:	000b883a 	mov	r5,zero
  8146a0:	0814bc00 	call	814bc0 <__udivsi3>
  8146a4:	1027883a 	mov	r19,r2
  8146a8:	00bfffd4 	movui	r2,65535
  8146ac:	14c04f2e 	bgeu	r2,r19,8147ec <__umoddi3+0x2d8>
  8146b0:	00804034 	movhi	r2,256
  8146b4:	10bfffc4 	addi	r2,r2,-1
  8146b8:	14c0e42e 	bgeu	r2,r19,814a4c <__umoddi3+0x538>
  8146bc:	00800604 	movi	r2,24
  8146c0:	1007883a 	mov	r3,r2
  8146c4:	9884d83a 	srl	r2,r19,r2
  8146c8:	010020b4 	movhi	r4,130
  8146cc:	21305884 	addi	r4,r4,-16030
  8146d0:	2085883a 	add	r2,r4,r2
  8146d4:	11000003 	ldbu	r4,0(r2)
  8146d8:	00800804 	movi	r2,32
  8146dc:	20c7883a 	add	r3,r4,r3
  8146e0:	10c5c83a 	sub	r2,r2,r3
  8146e4:	10009a1e 	bne	r2,zero,814950 <__umoddi3+0x43c>
  8146e8:	982cd43a 	srli	r22,r19,16
  8146ec:	8ce3c83a 	sub	r17,r17,r19
  8146f0:	9c3fffcc 	andi	r16,r19,65535
  8146f4:	0025883a 	mov	r18,zero
  8146f8:	8809883a 	mov	r4,r17
  8146fc:	b00b883a 	mov	r5,r22
  814700:	0814bc80 	call	814bc8 <__umodsi3>
  814704:	8809883a 	mov	r4,r17
  814708:	b00b883a 	mov	r5,r22
  81470c:	102b883a 	mov	r21,r2
  814710:	0814bc00 	call	814bc0 <__udivsi3>
  814714:	a806943a 	slli	r3,r21,16
  814718:	a008d43a 	srli	r4,r20,16
  81471c:	1405383a 	mul	r2,r2,r16
  814720:	190cb03a 	or	r6,r3,r4
  814724:	3080032e 	bgeu	r6,r2,814734 <__umoddi3+0x220>
  814728:	34cd883a 	add	r6,r6,r19
  81472c:	34c00136 	bltu	r6,r19,814734 <__umoddi3+0x220>
  814730:	3080d436 	bltu	r6,r2,814a84 <__umoddi3+0x570>
  814734:	30abc83a 	sub	r21,r6,r2
  814738:	a809883a 	mov	r4,r21
  81473c:	b00b883a 	mov	r5,r22
  814740:	0814bc80 	call	814bc8 <__umodsi3>
  814744:	1023883a 	mov	r17,r2
  814748:	a809883a 	mov	r4,r21
  81474c:	b00b883a 	mov	r5,r22
  814750:	0814bc00 	call	814bc0 <__udivsi3>
  814754:	8822943a 	slli	r17,r17,16
  814758:	1405383a 	mul	r2,r2,r16
  81475c:	a13fffcc 	andi	r4,r20,65535
  814760:	8906b03a 	or	r3,r17,r4
  814764:	1880042e 	bgeu	r3,r2,814778 <__umoddi3+0x264>
  814768:	1cc7883a 	add	r3,r3,r19
  81476c:	1cc00236 	bltu	r3,r19,814778 <__umoddi3+0x264>
  814770:	1880012e 	bgeu	r3,r2,814778 <__umoddi3+0x264>
  814774:	1cc7883a 	add	r3,r3,r19
  814778:	1887c83a 	sub	r3,r3,r2
  81477c:	1c84d83a 	srl	r2,r3,r18
  814780:	0007883a 	mov	r3,zero
  814784:	00000206 	br	814790 <__umoddi3+0x27c>
  814788:	2005883a 	mov	r2,r4
  81478c:	2807883a 	mov	r3,r5
  814790:	dfc00b17 	ldw	ra,44(sp)
  814794:	df000a17 	ldw	fp,40(sp)
  814798:	ddc00917 	ldw	r23,36(sp)
  81479c:	dd800817 	ldw	r22,32(sp)
  8147a0:	dd400717 	ldw	r21,28(sp)
  8147a4:	dd000617 	ldw	r20,24(sp)
  8147a8:	dcc00517 	ldw	r19,20(sp)
  8147ac:	dc800417 	ldw	r18,16(sp)
  8147b0:	dc400317 	ldw	r17,12(sp)
  8147b4:	dc000217 	ldw	r16,8(sp)
  8147b8:	dec00c04 	addi	sp,sp,48
  8147bc:	f800283a 	ret
  8147c0:	00803fc4 	movi	r2,255
  8147c4:	11c0952e 	bgeu	r2,r7,814a1c <__umoddi3+0x508>
  8147c8:	01400204 	movi	r5,8
  8147cc:	282b883a 	mov	r21,r5
  8147d0:	003f9f06 	br	814650 <__alt_data_end+0xff814650>
  8147d4:	00804034 	movhi	r2,256
  8147d8:	10bfffc4 	addi	r2,r2,-1
  8147dc:	1180952e 	bgeu	r2,r6,814a34 <__umoddi3+0x520>
  8147e0:	01400604 	movi	r5,24
  8147e4:	2805883a 	mov	r2,r5
  8147e8:	003f6206 	br	814574 <__alt_data_end+0xff814574>
  8147ec:	00803fc4 	movi	r2,255
  8147f0:	14c0932e 	bgeu	r2,r19,814a40 <__umoddi3+0x52c>
  8147f4:	00800204 	movi	r2,8
  8147f8:	1007883a 	mov	r3,r2
  8147fc:	003fb106 	br	8146c4 <__alt_data_end+0xff8146c4>
  814800:	3548d83a 	srl	r4,r6,r21
  814804:	3d0e983a 	sll	r7,r7,r20
  814808:	8d10983a 	sll	r8,r17,r20
  81480c:	8d6cd83a 	srl	r22,r17,r21
  814810:	3922b03a 	or	r17,r7,r4
  814814:	882ed43a 	srli	r23,r17,16
  814818:	8564d83a 	srl	r18,r16,r21
  81481c:	b009883a 	mov	r4,r22
  814820:	b80b883a 	mov	r5,r23
  814824:	44a4b03a 	or	r18,r8,r18
  814828:	3526983a 	sll	r19,r6,r20
  81482c:	0814bc80 	call	814bc8 <__umodsi3>
  814830:	b009883a 	mov	r4,r22
  814834:	b80b883a 	mov	r5,r23
  814838:	1039883a 	mov	fp,r2
  81483c:	0814bc00 	call	814bc0 <__udivsi3>
  814840:	102d883a 	mov	r22,r2
  814844:	8a3fffcc 	andi	r8,r17,65535
  814848:	e004943a 	slli	r2,fp,16
  81484c:	900cd43a 	srli	r6,r18,16
  814850:	b239383a 	mul	fp,r22,r8
  814854:	8520983a 	sll	r16,r16,r20
  814858:	118ab03a 	or	r5,r2,r6
  81485c:	2f00042e 	bgeu	r5,fp,814870 <__umoddi3+0x35c>
  814860:	2c4b883a 	add	r5,r5,r17
  814864:	b0bfffc4 	addi	r2,r22,-1
  814868:	2c40822e 	bgeu	r5,r17,814a74 <__umoddi3+0x560>
  81486c:	102d883a 	mov	r22,r2
  814870:	2f39c83a 	sub	fp,r5,fp
  814874:	e009883a 	mov	r4,fp
  814878:	b80b883a 	mov	r5,r23
  81487c:	da000115 	stw	r8,4(sp)
  814880:	0814bc80 	call	814bc8 <__umodsi3>
  814884:	e009883a 	mov	r4,fp
  814888:	b80b883a 	mov	r5,r23
  81488c:	d8800015 	stw	r2,0(sp)
  814890:	0814bc00 	call	814bc0 <__udivsi3>
  814894:	d9800017 	ldw	r6,0(sp)
  814898:	da000117 	ldw	r8,4(sp)
  81489c:	94bfffcc 	andi	r18,r18,65535
  8148a0:	300c943a 	slli	r6,r6,16
  8148a4:	1209383a 	mul	r4,r2,r8
  8148a8:	3490b03a 	or	r8,r6,r18
  8148ac:	4100042e 	bgeu	r8,r4,8148c0 <__umoddi3+0x3ac>
  8148b0:	4451883a 	add	r8,r8,r17
  8148b4:	10ffffc4 	addi	r3,r2,-1
  8148b8:	44406a2e 	bgeu	r8,r17,814a64 <__umoddi3+0x550>
  8148bc:	1805883a 	mov	r2,r3
  8148c0:	b012943a 	slli	r9,r22,16
  8148c4:	9abfffcc 	andi	r10,r19,65535
  8148c8:	980ed43a 	srli	r7,r19,16
  8148cc:	124ab03a 	or	r5,r2,r9
  8148d0:	2a7fffcc 	andi	r9,r5,65535
  8148d4:	280ad43a 	srli	r5,r5,16
  8148d8:	4a8d383a 	mul	r6,r9,r10
  8148dc:	49d3383a 	mul	r9,r9,r7
  8148e0:	2a95383a 	mul	r10,r5,r10
  8148e4:	3004d43a 	srli	r2,r6,16
  8148e8:	4111c83a 	sub	r8,r8,r4
  8148ec:	5253883a 	add	r9,r10,r9
  8148f0:	4893883a 	add	r9,r9,r2
  8148f4:	29cb383a 	mul	r5,r5,r7
  8148f8:	4a80022e 	bgeu	r9,r10,814904 <__umoddi3+0x3f0>
  8148fc:	00800074 	movhi	r2,1
  814900:	288b883a 	add	r5,r5,r2
  814904:	4808d43a 	srli	r4,r9,16
  814908:	4812943a 	slli	r9,r9,16
  81490c:	31bfffcc 	andi	r6,r6,65535
  814910:	290b883a 	add	r5,r5,r4
  814914:	498d883a 	add	r6,r9,r6
  814918:	41403a36 	bltu	r8,r5,814a04 <__umoddi3+0x4f0>
  81491c:	41405d26 	beq	r8,r5,814a94 <__umoddi3+0x580>
  814920:	4149c83a 	sub	r4,r8,r5
  814924:	300f883a 	mov	r7,r6
  814928:	81cfc83a 	sub	r7,r16,r7
  81492c:	81c7803a 	cmpltu	r3,r16,r7
  814930:	20c7c83a 	sub	r3,r4,r3
  814934:	1d44983a 	sll	r2,r3,r21
  814938:	3d0ed83a 	srl	r7,r7,r20
  81493c:	1d06d83a 	srl	r3,r3,r20
  814940:	11c4b03a 	or	r2,r2,r7
  814944:	003f9206 	br	814790 <__alt_data_end+0xff814790>
  814948:	0025883a 	mov	r18,zero
  81494c:	003f1806 	br	8145b0 <__alt_data_end+0xff8145b0>
  814950:	98a6983a 	sll	r19,r19,r2
  814954:	88e8d83a 	srl	r20,r17,r3
  814958:	80c6d83a 	srl	r3,r16,r3
  81495c:	982cd43a 	srli	r22,r19,16
  814960:	88a2983a 	sll	r17,r17,r2
  814964:	a009883a 	mov	r4,r20
  814968:	b00b883a 	mov	r5,r22
  81496c:	88eab03a 	or	r21,r17,r3
  814970:	1025883a 	mov	r18,r2
  814974:	0814bc80 	call	814bc8 <__umodsi3>
  814978:	a009883a 	mov	r4,r20
  81497c:	b00b883a 	mov	r5,r22
  814980:	1023883a 	mov	r17,r2
  814984:	0814bc00 	call	814bc0 <__udivsi3>
  814988:	9f3fffcc 	andi	fp,r19,65535
  81498c:	8822943a 	slli	r17,r17,16
  814990:	a80ad43a 	srli	r5,r21,16
  814994:	1705383a 	mul	r2,r2,fp
  814998:	84a8983a 	sll	r20,r16,r18
  81499c:	8948b03a 	or	r4,r17,r5
  8149a0:	2080042e 	bgeu	r4,r2,8149b4 <__umoddi3+0x4a0>
  8149a4:	24c9883a 	add	r4,r4,r19
  8149a8:	24c00236 	bltu	r4,r19,8149b4 <__umoddi3+0x4a0>
  8149ac:	2080012e 	bgeu	r4,r2,8149b4 <__umoddi3+0x4a0>
  8149b0:	24c9883a 	add	r4,r4,r19
  8149b4:	20afc83a 	sub	r23,r4,r2
  8149b8:	b809883a 	mov	r4,r23
  8149bc:	b00b883a 	mov	r5,r22
  8149c0:	0814bc80 	call	814bc8 <__umodsi3>
  8149c4:	1023883a 	mov	r17,r2
  8149c8:	b809883a 	mov	r4,r23
  8149cc:	b00b883a 	mov	r5,r22
  8149d0:	0814bc00 	call	814bc0 <__udivsi3>
  8149d4:	8822943a 	slli	r17,r17,16
  8149d8:	1705383a 	mul	r2,r2,fp
  8149dc:	a93fffcc 	andi	r4,r21,65535
  8149e0:	8908b03a 	or	r4,r17,r4
  8149e4:	2080042e 	bgeu	r4,r2,8149f8 <__umoddi3+0x4e4>
  8149e8:	24c9883a 	add	r4,r4,r19
  8149ec:	24c00236 	bltu	r4,r19,8149f8 <__umoddi3+0x4e4>
  8149f0:	2080012e 	bgeu	r4,r2,8149f8 <__umoddi3+0x4e4>
  8149f4:	24c9883a 	add	r4,r4,r19
  8149f8:	20a3c83a 	sub	r17,r4,r2
  8149fc:	e021883a 	mov	r16,fp
  814a00:	003f3d06 	br	8146f8 <__alt_data_end+0xff8146f8>
  814a04:	34cfc83a 	sub	r7,r6,r19
  814a08:	2c4bc83a 	sub	r5,r5,r17
  814a0c:	31cd803a 	cmpltu	r6,r6,r7
  814a10:	298dc83a 	sub	r6,r5,r6
  814a14:	4189c83a 	sub	r4,r8,r6
  814a18:	003fc306 	br	814928 <__alt_data_end+0xff814928>
  814a1c:	000b883a 	mov	r5,zero
  814a20:	002b883a 	mov	r21,zero
  814a24:	003f0a06 	br	814650 <__alt_data_end+0xff814650>
  814a28:	01400404 	movi	r5,16
  814a2c:	282b883a 	mov	r21,r5
  814a30:	003f0706 	br	814650 <__alt_data_end+0xff814650>
  814a34:	01400404 	movi	r5,16
  814a38:	2805883a 	mov	r2,r5
  814a3c:	003ecd06 	br	814574 <__alt_data_end+0xff814574>
  814a40:	0005883a 	mov	r2,zero
  814a44:	0007883a 	mov	r3,zero
  814a48:	003f1e06 	br	8146c4 <__alt_data_end+0xff8146c4>
  814a4c:	00800404 	movi	r2,16
  814a50:	1007883a 	mov	r3,r2
  814a54:	003f1b06 	br	8146c4 <__alt_data_end+0xff8146c4>
  814a58:	000b883a 	mov	r5,zero
  814a5c:	0005883a 	mov	r2,zero
  814a60:	003ec406 	br	814574 <__alt_data_end+0xff814574>
  814a64:	413f952e 	bgeu	r8,r4,8148bc <__alt_data_end+0xff8148bc>
  814a68:	10bfff84 	addi	r2,r2,-2
  814a6c:	4451883a 	add	r8,r8,r17
  814a70:	003f9306 	br	8148c0 <__alt_data_end+0xff8148c0>
  814a74:	2f3f7d2e 	bgeu	r5,fp,81486c <__alt_data_end+0xff81486c>
  814a78:	b5bfff84 	addi	r22,r22,-2
  814a7c:	2c4b883a 	add	r5,r5,r17
  814a80:	003f7b06 	br	814870 <__alt_data_end+0xff814870>
  814a84:	34cd883a 	add	r6,r6,r19
  814a88:	003f2a06 	br	814734 <__alt_data_end+0xff814734>
  814a8c:	8005883a 	mov	r2,r16
  814a90:	003efe06 	br	81468c <__alt_data_end+0xff81468c>
  814a94:	81bfdb36 	bltu	r16,r6,814a04 <__alt_data_end+0xff814a04>
  814a98:	300f883a 	mov	r7,r6
  814a9c:	0009883a 	mov	r4,zero
  814aa0:	003fa106 	br	814928 <__alt_data_end+0xff814928>

00814aa4 <udivmodsi4>:
  814aa4:	2900182e 	bgeu	r5,r4,814b08 <udivmodsi4+0x64>
  814aa8:	28001716 	blt	r5,zero,814b08 <udivmodsi4+0x64>
  814aac:	00800804 	movi	r2,32
  814ab0:	00c00044 	movi	r3,1
  814ab4:	00000206 	br	814ac0 <udivmodsi4+0x1c>
  814ab8:	10001126 	beq	r2,zero,814b00 <udivmodsi4+0x5c>
  814abc:	28000516 	blt	r5,zero,814ad4 <udivmodsi4+0x30>
  814ac0:	294b883a 	add	r5,r5,r5
  814ac4:	10bfffc4 	addi	r2,r2,-1
  814ac8:	18c7883a 	add	r3,r3,r3
  814acc:	293ffa36 	bltu	r5,r4,814ab8 <__alt_data_end+0xff814ab8>
  814ad0:	18000b26 	beq	r3,zero,814b00 <udivmodsi4+0x5c>
  814ad4:	0005883a 	mov	r2,zero
  814ad8:	21400236 	bltu	r4,r5,814ae4 <udivmodsi4+0x40>
  814adc:	2149c83a 	sub	r4,r4,r5
  814ae0:	10c4b03a 	or	r2,r2,r3
  814ae4:	1806d07a 	srli	r3,r3,1
  814ae8:	280ad07a 	srli	r5,r5,1
  814aec:	183ffa1e 	bne	r3,zero,814ad8 <__alt_data_end+0xff814ad8>
  814af0:	3000011e 	bne	r6,zero,814af8 <udivmodsi4+0x54>
  814af4:	f800283a 	ret
  814af8:	2005883a 	mov	r2,r4
  814afc:	f800283a 	ret
  814b00:	0005883a 	mov	r2,zero
  814b04:	003ffa06 	br	814af0 <__alt_data_end+0xff814af0>
  814b08:	00c00044 	movi	r3,1
  814b0c:	003ff106 	br	814ad4 <__alt_data_end+0xff814ad4>

00814b10 <__divsi3>:
  814b10:	defffe04 	addi	sp,sp,-8
  814b14:	dfc00115 	stw	ra,4(sp)
  814b18:	dc000015 	stw	r16,0(sp)
  814b1c:	20000b16 	blt	r4,zero,814b4c <__divsi3+0x3c>
  814b20:	0021883a 	mov	r16,zero
  814b24:	28000c16 	blt	r5,zero,814b58 <__divsi3+0x48>
  814b28:	000d883a 	mov	r6,zero
  814b2c:	0814aa40 	call	814aa4 <udivmodsi4>
  814b30:	0407c83a 	sub	r3,zero,r16
  814b34:	1884f03a 	xor	r2,r3,r2
  814b38:	1405883a 	add	r2,r2,r16
  814b3c:	dfc00117 	ldw	ra,4(sp)
  814b40:	dc000017 	ldw	r16,0(sp)
  814b44:	dec00204 	addi	sp,sp,8
  814b48:	f800283a 	ret
  814b4c:	0109c83a 	sub	r4,zero,r4
  814b50:	04000044 	movi	r16,1
  814b54:	283ff40e 	bge	r5,zero,814b28 <__alt_data_end+0xff814b28>
  814b58:	014bc83a 	sub	r5,zero,r5
  814b5c:	8400005c 	xori	r16,r16,1
  814b60:	003ff106 	br	814b28 <__alt_data_end+0xff814b28>

00814b64 <__modsi3>:
  814b64:	defffd04 	addi	sp,sp,-12
  814b68:	dfc00215 	stw	ra,8(sp)
  814b6c:	dc400115 	stw	r17,4(sp)
  814b70:	dc000015 	stw	r16,0(sp)
  814b74:	20000c16 	blt	r4,zero,814ba8 <__modsi3+0x44>
  814b78:	0023883a 	mov	r17,zero
  814b7c:	0021883a 	mov	r16,zero
  814b80:	28000d16 	blt	r5,zero,814bb8 <__modsi3+0x54>
  814b84:	01800044 	movi	r6,1
  814b88:	0814aa40 	call	814aa4 <udivmodsi4>
  814b8c:	1404f03a 	xor	r2,r2,r16
  814b90:	8885883a 	add	r2,r17,r2
  814b94:	dfc00217 	ldw	ra,8(sp)
  814b98:	dc400117 	ldw	r17,4(sp)
  814b9c:	dc000017 	ldw	r16,0(sp)
  814ba0:	dec00304 	addi	sp,sp,12
  814ba4:	f800283a 	ret
  814ba8:	0109c83a 	sub	r4,zero,r4
  814bac:	04400044 	movi	r17,1
  814bb0:	043fffc4 	movi	r16,-1
  814bb4:	283ff30e 	bge	r5,zero,814b84 <__alt_data_end+0xff814b84>
  814bb8:	014bc83a 	sub	r5,zero,r5
  814bbc:	003ff106 	br	814b84 <__alt_data_end+0xff814b84>

00814bc0 <__udivsi3>:
  814bc0:	000d883a 	mov	r6,zero
  814bc4:	0814aa41 	jmpi	814aa4 <udivmodsi4>

00814bc8 <__umodsi3>:
  814bc8:	01800044 	movi	r6,1
  814bcc:	0814aa41 	jmpi	814aa4 <udivmodsi4>

00814bd0 <__eqsf2>:
  814bd0:	2006d5fa 	srli	r3,r4,23
  814bd4:	280cd5fa 	srli	r6,r5,23
  814bd8:	01c02034 	movhi	r7,128
  814bdc:	39ffffc4 	addi	r7,r7,-1
  814be0:	18c03fcc 	andi	r3,r3,255
  814be4:	02003fc4 	movi	r8,255
  814be8:	3904703a 	and	r2,r7,r4
  814bec:	31803fcc 	andi	r6,r6,255
  814bf0:	394e703a 	and	r7,r7,r5
  814bf4:	2008d7fa 	srli	r4,r4,31
  814bf8:	280ad7fa 	srli	r5,r5,31
  814bfc:	1a000c26 	beq	r3,r8,814c30 <__eqsf2+0x60>
  814c00:	02003fc4 	movi	r8,255
  814c04:	32000326 	beq	r6,r8,814c14 <__eqsf2+0x44>
  814c08:	19800426 	beq	r3,r6,814c1c <__eqsf2+0x4c>
  814c0c:	00800044 	movi	r2,1
  814c10:	f800283a 	ret
  814c14:	383ffd1e 	bne	r7,zero,814c0c <__alt_data_end+0xff814c0c>
  814c18:	19bffc1e 	bne	r3,r6,814c0c <__alt_data_end+0xff814c0c>
  814c1c:	11fffb1e 	bne	r2,r7,814c0c <__alt_data_end+0xff814c0c>
  814c20:	21400626 	beq	r4,r5,814c3c <__eqsf2+0x6c>
  814c24:	183ff91e 	bne	r3,zero,814c0c <__alt_data_end+0xff814c0c>
  814c28:	1004c03a 	cmpne	r2,r2,zero
  814c2c:	f800283a 	ret
  814c30:	103ff326 	beq	r2,zero,814c00 <__alt_data_end+0xff814c00>
  814c34:	00800044 	movi	r2,1
  814c38:	f800283a 	ret
  814c3c:	0005883a 	mov	r2,zero
  814c40:	f800283a 	ret

00814c44 <__gesf2>:
  814c44:	2004d5fa 	srli	r2,r4,23
  814c48:	2806d5fa 	srli	r3,r5,23
  814c4c:	01802034 	movhi	r6,128
  814c50:	31bfffc4 	addi	r6,r6,-1
  814c54:	10803fcc 	andi	r2,r2,255
  814c58:	01c03fc4 	movi	r7,255
  814c5c:	3110703a 	and	r8,r6,r4
  814c60:	18c03fcc 	andi	r3,r3,255
  814c64:	314c703a 	and	r6,r6,r5
  814c68:	2008d7fa 	srli	r4,r4,31
  814c6c:	280ad7fa 	srli	r5,r5,31
  814c70:	11c00926 	beq	r2,r7,814c98 <__gesf2+0x54>
  814c74:	19c01226 	beq	r3,r7,814cc0 <__gesf2+0x7c>
  814c78:	1000091e 	bne	r2,zero,814ca0 <__gesf2+0x5c>
  814c7c:	4013003a 	cmpeq	r9,r8,zero
  814c80:	480f883a 	mov	r7,r9
  814c84:	1800091e 	bne	r3,zero,814cac <__gesf2+0x68>
  814c88:	3000081e 	bne	r6,zero,814cac <__gesf2+0x68>
  814c8c:	48001026 	beq	r9,zero,814cd0 <__gesf2+0x8c>
  814c90:	0005883a 	mov	r2,zero
  814c94:	f800283a 	ret
  814c98:	4000161e 	bne	r8,zero,814cf4 <__gesf2+0xb0>
  814c9c:	18800826 	beq	r3,r2,814cc0 <__gesf2+0x7c>
  814ca0:	1800091e 	bne	r3,zero,814cc8 <__gesf2+0x84>
  814ca4:	000f883a 	mov	r7,zero
  814ca8:	30000926 	beq	r6,zero,814cd0 <__gesf2+0x8c>
  814cac:	29403fcc 	andi	r5,r5,255
  814cb0:	38000626 	beq	r7,zero,814ccc <__gesf2+0x88>
  814cb4:	2800071e 	bne	r5,zero,814cd4 <__gesf2+0x90>
  814cb8:	00bfffc4 	movi	r2,-1
  814cbc:	f800283a 	ret
  814cc0:	30000c1e 	bne	r6,zero,814cf4 <__gesf2+0xb0>
  814cc4:	103fed26 	beq	r2,zero,814c7c <__alt_data_end+0xff814c7c>
  814cc8:	29403fcc 	andi	r5,r5,255
  814ccc:	21400326 	beq	r4,r5,814cdc <__gesf2+0x98>
  814cd0:	203ff91e 	bne	r4,zero,814cb8 <__alt_data_end+0xff814cb8>
  814cd4:	00800044 	movi	r2,1
  814cd8:	f800283a 	ret
  814cdc:	18bffc16 	blt	r3,r2,814cd0 <__alt_data_end+0xff814cd0>
  814ce0:	10c00216 	blt	r2,r3,814cec <__gesf2+0xa8>
  814ce4:	323ffa36 	bltu	r6,r8,814cd0 <__alt_data_end+0xff814cd0>
  814ce8:	41bfe92e 	bgeu	r8,r6,814c90 <__alt_data_end+0xff814c90>
  814cec:	203ff226 	beq	r4,zero,814cb8 <__alt_data_end+0xff814cb8>
  814cf0:	003ff806 	br	814cd4 <__alt_data_end+0xff814cd4>
  814cf4:	00bfff84 	movi	r2,-2
  814cf8:	f800283a 	ret

00814cfc <__lesf2>:
  814cfc:	2004d5fa 	srli	r2,r4,23
  814d00:	280cd5fa 	srli	r6,r5,23
  814d04:	00c02034 	movhi	r3,128
  814d08:	18ffffc4 	addi	r3,r3,-1
  814d0c:	10803fcc 	andi	r2,r2,255
  814d10:	01c03fc4 	movi	r7,255
  814d14:	1910703a 	and	r8,r3,r4
  814d18:	31803fcc 	andi	r6,r6,255
  814d1c:	1946703a 	and	r3,r3,r5
  814d20:	2008d7fa 	srli	r4,r4,31
  814d24:	280ad7fa 	srli	r5,r5,31
  814d28:	11c00a26 	beq	r2,r7,814d54 <__lesf2+0x58>
  814d2c:	31c01526 	beq	r6,r7,814d84 <__lesf2+0x88>
  814d30:	10000a1e 	bne	r2,zero,814d5c <__lesf2+0x60>
  814d34:	4013003a 	cmpeq	r9,r8,zero
  814d38:	480f883a 	mov	r7,r9
  814d3c:	30000d26 	beq	r6,zero,814d74 <__lesf2+0x78>
  814d40:	29403fcc 	andi	r5,r5,255
  814d44:	38001426 	beq	r7,zero,814d98 <__lesf2+0x9c>
  814d48:	2800081e 	bne	r5,zero,814d6c <__lesf2+0x70>
  814d4c:	00bfffc4 	movi	r2,-1
  814d50:	f800283a 	ret
  814d54:	40000c1e 	bne	r8,zero,814d88 <__lesf2+0x8c>
  814d58:	30800a26 	beq	r6,r2,814d84 <__lesf2+0x88>
  814d5c:	30000d1e 	bne	r6,zero,814d94 <__lesf2+0x98>
  814d60:	000f883a 	mov	r7,zero
  814d64:	183ff61e 	bne	r3,zero,814d40 <__alt_data_end+0xff814d40>
  814d68:	203ff81e 	bne	r4,zero,814d4c <__alt_data_end+0xff814d4c>
  814d6c:	00800044 	movi	r2,1
  814d70:	f800283a 	ret
  814d74:	183ff21e 	bne	r3,zero,814d40 <__alt_data_end+0xff814d40>
  814d78:	483ffb26 	beq	r9,zero,814d68 <__alt_data_end+0xff814d68>
  814d7c:	0005883a 	mov	r2,zero
  814d80:	f800283a 	ret
  814d84:	18000226 	beq	r3,zero,814d90 <__lesf2+0x94>
  814d88:	00800084 	movi	r2,2
  814d8c:	f800283a 	ret
  814d90:	103fe826 	beq	r2,zero,814d34 <__alt_data_end+0xff814d34>
  814d94:	29403fcc 	andi	r5,r5,255
  814d98:	217ff31e 	bne	r4,r5,814d68 <__alt_data_end+0xff814d68>
  814d9c:	30bff216 	blt	r6,r2,814d68 <__alt_data_end+0xff814d68>
  814da0:	11800216 	blt	r2,r6,814dac <__lesf2+0xb0>
  814da4:	1a3ff036 	bltu	r3,r8,814d68 <__alt_data_end+0xff814d68>
  814da8:	40fff42e 	bgeu	r8,r3,814d7c <__alt_data_end+0xff814d7c>
  814dac:	203fe726 	beq	r4,zero,814d4c <__alt_data_end+0xff814d4c>
  814db0:	003fee06 	br	814d6c <__alt_data_end+0xff814d6c>

00814db4 <__adddf3>:
  814db4:	02000434 	movhi	r8,16
  814db8:	423fffc4 	addi	r8,r8,-1
  814dbc:	defffb04 	addi	sp,sp,-20
  814dc0:	2a12703a 	and	r9,r5,r8
  814dc4:	2806d7fa 	srli	r3,r5,31
  814dc8:	3a10703a 	and	r8,r7,r8
  814dcc:	3804d53a 	srli	r2,r7,20
  814dd0:	3014d77a 	srli	r10,r6,29
  814dd4:	dc000015 	stw	r16,0(sp)
  814dd8:	481290fa 	slli	r9,r9,3
  814ddc:	2820d53a 	srli	r16,r5,20
  814de0:	401090fa 	slli	r8,r8,3
  814de4:	200ad77a 	srli	r5,r4,29
  814de8:	380ed7fa 	srli	r7,r7,31
  814dec:	dc800215 	stw	r18,8(sp)
  814df0:	dc400115 	stw	r17,4(sp)
  814df4:	dfc00415 	stw	ra,16(sp)
  814df8:	dcc00315 	stw	r19,12(sp)
  814dfc:	1c803fcc 	andi	r18,r3,255
  814e00:	8401ffcc 	andi	r16,r16,2047
  814e04:	494ab03a 	or	r5,r9,r5
  814e08:	202290fa 	slli	r17,r4,3
  814e0c:	1081ffcc 	andi	r2,r2,2047
  814e10:	4290b03a 	or	r8,r8,r10
  814e14:	300c90fa 	slli	r6,r6,3
  814e18:	91c07026 	beq	r18,r7,814fdc <__adddf3+0x228>
  814e1c:	8087c83a 	sub	r3,r16,r2
  814e20:	00c0b30e 	bge	zero,r3,8150f0 <__adddf3+0x33c>
  814e24:	10002a1e 	bne	r2,zero,814ed0 <__adddf3+0x11c>
  814e28:	4184b03a 	or	r2,r8,r6
  814e2c:	1000991e 	bne	r2,zero,815094 <__adddf3+0x2e0>
  814e30:	888001cc 	andi	r2,r17,7
  814e34:	10005b26 	beq	r2,zero,814fa4 <__adddf3+0x1f0>
  814e38:	88c003cc 	andi	r3,r17,15
  814e3c:	00800104 	movi	r2,4
  814e40:	18805826 	beq	r3,r2,814fa4 <__adddf3+0x1f0>
  814e44:	89800104 	addi	r6,r17,4
  814e48:	3463803a 	cmpltu	r17,r6,r17
  814e4c:	2c4b883a 	add	r5,r5,r17
  814e50:	2880202c 	andhi	r2,r5,128
  814e54:	9007883a 	mov	r3,r18
  814e58:	3023883a 	mov	r17,r6
  814e5c:	10005426 	beq	r2,zero,814fb0 <__adddf3+0x1fc>
  814e60:	84000044 	addi	r16,r16,1
  814e64:	0081ffc4 	movi	r2,2047
  814e68:	8080c126 	beq	r16,r2,815170 <__adddf3+0x3bc>
  814e6c:	013fe034 	movhi	r4,65408
  814e70:	213fffc4 	addi	r4,r4,-1
  814e74:	290a703a 	and	r5,r5,r4
  814e78:	2804977a 	slli	r2,r5,29
  814e7c:	280a927a 	slli	r5,r5,9
  814e80:	8822d0fa 	srli	r17,r17,3
  814e84:	8401ffcc 	andi	r16,r16,2047
  814e88:	2808d33a 	srli	r4,r5,12
  814e8c:	1444b03a 	or	r2,r2,r17
  814e90:	8401ffcc 	andi	r16,r16,2047
  814e94:	800a953a 	slli	r5,r16,20
  814e98:	18c03fcc 	andi	r3,r3,255
  814e9c:	04000434 	movhi	r16,16
  814ea0:	180697fa 	slli	r3,r3,31
  814ea4:	843fffc4 	addi	r16,r16,-1
  814ea8:	2420703a 	and	r16,r4,r16
  814eac:	8160b03a 	or	r16,r16,r5
  814eb0:	80c6b03a 	or	r3,r16,r3
  814eb4:	dfc00417 	ldw	ra,16(sp)
  814eb8:	dcc00317 	ldw	r19,12(sp)
  814ebc:	dc800217 	ldw	r18,8(sp)
  814ec0:	dc400117 	ldw	r17,4(sp)
  814ec4:	dc000017 	ldw	r16,0(sp)
  814ec8:	dec00504 	addi	sp,sp,20
  814ecc:	f800283a 	ret
  814ed0:	0081ffc4 	movi	r2,2047
  814ed4:	80bfd626 	beq	r16,r2,814e30 <__alt_data_end+0xff814e30>
  814ed8:	42002034 	orhi	r8,r8,128
  814edc:	00800e04 	movi	r2,56
  814ee0:	10c0a616 	blt	r2,r3,81517c <__adddf3+0x3c8>
  814ee4:	008007c4 	movi	r2,31
  814ee8:	10c0c916 	blt	r2,r3,815210 <__adddf3+0x45c>
  814eec:	00800804 	movi	r2,32
  814ef0:	10c5c83a 	sub	r2,r2,r3
  814ef4:	408e983a 	sll	r7,r8,r2
  814ef8:	30c8d83a 	srl	r4,r6,r3
  814efc:	3084983a 	sll	r2,r6,r2
  814f00:	40c6d83a 	srl	r3,r8,r3
  814f04:	390cb03a 	or	r6,r7,r4
  814f08:	1004c03a 	cmpne	r2,r2,zero
  814f0c:	308cb03a 	or	r6,r6,r2
  814f10:	898dc83a 	sub	r6,r17,r6
  814f14:	89a3803a 	cmpltu	r17,r17,r6
  814f18:	28cbc83a 	sub	r5,r5,r3
  814f1c:	2c4bc83a 	sub	r5,r5,r17
  814f20:	3023883a 	mov	r17,r6
  814f24:	2880202c 	andhi	r2,r5,128
  814f28:	10006d26 	beq	r2,zero,8150e0 <__adddf3+0x32c>
  814f2c:	04c02034 	movhi	r19,128
  814f30:	9cffffc4 	addi	r19,r19,-1
  814f34:	2ce6703a 	and	r19,r5,r19
  814f38:	98007e26 	beq	r19,zero,815134 <__adddf3+0x380>
  814f3c:	9809883a 	mov	r4,r19
  814f40:	08174e80 	call	8174e8 <__clzsi2>
  814f44:	10fffe04 	addi	r3,r2,-8
  814f48:	010007c4 	movi	r4,31
  814f4c:	20c07f16 	blt	r4,r3,81514c <__adddf3+0x398>
  814f50:	01400a04 	movi	r5,40
  814f54:	2885c83a 	sub	r2,r5,r2
  814f58:	888ad83a 	srl	r5,r17,r2
  814f5c:	98e6983a 	sll	r19,r19,r3
  814f60:	88e2983a 	sll	r17,r17,r3
  814f64:	2ce6b03a 	or	r19,r5,r19
  814f68:	1c007c16 	blt	r3,r16,81515c <__adddf3+0x3a8>
  814f6c:	1c21c83a 	sub	r16,r3,r16
  814f70:	81400044 	addi	r5,r16,1
  814f74:	00c007c4 	movi	r3,31
  814f78:	19409816 	blt	r3,r5,8151dc <__adddf3+0x428>
  814f7c:	1c21c83a 	sub	r16,r3,r16
  814f80:	8c08983a 	sll	r4,r17,r16
  814f84:	8946d83a 	srl	r3,r17,r5
  814f88:	9c20983a 	sll	r16,r19,r16
  814f8c:	2008c03a 	cmpne	r4,r4,zero
  814f90:	994ad83a 	srl	r5,r19,r5
  814f94:	1c06b03a 	or	r3,r3,r16
  814f98:	1922b03a 	or	r17,r3,r4
  814f9c:	0021883a 	mov	r16,zero
  814fa0:	003fa306 	br	814e30 <__alt_data_end+0xff814e30>
  814fa4:	2880202c 	andhi	r2,r5,128
  814fa8:	9007883a 	mov	r3,r18
  814fac:	103fac1e 	bne	r2,zero,814e60 <__alt_data_end+0xff814e60>
  814fb0:	2804977a 	slli	r2,r5,29
  814fb4:	8822d0fa 	srli	r17,r17,3
  814fb8:	0101ffc4 	movi	r4,2047
  814fbc:	280ad0fa 	srli	r5,r5,3
  814fc0:	1444b03a 	or	r2,r2,r17
  814fc4:	81002c26 	beq	r16,r4,815078 <__adddf3+0x2c4>
  814fc8:	8120703a 	and	r16,r16,r4
  814fcc:	01000434 	movhi	r4,16
  814fd0:	213fffc4 	addi	r4,r4,-1
  814fd4:	2908703a 	and	r4,r5,r4
  814fd8:	003fad06 	br	814e90 <__alt_data_end+0xff814e90>
  814fdc:	8089c83a 	sub	r4,r16,r2
  814fe0:	01006a0e 	bge	zero,r4,81518c <__adddf3+0x3d8>
  814fe4:	10003326 	beq	r2,zero,8150b4 <__adddf3+0x300>
  814fe8:	0081ffc4 	movi	r2,2047
  814fec:	80bf9026 	beq	r16,r2,814e30 <__alt_data_end+0xff814e30>
  814ff0:	42002034 	orhi	r8,r8,128
  814ff4:	00800e04 	movi	r2,56
  814ff8:	1100b116 	blt	r2,r4,8152c0 <__adddf3+0x50c>
  814ffc:	008007c4 	movi	r2,31
  815000:	1100e216 	blt	r2,r4,81538c <__adddf3+0x5d8>
  815004:	00800804 	movi	r2,32
  815008:	1105c83a 	sub	r2,r2,r4
  81500c:	4092983a 	sll	r9,r8,r2
  815010:	310ed83a 	srl	r7,r6,r4
  815014:	3084983a 	sll	r2,r6,r2
  815018:	4110d83a 	srl	r8,r8,r4
  81501c:	49ccb03a 	or	r6,r9,r7
  815020:	1004c03a 	cmpne	r2,r2,zero
  815024:	308cb03a 	or	r6,r6,r2
  815028:	344d883a 	add	r6,r6,r17
  81502c:	3463803a 	cmpltu	r17,r6,r17
  815030:	414b883a 	add	r5,r8,r5
  815034:	2c4b883a 	add	r5,r5,r17
  815038:	3023883a 	mov	r17,r6
  81503c:	2880202c 	andhi	r2,r5,128
  815040:	10002726 	beq	r2,zero,8150e0 <__adddf3+0x32c>
  815044:	84000044 	addi	r16,r16,1
  815048:	0081ffc4 	movi	r2,2047
  81504c:	8080ae26 	beq	r16,r2,815308 <__adddf3+0x554>
  815050:	00bfe034 	movhi	r2,65408
  815054:	10bfffc4 	addi	r2,r2,-1
  815058:	288a703a 	and	r5,r5,r2
  81505c:	880cd07a 	srli	r6,r17,1
  815060:	280897fa 	slli	r4,r5,31
  815064:	88c0004c 	andi	r3,r17,1
  815068:	30e2b03a 	or	r17,r6,r3
  81506c:	280ad07a 	srli	r5,r5,1
  815070:	8922b03a 	or	r17,r17,r4
  815074:	003f6e06 	br	814e30 <__alt_data_end+0xff814e30>
  815078:	1148b03a 	or	r4,r2,r5
  81507c:	20003c26 	beq	r4,zero,815170 <__adddf3+0x3bc>
  815080:	29000234 	orhi	r4,r5,8
  815084:	01400434 	movhi	r5,16
  815088:	297fffc4 	addi	r5,r5,-1
  81508c:	2148703a 	and	r4,r4,r5
  815090:	003f7f06 	br	814e90 <__alt_data_end+0xff814e90>
  815094:	18ffffc4 	addi	r3,r3,-1
  815098:	18004d1e 	bne	r3,zero,8151d0 <__adddf3+0x41c>
  81509c:	898dc83a 	sub	r6,r17,r6
  8150a0:	89a3803a 	cmpltu	r17,r17,r6
  8150a4:	2a0bc83a 	sub	r5,r5,r8
  8150a8:	2c4bc83a 	sub	r5,r5,r17
  8150ac:	3023883a 	mov	r17,r6
  8150b0:	003f9c06 	br	814f24 <__alt_data_end+0xff814f24>
  8150b4:	4184b03a 	or	r2,r8,r6
  8150b8:	103f5d26 	beq	r2,zero,814e30 <__alt_data_end+0xff814e30>
  8150bc:	213fffc4 	addi	r4,r4,-1
  8150c0:	203fd926 	beq	r4,zero,815028 <__alt_data_end+0xff815028>
  8150c4:	0081ffc4 	movi	r2,2047
  8150c8:	80bfca1e 	bne	r16,r2,814ff4 <__alt_data_end+0xff814ff4>
  8150cc:	003f5806 	br	814e30 <__alt_data_end+0xff814e30>
  8150d0:	10c8b03a 	or	r4,r2,r3
  8150d4:	20008b26 	beq	r4,zero,815304 <__adddf3+0x550>
  8150d8:	100b883a 	mov	r5,r2
  8150dc:	1823883a 	mov	r17,r3
  8150e0:	888001cc 	andi	r2,r17,7
  8150e4:	103f541e 	bne	r2,zero,814e38 <__alt_data_end+0xff814e38>
  8150e8:	9007883a 	mov	r3,r18
  8150ec:	003fb006 	br	814fb0 <__alt_data_end+0xff814fb0>
  8150f0:	1800531e 	bne	r3,zero,815240 <__adddf3+0x48c>
  8150f4:	80800044 	addi	r2,r16,1
  8150f8:	1081ffcc 	andi	r2,r2,2047
  8150fc:	00c00044 	movi	r3,1
  815100:	1880990e 	bge	r3,r2,815368 <__adddf3+0x5b4>
  815104:	8985c83a 	sub	r2,r17,r6
  815108:	8887803a 	cmpltu	r3,r17,r2
  81510c:	2a27c83a 	sub	r19,r5,r8
  815110:	98e7c83a 	sub	r19,r19,r3
  815114:	98c0202c 	andhi	r3,r19,128
  815118:	18006226 	beq	r3,zero,8152a4 <__adddf3+0x4f0>
  81511c:	3463c83a 	sub	r17,r6,r17
  815120:	4151c83a 	sub	r8,r8,r5
  815124:	344d803a 	cmpltu	r6,r6,r17
  815128:	41a7c83a 	sub	r19,r8,r6
  81512c:	3825883a 	mov	r18,r7
  815130:	983f821e 	bne	r19,zero,814f3c <__alt_data_end+0xff814f3c>
  815134:	8809883a 	mov	r4,r17
  815138:	08174e80 	call	8174e8 <__clzsi2>
  81513c:	10800804 	addi	r2,r2,32
  815140:	10fffe04 	addi	r3,r2,-8
  815144:	010007c4 	movi	r4,31
  815148:	20ff810e 	bge	r4,r3,814f50 <__alt_data_end+0xff814f50>
  81514c:	14fff604 	addi	r19,r2,-40
  815150:	8ce6983a 	sll	r19,r17,r19
  815154:	0023883a 	mov	r17,zero
  815158:	1c3f840e 	bge	r3,r16,814f6c <__alt_data_end+0xff814f6c>
  81515c:	017fe034 	movhi	r5,65408
  815160:	297fffc4 	addi	r5,r5,-1
  815164:	80e1c83a 	sub	r16,r16,r3
  815168:	994a703a 	and	r5,r19,r5
  81516c:	003f3006 	br	814e30 <__alt_data_end+0xff814e30>
  815170:	0009883a 	mov	r4,zero
  815174:	0005883a 	mov	r2,zero
  815178:	003f4506 	br	814e90 <__alt_data_end+0xff814e90>
  81517c:	418cb03a 	or	r6,r8,r6
  815180:	300cc03a 	cmpne	r6,r6,zero
  815184:	0007883a 	mov	r3,zero
  815188:	003f6106 	br	814f10 <__alt_data_end+0xff814f10>
  81518c:	2000921e 	bne	r4,zero,8153d8 <__adddf3+0x624>
  815190:	80800044 	addi	r2,r16,1
  815194:	11c1ffcc 	andi	r7,r2,2047
  815198:	01000044 	movi	r4,1
  81519c:	21c0610e 	bge	r4,r7,815324 <__adddf3+0x570>
  8151a0:	0101ffc4 	movi	r4,2047
  8151a4:	1100a326 	beq	r2,r4,815434 <__adddf3+0x680>
  8151a8:	344d883a 	add	r6,r6,r17
  8151ac:	3463803a 	cmpltu	r17,r6,r17
  8151b0:	414b883a 	add	r5,r8,r5
  8151b4:	2c4b883a 	add	r5,r5,r17
  8151b8:	282297fa 	slli	r17,r5,31
  8151bc:	300cd07a 	srli	r6,r6,1
  8151c0:	280ad07a 	srli	r5,r5,1
  8151c4:	1021883a 	mov	r16,r2
  8151c8:	89a2b03a 	or	r17,r17,r6
  8151cc:	003f1806 	br	814e30 <__alt_data_end+0xff814e30>
  8151d0:	0081ffc4 	movi	r2,2047
  8151d4:	80bf411e 	bne	r16,r2,814edc <__alt_data_end+0xff814edc>
  8151d8:	003f1506 	br	814e30 <__alt_data_end+0xff814e30>
  8151dc:	80bff844 	addi	r2,r16,-31
  8151e0:	00c00804 	movi	r3,32
  8151e4:	9884d83a 	srl	r2,r19,r2
  8151e8:	28c04a26 	beq	r5,r3,815314 <__adddf3+0x560>
  8151ec:	00c00fc4 	movi	r3,63
  8151f0:	1c21c83a 	sub	r16,r3,r16
  8151f4:	9c26983a 	sll	r19,r19,r16
  8151f8:	9c62b03a 	or	r17,r19,r17
  8151fc:	8822c03a 	cmpne	r17,r17,zero
  815200:	88a2b03a 	or	r17,r17,r2
  815204:	000b883a 	mov	r5,zero
  815208:	0021883a 	mov	r16,zero
  81520c:	003fb406 	br	8150e0 <__alt_data_end+0xff8150e0>
  815210:	18bff804 	addi	r2,r3,-32
  815214:	01000804 	movi	r4,32
  815218:	4084d83a 	srl	r2,r8,r2
  81521c:	19003f26 	beq	r3,r4,81531c <__adddf3+0x568>
  815220:	01001004 	movi	r4,64
  815224:	20c7c83a 	sub	r3,r4,r3
  815228:	40d0983a 	sll	r8,r8,r3
  81522c:	418cb03a 	or	r6,r8,r6
  815230:	300cc03a 	cmpne	r6,r6,zero
  815234:	308cb03a 	or	r6,r6,r2
  815238:	0007883a 	mov	r3,zero
  81523c:	003f3406 	br	814f10 <__alt_data_end+0xff814f10>
  815240:	80002326 	beq	r16,zero,8152d0 <__adddf3+0x51c>
  815244:	0101ffc4 	movi	r4,2047
  815248:	11005e26 	beq	r2,r4,8153c4 <__adddf3+0x610>
  81524c:	00c7c83a 	sub	r3,zero,r3
  815250:	29402034 	orhi	r5,r5,128
  815254:	01000e04 	movi	r4,56
  815258:	20c07216 	blt	r4,r3,815424 <__adddf3+0x670>
  81525c:	010007c4 	movi	r4,31
  815260:	20c0ce16 	blt	r4,r3,81559c <__adddf3+0x7e8>
  815264:	01000804 	movi	r4,32
  815268:	20c9c83a 	sub	r4,r4,r3
  81526c:	2914983a 	sll	r10,r5,r4
  815270:	88d2d83a 	srl	r9,r17,r3
  815274:	8908983a 	sll	r4,r17,r4
  815278:	28c6d83a 	srl	r3,r5,r3
  81527c:	5262b03a 	or	r17,r10,r9
  815280:	2008c03a 	cmpne	r4,r4,zero
  815284:	8922b03a 	or	r17,r17,r4
  815288:	3463c83a 	sub	r17,r6,r17
  81528c:	40c7c83a 	sub	r3,r8,r3
  815290:	344d803a 	cmpltu	r6,r6,r17
  815294:	198bc83a 	sub	r5,r3,r6
  815298:	1021883a 	mov	r16,r2
  81529c:	3825883a 	mov	r18,r7
  8152a0:	003f2006 	br	814f24 <__alt_data_end+0xff814f24>
  8152a4:	9886b03a 	or	r3,r19,r2
  8152a8:	1800141e 	bne	r3,zero,8152fc <__adddf3+0x548>
  8152ac:	0007883a 	mov	r3,zero
  8152b0:	000b883a 	mov	r5,zero
  8152b4:	0023883a 	mov	r17,zero
  8152b8:	0021883a 	mov	r16,zero
  8152bc:	003f3c06 	br	814fb0 <__alt_data_end+0xff814fb0>
  8152c0:	418cb03a 	or	r6,r8,r6
  8152c4:	300cc03a 	cmpne	r6,r6,zero
  8152c8:	0011883a 	mov	r8,zero
  8152cc:	003f5606 	br	815028 <__alt_data_end+0xff815028>
  8152d0:	2c48b03a 	or	r4,r5,r17
  8152d4:	20003b26 	beq	r4,zero,8153c4 <__adddf3+0x610>
  8152d8:	00c6303a 	nor	r3,zero,r3
  8152dc:	1800371e 	bne	r3,zero,8153bc <__adddf3+0x608>
  8152e0:	3463c83a 	sub	r17,r6,r17
  8152e4:	414bc83a 	sub	r5,r8,r5
  8152e8:	344d803a 	cmpltu	r6,r6,r17
  8152ec:	298bc83a 	sub	r5,r5,r6
  8152f0:	1021883a 	mov	r16,r2
  8152f4:	3825883a 	mov	r18,r7
  8152f8:	003f0a06 	br	814f24 <__alt_data_end+0xff814f24>
  8152fc:	1023883a 	mov	r17,r2
  815300:	003f0d06 	br	814f38 <__alt_data_end+0xff814f38>
  815304:	0007883a 	mov	r3,zero
  815308:	000b883a 	mov	r5,zero
  81530c:	0023883a 	mov	r17,zero
  815310:	003f2706 	br	814fb0 <__alt_data_end+0xff814fb0>
  815314:	0027883a 	mov	r19,zero
  815318:	003fb706 	br	8151f8 <__alt_data_end+0xff8151f8>
  81531c:	0011883a 	mov	r8,zero
  815320:	003fc206 	br	81522c <__alt_data_end+0xff81522c>
  815324:	2c44b03a 	or	r2,r5,r17
  815328:	8000871e 	bne	r16,zero,815548 <__adddf3+0x794>
  81532c:	1000b126 	beq	r2,zero,8155f4 <__adddf3+0x840>
  815330:	4184b03a 	or	r2,r8,r6
  815334:	103ebe26 	beq	r2,zero,814e30 <__alt_data_end+0xff814e30>
  815338:	3445883a 	add	r2,r6,r17
  81533c:	1463803a 	cmpltu	r17,r2,r17
  815340:	414b883a 	add	r5,r8,r5
  815344:	2c4b883a 	add	r5,r5,r17
  815348:	28c0202c 	andhi	r3,r5,128
  81534c:	1023883a 	mov	r17,r2
  815350:	183f6326 	beq	r3,zero,8150e0 <__alt_data_end+0xff8150e0>
  815354:	00bfe034 	movhi	r2,65408
  815358:	10bfffc4 	addi	r2,r2,-1
  81535c:	2021883a 	mov	r16,r4
  815360:	288a703a 	and	r5,r5,r2
  815364:	003eb206 	br	814e30 <__alt_data_end+0xff814e30>
  815368:	2c44b03a 	or	r2,r5,r17
  81536c:	8000251e 	bne	r16,zero,815404 <__adddf3+0x650>
  815370:	10004b1e 	bne	r2,zero,8154a0 <__adddf3+0x6ec>
  815374:	4184b03a 	or	r2,r8,r6
  815378:	103fe226 	beq	r2,zero,815304 <__alt_data_end+0xff815304>
  81537c:	400b883a 	mov	r5,r8
  815380:	3023883a 	mov	r17,r6
  815384:	3825883a 	mov	r18,r7
  815388:	003ea906 	br	814e30 <__alt_data_end+0xff814e30>
  81538c:	20bff804 	addi	r2,r4,-32
  815390:	01c00804 	movi	r7,32
  815394:	4084d83a 	srl	r2,r8,r2
  815398:	21c07e26 	beq	r4,r7,815594 <__adddf3+0x7e0>
  81539c:	01c01004 	movi	r7,64
  8153a0:	3909c83a 	sub	r4,r7,r4
  8153a4:	4110983a 	sll	r8,r8,r4
  8153a8:	418cb03a 	or	r6,r8,r6
  8153ac:	300cc03a 	cmpne	r6,r6,zero
  8153b0:	308cb03a 	or	r6,r6,r2
  8153b4:	0011883a 	mov	r8,zero
  8153b8:	003f1b06 	br	815028 <__alt_data_end+0xff815028>
  8153bc:	0101ffc4 	movi	r4,2047
  8153c0:	113fa41e 	bne	r2,r4,815254 <__alt_data_end+0xff815254>
  8153c4:	400b883a 	mov	r5,r8
  8153c8:	3023883a 	mov	r17,r6
  8153cc:	1021883a 	mov	r16,r2
  8153d0:	3825883a 	mov	r18,r7
  8153d4:	003e9606 	br	814e30 <__alt_data_end+0xff814e30>
  8153d8:	80001a1e 	bne	r16,zero,815444 <__adddf3+0x690>
  8153dc:	2c4eb03a 	or	r7,r5,r17
  8153e0:	38005526 	beq	r7,zero,815538 <__adddf3+0x784>
  8153e4:	0108303a 	nor	r4,zero,r4
  8153e8:	2000511e 	bne	r4,zero,815530 <__adddf3+0x77c>
  8153ec:	89a3883a 	add	r17,r17,r6
  8153f0:	414b883a 	add	r5,r8,r5
  8153f4:	898d803a 	cmpltu	r6,r17,r6
  8153f8:	298b883a 	add	r5,r5,r6
  8153fc:	1021883a 	mov	r16,r2
  815400:	003f0e06 	br	81503c <__alt_data_end+0xff81503c>
  815404:	1000341e 	bne	r2,zero,8154d8 <__adddf3+0x724>
  815408:	4184b03a 	or	r2,r8,r6
  81540c:	10006f26 	beq	r2,zero,8155cc <__adddf3+0x818>
  815410:	400b883a 	mov	r5,r8
  815414:	3023883a 	mov	r17,r6
  815418:	3825883a 	mov	r18,r7
  81541c:	0401ffc4 	movi	r16,2047
  815420:	003e8306 	br	814e30 <__alt_data_end+0xff814e30>
  815424:	2c62b03a 	or	r17,r5,r17
  815428:	8822c03a 	cmpne	r17,r17,zero
  81542c:	0007883a 	mov	r3,zero
  815430:	003f9506 	br	815288 <__alt_data_end+0xff815288>
  815434:	1021883a 	mov	r16,r2
  815438:	000b883a 	mov	r5,zero
  81543c:	0023883a 	mov	r17,zero
  815440:	003edb06 	br	814fb0 <__alt_data_end+0xff814fb0>
  815444:	01c1ffc4 	movi	r7,2047
  815448:	11c03b26 	beq	r2,r7,815538 <__adddf3+0x784>
  81544c:	0109c83a 	sub	r4,zero,r4
  815450:	29402034 	orhi	r5,r5,128
  815454:	01c00e04 	movi	r7,56
  815458:	39006216 	blt	r7,r4,8155e4 <__adddf3+0x830>
  81545c:	01c007c4 	movi	r7,31
  815460:	39006b16 	blt	r7,r4,815610 <__adddf3+0x85c>
  815464:	01c00804 	movi	r7,32
  815468:	390fc83a 	sub	r7,r7,r4
  81546c:	29d4983a 	sll	r10,r5,r7
  815470:	8912d83a 	srl	r9,r17,r4
  815474:	89ce983a 	sll	r7,r17,r7
  815478:	2908d83a 	srl	r4,r5,r4
  81547c:	5262b03a 	or	r17,r10,r9
  815480:	380ac03a 	cmpne	r5,r7,zero
  815484:	8962b03a 	or	r17,r17,r5
  815488:	89a3883a 	add	r17,r17,r6
  81548c:	2211883a 	add	r8,r4,r8
  815490:	898d803a 	cmpltu	r6,r17,r6
  815494:	418b883a 	add	r5,r8,r6
  815498:	1021883a 	mov	r16,r2
  81549c:	003ee706 	br	81503c <__alt_data_end+0xff81503c>
  8154a0:	4184b03a 	or	r2,r8,r6
  8154a4:	103e6226 	beq	r2,zero,814e30 <__alt_data_end+0xff814e30>
  8154a8:	8987c83a 	sub	r3,r17,r6
  8154ac:	88c9803a 	cmpltu	r4,r17,r3
  8154b0:	2a05c83a 	sub	r2,r5,r8
  8154b4:	1105c83a 	sub	r2,r2,r4
  8154b8:	1100202c 	andhi	r4,r2,128
  8154bc:	203f0426 	beq	r4,zero,8150d0 <__alt_data_end+0xff8150d0>
  8154c0:	3463c83a 	sub	r17,r6,r17
  8154c4:	414bc83a 	sub	r5,r8,r5
  8154c8:	344d803a 	cmpltu	r6,r6,r17
  8154cc:	298bc83a 	sub	r5,r5,r6
  8154d0:	3825883a 	mov	r18,r7
  8154d4:	003e5606 	br	814e30 <__alt_data_end+0xff814e30>
  8154d8:	4184b03a 	or	r2,r8,r6
  8154dc:	10002b26 	beq	r2,zero,81558c <__adddf3+0x7d8>
  8154e0:	2804d0fa 	srli	r2,r5,3
  8154e4:	8822d0fa 	srli	r17,r17,3
  8154e8:	280a977a 	slli	r5,r5,29
  8154ec:	10c0022c 	andhi	r3,r2,8
  8154f0:	2c62b03a 	or	r17,r5,r17
  8154f4:	18000826 	beq	r3,zero,815518 <__adddf3+0x764>
  8154f8:	4008d0fa 	srli	r4,r8,3
  8154fc:	20c0022c 	andhi	r3,r4,8
  815500:	1800051e 	bne	r3,zero,815518 <__adddf3+0x764>
  815504:	300cd0fa 	srli	r6,r6,3
  815508:	4010977a 	slli	r8,r8,29
  81550c:	2005883a 	mov	r2,r4
  815510:	3825883a 	mov	r18,r7
  815514:	41a2b03a 	or	r17,r8,r6
  815518:	880ad77a 	srli	r5,r17,29
  81551c:	100490fa 	slli	r2,r2,3
  815520:	882290fa 	slli	r17,r17,3
  815524:	0401ffc4 	movi	r16,2047
  815528:	288ab03a 	or	r5,r5,r2
  81552c:	003e4006 	br	814e30 <__alt_data_end+0xff814e30>
  815530:	01c1ffc4 	movi	r7,2047
  815534:	11ffc71e 	bne	r2,r7,815454 <__alt_data_end+0xff815454>
  815538:	400b883a 	mov	r5,r8
  81553c:	3023883a 	mov	r17,r6
  815540:	1021883a 	mov	r16,r2
  815544:	003e3a06 	br	814e30 <__alt_data_end+0xff814e30>
  815548:	10002d26 	beq	r2,zero,815600 <__adddf3+0x84c>
  81554c:	4184b03a 	or	r2,r8,r6
  815550:	10000e26 	beq	r2,zero,81558c <__adddf3+0x7d8>
  815554:	2804d0fa 	srli	r2,r5,3
  815558:	8822d0fa 	srli	r17,r17,3
  81555c:	280a977a 	slli	r5,r5,29
  815560:	10c0022c 	andhi	r3,r2,8
  815564:	2c62b03a 	or	r17,r5,r17
  815568:	183feb26 	beq	r3,zero,815518 <__alt_data_end+0xff815518>
  81556c:	4008d0fa 	srli	r4,r8,3
  815570:	20c0022c 	andhi	r3,r4,8
  815574:	183fe81e 	bne	r3,zero,815518 <__alt_data_end+0xff815518>
  815578:	300cd0fa 	srli	r6,r6,3
  81557c:	4010977a 	slli	r8,r8,29
  815580:	2005883a 	mov	r2,r4
  815584:	41a2b03a 	or	r17,r8,r6
  815588:	003fe306 	br	815518 <__alt_data_end+0xff815518>
  81558c:	0401ffc4 	movi	r16,2047
  815590:	003e2706 	br	814e30 <__alt_data_end+0xff814e30>
  815594:	0011883a 	mov	r8,zero
  815598:	003f8306 	br	8153a8 <__alt_data_end+0xff8153a8>
  81559c:	193ff804 	addi	r4,r3,-32
  8155a0:	02400804 	movi	r9,32
  8155a4:	2908d83a 	srl	r4,r5,r4
  8155a8:	1a402526 	beq	r3,r9,815640 <__adddf3+0x88c>
  8155ac:	02401004 	movi	r9,64
  8155b0:	48c7c83a 	sub	r3,r9,r3
  8155b4:	28ca983a 	sll	r5,r5,r3
  8155b8:	2c62b03a 	or	r17,r5,r17
  8155bc:	8822c03a 	cmpne	r17,r17,zero
  8155c0:	8922b03a 	or	r17,r17,r4
  8155c4:	0007883a 	mov	r3,zero
  8155c8:	003f2f06 	br	815288 <__alt_data_end+0xff815288>
  8155cc:	01402034 	movhi	r5,128
  8155d0:	0007883a 	mov	r3,zero
  8155d4:	297fffc4 	addi	r5,r5,-1
  8155d8:	047ffe04 	movi	r17,-8
  8155dc:	0401ffc4 	movi	r16,2047
  8155e0:	003e7306 	br	814fb0 <__alt_data_end+0xff814fb0>
  8155e4:	2c62b03a 	or	r17,r5,r17
  8155e8:	8822c03a 	cmpne	r17,r17,zero
  8155ec:	0009883a 	mov	r4,zero
  8155f0:	003fa506 	br	815488 <__alt_data_end+0xff815488>
  8155f4:	400b883a 	mov	r5,r8
  8155f8:	3023883a 	mov	r17,r6
  8155fc:	003e0c06 	br	814e30 <__alt_data_end+0xff814e30>
  815600:	400b883a 	mov	r5,r8
  815604:	3023883a 	mov	r17,r6
  815608:	0401ffc4 	movi	r16,2047
  81560c:	003e0806 	br	814e30 <__alt_data_end+0xff814e30>
  815610:	21fff804 	addi	r7,r4,-32
  815614:	02400804 	movi	r9,32
  815618:	29ced83a 	srl	r7,r5,r7
  81561c:	22400a26 	beq	r4,r9,815648 <__adddf3+0x894>
  815620:	02401004 	movi	r9,64
  815624:	4909c83a 	sub	r4,r9,r4
  815628:	290a983a 	sll	r5,r5,r4
  81562c:	2c62b03a 	or	r17,r5,r17
  815630:	8822c03a 	cmpne	r17,r17,zero
  815634:	89e2b03a 	or	r17,r17,r7
  815638:	0009883a 	mov	r4,zero
  81563c:	003f9206 	br	815488 <__alt_data_end+0xff815488>
  815640:	000b883a 	mov	r5,zero
  815644:	003fdc06 	br	8155b8 <__alt_data_end+0xff8155b8>
  815648:	000b883a 	mov	r5,zero
  81564c:	003ff706 	br	81562c <__alt_data_end+0xff81562c>

00815650 <__divdf3>:
  815650:	defff204 	addi	sp,sp,-56
  815654:	dd000815 	stw	r20,32(sp)
  815658:	2828d53a 	srli	r20,r5,20
  81565c:	dd800a15 	stw	r22,40(sp)
  815660:	282cd7fa 	srli	r22,r5,31
  815664:	dc000415 	stw	r16,16(sp)
  815668:	04000434 	movhi	r16,16
  81566c:	df000c15 	stw	fp,48(sp)
  815670:	dcc00715 	stw	r19,28(sp)
  815674:	dc800615 	stw	r18,24(sp)
  815678:	dc400515 	stw	r17,20(sp)
  81567c:	843fffc4 	addi	r16,r16,-1
  815680:	dfc00d15 	stw	ra,52(sp)
  815684:	ddc00b15 	stw	r23,44(sp)
  815688:	dd400915 	stw	r21,36(sp)
  81568c:	a501ffcc 	andi	r20,r20,2047
  815690:	2025883a 	mov	r18,r4
  815694:	2027883a 	mov	r19,r4
  815698:	2c22703a 	and	r17,r5,r16
  81569c:	b7003fcc 	andi	fp,r22,255
  8156a0:	a0005e26 	beq	r20,zero,81581c <__divdf3+0x1cc>
  8156a4:	0081ffc4 	movi	r2,2047
  8156a8:	a0803526 	beq	r20,r2,815780 <__divdf3+0x130>
  8156ac:	8c000434 	orhi	r16,r17,16
  8156b0:	2004d77a 	srli	r2,r4,29
  8156b4:	802090fa 	slli	r16,r16,3
  8156b8:	202690fa 	slli	r19,r4,3
  8156bc:	a53f0044 	addi	r20,r20,-1023
  8156c0:	80a2b03a 	or	r17,r16,r2
  8156c4:	0025883a 	mov	r18,zero
  8156c8:	0011883a 	mov	r8,zero
  8156cc:	380ad53a 	srli	r5,r7,20
  8156d0:	382ed7fa 	srli	r23,r7,31
  8156d4:	04000434 	movhi	r16,16
  8156d8:	843fffc4 	addi	r16,r16,-1
  8156dc:	2941ffcc 	andi	r5,r5,2047
  8156e0:	302b883a 	mov	r21,r6
  8156e4:	3c20703a 	and	r16,r7,r16
  8156e8:	ba403fcc 	andi	r9,r23,255
  8156ec:	28006726 	beq	r5,zero,81588c <__divdf3+0x23c>
  8156f0:	0081ffc4 	movi	r2,2047
  8156f4:	28805f26 	beq	r5,r2,815874 <__divdf3+0x224>
  8156f8:	84000434 	orhi	r16,r16,16
  8156fc:	3004d77a 	srli	r2,r6,29
  815700:	802090fa 	slli	r16,r16,3
  815704:	302a90fa 	slli	r21,r6,3
  815708:	297f0044 	addi	r5,r5,-1023
  81570c:	80a0b03a 	or	r16,r16,r2
  815710:	000f883a 	mov	r7,zero
  815714:	3c86b03a 	or	r3,r7,r18
  815718:	180690ba 	slli	r3,r3,2
  81571c:	00802074 	movhi	r2,129
  815720:	1095d004 	addi	r2,r2,22336
  815724:	1887883a 	add	r3,r3,r2
  815728:	18c00017 	ldw	r3,0(r3)
  81572c:	b5c8f03a 	xor	r4,r22,r23
  815730:	200d883a 	mov	r6,r4
  815734:	24803fcc 	andi	r18,r4,255
  815738:	a169c83a 	sub	r20,r20,r5
  81573c:	1800683a 	jmp	r3
  815740:	00815988 	cmpgei	r2,zero,1382
  815744:	008157b8 	rdprs	r2,zero,1374
  815748:	0081594c 	andi	r2,zero,1381
  81574c:	0081579c 	xori	r2,zero,1374
  815750:	0081594c 	andi	r2,zero,1381
  815754:	00815920 	cmpeqi	r2,zero,1380
  815758:	0081594c 	andi	r2,zero,1381
  81575c:	0081579c 	xori	r2,zero,1374
  815760:	008157b8 	rdprs	r2,zero,1374
  815764:	008157b8 	rdprs	r2,zero,1374
  815768:	00815920 	cmpeqi	r2,zero,1380
  81576c:	0081579c 	xori	r2,zero,1374
  815770:	008157ac 	andhi	r2,zero,1374
  815774:	008157ac 	andhi	r2,zero,1374
  815778:	008157ac 	andhi	r2,zero,1374
  81577c:	0081595c 	xori	r2,zero,1381
  815780:	8904b03a 	or	r2,r17,r4
  815784:	1000631e 	bne	r2,zero,815914 <__divdf3+0x2c4>
  815788:	04800204 	movi	r18,8
  81578c:	0023883a 	mov	r17,zero
  815790:	0027883a 	mov	r19,zero
  815794:	02000084 	movi	r8,2
  815798:	003fcc06 	br	8156cc <__alt_data_end+0xff8156cc>
  81579c:	8023883a 	mov	r17,r16
  8157a0:	a827883a 	mov	r19,r21
  8157a4:	4839883a 	mov	fp,r9
  8157a8:	3811883a 	mov	r8,r7
  8157ac:	00800084 	movi	r2,2
  8157b0:	40812a1e 	bne	r8,r2,815c5c <__divdf3+0x60c>
  8157b4:	e025883a 	mov	r18,fp
  8157b8:	9180004c 	andi	r6,r18,1
  8157bc:	0101ffc4 	movi	r4,2047
  8157c0:	000b883a 	mov	r5,zero
  8157c4:	0027883a 	mov	r19,zero
  8157c8:	2008953a 	slli	r4,r4,20
  8157cc:	30c03fcc 	andi	r3,r6,255
  8157d0:	04000434 	movhi	r16,16
  8157d4:	180697fa 	slli	r3,r3,31
  8157d8:	843fffc4 	addi	r16,r16,-1
  8157dc:	2c20703a 	and	r16,r5,r16
  8157e0:	8120b03a 	or	r16,r16,r4
  8157e4:	80c6b03a 	or	r3,r16,r3
  8157e8:	9805883a 	mov	r2,r19
  8157ec:	dfc00d17 	ldw	ra,52(sp)
  8157f0:	df000c17 	ldw	fp,48(sp)
  8157f4:	ddc00b17 	ldw	r23,44(sp)
  8157f8:	dd800a17 	ldw	r22,40(sp)
  8157fc:	dd400917 	ldw	r21,36(sp)
  815800:	dd000817 	ldw	r20,32(sp)
  815804:	dcc00717 	ldw	r19,28(sp)
  815808:	dc800617 	ldw	r18,24(sp)
  81580c:	dc400517 	ldw	r17,20(sp)
  815810:	dc000417 	ldw	r16,16(sp)
  815814:	dec00e04 	addi	sp,sp,56
  815818:	f800283a 	ret
  81581c:	8904b03a 	or	r2,r17,r4
  815820:	10003726 	beq	r2,zero,815900 <__divdf3+0x2b0>
  815824:	88011c26 	beq	r17,zero,815c98 <__divdf3+0x648>
  815828:	8809883a 	mov	r4,r17
  81582c:	d9800315 	stw	r6,12(sp)
  815830:	d9c00115 	stw	r7,4(sp)
  815834:	08174e80 	call	8174e8 <__clzsi2>
  815838:	d9800317 	ldw	r6,12(sp)
  81583c:	d9c00117 	ldw	r7,4(sp)
  815840:	1007883a 	mov	r3,r2
  815844:	01000a04 	movi	r4,40
  815848:	1cfffe04 	addi	r19,r3,-8
  81584c:	20c9c83a 	sub	r4,r4,r3
  815850:	8cca983a 	sll	r5,r17,r19
  815854:	9108d83a 	srl	r4,r18,r4
  815858:	94e6983a 	sll	r19,r18,r19
  81585c:	2162b03a 	or	r17,r4,r5
  815860:	053f0344 	movi	r20,-1011
  815864:	a0e9c83a 	sub	r20,r20,r3
  815868:	0025883a 	mov	r18,zero
  81586c:	0011883a 	mov	r8,zero
  815870:	003f9606 	br	8156cc <__alt_data_end+0xff8156cc>
  815874:	8184b03a 	or	r2,r16,r6
  815878:	10001f1e 	bne	r2,zero,8158f8 <__divdf3+0x2a8>
  81587c:	0021883a 	mov	r16,zero
  815880:	002b883a 	mov	r21,zero
  815884:	01c00084 	movi	r7,2
  815888:	003fa206 	br	815714 <__alt_data_end+0xff815714>
  81588c:	8184b03a 	or	r2,r16,r6
  815890:	10001526 	beq	r2,zero,8158e8 <__divdf3+0x298>
  815894:	80010c26 	beq	r16,zero,815cc8 <__divdf3+0x678>
  815898:	8009883a 	mov	r4,r16
  81589c:	d9800315 	stw	r6,12(sp)
  8158a0:	da000215 	stw	r8,8(sp)
  8158a4:	da400015 	stw	r9,0(sp)
  8158a8:	08174e80 	call	8174e8 <__clzsi2>
  8158ac:	d9800317 	ldw	r6,12(sp)
  8158b0:	da000217 	ldw	r8,8(sp)
  8158b4:	da400017 	ldw	r9,0(sp)
  8158b8:	1007883a 	mov	r3,r2
  8158bc:	01000a04 	movi	r4,40
  8158c0:	1d7ffe04 	addi	r21,r3,-8
  8158c4:	20c9c83a 	sub	r4,r4,r3
  8158c8:	8560983a 	sll	r16,r16,r21
  8158cc:	3108d83a 	srl	r4,r6,r4
  8158d0:	356a983a 	sll	r21,r6,r21
  8158d4:	2420b03a 	or	r16,r4,r16
  8158d8:	017f0344 	movi	r5,-1011
  8158dc:	28cbc83a 	sub	r5,r5,r3
  8158e0:	000f883a 	mov	r7,zero
  8158e4:	003f8b06 	br	815714 <__alt_data_end+0xff815714>
  8158e8:	0021883a 	mov	r16,zero
  8158ec:	002b883a 	mov	r21,zero
  8158f0:	01c00044 	movi	r7,1
  8158f4:	003f8706 	br	815714 <__alt_data_end+0xff815714>
  8158f8:	01c000c4 	movi	r7,3
  8158fc:	003f8506 	br	815714 <__alt_data_end+0xff815714>
  815900:	04800104 	movi	r18,4
  815904:	0023883a 	mov	r17,zero
  815908:	0027883a 	mov	r19,zero
  81590c:	02000044 	movi	r8,1
  815910:	003f6e06 	br	8156cc <__alt_data_end+0xff8156cc>
  815914:	04800304 	movi	r18,12
  815918:	020000c4 	movi	r8,3
  81591c:	003f6b06 	br	8156cc <__alt_data_end+0xff8156cc>
  815920:	01400434 	movhi	r5,16
  815924:	000d883a 	mov	r6,zero
  815928:	297fffc4 	addi	r5,r5,-1
  81592c:	04ffffc4 	movi	r19,-1
  815930:	0101ffc4 	movi	r4,2047
  815934:	003fa406 	br	8157c8 <__alt_data_end+0xff8157c8>
  815938:	043f0084 	movi	r16,-1022
  81593c:	8521c83a 	sub	r16,r16,r20
  815940:	00800e04 	movi	r2,56
  815944:	1401200e 	bge	r2,r16,815dc8 <__divdf3+0x778>
  815948:	9180004c 	andi	r6,r18,1
  81594c:	0009883a 	mov	r4,zero
  815950:	000b883a 	mov	r5,zero
  815954:	0027883a 	mov	r19,zero
  815958:	003f9b06 	br	8157c8 <__alt_data_end+0xff8157c8>
  81595c:	8880022c 	andhi	r2,r17,8
  815960:	1000c726 	beq	r2,zero,815c80 <__divdf3+0x630>
  815964:	8080022c 	andhi	r2,r16,8
  815968:	1000c51e 	bne	r2,zero,815c80 <__divdf3+0x630>
  81596c:	00800434 	movhi	r2,16
  815970:	81400234 	orhi	r5,r16,8
  815974:	10bfffc4 	addi	r2,r2,-1
  815978:	b80d883a 	mov	r6,r23
  81597c:	288a703a 	and	r5,r5,r2
  815980:	a827883a 	mov	r19,r21
  815984:	003fea06 	br	815930 <__alt_data_end+0xff815930>
  815988:	8440ea36 	bltu	r16,r17,815d34 <__divdf3+0x6e4>
  81598c:	8c00e826 	beq	r17,r16,815d30 <__divdf3+0x6e0>
  815990:	a53fffc4 	addi	r20,r20,-1
  815994:	882d883a 	mov	r22,r17
  815998:	000d883a 	mov	r6,zero
  81599c:	a804d63a 	srli	r2,r21,24
  8159a0:	8020923a 	slli	r16,r16,8
  8159a4:	b009883a 	mov	r4,r22
  8159a8:	d9800315 	stw	r6,12(sp)
  8159ac:	1420b03a 	or	r16,r2,r16
  8159b0:	802ed43a 	srli	r23,r16,16
  8159b4:	873fffcc 	andi	fp,r16,65535
  8159b8:	a82a923a 	slli	r21,r21,8
  8159bc:	b80b883a 	mov	r5,r23
  8159c0:	0814bc00 	call	814bc0 <__udivsi3>
  8159c4:	b009883a 	mov	r4,r22
  8159c8:	b80b883a 	mov	r5,r23
  8159cc:	1023883a 	mov	r17,r2
  8159d0:	0814bc80 	call	814bc8 <__umodsi3>
  8159d4:	1004943a 	slli	r2,r2,16
  8159d8:	9808d43a 	srli	r4,r19,16
  8159dc:	8f2d383a 	mul	r22,r17,fp
  8159e0:	d9800317 	ldw	r6,12(sp)
  8159e4:	1106b03a 	or	r3,r2,r4
  8159e8:	1d80062e 	bgeu	r3,r22,815a04 <__divdf3+0x3b4>
  8159ec:	1c07883a 	add	r3,r3,r16
  8159f0:	88bfffc4 	addi	r2,r17,-1
  8159f4:	1c00dc36 	bltu	r3,r16,815d68 <__divdf3+0x718>
  8159f8:	1d80db2e 	bgeu	r3,r22,815d68 <__divdf3+0x718>
  8159fc:	8c7fff84 	addi	r17,r17,-2
  815a00:	1c07883a 	add	r3,r3,r16
  815a04:	1dadc83a 	sub	r22,r3,r22
  815a08:	b009883a 	mov	r4,r22
  815a0c:	b80b883a 	mov	r5,r23
  815a10:	d9800315 	stw	r6,12(sp)
  815a14:	0814bc00 	call	814bc0 <__udivsi3>
  815a18:	b009883a 	mov	r4,r22
  815a1c:	b80b883a 	mov	r5,r23
  815a20:	d8800015 	stw	r2,0(sp)
  815a24:	0814bc80 	call	814bc8 <__umodsi3>
  815a28:	da400017 	ldw	r9,0(sp)
  815a2c:	1004943a 	slli	r2,r2,16
  815a30:	9cffffcc 	andi	r19,r19,65535
  815a34:	4f07383a 	mul	r3,r9,fp
  815a38:	14c8b03a 	or	r4,r2,r19
  815a3c:	d9800317 	ldw	r6,12(sp)
  815a40:	20c0062e 	bgeu	r4,r3,815a5c <__divdf3+0x40c>
  815a44:	2409883a 	add	r4,r4,r16
  815a48:	48bfffc4 	addi	r2,r9,-1
  815a4c:	2400c436 	bltu	r4,r16,815d60 <__divdf3+0x710>
  815a50:	20c0c32e 	bgeu	r4,r3,815d60 <__divdf3+0x710>
  815a54:	4a7fff84 	addi	r9,r9,-2
  815a58:	2409883a 	add	r4,r4,r16
  815a5c:	8822943a 	slli	r17,r17,16
  815a60:	a80ed43a 	srli	r7,r21,16
  815a64:	aa3fffcc 	andi	r8,r21,65535
  815a68:	4c62b03a 	or	r17,r9,r17
  815a6c:	8816d43a 	srli	r11,r17,16
  815a70:	897fffcc 	andi	r5,r17,65535
  815a74:	2a15383a 	mul	r10,r5,r8
  815a78:	5a19383a 	mul	r12,r11,r8
  815a7c:	29cb383a 	mul	r5,r5,r7
  815a80:	5012d43a 	srli	r9,r10,16
  815a84:	20c5c83a 	sub	r2,r4,r3
  815a88:	614b883a 	add	r5,r12,r5
  815a8c:	2a4b883a 	add	r5,r5,r9
  815a90:	59c7383a 	mul	r3,r11,r7
  815a94:	2b00022e 	bgeu	r5,r12,815aa0 <__divdf3+0x450>
  815a98:	01000074 	movhi	r4,1
  815a9c:	1907883a 	add	r3,r3,r4
  815aa0:	2808d43a 	srli	r4,r5,16
  815aa4:	280a943a 	slli	r5,r5,16
  815aa8:	54ffffcc 	andi	r19,r10,65535
  815aac:	1907883a 	add	r3,r3,r4
  815ab0:	2ccb883a 	add	r5,r5,r19
  815ab4:	10c09336 	bltu	r2,r3,815d04 <__divdf3+0x6b4>
  815ab8:	10c0ad26 	beq	r2,r3,815d70 <__divdf3+0x720>
  815abc:	10c7c83a 	sub	r3,r2,r3
  815ac0:	3167c83a 	sub	r19,r6,r5
  815ac4:	34ed803a 	cmpltu	r22,r6,r19
  815ac8:	1dadc83a 	sub	r22,r3,r22
  815acc:	b400b226 	beq	r22,r16,815d98 <__divdf3+0x748>
  815ad0:	b009883a 	mov	r4,r22
  815ad4:	b80b883a 	mov	r5,r23
  815ad8:	d9c00115 	stw	r7,4(sp)
  815adc:	da000215 	stw	r8,8(sp)
  815ae0:	0814bc00 	call	814bc0 <__udivsi3>
  815ae4:	b009883a 	mov	r4,r22
  815ae8:	b80b883a 	mov	r5,r23
  815aec:	d8800315 	stw	r2,12(sp)
  815af0:	0814bc80 	call	814bc8 <__umodsi3>
  815af4:	d9800317 	ldw	r6,12(sp)
  815af8:	1004943a 	slli	r2,r2,16
  815afc:	9808d43a 	srli	r4,r19,16
  815b00:	372d383a 	mul	r22,r6,fp
  815b04:	d9c00117 	ldw	r7,4(sp)
  815b08:	1106b03a 	or	r3,r2,r4
  815b0c:	da000217 	ldw	r8,8(sp)
  815b10:	1d80062e 	bgeu	r3,r22,815b2c <__divdf3+0x4dc>
  815b14:	1c07883a 	add	r3,r3,r16
  815b18:	30bfffc4 	addi	r2,r6,-1
  815b1c:	1c00a036 	bltu	r3,r16,815da0 <__divdf3+0x750>
  815b20:	1d809f2e 	bgeu	r3,r22,815da0 <__divdf3+0x750>
  815b24:	31bfff84 	addi	r6,r6,-2
  815b28:	1c07883a 	add	r3,r3,r16
  815b2c:	1dadc83a 	sub	r22,r3,r22
  815b30:	b009883a 	mov	r4,r22
  815b34:	b80b883a 	mov	r5,r23
  815b38:	d9800315 	stw	r6,12(sp)
  815b3c:	d9c00115 	stw	r7,4(sp)
  815b40:	da000215 	stw	r8,8(sp)
  815b44:	0814bc00 	call	814bc0 <__udivsi3>
  815b48:	b009883a 	mov	r4,r22
  815b4c:	b80b883a 	mov	r5,r23
  815b50:	d8800015 	stw	r2,0(sp)
  815b54:	0814bc80 	call	814bc8 <__umodsi3>
  815b58:	da400017 	ldw	r9,0(sp)
  815b5c:	1004943a 	slli	r2,r2,16
  815b60:	993fffcc 	andi	r4,r19,65535
  815b64:	4f39383a 	mul	fp,r9,fp
  815b68:	1106b03a 	or	r3,r2,r4
  815b6c:	d9800317 	ldw	r6,12(sp)
  815b70:	d9c00117 	ldw	r7,4(sp)
  815b74:	da000217 	ldw	r8,8(sp)
  815b78:	1f00062e 	bgeu	r3,fp,815b94 <__divdf3+0x544>
  815b7c:	1c07883a 	add	r3,r3,r16
  815b80:	48bfffc4 	addi	r2,r9,-1
  815b84:	1c008836 	bltu	r3,r16,815da8 <__divdf3+0x758>
  815b88:	1f00872e 	bgeu	r3,fp,815da8 <__divdf3+0x758>
  815b8c:	4a7fff84 	addi	r9,r9,-2
  815b90:	1c07883a 	add	r3,r3,r16
  815b94:	3008943a 	slli	r4,r6,16
  815b98:	1f07c83a 	sub	r3,r3,fp
  815b9c:	4926b03a 	or	r19,r9,r4
  815ba0:	993fffcc 	andi	r4,r19,65535
  815ba4:	980cd43a 	srli	r6,r19,16
  815ba8:	220b383a 	mul	r5,r4,r8
  815bac:	21c5383a 	mul	r2,r4,r7
  815bb0:	3211383a 	mul	r8,r6,r8
  815bb4:	2808d43a 	srli	r4,r5,16
  815bb8:	31cf383a 	mul	r7,r6,r7
  815bbc:	4085883a 	add	r2,r8,r2
  815bc0:	1105883a 	add	r2,r2,r4
  815bc4:	1200022e 	bgeu	r2,r8,815bd0 <__divdf3+0x580>
  815bc8:	01000074 	movhi	r4,1
  815bcc:	390f883a 	add	r7,r7,r4
  815bd0:	1008d43a 	srli	r4,r2,16
  815bd4:	1004943a 	slli	r2,r2,16
  815bd8:	297fffcc 	andi	r5,r5,65535
  815bdc:	390f883a 	add	r7,r7,r4
  815be0:	1145883a 	add	r2,r2,r5
  815be4:	19c06536 	bltu	r3,r7,815d7c <__divdf3+0x72c>
  815be8:	19c09f26 	beq	r3,r7,815e68 <__divdf3+0x818>
  815bec:	9cc00054 	ori	r19,r19,1
  815bf0:	a100ffc4 	addi	r4,r20,1023
  815bf4:	013f500e 	bge	zero,r4,815938 <__alt_data_end+0xff815938>
  815bf8:	988001cc 	andi	r2,r19,7
  815bfc:	10000726 	beq	r2,zero,815c1c <__divdf3+0x5cc>
  815c00:	98c003cc 	andi	r3,r19,15
  815c04:	00800104 	movi	r2,4
  815c08:	18800426 	beq	r3,r2,815c1c <__divdf3+0x5cc>
  815c0c:	9885883a 	add	r2,r19,r2
  815c10:	14e1803a 	cmpltu	r16,r2,r19
  815c14:	8c23883a 	add	r17,r17,r16
  815c18:	1027883a 	mov	r19,r2
  815c1c:	8880402c 	andhi	r2,r17,256
  815c20:	10000426 	beq	r2,zero,815c34 <__divdf3+0x5e4>
  815c24:	00bfc034 	movhi	r2,65280
  815c28:	10bfffc4 	addi	r2,r2,-1
  815c2c:	a1010004 	addi	r4,r20,1024
  815c30:	88a2703a 	and	r17,r17,r2
  815c34:	0081ff84 	movi	r2,2046
  815c38:	113edf16 	blt	r2,r4,8157b8 <__alt_data_end+0xff8157b8>
  815c3c:	9826d0fa 	srli	r19,r19,3
  815c40:	8804977a 	slli	r2,r17,29
  815c44:	8820927a 	slli	r16,r17,9
  815c48:	2101ffcc 	andi	r4,r4,2047
  815c4c:	14e6b03a 	or	r19,r2,r19
  815c50:	800ad33a 	srli	r5,r16,12
  815c54:	9180004c 	andi	r6,r18,1
  815c58:	003edb06 	br	8157c8 <__alt_data_end+0xff8157c8>
  815c5c:	008000c4 	movi	r2,3
  815c60:	4080a826 	beq	r8,r2,815f04 <__divdf3+0x8b4>
  815c64:	00800044 	movi	r2,1
  815c68:	4080551e 	bne	r8,r2,815dc0 <__divdf3+0x770>
  815c6c:	e00d883a 	mov	r6,fp
  815c70:	0009883a 	mov	r4,zero
  815c74:	000b883a 	mov	r5,zero
  815c78:	0027883a 	mov	r19,zero
  815c7c:	003ed206 	br	8157c8 <__alt_data_end+0xff8157c8>
  815c80:	00800434 	movhi	r2,16
  815c84:	89400234 	orhi	r5,r17,8
  815c88:	10bfffc4 	addi	r2,r2,-1
  815c8c:	b00d883a 	mov	r6,r22
  815c90:	288a703a 	and	r5,r5,r2
  815c94:	003f2606 	br	815930 <__alt_data_end+0xff815930>
  815c98:	d9800315 	stw	r6,12(sp)
  815c9c:	d9c00115 	stw	r7,4(sp)
  815ca0:	08174e80 	call	8174e8 <__clzsi2>
  815ca4:	10c00804 	addi	r3,r2,32
  815ca8:	010009c4 	movi	r4,39
  815cac:	d9800317 	ldw	r6,12(sp)
  815cb0:	d9c00117 	ldw	r7,4(sp)
  815cb4:	20fee30e 	bge	r4,r3,815844 <__alt_data_end+0xff815844>
  815cb8:	117ffe04 	addi	r5,r2,-8
  815cbc:	9162983a 	sll	r17,r18,r5
  815cc0:	0027883a 	mov	r19,zero
  815cc4:	003ee606 	br	815860 <__alt_data_end+0xff815860>
  815cc8:	3009883a 	mov	r4,r6
  815ccc:	d9800315 	stw	r6,12(sp)
  815cd0:	da000215 	stw	r8,8(sp)
  815cd4:	da400015 	stw	r9,0(sp)
  815cd8:	08174e80 	call	8174e8 <__clzsi2>
  815cdc:	10c00804 	addi	r3,r2,32
  815ce0:	010009c4 	movi	r4,39
  815ce4:	d9800317 	ldw	r6,12(sp)
  815ce8:	da000217 	ldw	r8,8(sp)
  815cec:	da400017 	ldw	r9,0(sp)
  815cf0:	20fef20e 	bge	r4,r3,8158bc <__alt_data_end+0xff8158bc>
  815cf4:	10bffe04 	addi	r2,r2,-8
  815cf8:	a8a0983a 	sll	r16,r21,r2
  815cfc:	002b883a 	mov	r21,zero
  815d00:	003ef506 	br	8158d8 <__alt_data_end+0xff8158d8>
  815d04:	354d883a 	add	r6,r6,r21
  815d08:	3549803a 	cmpltu	r4,r6,r21
  815d0c:	2409883a 	add	r4,r4,r16
  815d10:	2089883a 	add	r4,r4,r2
  815d14:	88bfffc4 	addi	r2,r17,-1
  815d18:	81000c2e 	bgeu	r16,r4,815d4c <__divdf3+0x6fc>
  815d1c:	20c04436 	bltu	r4,r3,815e30 <__divdf3+0x7e0>
  815d20:	19006f26 	beq	r3,r4,815ee0 <__divdf3+0x890>
  815d24:	20c7c83a 	sub	r3,r4,r3
  815d28:	1023883a 	mov	r17,r2
  815d2c:	003f6406 	br	815ac0 <__alt_data_end+0xff815ac0>
  815d30:	9d7f1736 	bltu	r19,r21,815990 <__alt_data_end+0xff815990>
  815d34:	9806d07a 	srli	r3,r19,1
  815d38:	880497fa 	slli	r2,r17,31
  815d3c:	980c97fa 	slli	r6,r19,31
  815d40:	882cd07a 	srli	r22,r17,1
  815d44:	18a6b03a 	or	r19,r3,r2
  815d48:	003f1406 	br	81599c <__alt_data_end+0xff81599c>
  815d4c:	243ff51e 	bne	r4,r16,815d24 <__alt_data_end+0xff815d24>
  815d50:	357ff22e 	bgeu	r6,r21,815d1c <__alt_data_end+0xff815d1c>
  815d54:	80c7c83a 	sub	r3,r16,r3
  815d58:	1023883a 	mov	r17,r2
  815d5c:	003f5806 	br	815ac0 <__alt_data_end+0xff815ac0>
  815d60:	1013883a 	mov	r9,r2
  815d64:	003f3d06 	br	815a5c <__alt_data_end+0xff815a5c>
  815d68:	1023883a 	mov	r17,r2
  815d6c:	003f2506 	br	815a04 <__alt_data_end+0xff815a04>
  815d70:	317fe436 	bltu	r6,r5,815d04 <__alt_data_end+0xff815d04>
  815d74:	0007883a 	mov	r3,zero
  815d78:	003f5106 	br	815ac0 <__alt_data_end+0xff815ac0>
  815d7c:	1c07883a 	add	r3,r3,r16
  815d80:	993fffc4 	addi	r4,r19,-1
  815d84:	1c000a2e 	bgeu	r3,r16,815db0 <__divdf3+0x760>
  815d88:	2027883a 	mov	r19,r4
  815d8c:	19ff971e 	bne	r3,r7,815bec <__alt_data_end+0xff815bec>
  815d90:	a8bf961e 	bne	r21,r2,815bec <__alt_data_end+0xff815bec>
  815d94:	003f9606 	br	815bf0 <__alt_data_end+0xff815bf0>
  815d98:	04ffffc4 	movi	r19,-1
  815d9c:	003f9406 	br	815bf0 <__alt_data_end+0xff815bf0>
  815da0:	100d883a 	mov	r6,r2
  815da4:	003f6106 	br	815b2c <__alt_data_end+0xff815b2c>
  815da8:	1013883a 	mov	r9,r2
  815dac:	003f7906 	br	815b94 <__alt_data_end+0xff815b94>
  815db0:	19c02636 	bltu	r3,r7,815e4c <__divdf3+0x7fc>
  815db4:	38c04d26 	beq	r7,r3,815eec <__divdf3+0x89c>
  815db8:	2027883a 	mov	r19,r4
  815dbc:	003f8b06 	br	815bec <__alt_data_end+0xff815bec>
  815dc0:	e025883a 	mov	r18,fp
  815dc4:	003f8a06 	br	815bf0 <__alt_data_end+0xff815bf0>
  815dc8:	008007c4 	movi	r2,31
  815dcc:	14002a16 	blt	r2,r16,815e78 <__divdf3+0x828>
  815dd0:	a5010784 	addi	r20,r20,1054
  815dd4:	8d04983a 	sll	r2,r17,r20
  815dd8:	9c06d83a 	srl	r3,r19,r16
  815ddc:	9d28983a 	sll	r20,r19,r20
  815de0:	8c20d83a 	srl	r16,r17,r16
  815de4:	1886b03a 	or	r3,r3,r2
  815de8:	a004c03a 	cmpne	r2,r20,zero
  815dec:	1884b03a 	or	r2,r3,r2
  815df0:	10c001cc 	andi	r3,r2,7
  815df4:	18000726 	beq	r3,zero,815e14 <__divdf3+0x7c4>
  815df8:	110003cc 	andi	r4,r2,15
  815dfc:	00c00104 	movi	r3,4
  815e00:	20c00426 	beq	r4,r3,815e14 <__divdf3+0x7c4>
  815e04:	10c00104 	addi	r3,r2,4
  815e08:	1885803a 	cmpltu	r2,r3,r2
  815e0c:	80a1883a 	add	r16,r16,r2
  815e10:	1805883a 	mov	r2,r3
  815e14:	80c0202c 	andhi	r3,r16,128
  815e18:	18002d26 	beq	r3,zero,815ed0 <__divdf3+0x880>
  815e1c:	9180004c 	andi	r6,r18,1
  815e20:	01000044 	movi	r4,1
  815e24:	000b883a 	mov	r5,zero
  815e28:	0027883a 	mov	r19,zero
  815e2c:	003e6606 	br	8157c8 <__alt_data_end+0xff8157c8>
  815e30:	354d883a 	add	r6,r6,r21
  815e34:	356d803a 	cmpltu	r22,r6,r21
  815e38:	b42d883a 	add	r22,r22,r16
  815e3c:	b12d883a 	add	r22,r22,r4
  815e40:	8c7fff84 	addi	r17,r17,-2
  815e44:	b0c7c83a 	sub	r3,r22,r3
  815e48:	003f1d06 	br	815ac0 <__alt_data_end+0xff815ac0>
  815e4c:	ad4b883a 	add	r5,r21,r21
  815e50:	2d6b803a 	cmpltu	r21,r5,r21
  815e54:	ac2b883a 	add	r21,r21,r16
  815e58:	1d47883a 	add	r3,r3,r21
  815e5c:	993fff84 	addi	r4,r19,-2
  815e60:	282b883a 	mov	r21,r5
  815e64:	003fc806 	br	815d88 <__alt_data_end+0xff815d88>
  815e68:	103fc41e 	bne	r2,zero,815d7c <__alt_data_end+0xff815d7c>
  815e6c:	002b883a 	mov	r21,zero
  815e70:	a8bf5e1e 	bne	r21,r2,815bec <__alt_data_end+0xff815bec>
  815e74:	003f5e06 	br	815bf0 <__alt_data_end+0xff815bf0>
  815e78:	00bef884 	movi	r2,-1054
  815e7c:	1505c83a 	sub	r2,r2,r20
  815e80:	00c00804 	movi	r3,32
  815e84:	8884d83a 	srl	r2,r17,r2
  815e88:	80c01c26 	beq	r16,r3,815efc <__divdf3+0x8ac>
  815e8c:	a0c10f84 	addi	r3,r20,1086
  815e90:	88c6983a 	sll	r3,r17,r3
  815e94:	1cc6b03a 	or	r3,r3,r19
  815e98:	1806c03a 	cmpne	r3,r3,zero
  815e9c:	1884b03a 	or	r2,r3,r2
  815ea0:	140001cc 	andi	r16,r2,7
  815ea4:	8000061e 	bne	r16,zero,815ec0 <__divdf3+0x870>
  815ea8:	000b883a 	mov	r5,zero
  815eac:	1004d0fa 	srli	r2,r2,3
  815eb0:	9180004c 	andi	r6,r18,1
  815eb4:	0009883a 	mov	r4,zero
  815eb8:	1426b03a 	or	r19,r2,r16
  815ebc:	003e4206 	br	8157c8 <__alt_data_end+0xff8157c8>
  815ec0:	110003cc 	andi	r4,r2,15
  815ec4:	00c00104 	movi	r3,4
  815ec8:	0021883a 	mov	r16,zero
  815ecc:	20ffcd1e 	bne	r4,r3,815e04 <__alt_data_end+0xff815e04>
  815ed0:	800a927a 	slli	r5,r16,9
  815ed4:	8020977a 	slli	r16,r16,29
  815ed8:	280ad33a 	srli	r5,r5,12
  815edc:	003ff306 	br	815eac <__alt_data_end+0xff815eac>
  815ee0:	317fd336 	bltu	r6,r5,815e30 <__alt_data_end+0xff815e30>
  815ee4:	1023883a 	mov	r17,r2
  815ee8:	003fa206 	br	815d74 <__alt_data_end+0xff815d74>
  815eec:	a8bfd736 	bltu	r21,r2,815e4c <__alt_data_end+0xff815e4c>
  815ef0:	2027883a 	mov	r19,r4
  815ef4:	a8bf3d1e 	bne	r21,r2,815bec <__alt_data_end+0xff815bec>
  815ef8:	003f3d06 	br	815bf0 <__alt_data_end+0xff815bf0>
  815efc:	0007883a 	mov	r3,zero
  815f00:	003fe406 	br	815e94 <__alt_data_end+0xff815e94>
  815f04:	00800434 	movhi	r2,16
  815f08:	89400234 	orhi	r5,r17,8
  815f0c:	10bfffc4 	addi	r2,r2,-1
  815f10:	e00d883a 	mov	r6,fp
  815f14:	288a703a 	and	r5,r5,r2
  815f18:	003e8506 	br	815930 <__alt_data_end+0xff815930>

00815f1c <__eqdf2>:
  815f1c:	2804d53a 	srli	r2,r5,20
  815f20:	3806d53a 	srli	r3,r7,20
  815f24:	02000434 	movhi	r8,16
  815f28:	423fffc4 	addi	r8,r8,-1
  815f2c:	1081ffcc 	andi	r2,r2,2047
  815f30:	0241ffc4 	movi	r9,2047
  815f34:	2a14703a 	and	r10,r5,r8
  815f38:	18c1ffcc 	andi	r3,r3,2047
  815f3c:	3a10703a 	and	r8,r7,r8
  815f40:	280ad7fa 	srli	r5,r5,31
  815f44:	380ed7fa 	srli	r7,r7,31
  815f48:	12400f26 	beq	r2,r9,815f88 <__eqdf2+0x6c>
  815f4c:	0241ffc4 	movi	r9,2047
  815f50:	1a400326 	beq	r3,r9,815f60 <__eqdf2+0x44>
  815f54:	10c00526 	beq	r2,r3,815f6c <__eqdf2+0x50>
  815f58:	00800044 	movi	r2,1
  815f5c:	f800283a 	ret
  815f60:	4192b03a 	or	r9,r8,r6
  815f64:	483ffc1e 	bne	r9,zero,815f58 <__alt_data_end+0xff815f58>
  815f68:	10fffb1e 	bne	r2,r3,815f58 <__alt_data_end+0xff815f58>
  815f6c:	523ffa1e 	bne	r10,r8,815f58 <__alt_data_end+0xff815f58>
  815f70:	21bff91e 	bne	r4,r6,815f58 <__alt_data_end+0xff815f58>
  815f74:	29c00826 	beq	r5,r7,815f98 <__eqdf2+0x7c>
  815f78:	103ff71e 	bne	r2,zero,815f58 <__alt_data_end+0xff815f58>
  815f7c:	5104b03a 	or	r2,r10,r4
  815f80:	1004c03a 	cmpne	r2,r2,zero
  815f84:	f800283a 	ret
  815f88:	5112b03a 	or	r9,r10,r4
  815f8c:	483fef26 	beq	r9,zero,815f4c <__alt_data_end+0xff815f4c>
  815f90:	00800044 	movi	r2,1
  815f94:	f800283a 	ret
  815f98:	0005883a 	mov	r2,zero
  815f9c:	f800283a 	ret

00815fa0 <__gedf2>:
  815fa0:	2804d53a 	srli	r2,r5,20
  815fa4:	3806d53a 	srli	r3,r7,20
  815fa8:	02000434 	movhi	r8,16
  815fac:	423fffc4 	addi	r8,r8,-1
  815fb0:	0241ffc4 	movi	r9,2047
  815fb4:	1081ffcc 	andi	r2,r2,2047
  815fb8:	2a14703a 	and	r10,r5,r8
  815fbc:	1a46703a 	and	r3,r3,r9
  815fc0:	3a10703a 	and	r8,r7,r8
  815fc4:	280ad7fa 	srli	r5,r5,31
  815fc8:	380ed7fa 	srli	r7,r7,31
  815fcc:	12400b26 	beq	r2,r9,815ffc <__gedf2+0x5c>
  815fd0:	1a401626 	beq	r3,r9,81602c <__gedf2+0x8c>
  815fd4:	10000c1e 	bne	r2,zero,816008 <__gedf2+0x68>
  815fd8:	5112b03a 	or	r9,r10,r4
  815fdc:	4813003a 	cmpeq	r9,r9,zero
  815fe0:	4817883a 	mov	r11,r9
  815fe4:	18000c1e 	bne	r3,zero,816018 <__gedf2+0x78>
  815fe8:	4198b03a 	or	r12,r8,r6
  815fec:	60000a1e 	bne	r12,zero,816018 <__gedf2+0x78>
  815ff0:	48001326 	beq	r9,zero,816040 <__gedf2+0xa0>
  815ff4:	0005883a 	mov	r2,zero
  815ff8:	f800283a 	ret
  815ffc:	5112b03a 	or	r9,r10,r4
  816000:	4800191e 	bne	r9,zero,816068 <__gedf2+0xc8>
  816004:	18800926 	beq	r3,r2,81602c <__gedf2+0x8c>
  816008:	18000b1e 	bne	r3,zero,816038 <__gedf2+0x98>
  81600c:	4192b03a 	or	r9,r8,r6
  816010:	0017883a 	mov	r11,zero
  816014:	48000a26 	beq	r9,zero,816040 <__gedf2+0xa0>
  816018:	39c03fcc 	andi	r7,r7,255
  81601c:	58000726 	beq	r11,zero,81603c <__gedf2+0x9c>
  816020:	3800081e 	bne	r7,zero,816044 <__gedf2+0xa4>
  816024:	00bfffc4 	movi	r2,-1
  816028:	f800283a 	ret
  81602c:	4192b03a 	or	r9,r8,r6
  816030:	48000d1e 	bne	r9,zero,816068 <__gedf2+0xc8>
  816034:	103fe826 	beq	r2,zero,815fd8 <__alt_data_end+0xff815fd8>
  816038:	39c03fcc 	andi	r7,r7,255
  81603c:	29c00326 	beq	r5,r7,81604c <__gedf2+0xac>
  816040:	283ff81e 	bne	r5,zero,816024 <__alt_data_end+0xff816024>
  816044:	00800044 	movi	r2,1
  816048:	f800283a 	ret
  81604c:	18bffc16 	blt	r3,r2,816040 <__alt_data_end+0xff816040>
  816050:	10c00316 	blt	r2,r3,816060 <__gedf2+0xc0>
  816054:	42bffa36 	bltu	r8,r10,816040 <__alt_data_end+0xff816040>
  816058:	52000526 	beq	r10,r8,816070 <__gedf2+0xd0>
  81605c:	523fe52e 	bgeu	r10,r8,815ff4 <__alt_data_end+0xff815ff4>
  816060:	283ff026 	beq	r5,zero,816024 <__alt_data_end+0xff816024>
  816064:	003ff706 	br	816044 <__alt_data_end+0xff816044>
  816068:	00bfff84 	movi	r2,-2
  81606c:	f800283a 	ret
  816070:	313ff336 	bltu	r6,r4,816040 <__alt_data_end+0xff816040>
  816074:	21bfdf2e 	bgeu	r4,r6,815ff4 <__alt_data_end+0xff815ff4>
  816078:	283fea26 	beq	r5,zero,816024 <__alt_data_end+0xff816024>
  81607c:	003ff106 	br	816044 <__alt_data_end+0xff816044>

00816080 <__ledf2>:
  816080:	2804d53a 	srli	r2,r5,20
  816084:	3810d53a 	srli	r8,r7,20
  816088:	00c00434 	movhi	r3,16
  81608c:	18ffffc4 	addi	r3,r3,-1
  816090:	0241ffc4 	movi	r9,2047
  816094:	1081ffcc 	andi	r2,r2,2047
  816098:	28d4703a 	and	r10,r5,r3
  81609c:	4250703a 	and	r8,r8,r9
  8160a0:	38c6703a 	and	r3,r7,r3
  8160a4:	280ad7fa 	srli	r5,r5,31
  8160a8:	380ed7fa 	srli	r7,r7,31
  8160ac:	12400b26 	beq	r2,r9,8160dc <__ledf2+0x5c>
  8160b0:	42401926 	beq	r8,r9,816118 <__ledf2+0x98>
  8160b4:	10000c1e 	bne	r2,zero,8160e8 <__ledf2+0x68>
  8160b8:	5112b03a 	or	r9,r10,r4
  8160bc:	4813003a 	cmpeq	r9,r9,zero
  8160c0:	4817883a 	mov	r11,r9
  8160c4:	40000f26 	beq	r8,zero,816104 <__ledf2+0x84>
  8160c8:	39c03fcc 	andi	r7,r7,255
  8160cc:	58001826 	beq	r11,zero,816130 <__ledf2+0xb0>
  8160d0:	38000a1e 	bne	r7,zero,8160fc <__ledf2+0x7c>
  8160d4:	00bfffc4 	movi	r2,-1
  8160d8:	f800283a 	ret
  8160dc:	5112b03a 	or	r9,r10,r4
  8160e0:	48000f1e 	bne	r9,zero,816120 <__ledf2+0xa0>
  8160e4:	40800c26 	beq	r8,r2,816118 <__ledf2+0x98>
  8160e8:	4000101e 	bne	r8,zero,81612c <__ledf2+0xac>
  8160ec:	1992b03a 	or	r9,r3,r6
  8160f0:	0017883a 	mov	r11,zero
  8160f4:	483ff41e 	bne	r9,zero,8160c8 <__alt_data_end+0xff8160c8>
  8160f8:	283ff61e 	bne	r5,zero,8160d4 <__alt_data_end+0xff8160d4>
  8160fc:	00800044 	movi	r2,1
  816100:	f800283a 	ret
  816104:	1998b03a 	or	r12,r3,r6
  816108:	603fef1e 	bne	r12,zero,8160c8 <__alt_data_end+0xff8160c8>
  81610c:	483ffa26 	beq	r9,zero,8160f8 <__alt_data_end+0xff8160f8>
  816110:	0005883a 	mov	r2,zero
  816114:	f800283a 	ret
  816118:	1992b03a 	or	r9,r3,r6
  81611c:	48000226 	beq	r9,zero,816128 <__ledf2+0xa8>
  816120:	00800084 	movi	r2,2
  816124:	f800283a 	ret
  816128:	103fe326 	beq	r2,zero,8160b8 <__alt_data_end+0xff8160b8>
  81612c:	39c03fcc 	andi	r7,r7,255
  816130:	29fff11e 	bne	r5,r7,8160f8 <__alt_data_end+0xff8160f8>
  816134:	40bff016 	blt	r8,r2,8160f8 <__alt_data_end+0xff8160f8>
  816138:	12000316 	blt	r2,r8,816148 <__ledf2+0xc8>
  81613c:	1abfee36 	bltu	r3,r10,8160f8 <__alt_data_end+0xff8160f8>
  816140:	50c00326 	beq	r10,r3,816150 <__ledf2+0xd0>
  816144:	50fff22e 	bgeu	r10,r3,816110 <__alt_data_end+0xff816110>
  816148:	283fe226 	beq	r5,zero,8160d4 <__alt_data_end+0xff8160d4>
  81614c:	003feb06 	br	8160fc <__alt_data_end+0xff8160fc>
  816150:	313fe936 	bltu	r6,r4,8160f8 <__alt_data_end+0xff8160f8>
  816154:	21bfee2e 	bgeu	r4,r6,816110 <__alt_data_end+0xff816110>
  816158:	283fde26 	beq	r5,zero,8160d4 <__alt_data_end+0xff8160d4>
  81615c:	003fe706 	br	8160fc <__alt_data_end+0xff8160fc>

00816160 <__muldf3>:
  816160:	defff204 	addi	sp,sp,-56
  816164:	2804d53a 	srli	r2,r5,20
  816168:	dd800a15 	stw	r22,40(sp)
  81616c:	282cd7fa 	srli	r22,r5,31
  816170:	dc000415 	stw	r16,16(sp)
  816174:	04000434 	movhi	r16,16
  816178:	df000c15 	stw	fp,48(sp)
  81617c:	dd000815 	stw	r20,32(sp)
  816180:	dcc00715 	stw	r19,28(sp)
  816184:	dc800615 	stw	r18,24(sp)
  816188:	dc400515 	stw	r17,20(sp)
  81618c:	843fffc4 	addi	r16,r16,-1
  816190:	dfc00d15 	stw	ra,52(sp)
  816194:	ddc00b15 	stw	r23,44(sp)
  816198:	dd400915 	stw	r21,36(sp)
  81619c:	1501ffcc 	andi	r20,r2,2047
  8161a0:	2023883a 	mov	r17,r4
  8161a4:	2025883a 	mov	r18,r4
  8161a8:	2c20703a 	and	r16,r5,r16
  8161ac:	b027883a 	mov	r19,r22
  8161b0:	b7003fcc 	andi	fp,r22,255
  8161b4:	a0005926 	beq	r20,zero,81631c <__muldf3+0x1bc>
  8161b8:	0081ffc4 	movi	r2,2047
  8161bc:	a0803426 	beq	r20,r2,816290 <__muldf3+0x130>
  8161c0:	84000434 	orhi	r16,r16,16
  8161c4:	2004d77a 	srli	r2,r4,29
  8161c8:	802090fa 	slli	r16,r16,3
  8161cc:	202490fa 	slli	r18,r4,3
  8161d0:	a53f0044 	addi	r20,r20,-1023
  8161d4:	80a0b03a 	or	r16,r16,r2
  8161d8:	002b883a 	mov	r21,zero
  8161dc:	0015883a 	mov	r10,zero
  8161e0:	3812d53a 	srli	r9,r7,20
  8161e4:	3806d7fa 	srli	r3,r7,31
  8161e8:	02000434 	movhi	r8,16
  8161ec:	423fffc4 	addi	r8,r8,-1
  8161f0:	4941ffcc 	andi	r5,r9,2047
  8161f4:	302f883a 	mov	r23,r6
  8161f8:	3a22703a 	and	r17,r7,r8
  8161fc:	1ac03fcc 	andi	r11,r3,255
  816200:	28006226 	beq	r5,zero,81638c <__muldf3+0x22c>
  816204:	0081ffc4 	movi	r2,2047
  816208:	28805a26 	beq	r5,r2,816374 <__muldf3+0x214>
  81620c:	8a000434 	orhi	r8,r17,16
  816210:	3004d77a 	srli	r2,r6,29
  816214:	401090fa 	slli	r8,r8,3
  816218:	302e90fa 	slli	r23,r6,3
  81621c:	297f0044 	addi	r5,r5,-1023
  816220:	40a2b03a 	or	r17,r8,r2
  816224:	0013883a 	mov	r9,zero
  816228:	4d4cb03a 	or	r6,r9,r21
  81622c:	300c90ba 	slli	r6,r6,2
  816230:	02002074 	movhi	r8,129
  816234:	42189404 	addi	r8,r8,25168
  816238:	320d883a 	add	r6,r6,r8
  81623c:	31800017 	ldw	r6,0(r6)
  816240:	a14b883a 	add	r5,r20,r5
  816244:	1dacf03a 	xor	r22,r3,r22
  816248:	2b000044 	addi	r12,r5,1
  81624c:	3000683a 	jmp	r6
  816250:	0081648c 	andi	r2,zero,1426
  816254:	00816478 	rdprs	r2,zero,1425
  816258:	00816478 	rdprs	r2,zero,1425
  81625c:	00816464 	muli	r2,zero,1425
  816260:	008162ac 	andhi	r2,zero,1418
  816264:	008162ac 	andhi	r2,zero,1418
  816268:	0081644c 	andi	r2,zero,1425
  81626c:	00816464 	muli	r2,zero,1425
  816270:	008162ac 	andhi	r2,zero,1418
  816274:	0081644c 	andi	r2,zero,1425
  816278:	008162ac 	andhi	r2,zero,1418
  81627c:	00816464 	muli	r2,zero,1425
  816280:	008162b0 	cmpltui	r2,zero,1418
  816284:	008162b0 	cmpltui	r2,zero,1418
  816288:	008162b0 	cmpltui	r2,zero,1418
  81628c:	00816688 	cmpgei	r2,zero,1434
  816290:	8104b03a 	or	r2,r16,r4
  816294:	10006a1e 	bne	r2,zero,816440 <__muldf3+0x2e0>
  816298:	05400204 	movi	r21,8
  81629c:	0021883a 	mov	r16,zero
  8162a0:	0025883a 	mov	r18,zero
  8162a4:	02800084 	movi	r10,2
  8162a8:	003fcd06 	br	8161e0 <__alt_data_end+0xff8161e0>
  8162ac:	b039883a 	mov	fp,r22
  8162b0:	00800084 	movi	r2,2
  8162b4:	50804e1e 	bne	r10,r2,8163f0 <__muldf3+0x290>
  8162b8:	e4c0004c 	andi	r19,fp,1
  8162bc:	0101ffc4 	movi	r4,2047
  8162c0:	0021883a 	mov	r16,zero
  8162c4:	0025883a 	mov	r18,zero
  8162c8:	2008953a 	slli	r4,r4,20
  8162cc:	98c03fcc 	andi	r3,r19,255
  8162d0:	01400434 	movhi	r5,16
  8162d4:	297fffc4 	addi	r5,r5,-1
  8162d8:	180697fa 	slli	r3,r3,31
  8162dc:	8160703a 	and	r16,r16,r5
  8162e0:	8120b03a 	or	r16,r16,r4
  8162e4:	80c6b03a 	or	r3,r16,r3
  8162e8:	9005883a 	mov	r2,r18
  8162ec:	dfc00d17 	ldw	ra,52(sp)
  8162f0:	df000c17 	ldw	fp,48(sp)
  8162f4:	ddc00b17 	ldw	r23,44(sp)
  8162f8:	dd800a17 	ldw	r22,40(sp)
  8162fc:	dd400917 	ldw	r21,36(sp)
  816300:	dd000817 	ldw	r20,32(sp)
  816304:	dcc00717 	ldw	r19,28(sp)
  816308:	dc800617 	ldw	r18,24(sp)
  81630c:	dc400517 	ldw	r17,20(sp)
  816310:	dc000417 	ldw	r16,16(sp)
  816314:	dec00e04 	addi	sp,sp,56
  816318:	f800283a 	ret
  81631c:	8104b03a 	or	r2,r16,r4
  816320:	10004226 	beq	r2,zero,81642c <__muldf3+0x2cc>
  816324:	8000f926 	beq	r16,zero,81670c <__muldf3+0x5ac>
  816328:	8009883a 	mov	r4,r16
  81632c:	d9800315 	stw	r6,12(sp)
  816330:	d9c00015 	stw	r7,0(sp)
  816334:	08174e80 	call	8174e8 <__clzsi2>
  816338:	d9800317 	ldw	r6,12(sp)
  81633c:	d9c00017 	ldw	r7,0(sp)
  816340:	1007883a 	mov	r3,r2
  816344:	01000a04 	movi	r4,40
  816348:	18bffe04 	addi	r2,r3,-8
  81634c:	20c9c83a 	sub	r4,r4,r3
  816350:	80a0983a 	sll	r16,r16,r2
  816354:	8908d83a 	srl	r4,r17,r4
  816358:	88a4983a 	sll	r18,r17,r2
  81635c:	2420b03a 	or	r16,r4,r16
  816360:	017f0344 	movi	r5,-1011
  816364:	28e9c83a 	sub	r20,r5,r3
  816368:	002b883a 	mov	r21,zero
  81636c:	0015883a 	mov	r10,zero
  816370:	003f9b06 	br	8161e0 <__alt_data_end+0xff8161e0>
  816374:	8984b03a 	or	r2,r17,r6
  816378:	10002a1e 	bne	r2,zero,816424 <__muldf3+0x2c4>
  81637c:	0023883a 	mov	r17,zero
  816380:	002f883a 	mov	r23,zero
  816384:	02400084 	movi	r9,2
  816388:	003fa706 	br	816228 <__alt_data_end+0xff816228>
  81638c:	8984b03a 	or	r2,r17,r6
  816390:	10002026 	beq	r2,zero,816414 <__muldf3+0x2b4>
  816394:	8800cc26 	beq	r17,zero,8166c8 <__muldf3+0x568>
  816398:	8809883a 	mov	r4,r17
  81639c:	d8c00215 	stw	r3,8(sp)
  8163a0:	d9800315 	stw	r6,12(sp)
  8163a4:	da800015 	stw	r10,0(sp)
  8163a8:	dac00115 	stw	r11,4(sp)
  8163ac:	08174e80 	call	8174e8 <__clzsi2>
  8163b0:	d8c00217 	ldw	r3,8(sp)
  8163b4:	d9800317 	ldw	r6,12(sp)
  8163b8:	da800017 	ldw	r10,0(sp)
  8163bc:	dac00117 	ldw	r11,4(sp)
  8163c0:	1009883a 	mov	r4,r2
  8163c4:	01400a04 	movi	r5,40
  8163c8:	25fffe04 	addi	r23,r4,-8
  8163cc:	290bc83a 	sub	r5,r5,r4
  8163d0:	8dd0983a 	sll	r8,r17,r23
  8163d4:	314ad83a 	srl	r5,r6,r5
  8163d8:	35ee983a 	sll	r23,r6,r23
  8163dc:	2a22b03a 	or	r17,r5,r8
  8163e0:	017f0344 	movi	r5,-1011
  8163e4:	290bc83a 	sub	r5,r5,r4
  8163e8:	0013883a 	mov	r9,zero
  8163ec:	003f8e06 	br	816228 <__alt_data_end+0xff816228>
  8163f0:	008000c4 	movi	r2,3
  8163f4:	50811d26 	beq	r10,r2,81686c <__muldf3+0x70c>
  8163f8:	00800044 	movi	r2,1
  8163fc:	5080e01e 	bne	r10,r2,816780 <__muldf3+0x620>
  816400:	e0a6703a 	and	r19,fp,r2
  816404:	0009883a 	mov	r4,zero
  816408:	0021883a 	mov	r16,zero
  81640c:	0025883a 	mov	r18,zero
  816410:	003fad06 	br	8162c8 <__alt_data_end+0xff8162c8>
  816414:	0023883a 	mov	r17,zero
  816418:	002f883a 	mov	r23,zero
  81641c:	02400044 	movi	r9,1
  816420:	003f8106 	br	816228 <__alt_data_end+0xff816228>
  816424:	024000c4 	movi	r9,3
  816428:	003f7f06 	br	816228 <__alt_data_end+0xff816228>
  81642c:	05400104 	movi	r21,4
  816430:	0021883a 	mov	r16,zero
  816434:	0025883a 	mov	r18,zero
  816438:	02800044 	movi	r10,1
  81643c:	003f6806 	br	8161e0 <__alt_data_end+0xff8161e0>
  816440:	05400304 	movi	r21,12
  816444:	028000c4 	movi	r10,3
  816448:	003f6506 	br	8161e0 <__alt_data_end+0xff8161e0>
  81644c:	04000434 	movhi	r16,16
  816450:	0027883a 	mov	r19,zero
  816454:	843fffc4 	addi	r16,r16,-1
  816458:	04bfffc4 	movi	r18,-1
  81645c:	0101ffc4 	movi	r4,2047
  816460:	003f9906 	br	8162c8 <__alt_data_end+0xff8162c8>
  816464:	8821883a 	mov	r16,r17
  816468:	b825883a 	mov	r18,r23
  81646c:	5839883a 	mov	fp,r11
  816470:	4815883a 	mov	r10,r9
  816474:	003f8e06 	br	8162b0 <__alt_data_end+0xff8162b0>
  816478:	8821883a 	mov	r16,r17
  81647c:	b825883a 	mov	r18,r23
  816480:	b039883a 	mov	fp,r22
  816484:	4815883a 	mov	r10,r9
  816488:	003f8906 	br	8162b0 <__alt_data_end+0xff8162b0>
  81648c:	b80cd43a 	srli	r6,r23,16
  816490:	9006d43a 	srli	r3,r18,16
  816494:	90bfffcc 	andi	r2,r18,65535
  816498:	bdffffcc 	andi	r23,r23,65535
  81649c:	b891383a 	mul	r8,r23,r2
  8164a0:	b8c9383a 	mul	r4,r23,r3
  8164a4:	309b383a 	mul	r13,r6,r2
  8164a8:	400ed43a 	srli	r7,r8,16
  8164ac:	30df383a 	mul	r15,r6,r3
  8164b0:	235b883a 	add	r13,r4,r13
  8164b4:	69db883a 	add	r13,r13,r7
  8164b8:	6900022e 	bgeu	r13,r4,8164c4 <__muldf3+0x364>
  8164bc:	01000074 	movhi	r4,1
  8164c0:	791f883a 	add	r15,r15,r4
  8164c4:	8828d43a 	srli	r20,r17,16
  8164c8:	8c7fffcc 	andi	r17,r17,65535
  8164cc:	888f383a 	mul	r7,r17,r2
  8164d0:	88d3383a 	mul	r9,r17,r3
  8164d4:	a0a5383a 	mul	r18,r20,r2
  8164d8:	3816d43a 	srli	r11,r7,16
  8164dc:	6814943a 	slli	r10,r13,16
  8164e0:	4ca5883a 	add	r18,r9,r18
  8164e4:	423fffcc 	andi	r8,r8,65535
  8164e8:	92e5883a 	add	r18,r18,r11
  8164ec:	6808d43a 	srli	r4,r13,16
  8164f0:	5215883a 	add	r10,r10,r8
  8164f4:	a0c7383a 	mul	r3,r20,r3
  8164f8:	9240022e 	bgeu	r18,r9,816504 <__muldf3+0x3a4>
  8164fc:	00800074 	movhi	r2,1
  816500:	1887883a 	add	r3,r3,r2
  816504:	802ad43a 	srli	r21,r16,16
  816508:	80bfffcc 	andi	r2,r16,65535
  81650c:	b893383a 	mul	r9,r23,r2
  816510:	3091383a 	mul	r8,r6,r2
  816514:	bd6f383a 	mul	r23,r23,r21
  816518:	9026943a 	slli	r19,r18,16
  81651c:	481ad43a 	srli	r13,r9,16
  816520:	9024d43a 	srli	r18,r18,16
  816524:	39ffffcc 	andi	r7,r7,65535
  816528:	ba11883a 	add	r8,r23,r8
  81652c:	99e7883a 	add	r19,r19,r7
  816530:	4351883a 	add	r8,r8,r13
  816534:	1c97883a 	add	r11,r3,r18
  816538:	354d383a 	mul	r6,r6,r21
  81653c:	9925883a 	add	r18,r19,r4
  816540:	45c0022e 	bgeu	r8,r23,81654c <__muldf3+0x3ec>
  816544:	00c00074 	movhi	r3,1
  816548:	30cd883a 	add	r6,r6,r3
  81654c:	8889383a 	mul	r4,r17,r2
  816550:	8d63383a 	mul	r17,r17,r21
  816554:	a085383a 	mul	r2,r20,r2
  816558:	200ed43a 	srli	r7,r4,16
  81655c:	401cd43a 	srli	r14,r8,16
  816560:	401a943a 	slli	r13,r8,16
  816564:	8885883a 	add	r2,r17,r2
  816568:	4a3fffcc 	andi	r8,r9,65535
  81656c:	11c5883a 	add	r2,r2,r7
  816570:	339d883a 	add	r14,r6,r14
  816574:	6a11883a 	add	r8,r13,r8
  816578:	a561383a 	mul	r16,r20,r21
  81657c:	1440022e 	bgeu	r2,r17,816588 <__muldf3+0x428>
  816580:	00c00074 	movhi	r3,1
  816584:	80e1883a 	add	r16,r16,r3
  816588:	1006943a 	slli	r3,r2,16
  81658c:	213fffcc 	andi	r4,r4,65535
  816590:	93db883a 	add	r13,r18,r15
  816594:	1909883a 	add	r4,r3,r4
  816598:	22c7883a 	add	r3,r4,r11
  81659c:	6cd3803a 	cmpltu	r9,r13,r19
  8165a0:	6a09883a 	add	r4,r13,r8
  8165a4:	1a5b883a 	add	r13,r3,r9
  8165a8:	2211803a 	cmpltu	r8,r4,r8
  8165ac:	734d883a 	add	r6,r14,r13
  8165b0:	100ed43a 	srli	r7,r2,16
  8165b4:	6a53803a 	cmpltu	r9,r13,r9
  8165b8:	3205883a 	add	r2,r6,r8
  8165bc:	1ac7803a 	cmpltu	r3,r3,r11
  8165c0:	1211803a 	cmpltu	r8,r2,r8
  8165c4:	48c6b03a 	or	r3,r9,r3
  8165c8:	338d803a 	cmpltu	r6,r6,r14
  8165cc:	19c7883a 	add	r3,r3,r7
  8165d0:	418cb03a 	or	r6,r8,r6
  8165d4:	1987883a 	add	r3,r3,r6
  8165d8:	2024927a 	slli	r18,r4,9
  8165dc:	1c07883a 	add	r3,r3,r16
  8165e0:	1806927a 	slli	r3,r3,9
  8165e4:	1020d5fa 	srli	r16,r2,23
  8165e8:	2008d5fa 	srli	r4,r4,23
  8165ec:	9294b03a 	or	r10,r18,r10
  8165f0:	1004927a 	slli	r2,r2,9
  8165f4:	5024c03a 	cmpne	r18,r10,zero
  8165f8:	1c20b03a 	or	r16,r3,r16
  8165fc:	9108b03a 	or	r4,r18,r4
  816600:	80c0402c 	andhi	r3,r16,256
  816604:	20a4b03a 	or	r18,r4,r2
  816608:	18000726 	beq	r3,zero,816628 <__muldf3+0x4c8>
  81660c:	9006d07a 	srli	r3,r18,1
  816610:	800897fa 	slli	r4,r16,31
  816614:	9080004c 	andi	r2,r18,1
  816618:	8020d07a 	srli	r16,r16,1
  81661c:	10c4b03a 	or	r2,r2,r3
  816620:	1124b03a 	or	r18,r2,r4
  816624:	600b883a 	mov	r5,r12
  816628:	2900ffc4 	addi	r4,r5,1023
  81662c:	01004b0e 	bge	zero,r4,81675c <__muldf3+0x5fc>
  816630:	908001cc 	andi	r2,r18,7
  816634:	10000726 	beq	r2,zero,816654 <__muldf3+0x4f4>
  816638:	90c003cc 	andi	r3,r18,15
  81663c:	00800104 	movi	r2,4
  816640:	18800426 	beq	r3,r2,816654 <__muldf3+0x4f4>
  816644:	9087883a 	add	r3,r18,r2
  816648:	1c85803a 	cmpltu	r2,r3,r18
  81664c:	80a1883a 	add	r16,r16,r2
  816650:	1825883a 	mov	r18,r3
  816654:	8080402c 	andhi	r2,r16,256
  816658:	10000426 	beq	r2,zero,81666c <__muldf3+0x50c>
  81665c:	00bfc034 	movhi	r2,65280
  816660:	10bfffc4 	addi	r2,r2,-1
  816664:	29010004 	addi	r4,r5,1024
  816668:	80a0703a 	and	r16,r16,r2
  81666c:	0081ff84 	movi	r2,2046
  816670:	1100320e 	bge	r2,r4,81673c <__muldf3+0x5dc>
  816674:	b4c0004c 	andi	r19,r22,1
  816678:	0101ffc4 	movi	r4,2047
  81667c:	0021883a 	mov	r16,zero
  816680:	0025883a 	mov	r18,zero
  816684:	003f1006 	br	8162c8 <__alt_data_end+0xff8162c8>
  816688:	8080022c 	andhi	r2,r16,8
  81668c:	10000926 	beq	r2,zero,8166b4 <__muldf3+0x554>
  816690:	8880022c 	andhi	r2,r17,8
  816694:	1000071e 	bne	r2,zero,8166b4 <__muldf3+0x554>
  816698:	00800434 	movhi	r2,16
  81669c:	8c000234 	orhi	r16,r17,8
  8166a0:	10bfffc4 	addi	r2,r2,-1
  8166a4:	1827883a 	mov	r19,r3
  8166a8:	80a0703a 	and	r16,r16,r2
  8166ac:	b825883a 	mov	r18,r23
  8166b0:	003f6a06 	br	81645c <__alt_data_end+0xff81645c>
  8166b4:	00800434 	movhi	r2,16
  8166b8:	84000234 	orhi	r16,r16,8
  8166bc:	10bfffc4 	addi	r2,r2,-1
  8166c0:	80a0703a 	and	r16,r16,r2
  8166c4:	003f6506 	br	81645c <__alt_data_end+0xff81645c>
  8166c8:	3009883a 	mov	r4,r6
  8166cc:	d8c00215 	stw	r3,8(sp)
  8166d0:	d9800315 	stw	r6,12(sp)
  8166d4:	da800015 	stw	r10,0(sp)
  8166d8:	dac00115 	stw	r11,4(sp)
  8166dc:	08174e80 	call	8174e8 <__clzsi2>
  8166e0:	11000804 	addi	r4,r2,32
  8166e4:	014009c4 	movi	r5,39
  8166e8:	d8c00217 	ldw	r3,8(sp)
  8166ec:	d9800317 	ldw	r6,12(sp)
  8166f0:	da800017 	ldw	r10,0(sp)
  8166f4:	dac00117 	ldw	r11,4(sp)
  8166f8:	293f320e 	bge	r5,r4,8163c4 <__alt_data_end+0xff8163c4>
  8166fc:	10bffe04 	addi	r2,r2,-8
  816700:	b8a2983a 	sll	r17,r23,r2
  816704:	002f883a 	mov	r23,zero
  816708:	003f3506 	br	8163e0 <__alt_data_end+0xff8163e0>
  81670c:	d9800315 	stw	r6,12(sp)
  816710:	d9c00015 	stw	r7,0(sp)
  816714:	08174e80 	call	8174e8 <__clzsi2>
  816718:	10c00804 	addi	r3,r2,32
  81671c:	010009c4 	movi	r4,39
  816720:	d9800317 	ldw	r6,12(sp)
  816724:	d9c00017 	ldw	r7,0(sp)
  816728:	20ff060e 	bge	r4,r3,816344 <__alt_data_end+0xff816344>
  81672c:	10bffe04 	addi	r2,r2,-8
  816730:	88a0983a 	sll	r16,r17,r2
  816734:	0025883a 	mov	r18,zero
  816738:	003f0906 	br	816360 <__alt_data_end+0xff816360>
  81673c:	9004d0fa 	srli	r2,r18,3
  816740:	8024977a 	slli	r18,r16,29
  816744:	8020927a 	slli	r16,r16,9
  816748:	2101ffcc 	andi	r4,r4,2047
  81674c:	90a4b03a 	or	r18,r18,r2
  816750:	8020d33a 	srli	r16,r16,12
  816754:	b4c0004c 	andi	r19,r22,1
  816758:	003edb06 	br	8162c8 <__alt_data_end+0xff8162c8>
  81675c:	00ff0084 	movi	r3,-1022
  816760:	1947c83a 	sub	r3,r3,r5
  816764:	00800e04 	movi	r2,56
  816768:	10c0080e 	bge	r2,r3,81678c <__muldf3+0x62c>
  81676c:	b4c0004c 	andi	r19,r22,1
  816770:	0009883a 	mov	r4,zero
  816774:	0021883a 	mov	r16,zero
  816778:	0025883a 	mov	r18,zero
  81677c:	003ed206 	br	8162c8 <__alt_data_end+0xff8162c8>
  816780:	600b883a 	mov	r5,r12
  816784:	e02d883a 	mov	r22,fp
  816788:	003fa706 	br	816628 <__alt_data_end+0xff816628>
  81678c:	008007c4 	movi	r2,31
  816790:	10c01816 	blt	r2,r3,8167f4 <__muldf3+0x694>
  816794:	29410784 	addi	r5,r5,1054
  816798:	8144983a 	sll	r2,r16,r5
  81679c:	90c8d83a 	srl	r4,r18,r3
  8167a0:	914a983a 	sll	r5,r18,r5
  8167a4:	80c6d83a 	srl	r3,r16,r3
  8167a8:	2088b03a 	or	r4,r4,r2
  8167ac:	2804c03a 	cmpne	r2,r5,zero
  8167b0:	2084b03a 	or	r2,r4,r2
  8167b4:	110001cc 	andi	r4,r2,7
  8167b8:	20000726 	beq	r4,zero,8167d8 <__muldf3+0x678>
  8167bc:	114003cc 	andi	r5,r2,15
  8167c0:	01000104 	movi	r4,4
  8167c4:	29000426 	beq	r5,r4,8167d8 <__muldf3+0x678>
  8167c8:	11000104 	addi	r4,r2,4
  8167cc:	2085803a 	cmpltu	r2,r4,r2
  8167d0:	1887883a 	add	r3,r3,r2
  8167d4:	2005883a 	mov	r2,r4
  8167d8:	1900202c 	andhi	r4,r3,128
  8167dc:	20001826 	beq	r4,zero,816840 <__muldf3+0x6e0>
  8167e0:	b4c0004c 	andi	r19,r22,1
  8167e4:	01000044 	movi	r4,1
  8167e8:	0021883a 	mov	r16,zero
  8167ec:	0025883a 	mov	r18,zero
  8167f0:	003eb506 	br	8162c8 <__alt_data_end+0xff8162c8>
  8167f4:	00bef884 	movi	r2,-1054
  8167f8:	1145c83a 	sub	r2,r2,r5
  8167fc:	8088d83a 	srl	r4,r16,r2
  816800:	00800804 	movi	r2,32
  816804:	18801726 	beq	r3,r2,816864 <__muldf3+0x704>
  816808:	28810f84 	addi	r2,r5,1086
  81680c:	8084983a 	sll	r2,r16,r2
  816810:	1484b03a 	or	r2,r2,r18
  816814:	1004c03a 	cmpne	r2,r2,zero
  816818:	1104b03a 	or	r2,r2,r4
  81681c:	10c001cc 	andi	r3,r2,7
  816820:	18000b1e 	bne	r3,zero,816850 <__muldf3+0x6f0>
  816824:	0021883a 	mov	r16,zero
  816828:	1004d0fa 	srli	r2,r2,3
  81682c:	b4c0004c 	andi	r19,r22,1
  816830:	0009883a 	mov	r4,zero
  816834:	10e4b03a 	or	r18,r2,r3
  816838:	003ea306 	br	8162c8 <__alt_data_end+0xff8162c8>
  81683c:	0007883a 	mov	r3,zero
  816840:	1820927a 	slli	r16,r3,9
  816844:	1806977a 	slli	r3,r3,29
  816848:	8020d33a 	srli	r16,r16,12
  81684c:	003ff606 	br	816828 <__alt_data_end+0xff816828>
  816850:	110003cc 	andi	r4,r2,15
  816854:	00c00104 	movi	r3,4
  816858:	20fff826 	beq	r4,r3,81683c <__alt_data_end+0xff81683c>
  81685c:	0007883a 	mov	r3,zero
  816860:	003fd906 	br	8167c8 <__alt_data_end+0xff8167c8>
  816864:	0005883a 	mov	r2,zero
  816868:	003fe906 	br	816810 <__alt_data_end+0xff816810>
  81686c:	00800434 	movhi	r2,16
  816870:	84000234 	orhi	r16,r16,8
  816874:	10bfffc4 	addi	r2,r2,-1
  816878:	e4c0004c 	andi	r19,fp,1
  81687c:	80a0703a 	and	r16,r16,r2
  816880:	003ef606 	br	81645c <__alt_data_end+0xff81645c>

00816884 <__subdf3>:
  816884:	00c00434 	movhi	r3,16
  816888:	18ffffc4 	addi	r3,r3,-1
  81688c:	defffb04 	addi	sp,sp,-20
  816890:	28d2703a 	and	r9,r5,r3
  816894:	3814d53a 	srli	r10,r7,20
  816898:	38c6703a 	and	r3,r7,r3
  81689c:	3004d77a 	srli	r2,r6,29
  8168a0:	dc800215 	stw	r18,8(sp)
  8168a4:	dc000015 	stw	r16,0(sp)
  8168a8:	2824d7fa 	srli	r18,r5,31
  8168ac:	2820d53a 	srli	r16,r5,20
  8168b0:	481290fa 	slli	r9,r9,3
  8168b4:	200ad77a 	srli	r5,r4,29
  8168b8:	180690fa 	slli	r3,r3,3
  8168bc:	dc400115 	stw	r17,4(sp)
  8168c0:	dfc00415 	stw	ra,16(sp)
  8168c4:	202290fa 	slli	r17,r4,3
  8168c8:	dcc00315 	stw	r19,12(sp)
  8168cc:	5281ffcc 	andi	r10,r10,2047
  8168d0:	0101ffc4 	movi	r4,2047
  8168d4:	9011883a 	mov	r8,r18
  8168d8:	8401ffcc 	andi	r16,r16,2047
  8168dc:	94803fcc 	andi	r18,r18,255
  8168e0:	494ab03a 	or	r5,r9,r5
  8168e4:	380ed7fa 	srli	r7,r7,31
  8168e8:	1886b03a 	or	r3,r3,r2
  8168ec:	300c90fa 	slli	r6,r6,3
  8168f0:	51009026 	beq	r10,r4,816b34 <__subdf3+0x2b0>
  8168f4:	39c0005c 	xori	r7,r7,1
  8168f8:	8285c83a 	sub	r2,r16,r10
  8168fc:	91c06f26 	beq	r18,r7,816abc <__subdf3+0x238>
  816900:	0080b10e 	bge	zero,r2,816bc8 <__subdf3+0x344>
  816904:	50002a1e 	bne	r10,zero,8169b0 <__subdf3+0x12c>
  816908:	1988b03a 	or	r4,r3,r6
  81690c:	2000941e 	bne	r4,zero,816b60 <__subdf3+0x2dc>
  816910:	888001cc 	andi	r2,r17,7
  816914:	10005b26 	beq	r2,zero,816a84 <__subdf3+0x200>
  816918:	88c003cc 	andi	r3,r17,15
  81691c:	00800104 	movi	r2,4
  816920:	18805826 	beq	r3,r2,816a84 <__subdf3+0x200>
  816924:	88c00104 	addi	r3,r17,4
  816928:	1c63803a 	cmpltu	r17,r3,r17
  81692c:	2c4b883a 	add	r5,r5,r17
  816930:	2880202c 	andhi	r2,r5,128
  816934:	9200004c 	andi	r8,r18,1
  816938:	1823883a 	mov	r17,r3
  81693c:	10005426 	beq	r2,zero,816a90 <__subdf3+0x20c>
  816940:	84000044 	addi	r16,r16,1
  816944:	0081ffc4 	movi	r2,2047
  816948:	8080bf26 	beq	r16,r2,816c48 <__subdf3+0x3c4>
  81694c:	013fe034 	movhi	r4,65408
  816950:	213fffc4 	addi	r4,r4,-1
  816954:	290a703a 	and	r5,r5,r4
  816958:	2804977a 	slli	r2,r5,29
  81695c:	280a927a 	slli	r5,r5,9
  816960:	8822d0fa 	srli	r17,r17,3
  816964:	8401ffcc 	andi	r16,r16,2047
  816968:	2808d33a 	srli	r4,r5,12
  81696c:	1444b03a 	or	r2,r2,r17
  816970:	8401ffcc 	andi	r16,r16,2047
  816974:	800a953a 	slli	r5,r16,20
  816978:	40c03fcc 	andi	r3,r8,255
  81697c:	04000434 	movhi	r16,16
  816980:	180697fa 	slli	r3,r3,31
  816984:	843fffc4 	addi	r16,r16,-1
  816988:	2420703a 	and	r16,r4,r16
  81698c:	8160b03a 	or	r16,r16,r5
  816990:	80c6b03a 	or	r3,r16,r3
  816994:	dfc00417 	ldw	ra,16(sp)
  816998:	dcc00317 	ldw	r19,12(sp)
  81699c:	dc800217 	ldw	r18,8(sp)
  8169a0:	dc400117 	ldw	r17,4(sp)
  8169a4:	dc000017 	ldw	r16,0(sp)
  8169a8:	dec00504 	addi	sp,sp,20
  8169ac:	f800283a 	ret
  8169b0:	0101ffc4 	movi	r4,2047
  8169b4:	813fd626 	beq	r16,r4,816910 <__alt_data_end+0xff816910>
  8169b8:	18c02034 	orhi	r3,r3,128
  8169bc:	01000e04 	movi	r4,56
  8169c0:	2080a416 	blt	r4,r2,816c54 <__subdf3+0x3d0>
  8169c4:	010007c4 	movi	r4,31
  8169c8:	2080c716 	blt	r4,r2,816ce8 <__subdf3+0x464>
  8169cc:	01000804 	movi	r4,32
  8169d0:	2089c83a 	sub	r4,r4,r2
  8169d4:	1910983a 	sll	r8,r3,r4
  8169d8:	308ed83a 	srl	r7,r6,r2
  8169dc:	3108983a 	sll	r4,r6,r4
  8169e0:	1884d83a 	srl	r2,r3,r2
  8169e4:	41ccb03a 	or	r6,r8,r7
  8169e8:	2008c03a 	cmpne	r4,r4,zero
  8169ec:	310cb03a 	or	r6,r6,r4
  8169f0:	898dc83a 	sub	r6,r17,r6
  8169f4:	89a3803a 	cmpltu	r17,r17,r6
  8169f8:	288bc83a 	sub	r5,r5,r2
  8169fc:	2c4bc83a 	sub	r5,r5,r17
  816a00:	3023883a 	mov	r17,r6
  816a04:	2880202c 	andhi	r2,r5,128
  816a08:	10006b26 	beq	r2,zero,816bb8 <__subdf3+0x334>
  816a0c:	04c02034 	movhi	r19,128
  816a10:	9cffffc4 	addi	r19,r19,-1
  816a14:	2ce6703a 	and	r19,r5,r19
  816a18:	98007c26 	beq	r19,zero,816c0c <__subdf3+0x388>
  816a1c:	9809883a 	mov	r4,r19
  816a20:	08174e80 	call	8174e8 <__clzsi2>
  816a24:	10fffe04 	addi	r3,r2,-8
  816a28:	010007c4 	movi	r4,31
  816a2c:	20c07d16 	blt	r4,r3,816c24 <__subdf3+0x3a0>
  816a30:	01400a04 	movi	r5,40
  816a34:	2885c83a 	sub	r2,r5,r2
  816a38:	888ad83a 	srl	r5,r17,r2
  816a3c:	98e6983a 	sll	r19,r19,r3
  816a40:	88e2983a 	sll	r17,r17,r3
  816a44:	2ce6b03a 	or	r19,r5,r19
  816a48:	1c007a16 	blt	r3,r16,816c34 <__subdf3+0x3b0>
  816a4c:	1c21c83a 	sub	r16,r3,r16
  816a50:	81400044 	addi	r5,r16,1
  816a54:	00c007c4 	movi	r3,31
  816a58:	19409616 	blt	r3,r5,816cb4 <__subdf3+0x430>
  816a5c:	1c21c83a 	sub	r16,r3,r16
  816a60:	8c08983a 	sll	r4,r17,r16
  816a64:	8946d83a 	srl	r3,r17,r5
  816a68:	9c20983a 	sll	r16,r19,r16
  816a6c:	2008c03a 	cmpne	r4,r4,zero
  816a70:	994ad83a 	srl	r5,r19,r5
  816a74:	1c06b03a 	or	r3,r3,r16
  816a78:	1922b03a 	or	r17,r3,r4
  816a7c:	0021883a 	mov	r16,zero
  816a80:	003fa306 	br	816910 <__alt_data_end+0xff816910>
  816a84:	2880202c 	andhi	r2,r5,128
  816a88:	9200004c 	andi	r8,r18,1
  816a8c:	103fac1e 	bne	r2,zero,816940 <__alt_data_end+0xff816940>
  816a90:	2804977a 	slli	r2,r5,29
  816a94:	8822d0fa 	srli	r17,r17,3
  816a98:	00c1ffc4 	movi	r3,2047
  816a9c:	280ad0fa 	srli	r5,r5,3
  816aa0:	1444b03a 	or	r2,r2,r17
  816aa4:	80c02726 	beq	r16,r3,816b44 <__subdf3+0x2c0>
  816aa8:	01000434 	movhi	r4,16
  816aac:	213fffc4 	addi	r4,r4,-1
  816ab0:	80e0703a 	and	r16,r16,r3
  816ab4:	2908703a 	and	r4,r5,r4
  816ab8:	003fad06 	br	816970 <__alt_data_end+0xff816970>
  816abc:	0080690e 	bge	zero,r2,816c64 <__subdf3+0x3e0>
  816ac0:	50002f26 	beq	r10,zero,816b80 <__subdf3+0x2fc>
  816ac4:	0101ffc4 	movi	r4,2047
  816ac8:	813f9126 	beq	r16,r4,816910 <__alt_data_end+0xff816910>
  816acc:	18c02034 	orhi	r3,r3,128
  816ad0:	01000e04 	movi	r4,56
  816ad4:	2080b00e 	bge	r4,r2,816d98 <__subdf3+0x514>
  816ad8:	198cb03a 	or	r6,r3,r6
  816adc:	300ec03a 	cmpne	r7,r6,zero
  816ae0:	0005883a 	mov	r2,zero
  816ae4:	3c4f883a 	add	r7,r7,r17
  816ae8:	3c63803a 	cmpltu	r17,r7,r17
  816aec:	114b883a 	add	r5,r2,r5
  816af0:	2c4b883a 	add	r5,r5,r17
  816af4:	3823883a 	mov	r17,r7
  816af8:	2880202c 	andhi	r2,r5,128
  816afc:	10002e26 	beq	r2,zero,816bb8 <__subdf3+0x334>
  816b00:	84000044 	addi	r16,r16,1
  816b04:	0081ffc4 	movi	r2,2047
  816b08:	8080de26 	beq	r16,r2,816e84 <__subdf3+0x600>
  816b0c:	00bfe034 	movhi	r2,65408
  816b10:	10bfffc4 	addi	r2,r2,-1
  816b14:	288a703a 	and	r5,r5,r2
  816b18:	880cd07a 	srli	r6,r17,1
  816b1c:	280897fa 	slli	r4,r5,31
  816b20:	88c0004c 	andi	r3,r17,1
  816b24:	30e2b03a 	or	r17,r6,r3
  816b28:	280ad07a 	srli	r5,r5,1
  816b2c:	8922b03a 	or	r17,r17,r4
  816b30:	003f7706 	br	816910 <__alt_data_end+0xff816910>
  816b34:	1984b03a 	or	r2,r3,r6
  816b38:	103f6e26 	beq	r2,zero,8168f4 <__alt_data_end+0xff8168f4>
  816b3c:	39c03fcc 	andi	r7,r7,255
  816b40:	003f6d06 	br	8168f8 <__alt_data_end+0xff8168f8>
  816b44:	1146b03a 	or	r3,r2,r5
  816b48:	18003f26 	beq	r3,zero,816c48 <__subdf3+0x3c4>
  816b4c:	00c00434 	movhi	r3,16
  816b50:	29000234 	orhi	r4,r5,8
  816b54:	18ffffc4 	addi	r3,r3,-1
  816b58:	20c8703a 	and	r4,r4,r3
  816b5c:	003f8406 	br	816970 <__alt_data_end+0xff816970>
  816b60:	10bfffc4 	addi	r2,r2,-1
  816b64:	1000501e 	bne	r2,zero,816ca8 <__subdf3+0x424>
  816b68:	898fc83a 	sub	r7,r17,r6
  816b6c:	89e3803a 	cmpltu	r17,r17,r7
  816b70:	28cbc83a 	sub	r5,r5,r3
  816b74:	2c4bc83a 	sub	r5,r5,r17
  816b78:	3823883a 	mov	r17,r7
  816b7c:	003fa106 	br	816a04 <__alt_data_end+0xff816a04>
  816b80:	1988b03a 	or	r4,r3,r6
  816b84:	203f6226 	beq	r4,zero,816910 <__alt_data_end+0xff816910>
  816b88:	10bfffc4 	addi	r2,r2,-1
  816b8c:	10009b1e 	bne	r2,zero,816dfc <__subdf3+0x578>
  816b90:	344d883a 	add	r6,r6,r17
  816b94:	3463803a 	cmpltu	r17,r6,r17
  816b98:	194b883a 	add	r5,r3,r5
  816b9c:	2c4b883a 	add	r5,r5,r17
  816ba0:	3023883a 	mov	r17,r6
  816ba4:	003fd406 	br	816af8 <__alt_data_end+0xff816af8>
  816ba8:	1106b03a 	or	r3,r2,r4
  816bac:	1800b426 	beq	r3,zero,816e80 <__subdf3+0x5fc>
  816bb0:	100b883a 	mov	r5,r2
  816bb4:	2023883a 	mov	r17,r4
  816bb8:	888001cc 	andi	r2,r17,7
  816bbc:	103f561e 	bne	r2,zero,816918 <__alt_data_end+0xff816918>
  816bc0:	9200004c 	andi	r8,r18,1
  816bc4:	003fb206 	br	816a90 <__alt_data_end+0xff816a90>
  816bc8:	1000531e 	bne	r2,zero,816d18 <__subdf3+0x494>
  816bcc:	80800044 	addi	r2,r16,1
  816bd0:	1081ffcc 	andi	r2,r2,2047
  816bd4:	01000044 	movi	r4,1
  816bd8:	2080a00e 	bge	r4,r2,816e5c <__subdf3+0x5d8>
  816bdc:	8985c83a 	sub	r2,r17,r6
  816be0:	8889803a 	cmpltu	r4,r17,r2
  816be4:	28e7c83a 	sub	r19,r5,r3
  816be8:	9927c83a 	sub	r19,r19,r4
  816bec:	9900202c 	andhi	r4,r19,128
  816bf0:	20006226 	beq	r4,zero,816d7c <__subdf3+0x4f8>
  816bf4:	3463c83a 	sub	r17,r6,r17
  816bf8:	194bc83a 	sub	r5,r3,r5
  816bfc:	344d803a 	cmpltu	r6,r6,r17
  816c00:	29a7c83a 	sub	r19,r5,r6
  816c04:	3825883a 	mov	r18,r7
  816c08:	983f841e 	bne	r19,zero,816a1c <__alt_data_end+0xff816a1c>
  816c0c:	8809883a 	mov	r4,r17
  816c10:	08174e80 	call	8174e8 <__clzsi2>
  816c14:	10800804 	addi	r2,r2,32
  816c18:	10fffe04 	addi	r3,r2,-8
  816c1c:	010007c4 	movi	r4,31
  816c20:	20ff830e 	bge	r4,r3,816a30 <__alt_data_end+0xff816a30>
  816c24:	14fff604 	addi	r19,r2,-40
  816c28:	8ce6983a 	sll	r19,r17,r19
  816c2c:	0023883a 	mov	r17,zero
  816c30:	1c3f860e 	bge	r3,r16,816a4c <__alt_data_end+0xff816a4c>
  816c34:	017fe034 	movhi	r5,65408
  816c38:	297fffc4 	addi	r5,r5,-1
  816c3c:	80e1c83a 	sub	r16,r16,r3
  816c40:	994a703a 	and	r5,r19,r5
  816c44:	003f3206 	br	816910 <__alt_data_end+0xff816910>
  816c48:	0009883a 	mov	r4,zero
  816c4c:	0005883a 	mov	r2,zero
  816c50:	003f4706 	br	816970 <__alt_data_end+0xff816970>
  816c54:	198cb03a 	or	r6,r3,r6
  816c58:	300cc03a 	cmpne	r6,r6,zero
  816c5c:	0005883a 	mov	r2,zero
  816c60:	003f6306 	br	8169f0 <__alt_data_end+0xff8169f0>
  816c64:	10009d1e 	bne	r2,zero,816edc <__subdf3+0x658>
  816c68:	81c00044 	addi	r7,r16,1
  816c6c:	3881ffcc 	andi	r2,r7,2047
  816c70:	02400044 	movi	r9,1
  816c74:	4880680e 	bge	r9,r2,816e18 <__subdf3+0x594>
  816c78:	0081ffc4 	movi	r2,2047
  816c7c:	3880ae26 	beq	r7,r2,816f38 <__subdf3+0x6b4>
  816c80:	344d883a 	add	r6,r6,r17
  816c84:	3463803a 	cmpltu	r17,r6,r17
  816c88:	194b883a 	add	r5,r3,r5
  816c8c:	2c4b883a 	add	r5,r5,r17
  816c90:	282297fa 	slli	r17,r5,31
  816c94:	300cd07a 	srli	r6,r6,1
  816c98:	280ad07a 	srli	r5,r5,1
  816c9c:	3821883a 	mov	r16,r7
  816ca0:	89a2b03a 	or	r17,r17,r6
  816ca4:	003f1a06 	br	816910 <__alt_data_end+0xff816910>
  816ca8:	0101ffc4 	movi	r4,2047
  816cac:	813f431e 	bne	r16,r4,8169bc <__alt_data_end+0xff8169bc>
  816cb0:	003f1706 	br	816910 <__alt_data_end+0xff816910>
  816cb4:	80bff844 	addi	r2,r16,-31
  816cb8:	00c00804 	movi	r3,32
  816cbc:	9884d83a 	srl	r2,r19,r2
  816cc0:	28c05126 	beq	r5,r3,816e08 <__subdf3+0x584>
  816cc4:	00c00fc4 	movi	r3,63
  816cc8:	1c21c83a 	sub	r16,r3,r16
  816ccc:	9c26983a 	sll	r19,r19,r16
  816cd0:	9c62b03a 	or	r17,r19,r17
  816cd4:	8822c03a 	cmpne	r17,r17,zero
  816cd8:	88a2b03a 	or	r17,r17,r2
  816cdc:	000b883a 	mov	r5,zero
  816ce0:	0021883a 	mov	r16,zero
  816ce4:	003fb406 	br	816bb8 <__alt_data_end+0xff816bb8>
  816ce8:	113ff804 	addi	r4,r2,-32
  816cec:	01c00804 	movi	r7,32
  816cf0:	1908d83a 	srl	r4,r3,r4
  816cf4:	11c04626 	beq	r2,r7,816e10 <__subdf3+0x58c>
  816cf8:	01c01004 	movi	r7,64
  816cfc:	3885c83a 	sub	r2,r7,r2
  816d00:	1884983a 	sll	r2,r3,r2
  816d04:	118cb03a 	or	r6,r2,r6
  816d08:	300cc03a 	cmpne	r6,r6,zero
  816d0c:	310cb03a 	or	r6,r6,r4
  816d10:	0005883a 	mov	r2,zero
  816d14:	003f3606 	br	8169f0 <__alt_data_end+0xff8169f0>
  816d18:	80002b26 	beq	r16,zero,816dc8 <__subdf3+0x544>
  816d1c:	0101ffc4 	movi	r4,2047
  816d20:	51006926 	beq	r10,r4,816ec8 <__subdf3+0x644>
  816d24:	0085c83a 	sub	r2,zero,r2
  816d28:	29402034 	orhi	r5,r5,128
  816d2c:	01000e04 	movi	r4,56
  816d30:	20807d16 	blt	r4,r2,816f28 <__subdf3+0x6a4>
  816d34:	010007c4 	movi	r4,31
  816d38:	2080d916 	blt	r4,r2,8170a0 <__subdf3+0x81c>
  816d3c:	01000804 	movi	r4,32
  816d40:	2089c83a 	sub	r4,r4,r2
  816d44:	2912983a 	sll	r9,r5,r4
  816d48:	8890d83a 	srl	r8,r17,r2
  816d4c:	8908983a 	sll	r4,r17,r4
  816d50:	2884d83a 	srl	r2,r5,r2
  816d54:	4a22b03a 	or	r17,r9,r8
  816d58:	2008c03a 	cmpne	r4,r4,zero
  816d5c:	8922b03a 	or	r17,r17,r4
  816d60:	3463c83a 	sub	r17,r6,r17
  816d64:	1885c83a 	sub	r2,r3,r2
  816d68:	344d803a 	cmpltu	r6,r6,r17
  816d6c:	118bc83a 	sub	r5,r2,r6
  816d70:	5021883a 	mov	r16,r10
  816d74:	3825883a 	mov	r18,r7
  816d78:	003f2206 	br	816a04 <__alt_data_end+0xff816a04>
  816d7c:	9886b03a 	or	r3,r19,r2
  816d80:	18001c1e 	bne	r3,zero,816df4 <__subdf3+0x570>
  816d84:	0011883a 	mov	r8,zero
  816d88:	000b883a 	mov	r5,zero
  816d8c:	0023883a 	mov	r17,zero
  816d90:	0021883a 	mov	r16,zero
  816d94:	003f3e06 	br	816a90 <__alt_data_end+0xff816a90>
  816d98:	010007c4 	movi	r4,31
  816d9c:	20803c16 	blt	r4,r2,816e90 <__subdf3+0x60c>
  816da0:	01000804 	movi	r4,32
  816da4:	2089c83a 	sub	r4,r4,r2
  816da8:	1912983a 	sll	r9,r3,r4
  816dac:	308ed83a 	srl	r7,r6,r2
  816db0:	3108983a 	sll	r4,r6,r4
  816db4:	1884d83a 	srl	r2,r3,r2
  816db8:	49ceb03a 	or	r7,r9,r7
  816dbc:	2008c03a 	cmpne	r4,r4,zero
  816dc0:	390eb03a 	or	r7,r7,r4
  816dc4:	003f4706 	br	816ae4 <__alt_data_end+0xff816ae4>
  816dc8:	2c48b03a 	or	r4,r5,r17
  816dcc:	20003e26 	beq	r4,zero,816ec8 <__subdf3+0x644>
  816dd0:	0084303a 	nor	r2,zero,r2
  816dd4:	10003a1e 	bne	r2,zero,816ec0 <__subdf3+0x63c>
  816dd8:	3463c83a 	sub	r17,r6,r17
  816ddc:	194bc83a 	sub	r5,r3,r5
  816de0:	344d803a 	cmpltu	r6,r6,r17
  816de4:	298bc83a 	sub	r5,r5,r6
  816de8:	5021883a 	mov	r16,r10
  816dec:	3825883a 	mov	r18,r7
  816df0:	003f0406 	br	816a04 <__alt_data_end+0xff816a04>
  816df4:	1023883a 	mov	r17,r2
  816df8:	003f0706 	br	816a18 <__alt_data_end+0xff816a18>
  816dfc:	0101ffc4 	movi	r4,2047
  816e00:	813f331e 	bne	r16,r4,816ad0 <__alt_data_end+0xff816ad0>
  816e04:	003ec206 	br	816910 <__alt_data_end+0xff816910>
  816e08:	0027883a 	mov	r19,zero
  816e0c:	003fb006 	br	816cd0 <__alt_data_end+0xff816cd0>
  816e10:	0005883a 	mov	r2,zero
  816e14:	003fbb06 	br	816d04 <__alt_data_end+0xff816d04>
  816e18:	2c44b03a 	or	r2,r5,r17
  816e1c:	80008b1e 	bne	r16,zero,81704c <__subdf3+0x7c8>
  816e20:	1000b526 	beq	r2,zero,8170f8 <__subdf3+0x874>
  816e24:	1984b03a 	or	r2,r3,r6
  816e28:	103eb926 	beq	r2,zero,816910 <__alt_data_end+0xff816910>
  816e2c:	3449883a 	add	r4,r6,r17
  816e30:	2463803a 	cmpltu	r17,r4,r17
  816e34:	194b883a 	add	r5,r3,r5
  816e38:	2c4b883a 	add	r5,r5,r17
  816e3c:	2880202c 	andhi	r2,r5,128
  816e40:	2023883a 	mov	r17,r4
  816e44:	103f5c26 	beq	r2,zero,816bb8 <__alt_data_end+0xff816bb8>
  816e48:	00bfe034 	movhi	r2,65408
  816e4c:	10bfffc4 	addi	r2,r2,-1
  816e50:	4821883a 	mov	r16,r9
  816e54:	288a703a 	and	r5,r5,r2
  816e58:	003ead06 	br	816910 <__alt_data_end+0xff816910>
  816e5c:	2c44b03a 	or	r2,r5,r17
  816e60:	8000291e 	bne	r16,zero,816f08 <__subdf3+0x684>
  816e64:	10004f1e 	bne	r2,zero,816fa4 <__subdf3+0x720>
  816e68:	1984b03a 	or	r2,r3,r6
  816e6c:	10000426 	beq	r2,zero,816e80 <__subdf3+0x5fc>
  816e70:	180b883a 	mov	r5,r3
  816e74:	3023883a 	mov	r17,r6
  816e78:	3825883a 	mov	r18,r7
  816e7c:	003ea406 	br	816910 <__alt_data_end+0xff816910>
  816e80:	0011883a 	mov	r8,zero
  816e84:	000b883a 	mov	r5,zero
  816e88:	0023883a 	mov	r17,zero
  816e8c:	003f0006 	br	816a90 <__alt_data_end+0xff816a90>
  816e90:	11fff804 	addi	r7,r2,-32
  816e94:	19c8d83a 	srl	r4,r3,r7
  816e98:	01c00804 	movi	r7,32
  816e9c:	11c07e26 	beq	r2,r7,817098 <__subdf3+0x814>
  816ea0:	01c01004 	movi	r7,64
  816ea4:	3885c83a 	sub	r2,r7,r2
  816ea8:	1884983a 	sll	r2,r3,r2
  816eac:	118cb03a 	or	r6,r2,r6
  816eb0:	300ec03a 	cmpne	r7,r6,zero
  816eb4:	390eb03a 	or	r7,r7,r4
  816eb8:	0005883a 	mov	r2,zero
  816ebc:	003f0906 	br	816ae4 <__alt_data_end+0xff816ae4>
  816ec0:	0101ffc4 	movi	r4,2047
  816ec4:	513f991e 	bne	r10,r4,816d2c <__alt_data_end+0xff816d2c>
  816ec8:	180b883a 	mov	r5,r3
  816ecc:	3023883a 	mov	r17,r6
  816ed0:	5021883a 	mov	r16,r10
  816ed4:	3825883a 	mov	r18,r7
  816ed8:	003e8d06 	br	816910 <__alt_data_end+0xff816910>
  816edc:	80001a1e 	bne	r16,zero,816f48 <__subdf3+0x6c4>
  816ee0:	2c48b03a 	or	r4,r5,r17
  816ee4:	20005526 	beq	r4,zero,81703c <__subdf3+0x7b8>
  816ee8:	0084303a 	nor	r2,zero,r2
  816eec:	1000511e 	bne	r2,zero,817034 <__subdf3+0x7b0>
  816ef0:	89a3883a 	add	r17,r17,r6
  816ef4:	194b883a 	add	r5,r3,r5
  816ef8:	898d803a 	cmpltu	r6,r17,r6
  816efc:	298b883a 	add	r5,r5,r6
  816f00:	5021883a 	mov	r16,r10
  816f04:	003efc06 	br	816af8 <__alt_data_end+0xff816af8>
  816f08:	1000341e 	bne	r2,zero,816fdc <__subdf3+0x758>
  816f0c:	1984b03a 	or	r2,r3,r6
  816f10:	10006f26 	beq	r2,zero,8170d0 <__subdf3+0x84c>
  816f14:	180b883a 	mov	r5,r3
  816f18:	3023883a 	mov	r17,r6
  816f1c:	3825883a 	mov	r18,r7
  816f20:	0401ffc4 	movi	r16,2047
  816f24:	003e7a06 	br	816910 <__alt_data_end+0xff816910>
  816f28:	2c62b03a 	or	r17,r5,r17
  816f2c:	8822c03a 	cmpne	r17,r17,zero
  816f30:	0005883a 	mov	r2,zero
  816f34:	003f8a06 	br	816d60 <__alt_data_end+0xff816d60>
  816f38:	3821883a 	mov	r16,r7
  816f3c:	000b883a 	mov	r5,zero
  816f40:	0023883a 	mov	r17,zero
  816f44:	003ed206 	br	816a90 <__alt_data_end+0xff816a90>
  816f48:	0101ffc4 	movi	r4,2047
  816f4c:	51003b26 	beq	r10,r4,81703c <__subdf3+0x7b8>
  816f50:	0085c83a 	sub	r2,zero,r2
  816f54:	29402034 	orhi	r5,r5,128
  816f58:	01000e04 	movi	r4,56
  816f5c:	20806216 	blt	r4,r2,8170e8 <__subdf3+0x864>
  816f60:	010007c4 	movi	r4,31
  816f64:	20806b16 	blt	r4,r2,817114 <__subdf3+0x890>
  816f68:	01000804 	movi	r4,32
  816f6c:	2089c83a 	sub	r4,r4,r2
  816f70:	2912983a 	sll	r9,r5,r4
  816f74:	888ed83a 	srl	r7,r17,r2
  816f78:	8908983a 	sll	r4,r17,r4
  816f7c:	2884d83a 	srl	r2,r5,r2
  816f80:	49e2b03a 	or	r17,r9,r7
  816f84:	2008c03a 	cmpne	r4,r4,zero
  816f88:	8922b03a 	or	r17,r17,r4
  816f8c:	89a3883a 	add	r17,r17,r6
  816f90:	10c5883a 	add	r2,r2,r3
  816f94:	898d803a 	cmpltu	r6,r17,r6
  816f98:	118b883a 	add	r5,r2,r6
  816f9c:	5021883a 	mov	r16,r10
  816fa0:	003ed506 	br	816af8 <__alt_data_end+0xff816af8>
  816fa4:	1984b03a 	or	r2,r3,r6
  816fa8:	103e5926 	beq	r2,zero,816910 <__alt_data_end+0xff816910>
  816fac:	8989c83a 	sub	r4,r17,r6
  816fb0:	8911803a 	cmpltu	r8,r17,r4
  816fb4:	28c5c83a 	sub	r2,r5,r3
  816fb8:	1205c83a 	sub	r2,r2,r8
  816fbc:	1200202c 	andhi	r8,r2,128
  816fc0:	403ef926 	beq	r8,zero,816ba8 <__alt_data_end+0xff816ba8>
  816fc4:	3463c83a 	sub	r17,r6,r17
  816fc8:	194bc83a 	sub	r5,r3,r5
  816fcc:	344d803a 	cmpltu	r6,r6,r17
  816fd0:	298bc83a 	sub	r5,r5,r6
  816fd4:	3825883a 	mov	r18,r7
  816fd8:	003e4d06 	br	816910 <__alt_data_end+0xff816910>
  816fdc:	1984b03a 	or	r2,r3,r6
  816fe0:	10002b26 	beq	r2,zero,817090 <__subdf3+0x80c>
  816fe4:	2808d0fa 	srli	r4,r5,3
  816fe8:	8822d0fa 	srli	r17,r17,3
  816fec:	280a977a 	slli	r5,r5,29
  816ff0:	2080022c 	andhi	r2,r4,8
  816ff4:	2c62b03a 	or	r17,r5,r17
  816ff8:	10000826 	beq	r2,zero,81701c <__subdf3+0x798>
  816ffc:	1810d0fa 	srli	r8,r3,3
  817000:	4080022c 	andhi	r2,r8,8
  817004:	1000051e 	bne	r2,zero,81701c <__subdf3+0x798>
  817008:	300cd0fa 	srli	r6,r6,3
  81700c:	1804977a 	slli	r2,r3,29
  817010:	4009883a 	mov	r4,r8
  817014:	3825883a 	mov	r18,r7
  817018:	11a2b03a 	or	r17,r2,r6
  81701c:	880ad77a 	srli	r5,r17,29
  817020:	200890fa 	slli	r4,r4,3
  817024:	882290fa 	slli	r17,r17,3
  817028:	0401ffc4 	movi	r16,2047
  81702c:	290ab03a 	or	r5,r5,r4
  817030:	003e3706 	br	816910 <__alt_data_end+0xff816910>
  817034:	0101ffc4 	movi	r4,2047
  817038:	513fc71e 	bne	r10,r4,816f58 <__alt_data_end+0xff816f58>
  81703c:	180b883a 	mov	r5,r3
  817040:	3023883a 	mov	r17,r6
  817044:	5021883a 	mov	r16,r10
  817048:	003e3106 	br	816910 <__alt_data_end+0xff816910>
  81704c:	10002d26 	beq	r2,zero,817104 <__subdf3+0x880>
  817050:	1984b03a 	or	r2,r3,r6
  817054:	10000e26 	beq	r2,zero,817090 <__subdf3+0x80c>
  817058:	2808d0fa 	srli	r4,r5,3
  81705c:	8822d0fa 	srli	r17,r17,3
  817060:	280a977a 	slli	r5,r5,29
  817064:	2080022c 	andhi	r2,r4,8
  817068:	2c62b03a 	or	r17,r5,r17
  81706c:	103feb26 	beq	r2,zero,81701c <__alt_data_end+0xff81701c>
  817070:	180ed0fa 	srli	r7,r3,3
  817074:	3880022c 	andhi	r2,r7,8
  817078:	103fe81e 	bne	r2,zero,81701c <__alt_data_end+0xff81701c>
  81707c:	300cd0fa 	srli	r6,r6,3
  817080:	1804977a 	slli	r2,r3,29
  817084:	3809883a 	mov	r4,r7
  817088:	11a2b03a 	or	r17,r2,r6
  81708c:	003fe306 	br	81701c <__alt_data_end+0xff81701c>
  817090:	0401ffc4 	movi	r16,2047
  817094:	003e1e06 	br	816910 <__alt_data_end+0xff816910>
  817098:	0005883a 	mov	r2,zero
  81709c:	003f8306 	br	816eac <__alt_data_end+0xff816eac>
  8170a0:	113ff804 	addi	r4,r2,-32
  8170a4:	02000804 	movi	r8,32
  8170a8:	2908d83a 	srl	r4,r5,r4
  8170ac:	12002526 	beq	r2,r8,817144 <__subdf3+0x8c0>
  8170b0:	02001004 	movi	r8,64
  8170b4:	4085c83a 	sub	r2,r8,r2
  8170b8:	288a983a 	sll	r5,r5,r2
  8170bc:	2c62b03a 	or	r17,r5,r17
  8170c0:	8822c03a 	cmpne	r17,r17,zero
  8170c4:	8922b03a 	or	r17,r17,r4
  8170c8:	0005883a 	mov	r2,zero
  8170cc:	003f2406 	br	816d60 <__alt_data_end+0xff816d60>
  8170d0:	01402034 	movhi	r5,128
  8170d4:	0011883a 	mov	r8,zero
  8170d8:	297fffc4 	addi	r5,r5,-1
  8170dc:	047ffe04 	movi	r17,-8
  8170e0:	0401ffc4 	movi	r16,2047
  8170e4:	003e6a06 	br	816a90 <__alt_data_end+0xff816a90>
  8170e8:	2c62b03a 	or	r17,r5,r17
  8170ec:	8822c03a 	cmpne	r17,r17,zero
  8170f0:	0005883a 	mov	r2,zero
  8170f4:	003fa506 	br	816f8c <__alt_data_end+0xff816f8c>
  8170f8:	180b883a 	mov	r5,r3
  8170fc:	3023883a 	mov	r17,r6
  817100:	003e0306 	br	816910 <__alt_data_end+0xff816910>
  817104:	180b883a 	mov	r5,r3
  817108:	3023883a 	mov	r17,r6
  81710c:	0401ffc4 	movi	r16,2047
  817110:	003dff06 	br	816910 <__alt_data_end+0xff816910>
  817114:	113ff804 	addi	r4,r2,-32
  817118:	01c00804 	movi	r7,32
  81711c:	2908d83a 	srl	r4,r5,r4
  817120:	11c00a26 	beq	r2,r7,81714c <__subdf3+0x8c8>
  817124:	01c01004 	movi	r7,64
  817128:	3885c83a 	sub	r2,r7,r2
  81712c:	288a983a 	sll	r5,r5,r2
  817130:	2c62b03a 	or	r17,r5,r17
  817134:	8822c03a 	cmpne	r17,r17,zero
  817138:	8922b03a 	or	r17,r17,r4
  81713c:	0005883a 	mov	r2,zero
  817140:	003f9206 	br	816f8c <__alt_data_end+0xff816f8c>
  817144:	000b883a 	mov	r5,zero
  817148:	003fdc06 	br	8170bc <__alt_data_end+0xff8170bc>
  81714c:	000b883a 	mov	r5,zero
  817150:	003ff706 	br	817130 <__alt_data_end+0xff817130>

00817154 <__fixdfsi>:
  817154:	2806d53a 	srli	r3,r5,20
  817158:	00800434 	movhi	r2,16
  81715c:	10bfffc4 	addi	r2,r2,-1
  817160:	18c1ffcc 	andi	r3,r3,2047
  817164:	0180ff84 	movi	r6,1022
  817168:	2884703a 	and	r2,r5,r2
  81716c:	280ad7fa 	srli	r5,r5,31
  817170:	30c0130e 	bge	r6,r3,8171c0 <__fixdfsi+0x6c>
  817174:	01810744 	movi	r6,1053
  817178:	30c00d16 	blt	r6,r3,8171b0 <__fixdfsi+0x5c>
  81717c:	01810cc4 	movi	r6,1075
  817180:	30cdc83a 	sub	r6,r6,r3
  817184:	01c007c4 	movi	r7,31
  817188:	10800434 	orhi	r2,r2,16
  81718c:	39800e0e 	bge	r7,r6,8171c8 <__fixdfsi+0x74>
  817190:	010104c4 	movi	r4,1043
  817194:	20c7c83a 	sub	r3,r4,r3
  817198:	10c6d83a 	srl	r3,r2,r3
  81719c:	29403fcc 	andi	r5,r5,255
  8171a0:	0145c83a 	sub	r2,zero,r5
  8171a4:	1884f03a 	xor	r2,r3,r2
  8171a8:	1145883a 	add	r2,r2,r5
  8171ac:	f800283a 	ret
  8171b0:	00a00034 	movhi	r2,32768
  8171b4:	10bfffc4 	addi	r2,r2,-1
  8171b8:	2885883a 	add	r2,r5,r2
  8171bc:	f800283a 	ret
  8171c0:	0005883a 	mov	r2,zero
  8171c4:	f800283a 	ret
  8171c8:	18fefb44 	addi	r3,r3,-1043
  8171cc:	2188d83a 	srl	r4,r4,r6
  8171d0:	10c6983a 	sll	r3,r2,r3
  8171d4:	20c6b03a 	or	r3,r4,r3
  8171d8:	003ff006 	br	81719c <__alt_data_end+0xff81719c>

008171dc <__floatsidf>:
  8171dc:	defffd04 	addi	sp,sp,-12
  8171e0:	dc400115 	stw	r17,4(sp)
  8171e4:	dfc00215 	stw	ra,8(sp)
  8171e8:	dc000015 	stw	r16,0(sp)
  8171ec:	2023883a 	mov	r17,r4
  8171f0:	20001426 	beq	r4,zero,817244 <__floatsidf+0x68>
  8171f4:	2020d7fa 	srli	r16,r4,31
  8171f8:	80000126 	beq	r16,zero,817200 <__floatsidf+0x24>
  8171fc:	0123c83a 	sub	r17,zero,r4
  817200:	8809883a 	mov	r4,r17
  817204:	08174e80 	call	8174e8 <__clzsi2>
  817208:	01410784 	movi	r5,1054
  81720c:	00c00284 	movi	r3,10
  817210:	288bc83a 	sub	r5,r5,r2
  817214:	18801c16 	blt	r3,r2,817288 <__floatsidf+0xac>
  817218:	00c002c4 	movi	r3,11
  81721c:	1887c83a 	sub	r3,r3,r2
  817220:	88c8d83a 	srl	r4,r17,r3
  817224:	00c00434 	movhi	r3,16
  817228:	18ffffc4 	addi	r3,r3,-1
  81722c:	10800544 	addi	r2,r2,21
  817230:	20c8703a 	and	r4,r4,r3
  817234:	8884983a 	sll	r2,r17,r2
  817238:	28c1ffcc 	andi	r3,r5,2047
  81723c:	800d883a 	mov	r6,r16
  817240:	00000406 	br	817254 <__floatsidf+0x78>
  817244:	000d883a 	mov	r6,zero
  817248:	0007883a 	mov	r3,zero
  81724c:	0009883a 	mov	r4,zero
  817250:	0005883a 	mov	r2,zero
  817254:	180a953a 	slli	r5,r3,20
  817258:	31803fcc 	andi	r6,r6,255
  81725c:	00c00434 	movhi	r3,16
  817260:	300c97fa 	slli	r6,r6,31
  817264:	18ffffc4 	addi	r3,r3,-1
  817268:	20c6703a 	and	r3,r4,r3
  81726c:	1946b03a 	or	r3,r3,r5
  817270:	1986b03a 	or	r3,r3,r6
  817274:	dfc00217 	ldw	ra,8(sp)
  817278:	dc400117 	ldw	r17,4(sp)
  81727c:	dc000017 	ldw	r16,0(sp)
  817280:	dec00304 	addi	sp,sp,12
  817284:	f800283a 	ret
  817288:	10fffd44 	addi	r3,r2,-11
  81728c:	88c8983a 	sll	r4,r17,r3
  817290:	00800434 	movhi	r2,16
  817294:	10bfffc4 	addi	r2,r2,-1
  817298:	2088703a 	and	r4,r4,r2
  81729c:	28c1ffcc 	andi	r3,r5,2047
  8172a0:	800d883a 	mov	r6,r16
  8172a4:	0005883a 	mov	r2,zero
  8172a8:	003fea06 	br	817254 <__alt_data_end+0xff817254>

008172ac <__floatunsidf>:
  8172ac:	defffe04 	addi	sp,sp,-8
  8172b0:	dc000015 	stw	r16,0(sp)
  8172b4:	dfc00115 	stw	ra,4(sp)
  8172b8:	2021883a 	mov	r16,r4
  8172bc:	20001026 	beq	r4,zero,817300 <__floatunsidf+0x54>
  8172c0:	08174e80 	call	8174e8 <__clzsi2>
  8172c4:	01410784 	movi	r5,1054
  8172c8:	100d883a 	mov	r6,r2
  8172cc:	288bc83a 	sub	r5,r5,r2
  8172d0:	00800284 	movi	r2,10
  8172d4:	11801616 	blt	r2,r6,817330 <__floatunsidf+0x84>
  8172d8:	008002c4 	movi	r2,11
  8172dc:	1185c83a 	sub	r2,r2,r6
  8172e0:	8084d83a 	srl	r2,r16,r2
  8172e4:	00c00434 	movhi	r3,16
  8172e8:	31c00544 	addi	r7,r6,21
  8172ec:	18ffffc4 	addi	r3,r3,-1
  8172f0:	81e0983a 	sll	r16,r16,r7
  8172f4:	10cc703a 	and	r6,r2,r3
  8172f8:	2941ffcc 	andi	r5,r5,2047
  8172fc:	00000206 	br	817308 <__floatunsidf+0x5c>
  817300:	000b883a 	mov	r5,zero
  817304:	000d883a 	mov	r6,zero
  817308:	280a953a 	slli	r5,r5,20
  81730c:	00c00434 	movhi	r3,16
  817310:	18ffffc4 	addi	r3,r3,-1
  817314:	30c6703a 	and	r3,r6,r3
  817318:	8005883a 	mov	r2,r16
  81731c:	1946b03a 	or	r3,r3,r5
  817320:	dfc00117 	ldw	ra,4(sp)
  817324:	dc000017 	ldw	r16,0(sp)
  817328:	dec00204 	addi	sp,sp,8
  81732c:	f800283a 	ret
  817330:	31bffd44 	addi	r6,r6,-11
  817334:	818c983a 	sll	r6,r16,r6
  817338:	00800434 	movhi	r2,16
  81733c:	10bfffc4 	addi	r2,r2,-1
  817340:	2941ffcc 	andi	r5,r5,2047
  817344:	0021883a 	mov	r16,zero
  817348:	308c703a 	and	r6,r6,r2
  81734c:	003fee06 	br	817308 <__alt_data_end+0xff817308>

00817350 <__truncdfsf2>:
  817350:	2810d53a 	srli	r8,r5,20
  817354:	01c00434 	movhi	r7,16
  817358:	39ffffc4 	addi	r7,r7,-1
  81735c:	29ce703a 	and	r7,r5,r7
  817360:	380e90fa 	slli	r7,r7,3
  817364:	4201ffcc 	andi	r8,r8,2047
  817368:	200cd77a 	srli	r6,r4,29
  81736c:	42400044 	addi	r9,r8,1
  817370:	4a41ffcc 	andi	r9,r9,2047
  817374:	00800044 	movi	r2,1
  817378:	398cb03a 	or	r6,r7,r6
  81737c:	280ad7fa 	srli	r5,r5,31
  817380:	200e90fa 	slli	r7,r4,3
  817384:	1240230e 	bge	r2,r9,817414 <__truncdfsf2+0xc4>
  817388:	40ff2004 	addi	r3,r8,-896
  81738c:	00803f84 	movi	r2,254
  817390:	10c01516 	blt	r2,r3,8173e8 <__truncdfsf2+0x98>
  817394:	00c02d0e 	bge	zero,r3,81744c <__truncdfsf2+0xfc>
  817398:	200891ba 	slli	r4,r4,6
  81739c:	300c90fa 	slli	r6,r6,3
  8173a0:	380ed77a 	srli	r7,r7,29
  8173a4:	2008c03a 	cmpne	r4,r4,zero
  8173a8:	310cb03a 	or	r6,r6,r4
  8173ac:	31ccb03a 	or	r6,r6,r7
  8173b0:	308001cc 	andi	r2,r6,7
  8173b4:	10000426 	beq	r2,zero,8173c8 <__truncdfsf2+0x78>
  8173b8:	310003cc 	andi	r4,r6,15
  8173bc:	00800104 	movi	r2,4
  8173c0:	20800126 	beq	r4,r2,8173c8 <__truncdfsf2+0x78>
  8173c4:	31800104 	addi	r6,r6,4
  8173c8:	3081002c 	andhi	r2,r6,1024
  8173cc:	10002326 	beq	r2,zero,81745c <__truncdfsf2+0x10c>
  8173d0:	18c00044 	addi	r3,r3,1
  8173d4:	00803fc4 	movi	r2,255
  8173d8:	18800326 	beq	r3,r2,8173e8 <__truncdfsf2+0x98>
  8173dc:	300c91ba 	slli	r6,r6,6
  8173e0:	300cd27a 	srli	r6,r6,9
  8173e4:	00000206 	br	8173f0 <__truncdfsf2+0xa0>
  8173e8:	00ffffc4 	movi	r3,-1
  8173ec:	000d883a 	mov	r6,zero
  8173f0:	18c03fcc 	andi	r3,r3,255
  8173f4:	180895fa 	slli	r4,r3,23
  8173f8:	00c02034 	movhi	r3,128
  8173fc:	280a97fa 	slli	r5,r5,31
  817400:	18ffffc4 	addi	r3,r3,-1
  817404:	30c6703a 	and	r3,r6,r3
  817408:	1906b03a 	or	r3,r3,r4
  81740c:	1944b03a 	or	r2,r3,r5
  817410:	f800283a 	ret
  817414:	4000071e 	bne	r8,zero,817434 <__truncdfsf2+0xe4>
  817418:	31ccb03a 	or	r6,r6,r7
  81741c:	30000d1e 	bne	r6,zero,817454 <__truncdfsf2+0x104>
  817420:	0007883a 	mov	r3,zero
  817424:	00802034 	movhi	r2,128
  817428:	10bfffc4 	addi	r2,r2,-1
  81742c:	308c703a 	and	r6,r6,r2
  817430:	003fef06 	br	8173f0 <__alt_data_end+0xff8173f0>
  817434:	31c8b03a 	or	r4,r6,r7
  817438:	203feb26 	beq	r4,zero,8173e8 <__alt_data_end+0xff8173e8>
  81743c:	300c90fa 	slli	r6,r6,3
  817440:	00c03fc4 	movi	r3,255
  817444:	31808034 	orhi	r6,r6,512
  817448:	003fd906 	br	8173b0 <__alt_data_end+0xff8173b0>
  81744c:	00bffa44 	movi	r2,-23
  817450:	1880090e 	bge	r3,r2,817478 <__truncdfsf2+0x128>
  817454:	01800144 	movi	r6,5
  817458:	0007883a 	mov	r3,zero
  81745c:	00803fc4 	movi	r2,255
  817460:	300cd0fa 	srli	r6,r6,3
  817464:	18bfef1e 	bne	r3,r2,817424 <__alt_data_end+0xff817424>
  817468:	303fdf26 	beq	r6,zero,8173e8 <__alt_data_end+0xff8173e8>
  81746c:	31801034 	orhi	r6,r6,64
  817470:	00ffffc4 	movi	r3,-1
  817474:	003feb06 	br	817424 <__alt_data_end+0xff817424>
  817478:	0080e784 	movi	r2,926
  81747c:	1205c83a 	sub	r2,r2,r8
  817480:	00c007c4 	movi	r3,31
  817484:	31802034 	orhi	r6,r6,128
  817488:	18800916 	blt	r3,r2,8174b0 <__truncdfsf2+0x160>
  81748c:	423f2084 	addi	r8,r8,-894
  817490:	3a06983a 	sll	r3,r7,r8
  817494:	3210983a 	sll	r8,r6,r8
  817498:	388ed83a 	srl	r7,r7,r2
  81749c:	180cc03a 	cmpne	r6,r3,zero
  8174a0:	418cb03a 	or	r6,r8,r6
  8174a4:	31ccb03a 	or	r6,r6,r7
  8174a8:	0007883a 	mov	r3,zero
  8174ac:	003fc006 	br	8173b0 <__alt_data_end+0xff8173b0>
  8174b0:	00c0df84 	movi	r3,894
  8174b4:	1a07c83a 	sub	r3,r3,r8
  8174b8:	01000804 	movi	r4,32
  8174bc:	30c6d83a 	srl	r3,r6,r3
  8174c0:	11000726 	beq	r2,r4,8174e0 <__truncdfsf2+0x190>
  8174c4:	423f2884 	addi	r8,r8,-862
  8174c8:	3210983a 	sll	r8,r6,r8
  8174cc:	41ceb03a 	or	r7,r8,r7
  8174d0:	380ec03a 	cmpne	r7,r7,zero
  8174d4:	38ccb03a 	or	r6,r7,r3
  8174d8:	0007883a 	mov	r3,zero
  8174dc:	003fb406 	br	8173b0 <__alt_data_end+0xff8173b0>
  8174e0:	0011883a 	mov	r8,zero
  8174e4:	003ff906 	br	8174cc <__alt_data_end+0xff8174cc>

008174e8 <__clzsi2>:
  8174e8:	00bfffd4 	movui	r2,65535
  8174ec:	11000b36 	bltu	r2,r4,81751c <__clzsi2+0x34>
  8174f0:	00803fc4 	movi	r2,255
  8174f4:	1100122e 	bgeu	r2,r4,817540 <__clzsi2+0x58>
  8174f8:	00c00204 	movi	r3,8
  8174fc:	01400604 	movi	r5,24
  817500:	20c8d83a 	srl	r4,r4,r3
  817504:	008020b4 	movhi	r2,130
  817508:	10b05884 	addi	r2,r2,-16030
  81750c:	1109883a 	add	r4,r2,r4
  817510:	20800003 	ldbu	r2,0(r4)
  817514:	2885c83a 	sub	r2,r5,r2
  817518:	f800283a 	ret
  81751c:	00804034 	movhi	r2,256
  817520:	10bfffc4 	addi	r2,r2,-1
  817524:	11000336 	bltu	r2,r4,817534 <__clzsi2+0x4c>
  817528:	00c00404 	movi	r3,16
  81752c:	180b883a 	mov	r5,r3
  817530:	003ff306 	br	817500 <__alt_data_end+0xff817500>
  817534:	00c00604 	movi	r3,24
  817538:	01400204 	movi	r5,8
  81753c:	003ff006 	br	817500 <__alt_data_end+0xff817500>
  817540:	0007883a 	mov	r3,zero
  817544:	01400804 	movi	r5,32
  817548:	003fed06 	br	817500 <__alt_data_end+0xff817500>

0081754c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81754c:	defffe04 	addi	sp,sp,-8
  817550:	dfc00115 	stw	ra,4(sp)
  817554:	df000015 	stw	fp,0(sp)
  817558:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81755c:	008020b4 	movhi	r2,130
  817560:	10b80404 	addi	r2,r2,-8176
  817564:	10800017 	ldw	r2,0(r2)
  817568:	10000526 	beq	r2,zero,817580 <alt_get_errno+0x34>
  81756c:	008020b4 	movhi	r2,130
  817570:	10b80404 	addi	r2,r2,-8176
  817574:	10800017 	ldw	r2,0(r2)
  817578:	103ee83a 	callr	r2
  81757c:	00000206 	br	817588 <alt_get_errno+0x3c>
  817580:	008020b4 	movhi	r2,130
  817584:	10bf6304 	addi	r2,r2,-628
}
  817588:	e037883a 	mov	sp,fp
  81758c:	dfc00117 	ldw	ra,4(sp)
  817590:	df000017 	ldw	fp,0(sp)
  817594:	dec00204 	addi	sp,sp,8
  817598:	f800283a 	ret

0081759c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  81759c:	defffb04 	addi	sp,sp,-20
  8175a0:	dfc00415 	stw	ra,16(sp)
  8175a4:	df000315 	stw	fp,12(sp)
  8175a8:	df000304 	addi	fp,sp,12
  8175ac:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  8175b0:	e0bfff17 	ldw	r2,-4(fp)
  8175b4:	10000616 	blt	r2,zero,8175d0 <close+0x34>
  8175b8:	e0bfff17 	ldw	r2,-4(fp)
  8175bc:	10c00324 	muli	r3,r2,12
  8175c0:	008020b4 	movhi	r2,130
  8175c4:	10b2ee04 	addi	r2,r2,-13384
  8175c8:	1885883a 	add	r2,r3,r2
  8175cc:	00000106 	br	8175d4 <close+0x38>
  8175d0:	0005883a 	mov	r2,zero
  8175d4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  8175d8:	e0bffd17 	ldw	r2,-12(fp)
  8175dc:	10001926 	beq	r2,zero,817644 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  8175e0:	e0bffd17 	ldw	r2,-12(fp)
  8175e4:	10800017 	ldw	r2,0(r2)
  8175e8:	10800417 	ldw	r2,16(r2)
  8175ec:	10000626 	beq	r2,zero,817608 <close+0x6c>
  8175f0:	e0bffd17 	ldw	r2,-12(fp)
  8175f4:	10800017 	ldw	r2,0(r2)
  8175f8:	10800417 	ldw	r2,16(r2)
  8175fc:	e13ffd17 	ldw	r4,-12(fp)
  817600:	103ee83a 	callr	r2
  817604:	00000106 	br	81760c <close+0x70>
  817608:	0005883a 	mov	r2,zero
  81760c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  817610:	e13fff17 	ldw	r4,-4(fp)
  817614:	08180bc0 	call	8180bc <alt_release_fd>
    if (rval < 0)
  817618:	e0bffe17 	ldw	r2,-8(fp)
  81761c:	1000070e 	bge	r2,zero,81763c <close+0xa0>
    {
      ALT_ERRNO = -rval;
  817620:	081754c0 	call	81754c <alt_get_errno>
  817624:	1007883a 	mov	r3,r2
  817628:	e0bffe17 	ldw	r2,-8(fp)
  81762c:	0085c83a 	sub	r2,zero,r2
  817630:	18800015 	stw	r2,0(r3)
      return -1;
  817634:	00bfffc4 	movi	r2,-1
  817638:	00000706 	br	817658 <close+0xbc>
    }
    return 0;
  81763c:	0005883a 	mov	r2,zero
  817640:	00000506 	br	817658 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  817644:	081754c0 	call	81754c <alt_get_errno>
  817648:	1007883a 	mov	r3,r2
  81764c:	00801444 	movi	r2,81
  817650:	18800015 	stw	r2,0(r3)
    return -1;
  817654:	00bfffc4 	movi	r2,-1
  }
}
  817658:	e037883a 	mov	sp,fp
  81765c:	dfc00117 	ldw	ra,4(sp)
  817660:	df000017 	ldw	fp,0(sp)
  817664:	dec00204 	addi	sp,sp,8
  817668:	f800283a 	ret

0081766c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  81766c:	defffc04 	addi	sp,sp,-16
  817670:	df000315 	stw	fp,12(sp)
  817674:	df000304 	addi	fp,sp,12
  817678:	e13ffd15 	stw	r4,-12(fp)
  81767c:	e17ffe15 	stw	r5,-8(fp)
  817680:	e1bfff15 	stw	r6,-4(fp)
  return len;
  817684:	e0bfff17 	ldw	r2,-4(fp)
}
  817688:	e037883a 	mov	sp,fp
  81768c:	df000017 	ldw	fp,0(sp)
  817690:	dec00104 	addi	sp,sp,4
  817694:	f800283a 	ret

00817698 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  817698:	defffe04 	addi	sp,sp,-8
  81769c:	dfc00115 	stw	ra,4(sp)
  8176a0:	df000015 	stw	fp,0(sp)
  8176a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8176a8:	008020b4 	movhi	r2,130
  8176ac:	10b80404 	addi	r2,r2,-8176
  8176b0:	10800017 	ldw	r2,0(r2)
  8176b4:	10000526 	beq	r2,zero,8176cc <alt_get_errno+0x34>
  8176b8:	008020b4 	movhi	r2,130
  8176bc:	10b80404 	addi	r2,r2,-8176
  8176c0:	10800017 	ldw	r2,0(r2)
  8176c4:	103ee83a 	callr	r2
  8176c8:	00000206 	br	8176d4 <alt_get_errno+0x3c>
  8176cc:	008020b4 	movhi	r2,130
  8176d0:	10bf6304 	addi	r2,r2,-628
}
  8176d4:	e037883a 	mov	sp,fp
  8176d8:	dfc00117 	ldw	ra,4(sp)
  8176dc:	df000017 	ldw	fp,0(sp)
  8176e0:	dec00204 	addi	sp,sp,8
  8176e4:	f800283a 	ret

008176e8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  8176e8:	defffb04 	addi	sp,sp,-20
  8176ec:	dfc00415 	stw	ra,16(sp)
  8176f0:	df000315 	stw	fp,12(sp)
  8176f4:	df000304 	addi	fp,sp,12
  8176f8:	e13ffe15 	stw	r4,-8(fp)
  8176fc:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  817700:	e0bffe17 	ldw	r2,-8(fp)
  817704:	10000616 	blt	r2,zero,817720 <fstat+0x38>
  817708:	e0bffe17 	ldw	r2,-8(fp)
  81770c:	10c00324 	muli	r3,r2,12
  817710:	008020b4 	movhi	r2,130
  817714:	10b2ee04 	addi	r2,r2,-13384
  817718:	1885883a 	add	r2,r3,r2
  81771c:	00000106 	br	817724 <fstat+0x3c>
  817720:	0005883a 	mov	r2,zero
  817724:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  817728:	e0bffd17 	ldw	r2,-12(fp)
  81772c:	10001026 	beq	r2,zero,817770 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  817730:	e0bffd17 	ldw	r2,-12(fp)
  817734:	10800017 	ldw	r2,0(r2)
  817738:	10800817 	ldw	r2,32(r2)
  81773c:	10000726 	beq	r2,zero,81775c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  817740:	e0bffd17 	ldw	r2,-12(fp)
  817744:	10800017 	ldw	r2,0(r2)
  817748:	10800817 	ldw	r2,32(r2)
  81774c:	e13ffd17 	ldw	r4,-12(fp)
  817750:	e17fff17 	ldw	r5,-4(fp)
  817754:	103ee83a 	callr	r2
  817758:	00000a06 	br	817784 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  81775c:	e0bfff17 	ldw	r2,-4(fp)
  817760:	00c80004 	movi	r3,8192
  817764:	10c00115 	stw	r3,4(r2)
      return 0;
  817768:	0005883a 	mov	r2,zero
  81776c:	00000506 	br	817784 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  817770:	08176980 	call	817698 <alt_get_errno>
  817774:	1007883a 	mov	r3,r2
  817778:	00801444 	movi	r2,81
  81777c:	18800015 	stw	r2,0(r3)
    return -1;
  817780:	00bfffc4 	movi	r2,-1
  }
}
  817784:	e037883a 	mov	sp,fp
  817788:	dfc00117 	ldw	ra,4(sp)
  81778c:	df000017 	ldw	fp,0(sp)
  817790:	dec00204 	addi	sp,sp,8
  817794:	f800283a 	ret

00817798 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  817798:	defff004 	addi	sp,sp,-64
  81779c:	df000f15 	stw	fp,60(sp)
  8177a0:	df000f04 	addi	fp,sp,60
  8177a4:	e13ffd15 	stw	r4,-12(fp)
  8177a8:	e17ffe15 	stw	r5,-8(fp)
  8177ac:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
  8177b0:	00bffa84 	movi	r2,-22
  8177b4:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  8177b8:	e0bffd17 	ldw	r2,-12(fp)
  8177bc:	10800828 	cmpgeui	r2,r2,32
  8177c0:	10005c1e 	bne	r2,zero,817934 <alt_irq_register+0x19c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8177c4:	0005303a 	rdctl	r2,status
  8177c8:	e0bff315 	stw	r2,-52(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8177cc:	e0fff317 	ldw	r3,-52(fp)
  8177d0:	00bfff84 	movi	r2,-2
  8177d4:	1884703a 	and	r2,r3,r2
  8177d8:	1001703a 	wrctl	status,r2
  
  return context;
  8177dc:	e0bff317 	ldw	r2,-52(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
  8177e0:	e0bff215 	stw	r2,-56(fp)

    alt_irq[id].handler = handler;
  8177e4:	008020b4 	movhi	r2,130
  8177e8:	10bf7b04 	addi	r2,r2,-532
  8177ec:	e0fffd17 	ldw	r3,-12(fp)
  8177f0:	180690fa 	slli	r3,r3,3
  8177f4:	10c5883a 	add	r2,r2,r3
  8177f8:	e0ffff17 	ldw	r3,-4(fp)
  8177fc:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
  817800:	008020b4 	movhi	r2,130
  817804:	10bf7b04 	addi	r2,r2,-532
  817808:	e0fffd17 	ldw	r3,-12(fp)
  81780c:	180690fa 	slli	r3,r3,3
  817810:	18c00104 	addi	r3,r3,4
  817814:	10c5883a 	add	r2,r2,r3
  817818:	e0fffe17 	ldw	r3,-8(fp)
  81781c:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
  817820:	e0bfff17 	ldw	r2,-4(fp)
  817824:	10001f26 	beq	r2,zero,8178a4 <alt_irq_register+0x10c>
  817828:	e0bffd17 	ldw	r2,-12(fp)
  81782c:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  817830:	0005303a 	rdctl	r2,status
  817834:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  817838:	e0fff517 	ldw	r3,-44(fp)
  81783c:	00bfff84 	movi	r2,-2
  817840:	1884703a 	and	r2,r3,r2
  817844:	1001703a 	wrctl	status,r2
  
  return context;
  817848:	e0bff517 	ldw	r2,-44(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  81784c:	e0bff615 	stw	r2,-40(fp)

  alt_irq_active |= (1 << id);
  817850:	e0bff417 	ldw	r2,-48(fp)
  817854:	00c00044 	movi	r3,1
  817858:	1884983a 	sll	r2,r3,r2
  81785c:	1007883a 	mov	r3,r2
  817860:	008020b4 	movhi	r2,130
  817864:	10bf6a04 	addi	r2,r2,-600
  817868:	10800017 	ldw	r2,0(r2)
  81786c:	1886b03a 	or	r3,r3,r2
  817870:	008020b4 	movhi	r2,130
  817874:	10bf6a04 	addi	r2,r2,-600
  817878:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  81787c:	008020b4 	movhi	r2,130
  817880:	10bf6a04 	addi	r2,r2,-600
  817884:	10800017 	ldw	r2,0(r2)
  817888:	100170fa 	wrctl	ienable,r2
  81788c:	e0bff617 	ldw	r2,-40(fp)
  817890:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  817894:	e0bff717 	ldw	r2,-36(fp)
  817898:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  81789c:	0005883a 	mov	r2,zero
  8178a0:	00001f06 	br	817920 <alt_irq_register+0x188>
  8178a4:	e0bffd17 	ldw	r2,-12(fp)
  8178a8:	e0bff815 	stw	r2,-32(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8178ac:	0005303a 	rdctl	r2,status
  8178b0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8178b4:	e0fff917 	ldw	r3,-28(fp)
  8178b8:	00bfff84 	movi	r2,-2
  8178bc:	1884703a 	and	r2,r3,r2
  8178c0:	1001703a 	wrctl	status,r2
  
  return context;
  8178c4:	e0bff917 	ldw	r2,-28(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  8178c8:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active &= ~(1 << id);
  8178cc:	e0bff817 	ldw	r2,-32(fp)
  8178d0:	00c00044 	movi	r3,1
  8178d4:	1884983a 	sll	r2,r3,r2
  8178d8:	0084303a 	nor	r2,zero,r2
  8178dc:	1007883a 	mov	r3,r2
  8178e0:	008020b4 	movhi	r2,130
  8178e4:	10bf6a04 	addi	r2,r2,-600
  8178e8:	10800017 	ldw	r2,0(r2)
  8178ec:	1886703a 	and	r3,r3,r2
  8178f0:	008020b4 	movhi	r2,130
  8178f4:	10bf6a04 	addi	r2,r2,-600
  8178f8:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8178fc:	008020b4 	movhi	r2,130
  817900:	10bf6a04 	addi	r2,r2,-600
  817904:	10800017 	ldw	r2,0(r2)
  817908:	100170fa 	wrctl	ienable,r2
  81790c:	e0bffa17 	ldw	r2,-24(fp)
  817910:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  817914:	e0bffb17 	ldw	r2,-20(fp)
  817918:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  81791c:	0005883a 	mov	r2,zero
  817920:	e0bff115 	stw	r2,-60(fp)
  817924:	e0bff217 	ldw	r2,-56(fp)
  817928:	e0bffc15 	stw	r2,-16(fp)
  81792c:	e0bffc17 	ldw	r2,-16(fp)
  817930:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
  817934:	e0bff117 	ldw	r2,-60(fp)
}
  817938:	e037883a 	mov	sp,fp
  81793c:	df000017 	ldw	fp,0(sp)
  817940:	dec00104 	addi	sp,sp,4
  817944:	f800283a 	ret

00817948 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  817948:	defffe04 	addi	sp,sp,-8
  81794c:	dfc00115 	stw	ra,4(sp)
  817950:	df000015 	stw	fp,0(sp)
  817954:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  817958:	008020b4 	movhi	r2,130
  81795c:	10b80404 	addi	r2,r2,-8176
  817960:	10800017 	ldw	r2,0(r2)
  817964:	10000526 	beq	r2,zero,81797c <alt_get_errno+0x34>
  817968:	008020b4 	movhi	r2,130
  81796c:	10b80404 	addi	r2,r2,-8176
  817970:	10800017 	ldw	r2,0(r2)
  817974:	103ee83a 	callr	r2
  817978:	00000206 	br	817984 <alt_get_errno+0x3c>
  81797c:	008020b4 	movhi	r2,130
  817980:	10bf6304 	addi	r2,r2,-628
}
  817984:	e037883a 	mov	sp,fp
  817988:	dfc00117 	ldw	ra,4(sp)
  81798c:	df000017 	ldw	fp,0(sp)
  817990:	dec00204 	addi	sp,sp,8
  817994:	f800283a 	ret

00817998 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  817998:	deffed04 	addi	sp,sp,-76
  81799c:	dfc01215 	stw	ra,72(sp)
  8179a0:	df001115 	stw	fp,68(sp)
  8179a4:	df001104 	addi	fp,sp,68
  8179a8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  8179ac:	e0bfff17 	ldw	r2,-4(fp)
  8179b0:	10000616 	blt	r2,zero,8179cc <isatty+0x34>
  8179b4:	e0bfff17 	ldw	r2,-4(fp)
  8179b8:	10c00324 	muli	r3,r2,12
  8179bc:	008020b4 	movhi	r2,130
  8179c0:	10b2ee04 	addi	r2,r2,-13384
  8179c4:	1885883a 	add	r2,r3,r2
  8179c8:	00000106 	br	8179d0 <isatty+0x38>
  8179cc:	0005883a 	mov	r2,zero
  8179d0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  8179d4:	e0bfef17 	ldw	r2,-68(fp)
  8179d8:	10000e26 	beq	r2,zero,817a14 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  8179dc:	e0bfef17 	ldw	r2,-68(fp)
  8179e0:	10800017 	ldw	r2,0(r2)
  8179e4:	10800817 	ldw	r2,32(r2)
  8179e8:	1000021e 	bne	r2,zero,8179f4 <isatty+0x5c>
    {
      return 1;
  8179ec:	00800044 	movi	r2,1
  8179f0:	00000d06 	br	817a28 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  8179f4:	e0bff004 	addi	r2,fp,-64
  8179f8:	e13fff17 	ldw	r4,-4(fp)
  8179fc:	100b883a 	mov	r5,r2
  817a00:	08176e80 	call	8176e8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  817a04:	e0bff117 	ldw	r2,-60(fp)
  817a08:	10880020 	cmpeqi	r2,r2,8192
  817a0c:	10803fcc 	andi	r2,r2,255
  817a10:	00000506 	br	817a28 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  817a14:	08179480 	call	817948 <alt_get_errno>
  817a18:	1007883a 	mov	r3,r2
  817a1c:	00801444 	movi	r2,81
  817a20:	18800015 	stw	r2,0(r3)
    return 0;
  817a24:	0005883a 	mov	r2,zero
  }
}
  817a28:	e037883a 	mov	sp,fp
  817a2c:	dfc00117 	ldw	ra,4(sp)
  817a30:	df000017 	ldw	fp,0(sp)
  817a34:	dec00204 	addi	sp,sp,8
  817a38:	f800283a 	ret

00817a3c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  817a3c:	defffc04 	addi	sp,sp,-16
  817a40:	df000315 	stw	fp,12(sp)
  817a44:	df000304 	addi	fp,sp,12
  817a48:	e13ffd15 	stw	r4,-12(fp)
  817a4c:	e17ffe15 	stw	r5,-8(fp)
  817a50:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  817a54:	e0fffe17 	ldw	r3,-8(fp)
  817a58:	e0bffd17 	ldw	r2,-12(fp)
  817a5c:	18800c26 	beq	r3,r2,817a90 <alt_load_section+0x54>
  {
    while( to != end )
  817a60:	00000806 	br	817a84 <alt_load_section+0x48>
    {
      *to++ = *from++;
  817a64:	e0bffe17 	ldw	r2,-8(fp)
  817a68:	10c00104 	addi	r3,r2,4
  817a6c:	e0fffe15 	stw	r3,-8(fp)
  817a70:	e0fffd17 	ldw	r3,-12(fp)
  817a74:	19000104 	addi	r4,r3,4
  817a78:	e13ffd15 	stw	r4,-12(fp)
  817a7c:	18c00017 	ldw	r3,0(r3)
  817a80:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  817a84:	e0fffe17 	ldw	r3,-8(fp)
  817a88:	e0bfff17 	ldw	r2,-4(fp)
  817a8c:	18bff51e 	bne	r3,r2,817a64 <__alt_data_end+0xff817a64>
    {
      *to++ = *from++;
    }
  }
}
  817a90:	e037883a 	mov	sp,fp
  817a94:	df000017 	ldw	fp,0(sp)
  817a98:	dec00104 	addi	sp,sp,4
  817a9c:	f800283a 	ret

00817aa0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  817aa0:	defffe04 	addi	sp,sp,-8
  817aa4:	dfc00115 	stw	ra,4(sp)
  817aa8:	df000015 	stw	fp,0(sp)
  817aac:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  817ab0:	010020b4 	movhi	r4,130
  817ab4:	21380a04 	addi	r4,r4,-8152
  817ab8:	014020b4 	movhi	r5,130
  817abc:	2970b704 	addi	r5,r5,-15652
  817ac0:	018020b4 	movhi	r6,130
  817ac4:	31b80a04 	addi	r6,r6,-8152
  817ac8:	0817a3c0 	call	817a3c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  817acc:	01002034 	movhi	r4,128
  817ad0:	21000804 	addi	r4,r4,32
  817ad4:	01402034 	movhi	r5,128
  817ad8:	29400804 	addi	r5,r5,32
  817adc:	01802034 	movhi	r6,128
  817ae0:	31809104 	addi	r6,r6,580
  817ae4:	0817a3c0 	call	817a3c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  817ae8:	010020b4 	movhi	r4,130
  817aec:	212d8a04 	addi	r4,r4,-18904
  817af0:	014020b4 	movhi	r5,130
  817af4:	296d8a04 	addi	r5,r5,-18904
  817af8:	018020b4 	movhi	r6,130
  817afc:	31b0b704 	addi	r6,r6,-15652
  817b00:	0817a3c0 	call	817a3c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  817b04:	081a9f00 	call	81a9f0 <alt_dcache_flush_all>
  alt_icache_flush_all();
  817b08:	081ae380 	call	81ae38 <alt_icache_flush_all>
}
  817b0c:	e037883a 	mov	sp,fp
  817b10:	dfc00117 	ldw	ra,4(sp)
  817b14:	df000017 	ldw	fp,0(sp)
  817b18:	dec00204 	addi	sp,sp,8
  817b1c:	f800283a 	ret

00817b20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  817b20:	defffe04 	addi	sp,sp,-8
  817b24:	dfc00115 	stw	ra,4(sp)
  817b28:	df000015 	stw	fp,0(sp)
  817b2c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  817b30:	008020b4 	movhi	r2,130
  817b34:	10b80404 	addi	r2,r2,-8176
  817b38:	10800017 	ldw	r2,0(r2)
  817b3c:	10000526 	beq	r2,zero,817b54 <alt_get_errno+0x34>
  817b40:	008020b4 	movhi	r2,130
  817b44:	10b80404 	addi	r2,r2,-8176
  817b48:	10800017 	ldw	r2,0(r2)
  817b4c:	103ee83a 	callr	r2
  817b50:	00000206 	br	817b5c <alt_get_errno+0x3c>
  817b54:	008020b4 	movhi	r2,130
  817b58:	10bf6304 	addi	r2,r2,-628
}
  817b5c:	e037883a 	mov	sp,fp
  817b60:	dfc00117 	ldw	ra,4(sp)
  817b64:	df000017 	ldw	fp,0(sp)
  817b68:	dec00204 	addi	sp,sp,8
  817b6c:	f800283a 	ret

00817b70 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  817b70:	defff904 	addi	sp,sp,-28
  817b74:	dfc00615 	stw	ra,24(sp)
  817b78:	df000515 	stw	fp,20(sp)
  817b7c:	df000504 	addi	fp,sp,20
  817b80:	e13ffd15 	stw	r4,-12(fp)
  817b84:	e17ffe15 	stw	r5,-8(fp)
  817b88:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  817b8c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  817b90:	e0bffd17 	ldw	r2,-12(fp)
  817b94:	10000616 	blt	r2,zero,817bb0 <lseek+0x40>
  817b98:	e0bffd17 	ldw	r2,-12(fp)
  817b9c:	10c00324 	muli	r3,r2,12
  817ba0:	008020b4 	movhi	r2,130
  817ba4:	10b2ee04 	addi	r2,r2,-13384
  817ba8:	1885883a 	add	r2,r3,r2
  817bac:	00000106 	br	817bb4 <lseek+0x44>
  817bb0:	0005883a 	mov	r2,zero
  817bb4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  817bb8:	e0bffc17 	ldw	r2,-16(fp)
  817bbc:	10001026 	beq	r2,zero,817c00 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  817bc0:	e0bffc17 	ldw	r2,-16(fp)
  817bc4:	10800017 	ldw	r2,0(r2)
  817bc8:	10800717 	ldw	r2,28(r2)
  817bcc:	10000926 	beq	r2,zero,817bf4 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  817bd0:	e0bffc17 	ldw	r2,-16(fp)
  817bd4:	10800017 	ldw	r2,0(r2)
  817bd8:	10800717 	ldw	r2,28(r2)
  817bdc:	e13ffc17 	ldw	r4,-16(fp)
  817be0:	e17ffe17 	ldw	r5,-8(fp)
  817be4:	e1bfff17 	ldw	r6,-4(fp)
  817be8:	103ee83a 	callr	r2
  817bec:	e0bffb15 	stw	r2,-20(fp)
  817bf0:	00000506 	br	817c08 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  817bf4:	00bfde84 	movi	r2,-134
  817bf8:	e0bffb15 	stw	r2,-20(fp)
  817bfc:	00000206 	br	817c08 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  817c00:	00bfebc4 	movi	r2,-81
  817c04:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  817c08:	e0bffb17 	ldw	r2,-20(fp)
  817c0c:	1000070e 	bge	r2,zero,817c2c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  817c10:	0817b200 	call	817b20 <alt_get_errno>
  817c14:	1007883a 	mov	r3,r2
  817c18:	e0bffb17 	ldw	r2,-20(fp)
  817c1c:	0085c83a 	sub	r2,zero,r2
  817c20:	18800015 	stw	r2,0(r3)
    rc = -1;
  817c24:	00bfffc4 	movi	r2,-1
  817c28:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  817c2c:	e0bffb17 	ldw	r2,-20(fp)
}
  817c30:	e037883a 	mov	sp,fp
  817c34:	dfc00117 	ldw	ra,4(sp)
  817c38:	df000017 	ldw	fp,0(sp)
  817c3c:	dec00204 	addi	sp,sp,8
  817c40:	f800283a 	ret

00817c44 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  817c44:	defffd04 	addi	sp,sp,-12
  817c48:	dfc00215 	stw	ra,8(sp)
  817c4c:	df000115 	stw	fp,4(sp)
  817c50:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  817c54:	0009883a 	mov	r4,zero
  817c58:	081837c0 	call	81837c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  817c5c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  817c60:	08183b00 	call	8183b0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  817c64:	010020b4 	movhi	r4,130
  817c68:	21309c04 	addi	r4,r4,-15760
  817c6c:	014020b4 	movhi	r5,130
  817c70:	29709c04 	addi	r5,r5,-15760
  817c74:	018020b4 	movhi	r6,130
  817c78:	31b09c04 	addi	r6,r6,-15760
  817c7c:	081af280 	call	81af28 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  817c80:	081ab280 	call	81ab28 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  817c84:	010020b4 	movhi	r4,130
  817c88:	212ae104 	addi	r4,r4,-21628
  817c8c:	081b2840 	call	81b284 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  817c90:	d1277417 	ldw	r4,-25136(gp)
  817c94:	d0e77517 	ldw	r3,-25132(gp)
  817c98:	d0a77617 	ldw	r2,-25128(gp)
  817c9c:	180b883a 	mov	r5,r3
  817ca0:	100d883a 	mov	r6,r2
  817ca4:	0800e580 	call	800e58 <main>
  817ca8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  817cac:	01000044 	movi	r4,1
  817cb0:	081759c0 	call	81759c <close>
  exit (result);
  817cb4:	e13fff17 	ldw	r4,-4(fp)
  817cb8:	081b2980 	call	81b298 <exit>

00817cbc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  817cbc:	defffe04 	addi	sp,sp,-8
  817cc0:	df000115 	stw	fp,4(sp)
  817cc4:	df000104 	addi	fp,sp,4
  817cc8:	e13fff15 	stw	r4,-4(fp)
}
  817ccc:	e037883a 	mov	sp,fp
  817cd0:	df000017 	ldw	fp,0(sp)
  817cd4:	dec00104 	addi	sp,sp,4
  817cd8:	f800283a 	ret

00817cdc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  817cdc:	defffe04 	addi	sp,sp,-8
  817ce0:	df000115 	stw	fp,4(sp)
  817ce4:	df000104 	addi	fp,sp,4
  817ce8:	e13fff15 	stw	r4,-4(fp)
}
  817cec:	e037883a 	mov	sp,fp
  817cf0:	df000017 	ldw	fp,0(sp)
  817cf4:	dec00104 	addi	sp,sp,4
  817cf8:	f800283a 	ret

00817cfc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  817cfc:	defffe04 	addi	sp,sp,-8
  817d00:	dfc00115 	stw	ra,4(sp)
  817d04:	df000015 	stw	fp,0(sp)
  817d08:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  817d0c:	008020b4 	movhi	r2,130
  817d10:	10b80404 	addi	r2,r2,-8176
  817d14:	10800017 	ldw	r2,0(r2)
  817d18:	10000526 	beq	r2,zero,817d30 <alt_get_errno+0x34>
  817d1c:	008020b4 	movhi	r2,130
  817d20:	10b80404 	addi	r2,r2,-8176
  817d24:	10800017 	ldw	r2,0(r2)
  817d28:	103ee83a 	callr	r2
  817d2c:	00000206 	br	817d38 <alt_get_errno+0x3c>
  817d30:	008020b4 	movhi	r2,130
  817d34:	10bf6304 	addi	r2,r2,-628
}
  817d38:	e037883a 	mov	sp,fp
  817d3c:	dfc00117 	ldw	ra,4(sp)
  817d40:	df000017 	ldw	fp,0(sp)
  817d44:	dec00204 	addi	sp,sp,8
  817d48:	f800283a 	ret

00817d4c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  817d4c:	defffd04 	addi	sp,sp,-12
  817d50:	df000215 	stw	fp,8(sp)
  817d54:	df000204 	addi	fp,sp,8
  817d58:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  817d5c:	e0bfff17 	ldw	r2,-4(fp)
  817d60:	10800217 	ldw	r2,8(r2)
  817d64:	10d00034 	orhi	r3,r2,16384
  817d68:	e0bfff17 	ldw	r2,-4(fp)
  817d6c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  817d70:	e03ffe15 	stw	zero,-8(fp)
  817d74:	00001d06 	br	817dec <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  817d78:	008020b4 	movhi	r2,130
  817d7c:	10b2ee04 	addi	r2,r2,-13384
  817d80:	e0fffe17 	ldw	r3,-8(fp)
  817d84:	18c00324 	muli	r3,r3,12
  817d88:	10c5883a 	add	r2,r2,r3
  817d8c:	10c00017 	ldw	r3,0(r2)
  817d90:	e0bfff17 	ldw	r2,-4(fp)
  817d94:	10800017 	ldw	r2,0(r2)
  817d98:	1880111e 	bne	r3,r2,817de0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  817d9c:	008020b4 	movhi	r2,130
  817da0:	10b2ee04 	addi	r2,r2,-13384
  817da4:	e0fffe17 	ldw	r3,-8(fp)
  817da8:	18c00324 	muli	r3,r3,12
  817dac:	18c00204 	addi	r3,r3,8
  817db0:	10c5883a 	add	r2,r2,r3
  817db4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  817db8:	1000090e 	bge	r2,zero,817de0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  817dbc:	e0bffe17 	ldw	r2,-8(fp)
  817dc0:	10c00324 	muli	r3,r2,12
  817dc4:	008020b4 	movhi	r2,130
  817dc8:	10b2ee04 	addi	r2,r2,-13384
  817dcc:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  817dd0:	e0bfff17 	ldw	r2,-4(fp)
  817dd4:	18800226 	beq	r3,r2,817de0 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  817dd8:	00bffcc4 	movi	r2,-13
  817ddc:	00000a06 	br	817e08 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  817de0:	e0bffe17 	ldw	r2,-8(fp)
  817de4:	10800044 	addi	r2,r2,1
  817de8:	e0bffe15 	stw	r2,-8(fp)
  817dec:	008020b4 	movhi	r2,130
  817df0:	10b80304 	addi	r2,r2,-8180
  817df4:	10800017 	ldw	r2,0(r2)
  817df8:	1007883a 	mov	r3,r2
  817dfc:	e0bffe17 	ldw	r2,-8(fp)
  817e00:	18bfdd2e 	bgeu	r3,r2,817d78 <__alt_data_end+0xff817d78>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  817e04:	0005883a 	mov	r2,zero
}
  817e08:	e037883a 	mov	sp,fp
  817e0c:	df000017 	ldw	fp,0(sp)
  817e10:	dec00104 	addi	sp,sp,4
  817e14:	f800283a 	ret

00817e18 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  817e18:	defff604 	addi	sp,sp,-40
  817e1c:	dfc00915 	stw	ra,36(sp)
  817e20:	df000815 	stw	fp,32(sp)
  817e24:	df000804 	addi	fp,sp,32
  817e28:	e13ffd15 	stw	r4,-12(fp)
  817e2c:	e17ffe15 	stw	r5,-8(fp)
  817e30:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  817e34:	00bfffc4 	movi	r2,-1
  817e38:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  817e3c:	00bffb44 	movi	r2,-19
  817e40:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  817e44:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  817e48:	e13ffd17 	ldw	r4,-12(fp)
  817e4c:	014020b4 	movhi	r5,130
  817e50:	29780104 	addi	r5,r5,-8188
  817e54:	081abe00 	call	81abe0 <alt_find_dev>
  817e58:	e0bff815 	stw	r2,-32(fp)
  817e5c:	e0bff817 	ldw	r2,-32(fp)
  817e60:	1000051e 	bne	r2,zero,817e78 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  817e64:	e13ffd17 	ldw	r4,-12(fp)
  817e68:	081ac700 	call	81ac70 <alt_find_file>
  817e6c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  817e70:	00800044 	movi	r2,1
  817e74:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  817e78:	e0bff817 	ldw	r2,-32(fp)
  817e7c:	10002926 	beq	r2,zero,817f24 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
  817e80:	e13ff817 	ldw	r4,-32(fp)
  817e84:	081ad840 	call	81ad84 <alt_get_fd>
  817e88:	e0bff915 	stw	r2,-28(fp)
  817e8c:	e0bff917 	ldw	r2,-28(fp)
  817e90:	1000030e 	bge	r2,zero,817ea0 <open+0x88>
    {
      status = index;
  817e94:	e0bff917 	ldw	r2,-28(fp)
  817e98:	e0bffa15 	stw	r2,-24(fp)
  817e9c:	00002306 	br	817f2c <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
  817ea0:	e0bff917 	ldw	r2,-28(fp)
  817ea4:	10c00324 	muli	r3,r2,12
  817ea8:	008020b4 	movhi	r2,130
  817eac:	10b2ee04 	addi	r2,r2,-13384
  817eb0:	1885883a 	add	r2,r3,r2
  817eb4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  817eb8:	e0fffe17 	ldw	r3,-8(fp)
  817ebc:	00900034 	movhi	r2,16384
  817ec0:	10bfffc4 	addi	r2,r2,-1
  817ec4:	1886703a 	and	r3,r3,r2
  817ec8:	e0bffc17 	ldw	r2,-16(fp)
  817ecc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  817ed0:	e0bffb17 	ldw	r2,-20(fp)
  817ed4:	1000051e 	bne	r2,zero,817eec <open+0xd4>
  817ed8:	e13ffc17 	ldw	r4,-16(fp)
  817edc:	0817d4c0 	call	817d4c <alt_file_locked>
  817ee0:	e0bffa15 	stw	r2,-24(fp)
  817ee4:	e0bffa17 	ldw	r2,-24(fp)
  817ee8:	10001016 	blt	r2,zero,817f2c <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  817eec:	e0bff817 	ldw	r2,-32(fp)
  817ef0:	10800317 	ldw	r2,12(r2)
  817ef4:	10000826 	beq	r2,zero,817f18 <open+0x100>
  817ef8:	e0bff817 	ldw	r2,-32(fp)
  817efc:	10800317 	ldw	r2,12(r2)
  817f00:	e13ffc17 	ldw	r4,-16(fp)
  817f04:	e17ffd17 	ldw	r5,-12(fp)
  817f08:	e1bffe17 	ldw	r6,-8(fp)
  817f0c:	e1ffff17 	ldw	r7,-4(fp)
  817f10:	103ee83a 	callr	r2
  817f14:	00000106 	br	817f1c <open+0x104>
  817f18:	0005883a 	mov	r2,zero
  817f1c:	e0bffa15 	stw	r2,-24(fp)
  817f20:	00000206 	br	817f2c <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
  817f24:	00bffb44 	movi	r2,-19
  817f28:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  817f2c:	e0bffa17 	ldw	r2,-24(fp)
  817f30:	1000090e 	bge	r2,zero,817f58 <open+0x140>
  {
    alt_release_fd (index);  
  817f34:	e13ff917 	ldw	r4,-28(fp)
  817f38:	08180bc0 	call	8180bc <alt_release_fd>
    ALT_ERRNO = -status;
  817f3c:	0817cfc0 	call	817cfc <alt_get_errno>
  817f40:	1007883a 	mov	r3,r2
  817f44:	e0bffa17 	ldw	r2,-24(fp)
  817f48:	0085c83a 	sub	r2,zero,r2
  817f4c:	18800015 	stw	r2,0(r3)
    return -1;
  817f50:	00bfffc4 	movi	r2,-1
  817f54:	00000106 	br	817f5c <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
  817f58:	e0bff917 	ldw	r2,-28(fp)
}
  817f5c:	e037883a 	mov	sp,fp
  817f60:	dfc00117 	ldw	ra,4(sp)
  817f64:	df000017 	ldw	fp,0(sp)
  817f68:	dec00204 	addi	sp,sp,8
  817f6c:	f800283a 	ret

00817f70 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  817f70:	defffe04 	addi	sp,sp,-8
  817f74:	dfc00115 	stw	ra,4(sp)
  817f78:	df000015 	stw	fp,0(sp)
  817f7c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  817f80:	008020b4 	movhi	r2,130
  817f84:	10b80404 	addi	r2,r2,-8176
  817f88:	10800017 	ldw	r2,0(r2)
  817f8c:	10000526 	beq	r2,zero,817fa4 <alt_get_errno+0x34>
  817f90:	008020b4 	movhi	r2,130
  817f94:	10b80404 	addi	r2,r2,-8176
  817f98:	10800017 	ldw	r2,0(r2)
  817f9c:	103ee83a 	callr	r2
  817fa0:	00000206 	br	817fac <alt_get_errno+0x3c>
  817fa4:	008020b4 	movhi	r2,130
  817fa8:	10bf6304 	addi	r2,r2,-628
}
  817fac:	e037883a 	mov	sp,fp
  817fb0:	dfc00117 	ldw	ra,4(sp)
  817fb4:	df000017 	ldw	fp,0(sp)
  817fb8:	dec00204 	addi	sp,sp,8
  817fbc:	f800283a 	ret

00817fc0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  817fc0:	defff904 	addi	sp,sp,-28
  817fc4:	dfc00615 	stw	ra,24(sp)
  817fc8:	df000515 	stw	fp,20(sp)
  817fcc:	df000504 	addi	fp,sp,20
  817fd0:	e13ffd15 	stw	r4,-12(fp)
  817fd4:	e17ffe15 	stw	r5,-8(fp)
  817fd8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  817fdc:	e0bffd17 	ldw	r2,-12(fp)
  817fe0:	10000616 	blt	r2,zero,817ffc <read+0x3c>
  817fe4:	e0bffd17 	ldw	r2,-12(fp)
  817fe8:	10c00324 	muli	r3,r2,12
  817fec:	008020b4 	movhi	r2,130
  817ff0:	10b2ee04 	addi	r2,r2,-13384
  817ff4:	1885883a 	add	r2,r3,r2
  817ff8:	00000106 	br	818000 <read+0x40>
  817ffc:	0005883a 	mov	r2,zero
  818000:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  818004:	e0bffb17 	ldw	r2,-20(fp)
  818008:	10002226 	beq	r2,zero,818094 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  81800c:	e0bffb17 	ldw	r2,-20(fp)
  818010:	10800217 	ldw	r2,8(r2)
  818014:	108000cc 	andi	r2,r2,3
  818018:	10800060 	cmpeqi	r2,r2,1
  81801c:	1000181e 	bne	r2,zero,818080 <read+0xc0>
        (fd->dev->read))
  818020:	e0bffb17 	ldw	r2,-20(fp)
  818024:	10800017 	ldw	r2,0(r2)
  818028:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  81802c:	10001426 	beq	r2,zero,818080 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  818030:	e0bffb17 	ldw	r2,-20(fp)
  818034:	10800017 	ldw	r2,0(r2)
  818038:	10800517 	ldw	r2,20(r2)
  81803c:	e0ffff17 	ldw	r3,-4(fp)
  818040:	e13ffb17 	ldw	r4,-20(fp)
  818044:	e17ffe17 	ldw	r5,-8(fp)
  818048:	180d883a 	mov	r6,r3
  81804c:	103ee83a 	callr	r2
  818050:	e0bffc15 	stw	r2,-16(fp)
  818054:	e0bffc17 	ldw	r2,-16(fp)
  818058:	1000070e 	bge	r2,zero,818078 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  81805c:	0817f700 	call	817f70 <alt_get_errno>
  818060:	1007883a 	mov	r3,r2
  818064:	e0bffc17 	ldw	r2,-16(fp)
  818068:	0085c83a 	sub	r2,zero,r2
  81806c:	18800015 	stw	r2,0(r3)
          return -1;
  818070:	00bfffc4 	movi	r2,-1
  818074:	00000c06 	br	8180a8 <read+0xe8>
        }
        return rval;
  818078:	e0bffc17 	ldw	r2,-16(fp)
  81807c:	00000a06 	br	8180a8 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  818080:	0817f700 	call	817f70 <alt_get_errno>
  818084:	1007883a 	mov	r3,r2
  818088:	00800344 	movi	r2,13
  81808c:	18800015 	stw	r2,0(r3)
  818090:	00000406 	br	8180a4 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  818094:	0817f700 	call	817f70 <alt_get_errno>
  818098:	1007883a 	mov	r3,r2
  81809c:	00801444 	movi	r2,81
  8180a0:	18800015 	stw	r2,0(r3)
  }
  return -1;
  8180a4:	00bfffc4 	movi	r2,-1
}
  8180a8:	e037883a 	mov	sp,fp
  8180ac:	dfc00117 	ldw	ra,4(sp)
  8180b0:	df000017 	ldw	fp,0(sp)
  8180b4:	dec00204 	addi	sp,sp,8
  8180b8:	f800283a 	ret

008180bc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  8180bc:	defffe04 	addi	sp,sp,-8
  8180c0:	df000115 	stw	fp,4(sp)
  8180c4:	df000104 	addi	fp,sp,4
  8180c8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  8180cc:	e0bfff17 	ldw	r2,-4(fp)
  8180d0:	108000d0 	cmplti	r2,r2,3
  8180d4:	10000d1e 	bne	r2,zero,81810c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  8180d8:	008020b4 	movhi	r2,130
  8180dc:	10b2ee04 	addi	r2,r2,-13384
  8180e0:	e0ffff17 	ldw	r3,-4(fp)
  8180e4:	18c00324 	muli	r3,r3,12
  8180e8:	18c00204 	addi	r3,r3,8
  8180ec:	10c5883a 	add	r2,r2,r3
  8180f0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  8180f4:	008020b4 	movhi	r2,130
  8180f8:	10b2ee04 	addi	r2,r2,-13384
  8180fc:	e0ffff17 	ldw	r3,-4(fp)
  818100:	18c00324 	muli	r3,r3,12
  818104:	10c5883a 	add	r2,r2,r3
  818108:	10000015 	stw	zero,0(r2)
  }
}
  81810c:	e037883a 	mov	sp,fp
  818110:	df000017 	ldw	fp,0(sp)
  818114:	dec00104 	addi	sp,sp,4
  818118:	f800283a 	ret

0081811c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  81811c:	defff904 	addi	sp,sp,-28
  818120:	df000615 	stw	fp,24(sp)
  818124:	df000604 	addi	fp,sp,24
  818128:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81812c:	0005303a 	rdctl	r2,status
  818130:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  818134:	e0fffc17 	ldw	r3,-16(fp)
  818138:	00bfff84 	movi	r2,-2
  81813c:	1884703a 	and	r2,r3,r2
  818140:	1001703a 	wrctl	status,r2
  
  return context;
  818144:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  818148:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  81814c:	d0a00f17 	ldw	r2,-32708(gp)
  818150:	10c000c4 	addi	r3,r2,3
  818154:	00bfff04 	movi	r2,-4
  818158:	1884703a 	and	r2,r3,r2
  81815c:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  818160:	d0e00f17 	ldw	r3,-32708(gp)
  818164:	e0bfff17 	ldw	r2,-4(fp)
  818168:	1887883a 	add	r3,r3,r2
  81816c:	00804034 	movhi	r2,256
  818170:	10800004 	addi	r2,r2,0
  818174:	10c0062e 	bgeu	r2,r3,818190 <sbrk+0x74>
  818178:	e0bffa17 	ldw	r2,-24(fp)
  81817c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  818180:	e0bffd17 	ldw	r2,-12(fp)
  818184:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  818188:	00bfffc4 	movi	r2,-1
  81818c:	00000b06 	br	8181bc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  818190:	d0a00f17 	ldw	r2,-32708(gp)
  818194:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
  818198:	d0e00f17 	ldw	r3,-32708(gp)
  81819c:	e0bfff17 	ldw	r2,-4(fp)
  8181a0:	1885883a 	add	r2,r3,r2
  8181a4:	d0a00f15 	stw	r2,-32708(gp)
  8181a8:	e0bffa17 	ldw	r2,-24(fp)
  8181ac:	e0bffe15 	stw	r2,-8(fp)
  8181b0:	e0bffe17 	ldw	r2,-8(fp)
  8181b4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  8181b8:	e0bffb17 	ldw	r2,-20(fp)
} 
  8181bc:	e037883a 	mov	sp,fp
  8181c0:	df000017 	ldw	fp,0(sp)
  8181c4:	dec00104 	addi	sp,sp,4
  8181c8:	f800283a 	ret

008181cc <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
  8181cc:	defffd04 	addi	sp,sp,-12
  8181d0:	dfc00215 	stw	ra,8(sp)
  8181d4:	df000115 	stw	fp,4(sp)
  8181d8:	df000104 	addi	fp,sp,4
  8181dc:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
  8181e0:	e13fff17 	ldw	r4,-4(fp)
  8181e4:	081a8980 	call	81a898 <alt_busy_sleep>
}
  8181e8:	e037883a 	mov	sp,fp
  8181ec:	dfc00117 	ldw	ra,4(sp)
  8181f0:	df000017 	ldw	fp,0(sp)
  8181f4:	dec00204 	addi	sp,sp,8
  8181f8:	f800283a 	ret

008181fc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8181fc:	defffe04 	addi	sp,sp,-8
  818200:	dfc00115 	stw	ra,4(sp)
  818204:	df000015 	stw	fp,0(sp)
  818208:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81820c:	008020b4 	movhi	r2,130
  818210:	10b80404 	addi	r2,r2,-8176
  818214:	10800017 	ldw	r2,0(r2)
  818218:	10000526 	beq	r2,zero,818230 <alt_get_errno+0x34>
  81821c:	008020b4 	movhi	r2,130
  818220:	10b80404 	addi	r2,r2,-8176
  818224:	10800017 	ldw	r2,0(r2)
  818228:	103ee83a 	callr	r2
  81822c:	00000206 	br	818238 <alt_get_errno+0x3c>
  818230:	008020b4 	movhi	r2,130
  818234:	10bf6304 	addi	r2,r2,-628
}
  818238:	e037883a 	mov	sp,fp
  81823c:	dfc00117 	ldw	ra,4(sp)
  818240:	df000017 	ldw	fp,0(sp)
  818244:	dec00204 	addi	sp,sp,8
  818248:	f800283a 	ret

0081824c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  81824c:	defff904 	addi	sp,sp,-28
  818250:	dfc00615 	stw	ra,24(sp)
  818254:	df000515 	stw	fp,20(sp)
  818258:	df000504 	addi	fp,sp,20
  81825c:	e13ffd15 	stw	r4,-12(fp)
  818260:	e17ffe15 	stw	r5,-8(fp)
  818264:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  818268:	e0bffd17 	ldw	r2,-12(fp)
  81826c:	10000616 	blt	r2,zero,818288 <write+0x3c>
  818270:	e0bffd17 	ldw	r2,-12(fp)
  818274:	10c00324 	muli	r3,r2,12
  818278:	008020b4 	movhi	r2,130
  81827c:	10b2ee04 	addi	r2,r2,-13384
  818280:	1885883a 	add	r2,r3,r2
  818284:	00000106 	br	81828c <write+0x40>
  818288:	0005883a 	mov	r2,zero
  81828c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  818290:	e0bffb17 	ldw	r2,-20(fp)
  818294:	10002126 	beq	r2,zero,81831c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  818298:	e0bffb17 	ldw	r2,-20(fp)
  81829c:	10800217 	ldw	r2,8(r2)
  8182a0:	108000cc 	andi	r2,r2,3
  8182a4:	10001826 	beq	r2,zero,818308 <write+0xbc>
  8182a8:	e0bffb17 	ldw	r2,-20(fp)
  8182ac:	10800017 	ldw	r2,0(r2)
  8182b0:	10800617 	ldw	r2,24(r2)
  8182b4:	10001426 	beq	r2,zero,818308 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  8182b8:	e0bffb17 	ldw	r2,-20(fp)
  8182bc:	10800017 	ldw	r2,0(r2)
  8182c0:	10800617 	ldw	r2,24(r2)
  8182c4:	e0ffff17 	ldw	r3,-4(fp)
  8182c8:	e13ffb17 	ldw	r4,-20(fp)
  8182cc:	e17ffe17 	ldw	r5,-8(fp)
  8182d0:	180d883a 	mov	r6,r3
  8182d4:	103ee83a 	callr	r2
  8182d8:	e0bffc15 	stw	r2,-16(fp)
  8182dc:	e0bffc17 	ldw	r2,-16(fp)
  8182e0:	1000070e 	bge	r2,zero,818300 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  8182e4:	08181fc0 	call	8181fc <alt_get_errno>
  8182e8:	1007883a 	mov	r3,r2
  8182ec:	e0bffc17 	ldw	r2,-16(fp)
  8182f0:	0085c83a 	sub	r2,zero,r2
  8182f4:	18800015 	stw	r2,0(r3)
        return -1;
  8182f8:	00bfffc4 	movi	r2,-1
  8182fc:	00000c06 	br	818330 <write+0xe4>
      }
      return rval;
  818300:	e0bffc17 	ldw	r2,-16(fp)
  818304:	00000a06 	br	818330 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  818308:	08181fc0 	call	8181fc <alt_get_errno>
  81830c:	1007883a 	mov	r3,r2
  818310:	00800344 	movi	r2,13
  818314:	18800015 	stw	r2,0(r3)
  818318:	00000406 	br	81832c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  81831c:	08181fc0 	call	8181fc <alt_get_errno>
  818320:	1007883a 	mov	r3,r2
  818324:	00801444 	movi	r2,81
  818328:	18800015 	stw	r2,0(r3)
  }
  return -1;
  81832c:	00bfffc4 	movi	r2,-1
}
  818330:	e037883a 	mov	sp,fp
  818334:	dfc00117 	ldw	ra,4(sp)
  818338:	df000017 	ldw	fp,0(sp)
  81833c:	dec00204 	addi	sp,sp,8
  818340:	f800283a 	ret

00818344 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  818344:	defffd04 	addi	sp,sp,-12
  818348:	dfc00215 	stw	ra,8(sp)
  81834c:	df000115 	stw	fp,4(sp)
  818350:	df000104 	addi	fp,sp,4
  818354:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  818358:	e13fff17 	ldw	r4,-4(fp)
  81835c:	014020b4 	movhi	r5,130
  818360:	29780104 	addi	r5,r5,-8188
  818364:	081aa840 	call	81aa84 <alt_dev_llist_insert>
}
  818368:	e037883a 	mov	sp,fp
  81836c:	dfc00117 	ldw	ra,4(sp)
  818370:	df000017 	ldw	fp,0(sp)
  818374:	dec00204 	addi	sp,sp,8
  818378:	f800283a 	ret

0081837c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  81837c:	defffd04 	addi	sp,sp,-12
  818380:	dfc00215 	stw	ra,8(sp)
  818384:	df000115 	stw	fp,4(sp)
  818388:	df000104 	addi	fp,sp,4
  81838c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
  818390:	081b13c0 	call	81b13c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  818394:	00800044 	movi	r2,1
  818398:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  81839c:	e037883a 	mov	sp,fp
  8183a0:	dfc00117 	ldw	ra,4(sp)
  8183a4:	df000017 	ldw	fp,0(sp)
  8183a8:	dec00204 	addi	sp,sp,8
  8183ac:	f800283a 	ret

008183b0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  8183b0:	defffe04 	addi	sp,sp,-8
  8183b4:	dfc00115 	stw	ra,4(sp)
  8183b8:	df000015 	stw	fp,0(sp)
  8183bc:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYSTEM_TIMER, system_timer);
  8183c0:	01004034 	movhi	r4,256
  8183c4:	21042004 	addi	r4,r4,4224
  8183c8:	000b883a 	mov	r5,zero
  8183cc:	01800104 	movi	r6,4
  8183d0:	01c0fa04 	movi	r7,1000
  8183d4:	0819dec0 	call	819dec <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
  8183d8:	010020b4 	movhi	r4,130
  8183dc:	21335804 	addi	r4,r4,-12960
  8183e0:	000b883a 	mov	r5,zero
  8183e4:	000d883a 	mov	r6,zero
  8183e8:	08185c40 	call	8185c4 <altera_avalon_jtag_uart_init>
  8183ec:	010020b4 	movhi	r4,130
  8183f0:	21334e04 	addi	r4,r4,-13000
  8183f4:	08183440 	call	818344 <alt_dev_reg>
    ALTERA_AVALON_LCD_16207_INIT ( LCD_DISPLAY, lcd_display);
  8183f8:	010020b4 	movhi	r4,130
  8183fc:	21377004 	addi	r4,r4,-8768
  818400:	0819bdc0 	call	819bdc <altera_avalon_lcd_16207_init>
  818404:	010020b4 	movhi	r4,130
  818408:	21376604 	addi	r4,r4,-8808
  81840c:	08183440 	call	818344 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
  818410:	0001883a 	nop
    ALTERA_AVALON_UART_INIT ( UART, uart);
  818414:	010020b4 	movhi	r4,130
  818418:	2137b804 	addi	r4,r4,-8480
  81841c:	000b883a 	mov	r5,zero
  818420:	01800084 	movi	r6,2
  818424:	0819f7c0 	call	819f7c <altera_avalon_uart_init>
  818428:	010020b4 	movhi	r4,130
  81842c:	2137ae04 	addi	r4,r4,-8520
  818430:	08183440 	call	818344 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AUDIO_I2C_CONFIG, audio_i2c_config);
  818434:	010020b4 	movhi	r4,130
  818438:	2137df04 	addi	r4,r4,-8324
  81843c:	08183440 	call	818344 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO, Audio);
  818440:	010020b4 	movhi	r4,130
  818444:	2137eb04 	addi	r4,r4,-8276
  818448:	08183440 	call	818344 <alt_dev_reg>
}
  81844c:	e037883a 	mov	sp,fp
  818450:	dfc00117 	ldw	ra,4(sp)
  818454:	df000017 	ldw	fp,0(sp)
  818458:	dec00204 	addi	sp,sp,8
  81845c:	f800283a 	ret

00818460 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  818460:	defffa04 	addi	sp,sp,-24
  818464:	dfc00515 	stw	ra,20(sp)
  818468:	df000415 	stw	fp,16(sp)
  81846c:	df000404 	addi	fp,sp,16
  818470:	e13ffd15 	stw	r4,-12(fp)
  818474:	e17ffe15 	stw	r5,-8(fp)
  818478:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  81847c:	e0bffd17 	ldw	r2,-12(fp)
  818480:	10800017 	ldw	r2,0(r2)
  818484:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  818488:	e0bffc17 	ldw	r2,-16(fp)
  81848c:	10c00a04 	addi	r3,r2,40
  818490:	e0bffd17 	ldw	r2,-12(fp)
  818494:	10800217 	ldw	r2,8(r2)
  818498:	1809883a 	mov	r4,r3
  81849c:	e17ffe17 	ldw	r5,-8(fp)
  8184a0:	e1bfff17 	ldw	r6,-4(fp)
  8184a4:	100f883a 	mov	r7,r2
  8184a8:	0818a800 	call	818a80 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  8184ac:	e037883a 	mov	sp,fp
  8184b0:	dfc00117 	ldw	ra,4(sp)
  8184b4:	df000017 	ldw	fp,0(sp)
  8184b8:	dec00204 	addi	sp,sp,8
  8184bc:	f800283a 	ret

008184c0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  8184c0:	defffa04 	addi	sp,sp,-24
  8184c4:	dfc00515 	stw	ra,20(sp)
  8184c8:	df000415 	stw	fp,16(sp)
  8184cc:	df000404 	addi	fp,sp,16
  8184d0:	e13ffd15 	stw	r4,-12(fp)
  8184d4:	e17ffe15 	stw	r5,-8(fp)
  8184d8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  8184dc:	e0bffd17 	ldw	r2,-12(fp)
  8184e0:	10800017 	ldw	r2,0(r2)
  8184e4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  8184e8:	e0bffc17 	ldw	r2,-16(fp)
  8184ec:	10c00a04 	addi	r3,r2,40
  8184f0:	e0bffd17 	ldw	r2,-12(fp)
  8184f4:	10800217 	ldw	r2,8(r2)
  8184f8:	1809883a 	mov	r4,r3
  8184fc:	e17ffe17 	ldw	r5,-8(fp)
  818500:	e1bfff17 	ldw	r6,-4(fp)
  818504:	100f883a 	mov	r7,r2
  818508:	0818c8c0 	call	818c8c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  81850c:	e037883a 	mov	sp,fp
  818510:	dfc00117 	ldw	ra,4(sp)
  818514:	df000017 	ldw	fp,0(sp)
  818518:	dec00204 	addi	sp,sp,8
  81851c:	f800283a 	ret

00818520 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  818520:	defffc04 	addi	sp,sp,-16
  818524:	dfc00315 	stw	ra,12(sp)
  818528:	df000215 	stw	fp,8(sp)
  81852c:	df000204 	addi	fp,sp,8
  818530:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  818534:	e0bfff17 	ldw	r2,-4(fp)
  818538:	10800017 	ldw	r2,0(r2)
  81853c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  818540:	e0bffe17 	ldw	r2,-8(fp)
  818544:	10c00a04 	addi	r3,r2,40
  818548:	e0bfff17 	ldw	r2,-4(fp)
  81854c:	10800217 	ldw	r2,8(r2)
  818550:	1809883a 	mov	r4,r3
  818554:	100b883a 	mov	r5,r2
  818558:	081892c0 	call	81892c <altera_avalon_jtag_uart_close>
}
  81855c:	e037883a 	mov	sp,fp
  818560:	dfc00117 	ldw	ra,4(sp)
  818564:	df000017 	ldw	fp,0(sp)
  818568:	dec00204 	addi	sp,sp,8
  81856c:	f800283a 	ret

00818570 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  818570:	defffa04 	addi	sp,sp,-24
  818574:	dfc00515 	stw	ra,20(sp)
  818578:	df000415 	stw	fp,16(sp)
  81857c:	df000404 	addi	fp,sp,16
  818580:	e13ffd15 	stw	r4,-12(fp)
  818584:	e17ffe15 	stw	r5,-8(fp)
  818588:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  81858c:	e0bffd17 	ldw	r2,-12(fp)
  818590:	10800017 	ldw	r2,0(r2)
  818594:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  818598:	e0bffc17 	ldw	r2,-16(fp)
  81859c:	10800a04 	addi	r2,r2,40
  8185a0:	1009883a 	mov	r4,r2
  8185a4:	e17ffe17 	ldw	r5,-8(fp)
  8185a8:	e1bfff17 	ldw	r6,-4(fp)
  8185ac:	08189940 	call	818994 <altera_avalon_jtag_uart_ioctl>
}
  8185b0:	e037883a 	mov	sp,fp
  8185b4:	dfc00117 	ldw	ra,4(sp)
  8185b8:	df000017 	ldw	fp,0(sp)
  8185bc:	dec00204 	addi	sp,sp,8
  8185c0:	f800283a 	ret

008185c4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  8185c4:	defffb04 	addi	sp,sp,-20
  8185c8:	dfc00415 	stw	ra,16(sp)
  8185cc:	df000315 	stw	fp,12(sp)
  8185d0:	df000304 	addi	fp,sp,12
  8185d4:	e13ffd15 	stw	r4,-12(fp)
  8185d8:	e17ffe15 	stw	r5,-8(fp)
  8185dc:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  8185e0:	e0bffd17 	ldw	r2,-12(fp)
  8185e4:	00c00044 	movi	r3,1
  8185e8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  8185ec:	e0bffd17 	ldw	r2,-12(fp)
  8185f0:	10800017 	ldw	r2,0(r2)
  8185f4:	10800104 	addi	r2,r2,4
  8185f8:	1007883a 	mov	r3,r2
  8185fc:	e0bffd17 	ldw	r2,-12(fp)
  818600:	10800817 	ldw	r2,32(r2)
  818604:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
  818608:	e0bfff17 	ldw	r2,-4(fp)
  81860c:	1009883a 	mov	r4,r2
  818610:	e17ffd17 	ldw	r5,-12(fp)
  818614:	018020b4 	movhi	r6,130
  818618:	31a19f04 	addi	r6,r6,-31108
  81861c:	08177980 	call	817798 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  818620:	e0bffd17 	ldw	r2,-12(fp)
  818624:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  818628:	e0bffd17 	ldw	r2,-12(fp)
  81862c:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  818630:	008020b4 	movhi	r2,130
  818634:	10bf6e04 	addi	r2,r2,-584
  818638:	10800017 	ldw	r2,0(r2)
  81863c:	1809883a 	mov	r4,r3
  818640:	100b883a 	mov	r5,r2
  818644:	018020b4 	movhi	r6,130
  818648:	31a22104 	addi	r6,r6,-30588
  81864c:	e1fffd17 	ldw	r7,-12(fp)
  818650:	081a7580 	call	81a758 <alt_alarm_start>
  818654:	1000040e 	bge	r2,zero,818668 <altera_avalon_jtag_uart_init+0xa4>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  818658:	e0fffd17 	ldw	r3,-12(fp)
  81865c:	00a00034 	movhi	r2,32768
  818660:	10bfffc4 	addi	r2,r2,-1
  818664:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  818668:	e037883a 	mov	sp,fp
  81866c:	dfc00117 	ldw	ra,4(sp)
  818670:	df000017 	ldw	fp,0(sp)
  818674:	dec00204 	addi	sp,sp,8
  818678:	f800283a 	ret

0081867c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  81867c:	defff704 	addi	sp,sp,-36
  818680:	df000815 	stw	fp,32(sp)
  818684:	df000804 	addi	fp,sp,32
  818688:	e13ffe15 	stw	r4,-8(fp)
  81868c:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  818690:	e0bffe17 	ldw	r2,-8(fp)
  818694:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
  818698:	e0bffa17 	ldw	r2,-24(fp)
  81869c:	10800017 	ldw	r2,0(r2)
  8186a0:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  8186a4:	e0bffb17 	ldw	r2,-20(fp)
  8186a8:	10800104 	addi	r2,r2,4
  8186ac:	10800037 	ldwio	r2,0(r2)
  8186b0:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  8186b4:	e0bffc17 	ldw	r2,-16(fp)
  8186b8:	1080c00c 	andi	r2,r2,768
  8186bc:	1000011e 	bne	r2,zero,8186c4 <altera_avalon_jtag_uart_irq+0x48>
      break;
  8186c0:	00006c06 	br	818874 <altera_avalon_jtag_uart_irq+0x1f8>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  8186c4:	e0bffc17 	ldw	r2,-16(fp)
  8186c8:	1080400c 	andi	r2,r2,256
  8186cc:	10003426 	beq	r2,zero,8187a0 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  8186d0:	00800074 	movhi	r2,1
  8186d4:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8186d8:	e0bffa17 	ldw	r2,-24(fp)
  8186dc:	10800a17 	ldw	r2,40(r2)
  8186e0:	10800044 	addi	r2,r2,1
  8186e4:	1081ffcc 	andi	r2,r2,2047
  8186e8:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
  8186ec:	e0bffa17 	ldw	r2,-24(fp)
  8186f0:	10c00b17 	ldw	r3,44(r2)
  8186f4:	e0bffd17 	ldw	r2,-12(fp)
  8186f8:	1880011e 	bne	r3,r2,818700 <altera_avalon_jtag_uart_irq+0x84>
          break;
  8186fc:	00001606 	br	818758 <altera_avalon_jtag_uart_irq+0xdc>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  818700:	e0bffb17 	ldw	r2,-20(fp)
  818704:	10800037 	ldwio	r2,0(r2)
  818708:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  81870c:	e0bff817 	ldw	r2,-32(fp)
  818710:	10a0000c 	andi	r2,r2,32768
  818714:	1000011e 	bne	r2,zero,81871c <altera_avalon_jtag_uart_irq+0xa0>
          break;
  818718:	00000f06 	br	818758 <altera_avalon_jtag_uart_irq+0xdc>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  81871c:	e0bffa17 	ldw	r2,-24(fp)
  818720:	10800a17 	ldw	r2,40(r2)
  818724:	e0fff817 	ldw	r3,-32(fp)
  818728:	1809883a 	mov	r4,r3
  81872c:	e0fffa17 	ldw	r3,-24(fp)
  818730:	1885883a 	add	r2,r3,r2
  818734:	10800e04 	addi	r2,r2,56
  818738:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  81873c:	e0bffa17 	ldw	r2,-24(fp)
  818740:	10800a17 	ldw	r2,40(r2)
  818744:	10800044 	addi	r2,r2,1
  818748:	10c1ffcc 	andi	r3,r2,2047
  81874c:	e0bffa17 	ldw	r2,-24(fp)
  818750:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  818754:	003fe006 	br	8186d8 <__alt_data_end+0xff8186d8>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  818758:	e0bff817 	ldw	r2,-32(fp)
  81875c:	10bfffec 	andhi	r2,r2,65535
  818760:	10000f26 	beq	r2,zero,8187a0 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  818764:	e0bffa17 	ldw	r2,-24(fp)
  818768:	10c00817 	ldw	r3,32(r2)
  81876c:	00bfff84 	movi	r2,-2
  818770:	1886703a 	and	r3,r3,r2
  818774:	e0bffa17 	ldw	r2,-24(fp)
  818778:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  81877c:	e0bffb17 	ldw	r2,-20(fp)
  818780:	10800104 	addi	r2,r2,4
  818784:	1007883a 	mov	r3,r2
  818788:	e0bffa17 	ldw	r2,-24(fp)
  81878c:	10800817 	ldw	r2,32(r2)
  818790:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  818794:	e0bffb17 	ldw	r2,-20(fp)
  818798:	10800104 	addi	r2,r2,4
  81879c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  8187a0:	e0bffc17 	ldw	r2,-16(fp)
  8187a4:	1080800c 	andi	r2,r2,512
  8187a8:	10003126 	beq	r2,zero,818870 <altera_avalon_jtag_uart_irq+0x1f4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  8187ac:	e0bffc17 	ldw	r2,-16(fp)
  8187b0:	1004d43a 	srli	r2,r2,16
  8187b4:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  8187b8:	00001406 	br	81880c <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  8187bc:	e0bffb17 	ldw	r2,-20(fp)
  8187c0:	e0fffa17 	ldw	r3,-24(fp)
  8187c4:	18c00d17 	ldw	r3,52(r3)
  8187c8:	e13ffa17 	ldw	r4,-24(fp)
  8187cc:	20c7883a 	add	r3,r4,r3
  8187d0:	18c20e04 	addi	r3,r3,2104
  8187d4:	18c00003 	ldbu	r3,0(r3)
  8187d8:	18c03fcc 	andi	r3,r3,255
  8187dc:	18c0201c 	xori	r3,r3,128
  8187e0:	18ffe004 	addi	r3,r3,-128
  8187e4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8187e8:	e0bffa17 	ldw	r2,-24(fp)
  8187ec:	10800d17 	ldw	r2,52(r2)
  8187f0:	10800044 	addi	r2,r2,1
  8187f4:	10c1ffcc 	andi	r3,r2,2047
  8187f8:	e0bffa17 	ldw	r2,-24(fp)
  8187fc:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  818800:	e0bff917 	ldw	r2,-28(fp)
  818804:	10bfffc4 	addi	r2,r2,-1
  818808:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  81880c:	e0bff917 	ldw	r2,-28(fp)
  818810:	10000526 	beq	r2,zero,818828 <altera_avalon_jtag_uart_irq+0x1ac>
  818814:	e0bffa17 	ldw	r2,-24(fp)
  818818:	10c00d17 	ldw	r3,52(r2)
  81881c:	e0bffa17 	ldw	r2,-24(fp)
  818820:	10800c17 	ldw	r2,48(r2)
  818824:	18bfe51e 	bne	r3,r2,8187bc <__alt_data_end+0xff8187bc>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  818828:	e0bff917 	ldw	r2,-28(fp)
  81882c:	10001026 	beq	r2,zero,818870 <altera_avalon_jtag_uart_irq+0x1f4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  818830:	e0bffa17 	ldw	r2,-24(fp)
  818834:	10c00817 	ldw	r3,32(r2)
  818838:	00bfff44 	movi	r2,-3
  81883c:	1886703a 	and	r3,r3,r2
  818840:	e0bffa17 	ldw	r2,-24(fp)
  818844:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  818848:	e0bffa17 	ldw	r2,-24(fp)
  81884c:	10800017 	ldw	r2,0(r2)
  818850:	10800104 	addi	r2,r2,4
  818854:	1007883a 	mov	r3,r2
  818858:	e0bffa17 	ldw	r2,-24(fp)
  81885c:	10800817 	ldw	r2,32(r2)
  818860:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  818864:	e0bffb17 	ldw	r2,-20(fp)
  818868:	10800104 	addi	r2,r2,4
  81886c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  818870:	003f8c06 	br	8186a4 <__alt_data_end+0xff8186a4>
}
  818874:	e037883a 	mov	sp,fp
  818878:	df000017 	ldw	fp,0(sp)
  81887c:	dec00104 	addi	sp,sp,4
  818880:	f800283a 	ret

00818884 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  818884:	defff804 	addi	sp,sp,-32
  818888:	df000715 	stw	fp,28(sp)
  81888c:	df000704 	addi	fp,sp,28
  818890:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  818894:	e0bffb17 	ldw	r2,-20(fp)
  818898:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  81889c:	e0bff917 	ldw	r2,-28(fp)
  8188a0:	10800017 	ldw	r2,0(r2)
  8188a4:	10800104 	addi	r2,r2,4
  8188a8:	10800037 	ldwio	r2,0(r2)
  8188ac:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  8188b0:	e0bffa17 	ldw	r2,-24(fp)
  8188b4:	1081000c 	andi	r2,r2,1024
  8188b8:	10000b26 	beq	r2,zero,8188e8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  8188bc:	e0bff917 	ldw	r2,-28(fp)
  8188c0:	10800017 	ldw	r2,0(r2)
  8188c4:	10800104 	addi	r2,r2,4
  8188c8:	1007883a 	mov	r3,r2
  8188cc:	e0bff917 	ldw	r2,-28(fp)
  8188d0:	10800817 	ldw	r2,32(r2)
  8188d4:	10810014 	ori	r2,r2,1024
  8188d8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  8188dc:	e0bff917 	ldw	r2,-28(fp)
  8188e0:	10000915 	stw	zero,36(r2)
  8188e4:	00000a06 	br	818910 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  8188e8:	e0bff917 	ldw	r2,-28(fp)
  8188ec:	10c00917 	ldw	r3,36(r2)
  8188f0:	00a00034 	movhi	r2,32768
  8188f4:	10bfff04 	addi	r2,r2,-4
  8188f8:	10c00536 	bltu	r2,r3,818910 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  8188fc:	e0bff917 	ldw	r2,-28(fp)
  818900:	10800917 	ldw	r2,36(r2)
  818904:	10c00044 	addi	r3,r2,1
  818908:	e0bff917 	ldw	r2,-28(fp)
  81890c:	10c00915 	stw	r3,36(r2)
  818910:	008020b4 	movhi	r2,130
  818914:	10bf6e04 	addi	r2,r2,-584
  818918:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  81891c:	e037883a 	mov	sp,fp
  818920:	df000017 	ldw	fp,0(sp)
  818924:	dec00104 	addi	sp,sp,4
  818928:	f800283a 	ret

0081892c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  81892c:	defffd04 	addi	sp,sp,-12
  818930:	df000215 	stw	fp,8(sp)
  818934:	df000204 	addi	fp,sp,8
  818938:	e13ffe15 	stw	r4,-8(fp)
  81893c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  818940:	00000506 	br	818958 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  818944:	e0bfff17 	ldw	r2,-4(fp)
  818948:	1090000c 	andi	r2,r2,16384
  81894c:	10000226 	beq	r2,zero,818958 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  818950:	00bffd44 	movi	r2,-11
  818954:	00000b06 	br	818984 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  818958:	e0bffe17 	ldw	r2,-8(fp)
  81895c:	10c00d17 	ldw	r3,52(r2)
  818960:	e0bffe17 	ldw	r2,-8(fp)
  818964:	10800c17 	ldw	r2,48(r2)
  818968:	18800526 	beq	r3,r2,818980 <altera_avalon_jtag_uart_close+0x54>
  81896c:	e0bffe17 	ldw	r2,-8(fp)
  818970:	10c00917 	ldw	r3,36(r2)
  818974:	e0bffe17 	ldw	r2,-8(fp)
  818978:	10800117 	ldw	r2,4(r2)
  81897c:	18bff136 	bltu	r3,r2,818944 <__alt_data_end+0xff818944>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  818980:	0005883a 	mov	r2,zero
}
  818984:	e037883a 	mov	sp,fp
  818988:	df000017 	ldw	fp,0(sp)
  81898c:	dec00104 	addi	sp,sp,4
  818990:	f800283a 	ret

00818994 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  818994:	defffa04 	addi	sp,sp,-24
  818998:	df000515 	stw	fp,20(sp)
  81899c:	df000504 	addi	fp,sp,20
  8189a0:	e13ffd15 	stw	r4,-12(fp)
  8189a4:	e17ffe15 	stw	r5,-8(fp)
  8189a8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  8189ac:	00bff9c4 	movi	r2,-25
  8189b0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  8189b4:	e0bffe17 	ldw	r2,-8(fp)
  8189b8:	10da8060 	cmpeqi	r3,r2,27137
  8189bc:	1800031e 	bne	r3,zero,8189cc <altera_avalon_jtag_uart_ioctl+0x38>
  8189c0:	109a80a0 	cmpeqi	r2,r2,27138
  8189c4:	1000191e 	bne	r2,zero,818a2c <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  8189c8:	00002806 	br	818a6c <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  8189cc:	e0bffd17 	ldw	r2,-12(fp)
  8189d0:	10c00117 	ldw	r3,4(r2)
  8189d4:	00a00034 	movhi	r2,32768
  8189d8:	10bfffc4 	addi	r2,r2,-1
  8189dc:	18801226 	beq	r3,r2,818a28 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
  8189e0:	e0bfff17 	ldw	r2,-4(fp)
  8189e4:	10800017 	ldw	r2,0(r2)
  8189e8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  8189ec:	e0bffc17 	ldw	r2,-16(fp)
  8189f0:	10800090 	cmplti	r2,r2,2
  8189f4:	1000061e 	bne	r2,zero,818a10 <altera_avalon_jtag_uart_ioctl+0x7c>
  8189f8:	e0fffc17 	ldw	r3,-16(fp)
  8189fc:	00a00034 	movhi	r2,32768
  818a00:	10bfffc4 	addi	r2,r2,-1
  818a04:	18800226 	beq	r3,r2,818a10 <altera_avalon_jtag_uart_ioctl+0x7c>
  818a08:	e0bffc17 	ldw	r2,-16(fp)
  818a0c:	00000206 	br	818a18 <altera_avalon_jtag_uart_ioctl+0x84>
  818a10:	00a00034 	movhi	r2,32768
  818a14:	10bfff84 	addi	r2,r2,-2
  818a18:	e0fffd17 	ldw	r3,-12(fp)
  818a1c:	18800115 	stw	r2,4(r3)
      rc = 0;
  818a20:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  818a24:	00001106 	br	818a6c <altera_avalon_jtag_uart_ioctl+0xd8>
  818a28:	00001006 	br	818a6c <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  818a2c:	e0bffd17 	ldw	r2,-12(fp)
  818a30:	10c00117 	ldw	r3,4(r2)
  818a34:	00a00034 	movhi	r2,32768
  818a38:	10bfffc4 	addi	r2,r2,-1
  818a3c:	18800a26 	beq	r3,r2,818a68 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  818a40:	e0bffd17 	ldw	r2,-12(fp)
  818a44:	10c00917 	ldw	r3,36(r2)
  818a48:	e0bffd17 	ldw	r2,-12(fp)
  818a4c:	10800117 	ldw	r2,4(r2)
  818a50:	1885803a 	cmpltu	r2,r3,r2
  818a54:	10c03fcc 	andi	r3,r2,255
  818a58:	e0bfff17 	ldw	r2,-4(fp)
  818a5c:	10c00015 	stw	r3,0(r2)
      rc = 0;
  818a60:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  818a64:	00000006 	br	818a68 <altera_avalon_jtag_uart_ioctl+0xd4>
  818a68:	0001883a 	nop

  default:
    break;
  }

  return rc;
  818a6c:	e0bffb17 	ldw	r2,-20(fp)
}
  818a70:	e037883a 	mov	sp,fp
  818a74:	df000017 	ldw	fp,0(sp)
  818a78:	dec00104 	addi	sp,sp,4
  818a7c:	f800283a 	ret

00818a80 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  818a80:	defff304 	addi	sp,sp,-52
  818a84:	dfc00c15 	stw	ra,48(sp)
  818a88:	df000b15 	stw	fp,44(sp)
  818a8c:	df000b04 	addi	fp,sp,44
  818a90:	e13ffc15 	stw	r4,-16(fp)
  818a94:	e17ffd15 	stw	r5,-12(fp)
  818a98:	e1bffe15 	stw	r6,-8(fp)
  818a9c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  818aa0:	e0bffd17 	ldw	r2,-12(fp)
  818aa4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  818aa8:	00004906 	br	818bd0 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  818aac:	e0bffc17 	ldw	r2,-16(fp)
  818ab0:	10800a17 	ldw	r2,40(r2)
  818ab4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  818ab8:	e0bffc17 	ldw	r2,-16(fp)
  818abc:	10800b17 	ldw	r2,44(r2)
  818ac0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  818ac4:	e0fff717 	ldw	r3,-36(fp)
  818ac8:	e0bff817 	ldw	r2,-32(fp)
  818acc:	18800536 	bltu	r3,r2,818ae4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  818ad0:	e0fff717 	ldw	r3,-36(fp)
  818ad4:	e0bff817 	ldw	r2,-32(fp)
  818ad8:	1885c83a 	sub	r2,r3,r2
  818adc:	e0bff615 	stw	r2,-40(fp)
  818ae0:	00000406 	br	818af4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  818ae4:	00c20004 	movi	r3,2048
  818ae8:	e0bff817 	ldw	r2,-32(fp)
  818aec:	1885c83a 	sub	r2,r3,r2
  818af0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  818af4:	e0bff617 	ldw	r2,-40(fp)
  818af8:	1000011e 	bne	r2,zero,818b00 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
  818afc:	00001d06 	br	818b74 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
  818b00:	e0fffe17 	ldw	r3,-8(fp)
  818b04:	e0bff617 	ldw	r2,-40(fp)
  818b08:	1880022e 	bgeu	r3,r2,818b14 <altera_avalon_jtag_uart_read+0x94>
        n = space;
  818b0c:	e0bffe17 	ldw	r2,-8(fp)
  818b10:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  818b14:	e0bff817 	ldw	r2,-32(fp)
  818b18:	10800e04 	addi	r2,r2,56
  818b1c:	e0fffc17 	ldw	r3,-16(fp)
  818b20:	1885883a 	add	r2,r3,r2
  818b24:	e13ff517 	ldw	r4,-44(fp)
  818b28:	100b883a 	mov	r5,r2
  818b2c:	e1bff617 	ldw	r6,-40(fp)
  818b30:	08092180 	call	809218 <memcpy>
      ptr   += n;
  818b34:	e0fff517 	ldw	r3,-44(fp)
  818b38:	e0bff617 	ldw	r2,-40(fp)
  818b3c:	1885883a 	add	r2,r3,r2
  818b40:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  818b44:	e0fffe17 	ldw	r3,-8(fp)
  818b48:	e0bff617 	ldw	r2,-40(fp)
  818b4c:	1885c83a 	sub	r2,r3,r2
  818b50:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  818b54:	e0fff817 	ldw	r3,-32(fp)
  818b58:	e0bff617 	ldw	r2,-40(fp)
  818b5c:	1885883a 	add	r2,r3,r2
  818b60:	10c1ffcc 	andi	r3,r2,2047
  818b64:	e0bffc17 	ldw	r2,-16(fp)
  818b68:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  818b6c:	e0bffe17 	ldw	r2,-8(fp)
  818b70:	00bfce16 	blt	zero,r2,818aac <__alt_data_end+0xff818aac>

    /* If we read any data then return it */
    if (ptr != buffer)
  818b74:	e0fff517 	ldw	r3,-44(fp)
  818b78:	e0bffd17 	ldw	r2,-12(fp)
  818b7c:	18800126 	beq	r3,r2,818b84 <altera_avalon_jtag_uart_read+0x104>
      break;
  818b80:	00001506 	br	818bd8 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  818b84:	e0bfff17 	ldw	r2,-4(fp)
  818b88:	1090000c 	andi	r2,r2,16384
  818b8c:	10000126 	beq	r2,zero,818b94 <altera_avalon_jtag_uart_read+0x114>
      break;
  818b90:	00001106 	br	818bd8 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  818b94:	0001883a 	nop
  818b98:	e0bffc17 	ldw	r2,-16(fp)
  818b9c:	10c00a17 	ldw	r3,40(r2)
  818ba0:	e0bff717 	ldw	r2,-36(fp)
  818ba4:	1880051e 	bne	r3,r2,818bbc <altera_avalon_jtag_uart_read+0x13c>
  818ba8:	e0bffc17 	ldw	r2,-16(fp)
  818bac:	10c00917 	ldw	r3,36(r2)
  818bb0:	e0bffc17 	ldw	r2,-16(fp)
  818bb4:	10800117 	ldw	r2,4(r2)
  818bb8:	18bff736 	bltu	r3,r2,818b98 <__alt_data_end+0xff818b98>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  818bbc:	e0bffc17 	ldw	r2,-16(fp)
  818bc0:	10c00a17 	ldw	r3,40(r2)
  818bc4:	e0bff717 	ldw	r2,-36(fp)
  818bc8:	1880011e 	bne	r3,r2,818bd0 <altera_avalon_jtag_uart_read+0x150>
      break;
  818bcc:	00000206 	br	818bd8 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  818bd0:	e0bffe17 	ldw	r2,-8(fp)
  818bd4:	00bfb516 	blt	zero,r2,818aac <__alt_data_end+0xff818aac>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  818bd8:	e0fff517 	ldw	r3,-44(fp)
  818bdc:	e0bffd17 	ldw	r2,-12(fp)
  818be0:	18801826 	beq	r3,r2,818c44 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  818be4:	0005303a 	rdctl	r2,status
  818be8:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  818bec:	e0fffa17 	ldw	r3,-24(fp)
  818bf0:	00bfff84 	movi	r2,-2
  818bf4:	1884703a 	and	r2,r3,r2
  818bf8:	1001703a 	wrctl	status,r2
  
  return context;
  818bfc:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  818c00:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  818c04:	e0bffc17 	ldw	r2,-16(fp)
  818c08:	10800817 	ldw	r2,32(r2)
  818c0c:	10c00054 	ori	r3,r2,1
  818c10:	e0bffc17 	ldw	r2,-16(fp)
  818c14:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  818c18:	e0bffc17 	ldw	r2,-16(fp)
  818c1c:	10800017 	ldw	r2,0(r2)
  818c20:	10800104 	addi	r2,r2,4
  818c24:	1007883a 	mov	r3,r2
  818c28:	e0bffc17 	ldw	r2,-16(fp)
  818c2c:	10800817 	ldw	r2,32(r2)
  818c30:	18800035 	stwio	r2,0(r3)
  818c34:	e0bff917 	ldw	r2,-28(fp)
  818c38:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  818c3c:	e0bffb17 	ldw	r2,-20(fp)
  818c40:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  818c44:	e0fff517 	ldw	r3,-44(fp)
  818c48:	e0bffd17 	ldw	r2,-12(fp)
  818c4c:	18800426 	beq	r3,r2,818c60 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
  818c50:	e0fff517 	ldw	r3,-44(fp)
  818c54:	e0bffd17 	ldw	r2,-12(fp)
  818c58:	1885c83a 	sub	r2,r3,r2
  818c5c:	00000606 	br	818c78 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
  818c60:	e0bfff17 	ldw	r2,-4(fp)
  818c64:	1090000c 	andi	r2,r2,16384
  818c68:	10000226 	beq	r2,zero,818c74 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
  818c6c:	00bffd44 	movi	r2,-11
  818c70:	00000106 	br	818c78 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
  818c74:	00bffec4 	movi	r2,-5
}
  818c78:	e037883a 	mov	sp,fp
  818c7c:	dfc00117 	ldw	ra,4(sp)
  818c80:	df000017 	ldw	fp,0(sp)
  818c84:	dec00204 	addi	sp,sp,8
  818c88:	f800283a 	ret

00818c8c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  818c8c:	defff304 	addi	sp,sp,-52
  818c90:	dfc00c15 	stw	ra,48(sp)
  818c94:	df000b15 	stw	fp,44(sp)
  818c98:	df000b04 	addi	fp,sp,44
  818c9c:	e13ffc15 	stw	r4,-16(fp)
  818ca0:	e17ffd15 	stw	r5,-12(fp)
  818ca4:	e1bffe15 	stw	r6,-8(fp)
  818ca8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  818cac:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  818cb0:	e0bffd17 	ldw	r2,-12(fp)
  818cb4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  818cb8:	00003806 	br	818d9c <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  818cbc:	e0bffc17 	ldw	r2,-16(fp)
  818cc0:	10800c17 	ldw	r2,48(r2)
  818cc4:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
  818cc8:	e0bffc17 	ldw	r2,-16(fp)
  818ccc:	10800d17 	ldw	r2,52(r2)
  818cd0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  818cd4:	e0fff817 	ldw	r3,-32(fp)
  818cd8:	e0bff517 	ldw	r2,-44(fp)
  818cdc:	1880062e 	bgeu	r3,r2,818cf8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  818ce0:	e0fff517 	ldw	r3,-44(fp)
  818ce4:	e0bff817 	ldw	r2,-32(fp)
  818ce8:	1885c83a 	sub	r2,r3,r2
  818cec:	10bfffc4 	addi	r2,r2,-1
  818cf0:	e0bff615 	stw	r2,-40(fp)
  818cf4:	00000b06 	br	818d24 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  818cf8:	e0bff517 	ldw	r2,-44(fp)
  818cfc:	10000526 	beq	r2,zero,818d14 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  818d00:	00c20004 	movi	r3,2048
  818d04:	e0bff817 	ldw	r2,-32(fp)
  818d08:	1885c83a 	sub	r2,r3,r2
  818d0c:	e0bff615 	stw	r2,-40(fp)
  818d10:	00000406 	br	818d24 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  818d14:	00c1ffc4 	movi	r3,2047
  818d18:	e0bff817 	ldw	r2,-32(fp)
  818d1c:	1885c83a 	sub	r2,r3,r2
  818d20:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  818d24:	e0bff617 	ldw	r2,-40(fp)
  818d28:	1000011e 	bne	r2,zero,818d30 <altera_avalon_jtag_uart_write+0xa4>
        break;
  818d2c:	00001d06 	br	818da4 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
  818d30:	e0fffe17 	ldw	r3,-8(fp)
  818d34:	e0bff617 	ldw	r2,-40(fp)
  818d38:	1880022e 	bgeu	r3,r2,818d44 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
  818d3c:	e0bffe17 	ldw	r2,-8(fp)
  818d40:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  818d44:	e0bff817 	ldw	r2,-32(fp)
  818d48:	10820e04 	addi	r2,r2,2104
  818d4c:	e0fffc17 	ldw	r3,-16(fp)
  818d50:	1885883a 	add	r2,r3,r2
  818d54:	1009883a 	mov	r4,r2
  818d58:	e17ffd17 	ldw	r5,-12(fp)
  818d5c:	e1bff617 	ldw	r6,-40(fp)
  818d60:	08092180 	call	809218 <memcpy>
      ptr   += n;
  818d64:	e0fffd17 	ldw	r3,-12(fp)
  818d68:	e0bff617 	ldw	r2,-40(fp)
  818d6c:	1885883a 	add	r2,r3,r2
  818d70:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  818d74:	e0fffe17 	ldw	r3,-8(fp)
  818d78:	e0bff617 	ldw	r2,-40(fp)
  818d7c:	1885c83a 	sub	r2,r3,r2
  818d80:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  818d84:	e0fff817 	ldw	r3,-32(fp)
  818d88:	e0bff617 	ldw	r2,-40(fp)
  818d8c:	1885883a 	add	r2,r3,r2
  818d90:	10c1ffcc 	andi	r3,r2,2047
  818d94:	e0bffc17 	ldw	r2,-16(fp)
  818d98:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  818d9c:	e0bffe17 	ldw	r2,-8(fp)
  818da0:	00bfc616 	blt	zero,r2,818cbc <__alt_data_end+0xff818cbc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  818da4:	0005303a 	rdctl	r2,status
  818da8:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  818dac:	e0fffa17 	ldw	r3,-24(fp)
  818db0:	00bfff84 	movi	r2,-2
  818db4:	1884703a 	and	r2,r3,r2
  818db8:	1001703a 	wrctl	status,r2
  
  return context;
  818dbc:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  818dc0:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  818dc4:	e0bffc17 	ldw	r2,-16(fp)
  818dc8:	10800817 	ldw	r2,32(r2)
  818dcc:	10c00094 	ori	r3,r2,2
  818dd0:	e0bffc17 	ldw	r2,-16(fp)
  818dd4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  818dd8:	e0bffc17 	ldw	r2,-16(fp)
  818ddc:	10800017 	ldw	r2,0(r2)
  818de0:	10800104 	addi	r2,r2,4
  818de4:	1007883a 	mov	r3,r2
  818de8:	e0bffc17 	ldw	r2,-16(fp)
  818dec:	10800817 	ldw	r2,32(r2)
  818df0:	18800035 	stwio	r2,0(r3)
  818df4:	e0bff917 	ldw	r2,-28(fp)
  818df8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  818dfc:	e0bffb17 	ldw	r2,-20(fp)
  818e00:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  818e04:	e0bffe17 	ldw	r2,-8(fp)
  818e08:	0080120e 	bge	zero,r2,818e54 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  818e0c:	e0bfff17 	ldw	r2,-4(fp)
  818e10:	1090000c 	andi	r2,r2,16384
  818e14:	10000126 	beq	r2,zero,818e1c <altera_avalon_jtag_uart_write+0x190>
        break;
  818e18:	00001006 	br	818e5c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  818e1c:	0001883a 	nop
  818e20:	e0bffc17 	ldw	r2,-16(fp)
  818e24:	10c00d17 	ldw	r3,52(r2)
  818e28:	e0bff517 	ldw	r2,-44(fp)
  818e2c:	1880051e 	bne	r3,r2,818e44 <altera_avalon_jtag_uart_write+0x1b8>
  818e30:	e0bffc17 	ldw	r2,-16(fp)
  818e34:	10c00917 	ldw	r3,36(r2)
  818e38:	e0bffc17 	ldw	r2,-16(fp)
  818e3c:	10800117 	ldw	r2,4(r2)
  818e40:	18bff736 	bltu	r3,r2,818e20 <__alt_data_end+0xff818e20>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  818e44:	e0bffc17 	ldw	r2,-16(fp)
  818e48:	10800917 	ldw	r2,36(r2)
  818e4c:	10000126 	beq	r2,zero,818e54 <altera_avalon_jtag_uart_write+0x1c8>
         break;
  818e50:	00000206 	br	818e5c <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
  818e54:	e0bffe17 	ldw	r2,-8(fp)
  818e58:	00bf9716 	blt	zero,r2,818cb8 <__alt_data_end+0xff818cb8>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  818e5c:	e0fffd17 	ldw	r3,-12(fp)
  818e60:	e0bff717 	ldw	r2,-36(fp)
  818e64:	18800426 	beq	r3,r2,818e78 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
  818e68:	e0fffd17 	ldw	r3,-12(fp)
  818e6c:	e0bff717 	ldw	r2,-36(fp)
  818e70:	1885c83a 	sub	r2,r3,r2
  818e74:	00000606 	br	818e90 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
  818e78:	e0bfff17 	ldw	r2,-4(fp)
  818e7c:	1090000c 	andi	r2,r2,16384
  818e80:	10000226 	beq	r2,zero,818e8c <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
  818e84:	00bffd44 	movi	r2,-11
  818e88:	00000106 	br	818e90 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  818e8c:	00bffec4 	movi	r2,-5
}
  818e90:	e037883a 	mov	sp,fp
  818e94:	dfc00117 	ldw	ra,4(sp)
  818e98:	df000017 	ldw	fp,0(sp)
  818e9c:	dec00204 	addi	sp,sp,8
  818ea0:	f800283a 	ret

00818ea4 <lcd_write_command>:

/* --------------------------------------------------------------------- */

static void lcd_write_command(altera_avalon_lcd_16207_state* sp, 
  unsigned char command)
{
  818ea4:	defffa04 	addi	sp,sp,-24
  818ea8:	dfc00515 	stw	ra,20(sp)
  818eac:	df000415 	stw	fp,16(sp)
  818eb0:	df000404 	addi	fp,sp,16
  818eb4:	e13ffe15 	stw	r4,-8(fp)
  818eb8:	2805883a 	mov	r2,r5
  818ebc:	e0bfff05 	stb	r2,-4(fp)
  unsigned int base = sp->base;
  818ec0:	e0bffe17 	ldw	r2,-8(fp)
  818ec4:	10800017 	ldw	r2,0(r2)
  818ec8:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
  818ecc:	008003f4 	movhi	r2,15
  818ed0:	10909004 	addi	r2,r2,16960
  818ed4:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
  818ed8:	e0bffe17 	ldw	r2,-8(fp)
  818edc:	10800803 	ldbu	r2,32(r2)
  818ee0:	10803fcc 	andi	r2,r2,255
  818ee4:	1080201c 	xori	r2,r2,128
  818ee8:	10bfe004 	addi	r2,r2,-128
  818eec:	10000126 	beq	r2,zero,818ef4 <lcd_write_command+0x50>
    return;
  818ef0:	00001406 	br	818f44 <lcd_write_command+0xa0>

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  818ef4:	00000906 	br	818f1c <lcd_write_command+0x78>
    if (--i == 0)
  818ef8:	e0bffc17 	ldw	r2,-16(fp)
  818efc:	10bfffc4 	addi	r2,r2,-1
  818f00:	e0bffc15 	stw	r2,-16(fp)
  818f04:	e0bffc17 	ldw	r2,-16(fp)
  818f08:	1000041e 	bne	r2,zero,818f1c <lcd_write_command+0x78>
    {
      sp->broken = 1;
  818f0c:	e0bffe17 	ldw	r2,-8(fp)
  818f10:	00c00044 	movi	r3,1
  818f14:	10c00805 	stb	r3,32(r2)
      return;
  818f18:	00000a06 	br	818f44 <lcd_write_command+0xa0>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  818f1c:	e0bffd17 	ldw	r2,-12(fp)
  818f20:	10800104 	addi	r2,r2,4
  818f24:	10800037 	ldwio	r2,0(r2)
  818f28:	1080200c 	andi	r2,r2,128
  818f2c:	103ff21e 	bne	r2,zero,818ef8 <__alt_data_end+0xff818ef8>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
  818f30:	01001904 	movi	r4,100
  818f34:	08181cc0 	call	8181cc <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, command);
  818f38:	e0bffd17 	ldw	r2,-12(fp)
  818f3c:	e0ffff03 	ldbu	r3,-4(fp)
  818f40:	10c00035 	stwio	r3,0(r2)
}
  818f44:	e037883a 	mov	sp,fp
  818f48:	dfc00117 	ldw	ra,4(sp)
  818f4c:	df000017 	ldw	fp,0(sp)
  818f50:	dec00204 	addi	sp,sp,8
  818f54:	f800283a 	ret

00818f58 <lcd_write_data>:

/* --------------------------------------------------------------------- */

static void lcd_write_data(altera_avalon_lcd_16207_state* sp, 
  unsigned char data)
{
  818f58:	defffa04 	addi	sp,sp,-24
  818f5c:	dfc00515 	stw	ra,20(sp)
  818f60:	df000415 	stw	fp,16(sp)
  818f64:	df000404 	addi	fp,sp,16
  818f68:	e13ffe15 	stw	r4,-8(fp)
  818f6c:	2805883a 	mov	r2,r5
  818f70:	e0bfff05 	stb	r2,-4(fp)
  unsigned int base = sp->base;
  818f74:	e0bffe17 	ldw	r2,-8(fp)
  818f78:	10800017 	ldw	r2,0(r2)
  818f7c:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
  818f80:	008003f4 	movhi	r2,15
  818f84:	10909004 	addi	r2,r2,16960
  818f88:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
  818f8c:	e0bffe17 	ldw	r2,-8(fp)
  818f90:	10800803 	ldbu	r2,32(r2)
  818f94:	10803fcc 	andi	r2,r2,255
  818f98:	1080201c 	xori	r2,r2,128
  818f9c:	10bfe004 	addi	r2,r2,-128
  818fa0:	10000126 	beq	r2,zero,818fa8 <lcd_write_data+0x50>
    return;
  818fa4:	00001c06 	br	819018 <lcd_write_data+0xc0>

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  818fa8:	00000906 	br	818fd0 <lcd_write_data+0x78>
    if (--i == 0)
  818fac:	e0bffc17 	ldw	r2,-16(fp)
  818fb0:	10bfffc4 	addi	r2,r2,-1
  818fb4:	e0bffc15 	stw	r2,-16(fp)
  818fb8:	e0bffc17 	ldw	r2,-16(fp)
  818fbc:	1000041e 	bne	r2,zero,818fd0 <lcd_write_data+0x78>
    {
      sp->broken = 1;
  818fc0:	e0bffe17 	ldw	r2,-8(fp)
  818fc4:	00c00044 	movi	r3,1
  818fc8:	10c00805 	stb	r3,32(r2)
      return;
  818fcc:	00001206 	br	819018 <lcd_write_data+0xc0>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  818fd0:	e0bffd17 	ldw	r2,-12(fp)
  818fd4:	10800104 	addi	r2,r2,4
  818fd8:	10800037 	ldwio	r2,0(r2)
  818fdc:	1080200c 	andi	r2,r2,128
  818fe0:	103ff21e 	bne	r2,zero,818fac <__alt_data_end+0xff818fac>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
  818fe4:	01001904 	movi	r4,100
  818fe8:	08181cc0 	call	8181cc <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_DATA(base, data);
  818fec:	e0bffd17 	ldw	r2,-12(fp)
  818ff0:	10800204 	addi	r2,r2,8
  818ff4:	1007883a 	mov	r3,r2
  818ff8:	e0bfff03 	ldbu	r2,-4(fp)
  818ffc:	18800035 	stwio	r2,0(r3)

  sp->address++;
  819000:	e0bffe17 	ldw	r2,-8(fp)
  819004:	108008c3 	ldbu	r2,35(r2)
  819008:	10800044 	addi	r2,r2,1
  81900c:	1007883a 	mov	r3,r2
  819010:	e0bffe17 	ldw	r2,-8(fp)
  819014:	10c008c5 	stb	r3,35(r2)
}
  819018:	e037883a 	mov	sp,fp
  81901c:	dfc00117 	ldw	ra,4(sp)
  819020:	df000017 	ldw	fp,0(sp)
  819024:	dec00204 	addi	sp,sp,8
  819028:	f800283a 	ret

0081902c <lcd_clear_screen>:

/* --------------------------------------------------------------------- */

static void lcd_clear_screen(altera_avalon_lcd_16207_state* sp)
{
  81902c:	defffc04 	addi	sp,sp,-16
  819030:	dfc00315 	stw	ra,12(sp)
  819034:	df000215 	stw	fp,8(sp)
  819038:	df000204 	addi	fp,sp,8
  81903c:	e13fff15 	stw	r4,-4(fp)
  int y;

  lcd_write_command(sp, LCD_CMD_CLEAR);
  819040:	e13fff17 	ldw	r4,-4(fp)
  819044:	01400044 	movi	r5,1
  819048:	0818ea40 	call	818ea4 <lcd_write_command>

  sp->x = 0;
  81904c:	e0bfff17 	ldw	r2,-4(fp)
  819050:	10000845 	stb	zero,33(r2)
  sp->y = 0;
  819054:	e0bfff17 	ldw	r2,-4(fp)
  819058:	10000885 	stb	zero,34(r2)
  sp->address = 0;
  81905c:	e0bfff17 	ldw	r2,-4(fp)
  819060:	100008c5 	stb	zero,35(r2)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819064:	e03ffe15 	stw	zero,-8(fp)
  819068:	00001b06 	br	8190d8 <lcd_clear_screen+0xac>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
  81906c:	e0bffe17 	ldw	r2,-8(fp)
  819070:	108018e4 	muli	r2,r2,99
  819074:	10801004 	addi	r2,r2,64
  819078:	e0ffff17 	ldw	r3,-4(fp)
  81907c:	1885883a 	add	r2,r3,r2
  819080:	1009883a 	mov	r4,r2
  819084:	01400804 	movi	r5,32
  819088:	01801444 	movi	r6,81
  81908c:	0802d340 	call	802d34 <memset>
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
  819090:	e0bffe17 	ldw	r2,-8(fp)
  819094:	108018e4 	muli	r2,r2,99
  819098:	10800c04 	addi	r2,r2,48
  81909c:	e0ffff17 	ldw	r3,-4(fp)
  8190a0:	1885883a 	add	r2,r3,r2
  8190a4:	1009883a 	mov	r4,r2
  8190a8:	01400804 	movi	r5,32
  8190ac:	01800404 	movi	r6,16
  8190b0:	0802d340 	call	802d34 <memset>
    sp->line[y].width = 0;
  8190b4:	e0ffff17 	ldw	r3,-4(fp)
  8190b8:	e0bffe17 	ldw	r2,-8(fp)
  8190bc:	108018e4 	muli	r2,r2,99
  8190c0:	10802404 	addi	r2,r2,144
  8190c4:	1885883a 	add	r2,r3,r2
  8190c8:	10000045 	stb	zero,1(r2)

  sp->x = 0;
  sp->y = 0;
  sp->address = 0;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  8190cc:	e0bffe17 	ldw	r2,-8(fp)
  8190d0:	10800044 	addi	r2,r2,1
  8190d4:	e0bffe15 	stw	r2,-8(fp)
  8190d8:	e0bffe17 	ldw	r2,-8(fp)
  8190dc:	10800090 	cmplti	r2,r2,2
  8190e0:	103fe21e 	bne	r2,zero,81906c <__alt_data_end+0xff81906c>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
    sp->line[y].width = 0;
  }
}
  8190e4:	e037883a 	mov	sp,fp
  8190e8:	dfc00117 	ldw	ra,4(sp)
  8190ec:	df000017 	ldw	fp,0(sp)
  8190f0:	dec00204 	addi	sp,sp,8
  8190f4:	f800283a 	ret

008190f8 <lcd_repaint_screen>:

/* --------------------------------------------------------------------- */

static void lcd_repaint_screen(altera_avalon_lcd_16207_state* sp)
{
  8190f8:	defff704 	addi	sp,sp,-36
  8190fc:	dfc00815 	stw	ra,32(sp)
  819100:	df000715 	stw	fp,28(sp)
  819104:	df000704 	addi	fp,sp,28
  819108:	e13fff15 	stw	r4,-4(fp)
  /* scrollpos controls how much the lines have scrolled round.  The speed
   * each line scrolls at is controlled by its speed variable - while
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;
  81910c:	e0bfff17 	ldw	r2,-4(fp)
  819110:	10800943 	ldbu	r2,37(r2)
  819114:	10803fcc 	andi	r2,r2,255
  819118:	e0bffc15 	stw	r2,-16(fp)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81911c:	e03ff915 	stw	zero,-28(fp)
  819120:	00006706 	br	8192c0 <lcd_repaint_screen+0x1c8>
  {
    int width  = sp->line[y].width;
  819124:	e0ffff17 	ldw	r3,-4(fp)
  819128:	e0bff917 	ldw	r2,-28(fp)
  81912c:	108018e4 	muli	r2,r2,99
  819130:	10802404 	addi	r2,r2,144
  819134:	1885883a 	add	r2,r3,r2
  819138:	10800043 	ldbu	r2,1(r2)
  81913c:	10803fcc 	andi	r2,r2,255
  819140:	1080201c 	xori	r2,r2,128
  819144:	10bfe004 	addi	r2,r2,-128
  819148:	e0bffd15 	stw	r2,-12(fp)
    int offset = (scrollpos * sp->line[y].speed) >> 8;
  81914c:	e0ffff17 	ldw	r3,-4(fp)
  819150:	e0bff917 	ldw	r2,-28(fp)
  819154:	108018e4 	muli	r2,r2,99
  819158:	10802404 	addi	r2,r2,144
  81915c:	1885883a 	add	r2,r3,r2
  819160:	10800083 	ldbu	r2,2(r2)
  819164:	10c03fcc 	andi	r3,r2,255
  819168:	e0bffc17 	ldw	r2,-16(fp)
  81916c:	1885383a 	mul	r2,r3,r2
  819170:	1005d23a 	srai	r2,r2,8
  819174:	e0bffb15 	stw	r2,-20(fp)
    if (offset >= width)
  819178:	e0fffb17 	ldw	r3,-20(fp)
  81917c:	e0bffd17 	ldw	r2,-12(fp)
  819180:	18800116 	blt	r3,r2,819188 <lcd_repaint_screen+0x90>
      offset = 0;
  819184:	e03ffb15 	stw	zero,-20(fp)

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
  819188:	e03ffa15 	stw	zero,-24(fp)
  81918c:	00004606 	br	8192a8 <lcd_repaint_screen+0x1b0>
    {
      char c = sp->line[y].data[(x + offset) % width];
  819190:	e0fffa17 	ldw	r3,-24(fp)
  819194:	e0bffb17 	ldw	r2,-20(fp)
  819198:	1885883a 	add	r2,r3,r2
  81919c:	1009883a 	mov	r4,r2
  8191a0:	e17ffd17 	ldw	r5,-12(fp)
  8191a4:	0814b640 	call	814b64 <__modsi3>
  8191a8:	1009883a 	mov	r4,r2
  8191ac:	e0ffff17 	ldw	r3,-4(fp)
  8191b0:	e0bff917 	ldw	r2,-28(fp)
  8191b4:	108018e4 	muli	r2,r2,99
  8191b8:	1885883a 	add	r2,r3,r2
  8191bc:	1105883a 	add	r2,r2,r4
  8191c0:	10801004 	addi	r2,r2,64
  8191c4:	10800003 	ldbu	r2,0(r2)
  8191c8:	e0bffe05 	stb	r2,-8(fp)

      /* Writing data takes 40us, so don't do it unless required */
      if (sp->line[y].visible[x] != c)
  8191cc:	e0ffff17 	ldw	r3,-4(fp)
  8191d0:	e0bff917 	ldw	r2,-28(fp)
  8191d4:	108018e4 	muli	r2,r2,99
  8191d8:	1887883a 	add	r3,r3,r2
  8191dc:	e0bffa17 	ldw	r2,-24(fp)
  8191e0:	1885883a 	add	r2,r3,r2
  8191e4:	10800c04 	addi	r2,r2,48
  8191e8:	10800003 	ldbu	r2,0(r2)
  8191ec:	10c03fcc 	andi	r3,r2,255
  8191f0:	18c0201c 	xori	r3,r3,128
  8191f4:	18ffe004 	addi	r3,r3,-128
  8191f8:	e0bffe07 	ldb	r2,-8(fp)
  8191fc:	18802726 	beq	r3,r2,81929c <lcd_repaint_screen+0x1a4>
      {
        unsigned char address = x + colstart[y];
  819200:	e0fff917 	ldw	r3,-28(fp)
  819204:	d0a01004 	addi	r2,gp,-32704
  819208:	1885883a 	add	r2,r3,r2
  81920c:	10800003 	ldbu	r2,0(r2)
  819210:	1007883a 	mov	r3,r2
  819214:	e0bffa17 	ldw	r2,-24(fp)
  819218:	1885883a 	add	r2,r3,r2
  81921c:	e0bffe45 	stb	r2,-7(fp)

        if (address != sp->address)
  819220:	e0fffe43 	ldbu	r3,-7(fp)
  819224:	e0bfff17 	ldw	r2,-4(fp)
  819228:	108008c3 	ldbu	r2,35(r2)
  81922c:	10803fcc 	andi	r2,r2,255
  819230:	1080201c 	xori	r2,r2,128
  819234:	10bfe004 	addi	r2,r2,-128
  819238:	18800a26 	beq	r3,r2,819264 <lcd_repaint_screen+0x16c>
        {
          lcd_write_command(sp, LCD_CMD_WRITE_DATA | address);
  81923c:	e0fffe43 	ldbu	r3,-7(fp)
  819240:	00bfe004 	movi	r2,-128
  819244:	1884b03a 	or	r2,r3,r2
  819248:	10803fcc 	andi	r2,r2,255
  81924c:	e13fff17 	ldw	r4,-4(fp)
  819250:	100b883a 	mov	r5,r2
  819254:	0818ea40 	call	818ea4 <lcd_write_command>
          sp->address = address;
  819258:	e0fffe43 	ldbu	r3,-7(fp)
  81925c:	e0bfff17 	ldw	r2,-4(fp)
  819260:	10c008c5 	stb	r3,35(r2)
        }

        lcd_write_data(sp, c);
  819264:	e0bffe03 	ldbu	r2,-8(fp)
  819268:	10803fcc 	andi	r2,r2,255
  81926c:	e13fff17 	ldw	r4,-4(fp)
  819270:	100b883a 	mov	r5,r2
  819274:	0818f580 	call	818f58 <lcd_write_data>
        sp->line[y].visible[x] = c;
  819278:	e0ffff17 	ldw	r3,-4(fp)
  81927c:	e0bff917 	ldw	r2,-28(fp)
  819280:	108018e4 	muli	r2,r2,99
  819284:	1887883a 	add	r3,r3,r2
  819288:	e0bffa17 	ldw	r2,-24(fp)
  81928c:	1885883a 	add	r2,r3,r2
  819290:	10800c04 	addi	r2,r2,48
  819294:	e0fffe03 	ldbu	r3,-8(fp)
  819298:	10c00005 	stb	r3,0(r2)
    int width  = sp->line[y].width;
    int offset = (scrollpos * sp->line[y].speed) >> 8;
    if (offset >= width)
      offset = 0;

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
  81929c:	e0bffa17 	ldw	r2,-24(fp)
  8192a0:	10800044 	addi	r2,r2,1
  8192a4:	e0bffa15 	stw	r2,-24(fp)
  8192a8:	e0bffa17 	ldw	r2,-24(fp)
  8192ac:	10800410 	cmplti	r2,r2,16
  8192b0:	103fb71e 	bne	r2,zero,819190 <__alt_data_end+0xff819190>
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  8192b4:	e0bff917 	ldw	r2,-28(fp)
  8192b8:	10800044 	addi	r2,r2,1
  8192bc:	e0bff915 	stw	r2,-28(fp)
  8192c0:	e0bff917 	ldw	r2,-28(fp)
  8192c4:	10800090 	cmplti	r2,r2,2
  8192c8:	103f961e 	bne	r2,zero,819124 <__alt_data_end+0xff819124>
        lcd_write_data(sp, c);
        sp->line[y].visible[x] = c;
      }
    }
  }
}
  8192cc:	e037883a 	mov	sp,fp
  8192d0:	dfc00117 	ldw	ra,4(sp)
  8192d4:	df000017 	ldw	fp,0(sp)
  8192d8:	dec00204 	addi	sp,sp,8
  8192dc:	f800283a 	ret

008192e0 <lcd_scroll_up>:

/* --------------------------------------------------------------------- */

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  8192e0:	defffc04 	addi	sp,sp,-16
  8192e4:	dfc00315 	stw	ra,12(sp)
  8192e8:	df000215 	stw	fp,8(sp)
  8192ec:	df000204 	addi	fp,sp,8
  8192f0:	e13fff15 	stw	r4,-4(fp)
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  8192f4:	e03ffe15 	stw	zero,-8(fp)
  8192f8:	00001d06 	br	819370 <lcd_scroll_up+0x90>
  {
    if (y < ALT_LCD_HEIGHT-1)
  8192fc:	e0bffe17 	ldw	r2,-8(fp)
  819300:	00800f16 	blt	zero,r2,819340 <lcd_scroll_up+0x60>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
  819304:	e0bffe17 	ldw	r2,-8(fp)
  819308:	108018e4 	muli	r2,r2,99
  81930c:	10801004 	addi	r2,r2,64
  819310:	e0ffff17 	ldw	r3,-4(fp)
  819314:	1889883a 	add	r4,r3,r2
  819318:	e0bffe17 	ldw	r2,-8(fp)
  81931c:	10800044 	addi	r2,r2,1
  819320:	108018e4 	muli	r2,r2,99
  819324:	10801004 	addi	r2,r2,64
  819328:	e0ffff17 	ldw	r3,-4(fp)
  81932c:	1885883a 	add	r2,r3,r2
  819330:	100b883a 	mov	r5,r2
  819334:	01801404 	movi	r6,80
  819338:	08092180 	call	809218 <memcpy>
  81933c:	00000906 	br	819364 <lcd_scroll_up+0x84>
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  819340:	e0bffe17 	ldw	r2,-8(fp)
  819344:	108018e4 	muli	r2,r2,99
  819348:	10801004 	addi	r2,r2,64
  81934c:	e0ffff17 	ldw	r3,-4(fp)
  819350:	1885883a 	add	r2,r3,r2
  819354:	1009883a 	mov	r4,r2
  819358:	01400804 	movi	r5,32
  81935c:	01801404 	movi	r6,80
  819360:	0802d340 	call	802d34 <memset>

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819364:	e0bffe17 	ldw	r2,-8(fp)
  819368:	10800044 	addi	r2,r2,1
  81936c:	e0bffe15 	stw	r2,-8(fp)
  819370:	e0bffe17 	ldw	r2,-8(fp)
  819374:	10800090 	cmplti	r2,r2,2
  819378:	103fe01e 	bne	r2,zero,8192fc <__alt_data_end+0xff8192fc>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  }

  sp->y--;
  81937c:	e0bfff17 	ldw	r2,-4(fp)
  819380:	10800883 	ldbu	r2,34(r2)
  819384:	10bfffc4 	addi	r2,r2,-1
  819388:	1007883a 	mov	r3,r2
  81938c:	e0bfff17 	ldw	r2,-4(fp)
  819390:	10c00885 	stb	r3,34(r2)
}
  819394:	e037883a 	mov	sp,fp
  819398:	dfc00117 	ldw	ra,4(sp)
  81939c:	df000017 	ldw	fp,0(sp)
  8193a0:	dec00204 	addi	sp,sp,8
  8193a4:	f800283a 	ret

008193a8 <lcd_handle_escape>:

/* --------------------------------------------------------------------- */

static void lcd_handle_escape(altera_avalon_lcd_16207_state* sp, char c)
{
  8193a8:	defff904 	addi	sp,sp,-28
  8193ac:	dfc00615 	stw	ra,24(sp)
  8193b0:	df000515 	stw	fp,20(sp)
  8193b4:	df000504 	addi	fp,sp,20
  8193b8:	e13ffe15 	stw	r4,-8(fp)
  8193bc:	2805883a 	mov	r2,r5
  8193c0:	e0bfff05 	stb	r2,-4(fp)
  int parm1 = 0, parm2 = 0;
  8193c4:	e03ffb15 	stw	zero,-20(fp)
  8193c8:	e03ffc15 	stw	zero,-16(fp)

  if (sp->escape[0] == '[')
  8193cc:	e0bffe17 	ldw	r2,-8(fp)
  8193d0:	10800a03 	ldbu	r2,40(r2)
  8193d4:	10803fcc 	andi	r2,r2,255
  8193d8:	1080201c 	xori	r2,r2,128
  8193dc:	10bfe004 	addi	r2,r2,-128
  8193e0:	108016d8 	cmpnei	r2,r2,91
  8193e4:	1000441e 	bne	r2,zero,8194f8 <lcd_handle_escape+0x150>
  {
    char * ptr = sp->escape+1;
  8193e8:	e0bffe17 	ldw	r2,-8(fp)
  8193ec:	10800a44 	addi	r2,r2,41
  8193f0:	e0bffd15 	stw	r2,-12(fp)
    while (isdigit(*ptr))
  8193f4:	00000c06 	br	819428 <lcd_handle_escape+0x80>
      parm1 = (parm1 * 10) + (*ptr++ - '0');
  8193f8:	e0bffb17 	ldw	r2,-20(fp)
  8193fc:	10c002a4 	muli	r3,r2,10
  819400:	e0bffd17 	ldw	r2,-12(fp)
  819404:	11000044 	addi	r4,r2,1
  819408:	e13ffd15 	stw	r4,-12(fp)
  81940c:	10800003 	ldbu	r2,0(r2)
  819410:	10803fcc 	andi	r2,r2,255
  819414:	1080201c 	xori	r2,r2,128
  819418:	10bfe004 	addi	r2,r2,-128
  81941c:	10bff404 	addi	r2,r2,-48
  819420:	1885883a 	add	r2,r3,r2
  819424:	e0bffb15 	stw	r2,-20(fp)
  int parm1 = 0, parm2 = 0;

  if (sp->escape[0] == '[')
  {
    char * ptr = sp->escape+1;
    while (isdigit(*ptr))
  819428:	008020b4 	movhi	r2,130
  81942c:	10b7fb04 	addi	r2,r2,-8212
  819430:	10c00017 	ldw	r3,0(r2)
  819434:	e0bffd17 	ldw	r2,-12(fp)
  819438:	10800003 	ldbu	r2,0(r2)
  81943c:	10803fcc 	andi	r2,r2,255
  819440:	1080201c 	xori	r2,r2,128
  819444:	10bfe004 	addi	r2,r2,-128
  819448:	10800044 	addi	r2,r2,1
  81944c:	1885883a 	add	r2,r3,r2
  819450:	10800003 	ldbu	r2,0(r2)
  819454:	10803fcc 	andi	r2,r2,255
  819458:	1080010c 	andi	r2,r2,4
  81945c:	103fe61e 	bne	r2,zero,8193f8 <__alt_data_end+0xff8193f8>
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
  819460:	e0bffd17 	ldw	r2,-12(fp)
  819464:	10800003 	ldbu	r2,0(r2)
  819468:	10803fcc 	andi	r2,r2,255
  81946c:	1080201c 	xori	r2,r2,128
  819470:	10bfe004 	addi	r2,r2,-128
  819474:	10800ed8 	cmpnei	r2,r2,59
  819478:	10001e1e 	bne	r2,zero,8194f4 <lcd_handle_escape+0x14c>
    {
      ptr++;
  81947c:	e0bffd17 	ldw	r2,-12(fp)
  819480:	10800044 	addi	r2,r2,1
  819484:	e0bffd15 	stw	r2,-12(fp)
      while (isdigit(*ptr))
  819488:	00000c06 	br	8194bc <lcd_handle_escape+0x114>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
  81948c:	e0bffc17 	ldw	r2,-16(fp)
  819490:	10c002a4 	muli	r3,r2,10
  819494:	e0bffd17 	ldw	r2,-12(fp)
  819498:	11000044 	addi	r4,r2,1
  81949c:	e13ffd15 	stw	r4,-12(fp)
  8194a0:	10800003 	ldbu	r2,0(r2)
  8194a4:	10803fcc 	andi	r2,r2,255
  8194a8:	1080201c 	xori	r2,r2,128
  8194ac:	10bfe004 	addi	r2,r2,-128
  8194b0:	10bff404 	addi	r2,r2,-48
  8194b4:	1885883a 	add	r2,r3,r2
  8194b8:	e0bffc15 	stw	r2,-16(fp)
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
    {
      ptr++;
      while (isdigit(*ptr))
  8194bc:	008020b4 	movhi	r2,130
  8194c0:	10b7fb04 	addi	r2,r2,-8212
  8194c4:	10c00017 	ldw	r3,0(r2)
  8194c8:	e0bffd17 	ldw	r2,-12(fp)
  8194cc:	10800003 	ldbu	r2,0(r2)
  8194d0:	10803fcc 	andi	r2,r2,255
  8194d4:	1080201c 	xori	r2,r2,128
  8194d8:	10bfe004 	addi	r2,r2,-128
  8194dc:	10800044 	addi	r2,r2,1
  8194e0:	1885883a 	add	r2,r3,r2
  8194e4:	10800003 	ldbu	r2,0(r2)
  8194e8:	10803fcc 	andi	r2,r2,255
  8194ec:	1080010c 	andi	r2,r2,4
  8194f0:	103fe61e 	bne	r2,zero,81948c <__alt_data_end+0xff81948c>
  8194f4:	00000206 	br	819500 <lcd_handle_escape+0x158>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
    }
  }
  else
    parm1 = -1;
  8194f8:	00bfffc4 	movi	r2,-1
  8194fc:	e0bffb15 	stw	r2,-20(fp)

  switch (c)
  819500:	e0bfff07 	ldb	r2,-4(fp)
  819504:	10c012a0 	cmpeqi	r3,r2,74
  819508:	1800281e 	bne	r3,zero,8195ac <lcd_handle_escape+0x204>
  81950c:	10c012c8 	cmpgei	r3,r2,75
  819510:	1800031e 	bne	r3,zero,819520 <lcd_handle_escape+0x178>
  819514:	10801220 	cmpeqi	r2,r2,72
  819518:	1000051e 	bne	r2,zero,819530 <lcd_handle_escape+0x188>
  81951c:	00004506 	br	819634 <lcd_handle_escape+0x28c>
  819520:	10c012e0 	cmpeqi	r3,r2,75
  819524:	1800281e 	bne	r3,zero,8195c8 <lcd_handle_escape+0x220>
  819528:	108019a0 	cmpeqi	r2,r2,102
  81952c:	10004126 	beq	r2,zero,819634 <lcd_handle_escape+0x28c>
  {
  case 'H': /* ESC '[' <y> ';' <x> 'H'  : Move cursor to location */
  case 'f': /* Same as above */
    if (parm2 > 0)
  819530:	e0bffc17 	ldw	r2,-16(fp)
  819534:	0080050e 	bge	zero,r2,81954c <lcd_handle_escape+0x1a4>
      sp->x = parm2 - 1;
  819538:	e0bffc17 	ldw	r2,-16(fp)
  81953c:	10bfffc4 	addi	r2,r2,-1
  819540:	1007883a 	mov	r3,r2
  819544:	e0bffe17 	ldw	r2,-8(fp)
  819548:	10c00845 	stb	r3,33(r2)
    if (parm1 > 0)
  81954c:	e0bffb17 	ldw	r2,-20(fp)
  819550:	0080150e 	bge	zero,r2,8195a8 <lcd_handle_escape+0x200>
    {
      sp->y = parm1 - 1;
  819554:	e0bffb17 	ldw	r2,-20(fp)
  819558:	10bfffc4 	addi	r2,r2,-1
  81955c:	1007883a 	mov	r3,r2
  819560:	e0bffe17 	ldw	r2,-8(fp)
  819564:	10c00885 	stb	r3,34(r2)
      if (sp->y > ALT_LCD_HEIGHT * 2)
  819568:	e0bffe17 	ldw	r2,-8(fp)
  81956c:	10800883 	ldbu	r2,34(r2)
  819570:	10803fcc 	andi	r2,r2,255
  819574:	10800170 	cmpltui	r2,r2,5
  819578:	1000031e 	bne	r2,zero,819588 <lcd_handle_escape+0x1e0>
        sp->y = ALT_LCD_HEIGHT * 2;
  81957c:	e0bffe17 	ldw	r2,-8(fp)
  819580:	00c00104 	movi	r3,4
  819584:	10c00885 	stb	r3,34(r2)
      while (sp->y > ALT_LCD_HEIGHT)
  819588:	00000206 	br	819594 <lcd_handle_escape+0x1ec>
        lcd_scroll_up(sp);
  81958c:	e13ffe17 	ldw	r4,-8(fp)
  819590:	08192e00 	call	8192e0 <lcd_scroll_up>
    if (parm1 > 0)
    {
      sp->y = parm1 - 1;
      if (sp->y > ALT_LCD_HEIGHT * 2)
        sp->y = ALT_LCD_HEIGHT * 2;
      while (sp->y > ALT_LCD_HEIGHT)
  819594:	e0bffe17 	ldw	r2,-8(fp)
  819598:	10800883 	ldbu	r2,34(r2)
  81959c:	10803fcc 	andi	r2,r2,255
  8195a0:	108000e8 	cmpgeui	r2,r2,3
  8195a4:	103ff91e 	bne	r2,zero,81958c <__alt_data_end+0xff81958c>
        lcd_scroll_up(sp);
    }
    break;
  8195a8:	00002206 	br	819634 <lcd_handle_escape+0x28c>
    /*   ESC J      is clear to beginning of line    [unimplemented]
     *   ESC [ 0 J  is clear to bottom of screen     [unimplemented]
     *   ESC [ 1 J  is clear to beginning of screen  [unimplemented]
     *   ESC [ 2 J  is clear screen
     */
    if (parm1 == 2)
  8195ac:	e0bffb17 	ldw	r2,-20(fp)
  8195b0:	10800098 	cmpnei	r2,r2,2
  8195b4:	1000031e 	bne	r2,zero,8195c4 <lcd_handle_escape+0x21c>
      lcd_clear_screen(sp);
  8195b8:	e13ffe17 	ldw	r4,-8(fp)
  8195bc:	081902c0 	call	81902c <lcd_clear_screen>
    break;
  8195c0:	00001c06 	br	819634 <lcd_handle_escape+0x28c>
  8195c4:	00001b06 	br	819634 <lcd_handle_escape+0x28c>
    /*   ESC K      is clear to end of line
     *   ESC [ 0 K  is clear to end of line
     *   ESC [ 1 K  is clear to beginning of line    [unimplemented]
     *   ESC [ 2 K  is clear line                    [unimplemented]
     */
    if (parm1 < 1)
  8195c8:	e0bffb17 	ldw	r2,-20(fp)
  8195cc:	00801816 	blt	zero,r2,819630 <lcd_handle_escape+0x288>
    {
      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
  8195d0:	e0bffe17 	ldw	r2,-8(fp)
  8195d4:	10800843 	ldbu	r2,33(r2)
  8195d8:	10803fcc 	andi	r2,r2,255
  8195dc:	10801428 	cmpgeui	r2,r2,80
  8195e0:	1000131e 	bne	r2,zero,819630 <lcd_handle_escape+0x288>
        memset(sp->line[sp->y].data + sp->x, ' ', ALT_LCD_VIRTUAL_WIDTH - sp->x);
  8195e4:	e0bffe17 	ldw	r2,-8(fp)
  8195e8:	10800883 	ldbu	r2,34(r2)
  8195ec:	10803fcc 	andi	r2,r2,255
  8195f0:	108018e4 	muli	r2,r2,99
  8195f4:	10801004 	addi	r2,r2,64
  8195f8:	e0fffe17 	ldw	r3,-8(fp)
  8195fc:	1887883a 	add	r3,r3,r2
  819600:	e0bffe17 	ldw	r2,-8(fp)
  819604:	10800843 	ldbu	r2,33(r2)
  819608:	10803fcc 	andi	r2,r2,255
  81960c:	1889883a 	add	r4,r3,r2
  819610:	e0bffe17 	ldw	r2,-8(fp)
  819614:	10800843 	ldbu	r2,33(r2)
  819618:	10803fcc 	andi	r2,r2,255
  81961c:	00c01404 	movi	r3,80
  819620:	1885c83a 	sub	r2,r3,r2
  819624:	01400804 	movi	r5,32
  819628:	100d883a 	mov	r6,r2
  81962c:	0802d340 	call	802d34 <memset>
    }
    break;
  819630:	0001883a 	nop
  }
}
  819634:	e037883a 	mov	sp,fp
  819638:	dfc00117 	ldw	ra,4(sp)
  81963c:	df000017 	ldw	fp,0(sp)
  819640:	dec00204 	addi	sp,sp,8
  819644:	f800283a 	ret

00819648 <altera_avalon_lcd_16207_write>:

/* --------------------------------------------------------------------- */

int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp, 
  const char* ptr, int len, int flags)
{
  819648:	defff304 	addi	sp,sp,-52
  81964c:	dfc00c15 	stw	ra,48(sp)
  819650:	df000b15 	stw	fp,44(sp)
  819654:	df000b04 	addi	fp,sp,44
  819658:	e13ffc15 	stw	r4,-16(fp)
  81965c:	e17ffd15 	stw	r5,-12(fp)
  819660:	e1bffe15 	stw	r6,-8(fp)
  819664:	e1ffff15 	stw	r7,-4(fp)
  const char* end = ptr + len;
  819668:	e0bffe17 	ldw	r2,-8(fp)
  81966c:	e0fffd17 	ldw	r3,-12(fp)
  819670:	1885883a 	add	r2,r3,r2
  819674:	e0bff815 	stw	r2,-32(fp)

  ALT_SEM_PEND (sp->write_lock, 0);

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;
  819678:	e0bffc17 	ldw	r2,-16(fp)
  81967c:	00c00044 	movi	r3,1
  819680:	10c009c5 	stb	r3,39(r2)

  for ( ; ptr < end ; ptr++)
  819684:	00009e06 	br	819900 <altera_avalon_lcd_16207_write+0x2b8>
  {
    char c = *ptr;
  819688:	e0bffd17 	ldw	r2,-12(fp)
  81968c:	10800003 	ldbu	r2,0(r2)
  819690:	e0bff905 	stb	r2,-28(fp)

    if (sp->esccount >= 0)
  819694:	e0bffc17 	ldw	r2,-16(fp)
  819698:	10800903 	ldbu	r2,36(r2)
  81969c:	10803fcc 	andi	r2,r2,255
  8196a0:	1080201c 	xori	r2,r2,128
  8196a4:	10bfe004 	addi	r2,r2,-128
  8196a8:	10003a16 	blt	r2,zero,819794 <altera_avalon_lcd_16207_write+0x14c>
    {
      unsigned int esccount = sp->esccount;
  8196ac:	e0bffc17 	ldw	r2,-16(fp)
  8196b0:	10800903 	ldbu	r2,36(r2)
  8196b4:	10803fcc 	andi	r2,r2,255
  8196b8:	1080201c 	xori	r2,r2,128
  8196bc:	10bfe004 	addi	r2,r2,-128
  8196c0:	e0bffa15 	stw	r2,-24(fp)

      /* Single character escape sequences can end with any character
       * Multi character escape sequences start with '[' and contain
       * digits and semicolons before terminating
       */
      if ((esccount == 0 && c != '[') ||
  8196c4:	e0bffa17 	ldw	r2,-24(fp)
  8196c8:	1000031e 	bne	r2,zero,8196d8 <altera_avalon_lcd_16207_write+0x90>
  8196cc:	e0bff907 	ldb	r2,-28(fp)
  8196d0:	108016d8 	cmpnei	r2,r2,91
  8196d4:	10000f1e 	bne	r2,zero,819714 <altera_avalon_lcd_16207_write+0xcc>
  8196d8:	e0bffa17 	ldw	r2,-24(fp)
  8196dc:	10001a26 	beq	r2,zero,819748 <altera_avalon_lcd_16207_write+0x100>
          (esccount > 0 && !isdigit(c) && c != ';'))
  8196e0:	008020b4 	movhi	r2,130
  8196e4:	10b7fb04 	addi	r2,r2,-8212
  8196e8:	10c00017 	ldw	r3,0(r2)
  8196ec:	e0bff907 	ldb	r2,-28(fp)
  8196f0:	10800044 	addi	r2,r2,1
  8196f4:	1885883a 	add	r2,r3,r2
  8196f8:	10800003 	ldbu	r2,0(r2)
  8196fc:	10803fcc 	andi	r2,r2,255
  819700:	1080010c 	andi	r2,r2,4
  819704:	1000101e 	bne	r2,zero,819748 <altera_avalon_lcd_16207_write+0x100>
  819708:	e0bff907 	ldb	r2,-28(fp)
  81970c:	10800ee0 	cmpeqi	r2,r2,59
  819710:	10000d1e 	bne	r2,zero,819748 <altera_avalon_lcd_16207_write+0x100>
      {
        sp->escape[esccount] = 0;
  819714:	e0fffc17 	ldw	r3,-16(fp)
  819718:	e0bffa17 	ldw	r2,-24(fp)
  81971c:	1885883a 	add	r2,r3,r2
  819720:	10800a04 	addi	r2,r2,40
  819724:	10000005 	stb	zero,0(r2)

        lcd_handle_escape(sp, c);
  819728:	e0bff907 	ldb	r2,-28(fp)
  81972c:	e13ffc17 	ldw	r4,-16(fp)
  819730:	100b883a 	mov	r5,r2
  819734:	08193a80 	call	8193a8 <lcd_handle_escape>

        sp->esccount = -1;
  819738:	e0bffc17 	ldw	r2,-16(fp)
  81973c:	00ffffc4 	movi	r3,-1
  819740:	10c00905 	stb	r3,36(r2)
  819744:	00001206 	br	819790 <altera_avalon_lcd_16207_write+0x148>
      }
      else if (sp->esccount < sizeof(sp->escape)-1)
  819748:	e0bffc17 	ldw	r2,-16(fp)
  81974c:	10800903 	ldbu	r2,36(r2)
  819750:	10803fcc 	andi	r2,r2,255
  819754:	108001e8 	cmpgeui	r2,r2,7
  819758:	10000d1e 	bne	r2,zero,819790 <altera_avalon_lcd_16207_write+0x148>
      {
        sp->escape[esccount] = c;
  81975c:	e0fffc17 	ldw	r3,-16(fp)
  819760:	e0bffa17 	ldw	r2,-24(fp)
  819764:	1885883a 	add	r2,r3,r2
  819768:	10800a04 	addi	r2,r2,40
  81976c:	e0fff903 	ldbu	r3,-28(fp)
  819770:	10c00005 	stb	r3,0(r2)
        sp->esccount++;
  819774:	e0bffc17 	ldw	r2,-16(fp)
  819778:	10800903 	ldbu	r2,36(r2)
  81977c:	10800044 	addi	r2,r2,1
  819780:	1007883a 	mov	r3,r2
  819784:	e0bffc17 	ldw	r2,-16(fp)
  819788:	10c00905 	stb	r3,36(r2)
  81978c:	00005906 	br	8198f4 <altera_avalon_lcd_16207_write+0x2ac>
  819790:	00005806 	br	8198f4 <altera_avalon_lcd_16207_write+0x2ac>
      }
    }
    else if (c == 27) /* ESC */
  819794:	e0bff907 	ldb	r2,-28(fp)
  819798:	108006d8 	cmpnei	r2,r2,27
  81979c:	1000031e 	bne	r2,zero,8197ac <altera_avalon_lcd_16207_write+0x164>
    {
      sp->esccount = 0;
  8197a0:	e0bffc17 	ldw	r2,-16(fp)
  8197a4:	10000905 	stb	zero,36(r2)
  8197a8:	00005206 	br	8198f4 <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (c == '\r')
  8197ac:	e0bff907 	ldb	r2,-28(fp)
  8197b0:	10800358 	cmpnei	r2,r2,13
  8197b4:	1000031e 	bne	r2,zero,8197c4 <altera_avalon_lcd_16207_write+0x17c>
    {
      sp->x = 0;
  8197b8:	e0bffc17 	ldw	r2,-16(fp)
  8197bc:	10000845 	stb	zero,33(r2)
  8197c0:	00004c06 	br	8198f4 <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (c == '\n')
  8197c4:	e0bff907 	ldb	r2,-28(fp)
  8197c8:	10800298 	cmpnei	r2,r2,10
  8197cc:	1000101e 	bne	r2,zero,819810 <altera_avalon_lcd_16207_write+0x1c8>
    {
      sp->x = 0;
  8197d0:	e0bffc17 	ldw	r2,-16(fp)
  8197d4:	10000845 	stb	zero,33(r2)
      sp->y++;
  8197d8:	e0bffc17 	ldw	r2,-16(fp)
  8197dc:	10800883 	ldbu	r2,34(r2)
  8197e0:	10800044 	addi	r2,r2,1
  8197e4:	1007883a 	mov	r3,r2
  8197e8:	e0bffc17 	ldw	r2,-16(fp)
  8197ec:	10c00885 	stb	r3,34(r2)

      /* Let the cursor sit at X=0, Y=HEIGHT without scrolling so the user
       * can print two lines of data without losing one.
       */
      if (sp->y > ALT_LCD_HEIGHT)
  8197f0:	e0bffc17 	ldw	r2,-16(fp)
  8197f4:	10800883 	ldbu	r2,34(r2)
  8197f8:	10803fcc 	andi	r2,r2,255
  8197fc:	108000f0 	cmpltui	r2,r2,3
  819800:	10003c1e 	bne	r2,zero,8198f4 <altera_avalon_lcd_16207_write+0x2ac>
        lcd_scroll_up(sp);
  819804:	e13ffc17 	ldw	r4,-16(fp)
  819808:	08192e00 	call	8192e0 <lcd_scroll_up>
  81980c:	00003906 	br	8198f4 <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (c == '\b')
  819810:	e0bff907 	ldb	r2,-28(fp)
  819814:	10800218 	cmpnei	r2,r2,8
  819818:	10000b1e 	bne	r2,zero,819848 <altera_avalon_lcd_16207_write+0x200>
    {
      if (sp->x > 0)
  81981c:	e0bffc17 	ldw	r2,-16(fp)
  819820:	10800843 	ldbu	r2,33(r2)
  819824:	10803fcc 	andi	r2,r2,255
  819828:	10003226 	beq	r2,zero,8198f4 <altera_avalon_lcd_16207_write+0x2ac>
        sp->x--;
  81982c:	e0bffc17 	ldw	r2,-16(fp)
  819830:	10800843 	ldbu	r2,33(r2)
  819834:	10bfffc4 	addi	r2,r2,-1
  819838:	1007883a 	mov	r3,r2
  81983c:	e0bffc17 	ldw	r2,-16(fp)
  819840:	10c00845 	stb	r3,33(r2)
  819844:	00002b06 	br	8198f4 <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (isprint(c))
  819848:	008020b4 	movhi	r2,130
  81984c:	10b7fb04 	addi	r2,r2,-8212
  819850:	10c00017 	ldw	r3,0(r2)
  819854:	e0bff907 	ldb	r2,-28(fp)
  819858:	10800044 	addi	r2,r2,1
  81985c:	1885883a 	add	r2,r3,r2
  819860:	10800003 	ldbu	r2,0(r2)
  819864:	10803fcc 	andi	r2,r2,255
  819868:	1080201c 	xori	r2,r2,128
  81986c:	10bfe004 	addi	r2,r2,-128
  819870:	108025cc 	andi	r2,r2,151
  819874:	10001f26 	beq	r2,zero,8198f4 <altera_avalon_lcd_16207_write+0x2ac>
    {
      /* If we didn't scroll on the last linefeed then we might need to do
       * it now. */
      if (sp->y >= ALT_LCD_HEIGHT)
  819878:	e0bffc17 	ldw	r2,-16(fp)
  81987c:	10800883 	ldbu	r2,34(r2)
  819880:	10803fcc 	andi	r2,r2,255
  819884:	108000b0 	cmpltui	r2,r2,2
  819888:	1000021e 	bne	r2,zero,819894 <altera_avalon_lcd_16207_write+0x24c>
        lcd_scroll_up(sp);
  81988c:	e13ffc17 	ldw	r4,-16(fp)
  819890:	08192e00 	call	8192e0 <lcd_scroll_up>

      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
  819894:	e0bffc17 	ldw	r2,-16(fp)
  819898:	10800843 	ldbu	r2,33(r2)
  81989c:	10803fcc 	andi	r2,r2,255
  8198a0:	10801428 	cmpgeui	r2,r2,80
  8198a4:	10000d1e 	bne	r2,zero,8198dc <altera_avalon_lcd_16207_write+0x294>
        sp->line[sp->y].data[sp->x] = c;
  8198a8:	e0bffc17 	ldw	r2,-16(fp)
  8198ac:	10800883 	ldbu	r2,34(r2)
  8198b0:	10c03fcc 	andi	r3,r2,255
  8198b4:	e0bffc17 	ldw	r2,-16(fp)
  8198b8:	10800843 	ldbu	r2,33(r2)
  8198bc:	10803fcc 	andi	r2,r2,255
  8198c0:	e13ffc17 	ldw	r4,-16(fp)
  8198c4:	18c018e4 	muli	r3,r3,99
  8198c8:	20c7883a 	add	r3,r4,r3
  8198cc:	1885883a 	add	r2,r3,r2
  8198d0:	10801004 	addi	r2,r2,64
  8198d4:	e0fff903 	ldbu	r3,-28(fp)
  8198d8:	10c00005 	stb	r3,0(r2)

      sp->x++;
  8198dc:	e0bffc17 	ldw	r2,-16(fp)
  8198e0:	10800843 	ldbu	r2,33(r2)
  8198e4:	10800044 	addi	r2,r2,1
  8198e8:	1007883a 	mov	r3,r2
  8198ec:	e0bffc17 	ldw	r2,-16(fp)
  8198f0:	10c00845 	stb	r3,33(r2)

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;

  for ( ; ptr < end ; ptr++)
  8198f4:	e0bffd17 	ldw	r2,-12(fp)
  8198f8:	10800044 	addi	r2,r2,1
  8198fc:	e0bffd15 	stw	r2,-12(fp)
  819900:	e0fffd17 	ldw	r3,-12(fp)
  819904:	e0bff817 	ldw	r2,-32(fp)
  819908:	18bf5f36 	bltu	r3,r2,819688 <__alt_data_end+0xff819688>
      sp->x++;
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  81990c:	00800404 	movi	r2,16
  819910:	e0bff615 	stw	r2,-40(fp)
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819914:	e03ff515 	stw	zero,-44(fp)
  819918:	00003606 	br	8199f4 <altera_avalon_lcd_16207_write+0x3ac>
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
  81991c:	00801404 	movi	r2,80
  819920:	e0bff715 	stw	r2,-36(fp)
  819924:	00001206 	br	819970 <altera_avalon_lcd_16207_write+0x328>
      if (sp->line[y].data[width-1] != ' ')
  819928:	e0bff717 	ldw	r2,-36(fp)
  81992c:	10bfffc4 	addi	r2,r2,-1
  819930:	e13ffc17 	ldw	r4,-16(fp)
  819934:	e0fff517 	ldw	r3,-44(fp)
  819938:	18c018e4 	muli	r3,r3,99
  81993c:	20c7883a 	add	r3,r4,r3
  819940:	1885883a 	add	r2,r3,r2
  819944:	10801004 	addi	r2,r2,64
  819948:	10800003 	ldbu	r2,0(r2)
  81994c:	10803fcc 	andi	r2,r2,255
  819950:	1080201c 	xori	r2,r2,128
  819954:	10bfe004 	addi	r2,r2,-128
  819958:	10800820 	cmpeqi	r2,r2,32
  81995c:	1000011e 	bne	r2,zero,819964 <altera_avalon_lcd_16207_write+0x31c>
        break;
  819960:	00000506 	br	819978 <altera_avalon_lcd_16207_write+0x330>
  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
  819964:	e0bff717 	ldw	r2,-36(fp)
  819968:	10bfffc4 	addi	r2,r2,-1
  81996c:	e0bff715 	stw	r2,-36(fp)
  819970:	e0bff717 	ldw	r2,-36(fp)
  819974:	00bfec16 	blt	zero,r2,819928 <__alt_data_end+0xff819928>

    /* The minimum width is the size of the LCD panel.  If the real width
     * is long enough to require scrolling then add an extra space so the
     * end of the message doesn't run into the beginning of it.
     */
    if (width <= ALT_LCD_WIDTH)
  819978:	e0bff717 	ldw	r2,-36(fp)
  81997c:	10800448 	cmpgei	r2,r2,17
  819980:	1000031e 	bne	r2,zero,819990 <altera_avalon_lcd_16207_write+0x348>
      width = ALT_LCD_WIDTH;
  819984:	00800404 	movi	r2,16
  819988:	e0bff715 	stw	r2,-36(fp)
  81998c:	00000306 	br	81999c <altera_avalon_lcd_16207_write+0x354>
    else
      width++;
  819990:	e0bff717 	ldw	r2,-36(fp)
  819994:	10800044 	addi	r2,r2,1
  819998:	e0bff715 	stw	r2,-36(fp)

    sp->line[y].width = width;
  81999c:	e0bff717 	ldw	r2,-36(fp)
  8199a0:	1009883a 	mov	r4,r2
  8199a4:	e0fffc17 	ldw	r3,-16(fp)
  8199a8:	e0bff517 	ldw	r2,-44(fp)
  8199ac:	108018e4 	muli	r2,r2,99
  8199b0:	10802404 	addi	r2,r2,144
  8199b4:	1885883a 	add	r2,r3,r2
  8199b8:	11000045 	stb	r4,1(r2)
    if (widthmax < width)
  8199bc:	e0fff617 	ldw	r3,-40(fp)
  8199c0:	e0bff717 	ldw	r2,-36(fp)
  8199c4:	1880020e 	bge	r3,r2,8199d0 <altera_avalon_lcd_16207_write+0x388>
      widthmax = width;
  8199c8:	e0bff717 	ldw	r2,-36(fp)
  8199cc:	e0bff615 	stw	r2,-40(fp)
    sp->line[y].speed = 0; /* By default lines don't scroll */
  8199d0:	e0fffc17 	ldw	r3,-16(fp)
  8199d4:	e0bff517 	ldw	r2,-44(fp)
  8199d8:	108018e4 	muli	r2,r2,99
  8199dc:	10802404 	addi	r2,r2,144
  8199e0:	1885883a 	add	r2,r3,r2
  8199e4:	10000085 	stb	zero,2(r2)
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  8199e8:	e0bff517 	ldw	r2,-44(fp)
  8199ec:	10800044 	addi	r2,r2,1
  8199f0:	e0bff515 	stw	r2,-44(fp)
  8199f4:	e0bff517 	ldw	r2,-44(fp)
  8199f8:	10800090 	cmplti	r2,r2,2
  8199fc:	103fc71e 	bne	r2,zero,81991c <__alt_data_end+0xff81991c>
    if (widthmax < width)
      widthmax = width;
    sp->line[y].speed = 0; /* By default lines don't scroll */
  }

  if (widthmax <= ALT_LCD_WIDTH)
  819a00:	e0bff617 	ldw	r2,-40(fp)
  819a04:	10800448 	cmpgei	r2,r2,17
  819a08:	1000031e 	bne	r2,zero,819a18 <altera_avalon_lcd_16207_write+0x3d0>
    sp->scrollmax = 0;
  819a0c:	e0bffc17 	ldw	r2,-16(fp)
  819a10:	10000985 	stb	zero,38(r2)
  819a14:	00002e06 	br	819ad0 <altera_avalon_lcd_16207_write+0x488>
  else
  {
    widthmax *= 2;
  819a18:	e0bff617 	ldw	r2,-40(fp)
  819a1c:	1085883a 	add	r2,r2,r2
  819a20:	e0bff615 	stw	r2,-40(fp)
    sp->scrollmax = widthmax;
  819a24:	e0bff617 	ldw	r2,-40(fp)
  819a28:	1007883a 	mov	r3,r2
  819a2c:	e0bffc17 	ldw	r2,-16(fp)
  819a30:	10c00985 	stb	r3,38(r2)

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819a34:	e03ff515 	stw	zero,-44(fp)
  819a38:	00002206 	br	819ac4 <altera_avalon_lcd_16207_write+0x47c>
      if (sp->line[y].width > ALT_LCD_WIDTH)
  819a3c:	e0fffc17 	ldw	r3,-16(fp)
  819a40:	e0bff517 	ldw	r2,-44(fp)
  819a44:	108018e4 	muli	r2,r2,99
  819a48:	10802404 	addi	r2,r2,144
  819a4c:	1885883a 	add	r2,r3,r2
  819a50:	10800043 	ldbu	r2,1(r2)
  819a54:	10803fcc 	andi	r2,r2,255
  819a58:	1080201c 	xori	r2,r2,128
  819a5c:	10bfe004 	addi	r2,r2,-128
  819a60:	10800450 	cmplti	r2,r2,17
  819a64:	1000141e 	bne	r2,zero,819ab8 <altera_avalon_lcd_16207_write+0x470>
         */
#if 1
        /* This option makes all the lines scroll round at different speeds
         * which are chosen so that all the scrolls finish at the same time.
         */
        sp->line[y].speed = 256 * sp->line[y].width / widthmax;
  819a68:	e0fffc17 	ldw	r3,-16(fp)
  819a6c:	e0bff517 	ldw	r2,-44(fp)
  819a70:	108018e4 	muli	r2,r2,99
  819a74:	10802404 	addi	r2,r2,144
  819a78:	1885883a 	add	r2,r3,r2
  819a7c:	10800043 	ldbu	r2,1(r2)
  819a80:	10803fcc 	andi	r2,r2,255
  819a84:	1080201c 	xori	r2,r2,128
  819a88:	10bfe004 	addi	r2,r2,-128
  819a8c:	1004923a 	slli	r2,r2,8
  819a90:	1009883a 	mov	r4,r2
  819a94:	e17ff617 	ldw	r5,-40(fp)
  819a98:	0814b100 	call	814b10 <__divsi3>
  819a9c:	1009883a 	mov	r4,r2
  819aa0:	e0fffc17 	ldw	r3,-16(fp)
  819aa4:	e0bff517 	ldw	r2,-44(fp)
  819aa8:	108018e4 	muli	r2,r2,99
  819aac:	10802404 	addi	r2,r2,144
  819ab0:	1885883a 	add	r2,r3,r2
  819ab4:	11000085 	stb	r4,2(r2)
  {
    widthmax *= 2;
    sp->scrollmax = widthmax;

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819ab8:	e0bff517 	ldw	r2,-44(fp)
  819abc:	10800044 	addi	r2,r2,1
  819ac0:	e0bff515 	stw	r2,-44(fp)
  819ac4:	e0bff517 	ldw	r2,-44(fp)
  819ac8:	10800090 	cmplti	r2,r2,2
  819acc:	103fdb1e 	bne	r2,zero,819a3c <__alt_data_end+0xff819a3c>
   * (because active was set when the timer interrupt occurred).  If there
   * has been a missed repaint then paint again.  And again.  etc.
   */
  for ( ; ; )
  {
    int old_scrollpos = sp->scrollpos;
  819ad0:	e0bffc17 	ldw	r2,-16(fp)
  819ad4:	10800943 	ldbu	r2,37(r2)
  819ad8:	10803fcc 	andi	r2,r2,255
  819adc:	e0bffb15 	stw	r2,-20(fp)

    lcd_repaint_screen(sp);
  819ae0:	e13ffc17 	ldw	r4,-16(fp)
  819ae4:	08190f80 	call	8190f8 <lcd_repaint_screen>

    /* Let the timer routines repaint the display again */
    sp->active = 0;
  819ae8:	e0bffc17 	ldw	r2,-16(fp)
  819aec:	100009c5 	stb	zero,39(r2)

    /* Have the timer routines tried to scroll while we were painting?
     * If not then we can exit */
    if (sp->scrollpos == old_scrollpos)
  819af0:	e0bffc17 	ldw	r2,-16(fp)
  819af4:	10800943 	ldbu	r2,37(r2)
  819af8:	10c03fcc 	andi	r3,r2,255
  819afc:	e0bffb17 	ldw	r2,-20(fp)
  819b00:	1880011e 	bne	r3,r2,819b08 <altera_avalon_lcd_16207_write+0x4c0>
      break;
  819b04:	00000406 	br	819b18 <altera_avalon_lcd_16207_write+0x4d0>

    /* We need to repaint again since the display scrolled while we were
     * painting last time */
    sp->active = 1;
  819b08:	e0bffc17 	ldw	r2,-16(fp)
  819b0c:	00c00044 	movi	r3,1
  819b10:	10c009c5 	stb	r3,39(r2)
  }
  819b14:	003fee06 	br	819ad0 <__alt_data_end+0xff819ad0>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);

  return len;
  819b18:	e0bffe17 	ldw	r2,-8(fp)
}
  819b1c:	e037883a 	mov	sp,fp
  819b20:	dfc00117 	ldw	ra,4(sp)
  819b24:	df000017 	ldw	fp,0(sp)
  819b28:	dec00204 	addi	sp,sp,8
  819b2c:	f800283a 	ret

00819b30 <alt_lcd_16207_timeout>:
/*
 * Timeout routine is called every second
 */

static alt_u32 alt_lcd_16207_timeout(void* context) 
{
  819b30:	defffc04 	addi	sp,sp,-16
  819b34:	dfc00315 	stw	ra,12(sp)
  819b38:	df000215 	stw	fp,8(sp)
  819b3c:	df000204 	addi	fp,sp,8
  819b40:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_lcd_16207_state* sp = (altera_avalon_lcd_16207_state*)context;
  819b44:	e0bfff17 	ldw	r2,-4(fp)
  819b48:	e0bffe15 	stw	r2,-8(fp)

  /* Update the scrolling position */
  if (sp->scrollpos + 1 >= sp->scrollmax)
  819b4c:	e0bffe17 	ldw	r2,-8(fp)
  819b50:	10800943 	ldbu	r2,37(r2)
  819b54:	10803fcc 	andi	r2,r2,255
  819b58:	10c00044 	addi	r3,r2,1
  819b5c:	e0bffe17 	ldw	r2,-8(fp)
  819b60:	10800983 	ldbu	r2,38(r2)
  819b64:	10803fcc 	andi	r2,r2,255
  819b68:	18800316 	blt	r3,r2,819b78 <alt_lcd_16207_timeout+0x48>
    sp->scrollpos = 0;
  819b6c:	e0bffe17 	ldw	r2,-8(fp)
  819b70:	10000945 	stb	zero,37(r2)
  819b74:	00000606 	br	819b90 <alt_lcd_16207_timeout+0x60>
  else
    sp->scrollpos = sp->scrollpos + 1;
  819b78:	e0bffe17 	ldw	r2,-8(fp)
  819b7c:	10800943 	ldbu	r2,37(r2)
  819b80:	10800044 	addi	r2,r2,1
  819b84:	1007883a 	mov	r3,r2
  819b88:	e0bffe17 	ldw	r2,-8(fp)
  819b8c:	10c00945 	stb	r3,37(r2)

  /* Repaint the panel unless the foreground will do it again soon */
  if (sp->scrollmax > 0 && !sp->active)
  819b90:	e0bffe17 	ldw	r2,-8(fp)
  819b94:	10800983 	ldbu	r2,38(r2)
  819b98:	10803fcc 	andi	r2,r2,255
  819b9c:	10000826 	beq	r2,zero,819bc0 <alt_lcd_16207_timeout+0x90>
  819ba0:	e0bffe17 	ldw	r2,-8(fp)
  819ba4:	108009c3 	ldbu	r2,39(r2)
  819ba8:	10803fcc 	andi	r2,r2,255
  819bac:	1080201c 	xori	r2,r2,128
  819bb0:	10bfe004 	addi	r2,r2,-128
  819bb4:	1000021e 	bne	r2,zero,819bc0 <alt_lcd_16207_timeout+0x90>
    lcd_repaint_screen(sp);
  819bb8:	e13ffe17 	ldw	r4,-8(fp)
  819bbc:	08190f80 	call	8190f8 <lcd_repaint_screen>

  return sp->period;
  819bc0:	e0bffe17 	ldw	r2,-8(fp)
  819bc4:	10800717 	ldw	r2,28(r2)
}
  819bc8:	e037883a 	mov	sp,fp
  819bcc:	dfc00117 	ldw	ra,4(sp)
  819bd0:	df000017 	ldw	fp,0(sp)
  819bd4:	dec00204 	addi	sp,sp,8
  819bd8:	f800283a 	ret

00819bdc <altera_avalon_lcd_16207_init>:

/*
 * Called at boot time to initialise the LCD driver
 */
void altera_avalon_lcd_16207_init(altera_avalon_lcd_16207_state* sp)
{
  819bdc:	defffc04 	addi	sp,sp,-16
  819be0:	dfc00315 	stw	ra,12(sp)
  819be4:	df000215 	stw	fp,8(sp)
  819be8:	df000204 	addi	fp,sp,8
  819bec:	e13fff15 	stw	r4,-4(fp)
  unsigned int base = sp->base;
  819bf0:	e0bfff17 	ldw	r2,-4(fp)
  819bf4:	10800017 	ldw	r2,0(r2)
  819bf8:	e0bffe15 	stw	r2,-8(fp)

  /* Mark the device as functional */
  sp->broken = 0;
  819bfc:	e0bfff17 	ldw	r2,-4(fp)
  819c00:	10000805 	stb	zero,32(r2)
   * the BUSY bit in the status register doesn't work until the display
   * has been reset three times.
   */

  /* Wait for 15 ms then reset */
  usleep(15000);
  819c04:	010ea604 	movi	r4,15000
  819c08:	08181cc0 	call	8181cc <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  819c0c:	e0bffe17 	ldw	r2,-8(fp)
  819c10:	00c00c04 	movi	r3,48
  819c14:	10c00035 	stwio	r3,0(r2)

  /* Wait for another 4.1ms and reset again */
  usleep(4100);  
  819c18:	01040104 	movi	r4,4100
  819c1c:	08181cc0 	call	8181cc <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  819c20:	e0bffe17 	ldw	r2,-8(fp)
  819c24:	00c00c04 	movi	r3,48
  819c28:	10c00035 	stwio	r3,0(r2)

  /* Wait a further 1 ms and reset a third time */
  usleep(1000);
  819c2c:	0100fa04 	movi	r4,1000
  819c30:	08181cc0 	call	8181cc <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  819c34:	e0bffe17 	ldw	r2,-8(fp)
  819c38:	00c00c04 	movi	r3,48
  819c3c:	10c00035 	stwio	r3,0(r2)

  /* Setup interface parameters: 8 bit bus, 2 rows, 5x7 font */
  lcd_write_command(sp, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT | LCD_CMD_TWO_LINE);
  819c40:	e13fff17 	ldw	r4,-4(fp)
  819c44:	01400e04 	movi	r5,56
  819c48:	0818ea40 	call	818ea4 <lcd_write_command>
  
  /* Turn display off */
  lcd_write_command(sp, LCD_CMD_ONOFF);
  819c4c:	e13fff17 	ldw	r4,-4(fp)
  819c50:	01400204 	movi	r5,8
  819c54:	0818ea40 	call	818ea4 <lcd_write_command>

  /* Clear display */
  lcd_clear_screen(sp);
  819c58:	e13fff17 	ldw	r4,-4(fp)
  819c5c:	081902c0 	call	81902c <lcd_clear_screen>
  
  /* Set mode: increment after writing, don't shift display */
  lcd_write_command(sp, LCD_CMD_MODES | LCD_CMD_MODE_INC);
  819c60:	e13fff17 	ldw	r4,-4(fp)
  819c64:	01400184 	movi	r5,6
  819c68:	0818ea40 	call	818ea4 <lcd_write_command>

  /* Turn display on */
  lcd_write_command(sp, LCD_CMD_ONOFF | LCD_CMD_ENABLE_DISP);
  819c6c:	e13fff17 	ldw	r4,-4(fp)
  819c70:	01400304 	movi	r5,12
  819c74:	0818ea40 	call	818ea4 <lcd_write_command>

  sp->esccount = -1;
  819c78:	e0bfff17 	ldw	r2,-4(fp)
  819c7c:	00ffffc4 	movi	r3,-1
  819c80:	10c00905 	stb	r3,36(r2)
  memset(sp->escape, 0, sizeof(sp->escape));
  819c84:	e0bfff17 	ldw	r2,-4(fp)
  819c88:	10800a04 	addi	r2,r2,40
  819c8c:	1009883a 	mov	r4,r2
  819c90:	000b883a 	mov	r5,zero
  819c94:	01800204 	movi	r6,8
  819c98:	0802d340 	call	802d34 <memset>

  sp->scrollpos = 0;
  819c9c:	e0bfff17 	ldw	r2,-4(fp)
  819ca0:	10000945 	stb	zero,37(r2)
  sp->scrollmax = 0;
  819ca4:	e0bfff17 	ldw	r2,-4(fp)
  819ca8:	10000985 	stb	zero,38(r2)
  sp->active = 0;
  819cac:	e0bfff17 	ldw	r2,-4(fp)
  819cb0:	100009c5 	stb	zero,39(r2)
  819cb4:	008020b4 	movhi	r2,130
  819cb8:	10bf6e04 	addi	r2,r2,-584
  819cbc:	10800017 	ldw	r2,0(r2)

  sp->period = alt_ticks_per_second() / 10; /* Call every 100ms */
  819cc0:	1009883a 	mov	r4,r2
  819cc4:	01400284 	movi	r5,10
  819cc8:	0814bc00 	call	814bc0 <__udivsi3>
  819ccc:	1007883a 	mov	r3,r2
  819cd0:	e0bfff17 	ldw	r2,-4(fp)
  819cd4:	10c00715 	stw	r3,28(r2)

  alt_alarm_start(&sp->alarm, sp->period, &alt_lcd_16207_timeout, sp);
  819cd8:	e0bfff17 	ldw	r2,-4(fp)
  819cdc:	10c00104 	addi	r3,r2,4
  819ce0:	e0bfff17 	ldw	r2,-4(fp)
  819ce4:	10800717 	ldw	r2,28(r2)
  819ce8:	1809883a 	mov	r4,r3
  819cec:	100b883a 	mov	r5,r2
  819cf0:	018020b4 	movhi	r6,130
  819cf4:	31a6cc04 	addi	r6,r6,-25808
  819cf8:	e1ffff17 	ldw	r7,-4(fp)
  819cfc:	081a7580 	call	81a758 <alt_alarm_start>
}
  819d00:	e037883a 	mov	sp,fp
  819d04:	dfc00117 	ldw	ra,4(sp)
  819d08:	df000017 	ldw	fp,0(sp)
  819d0c:	dec00204 	addi	sp,sp,8
  819d10:	f800283a 	ret

00819d14 <altera_avalon_lcd_16207_write_fd>:
extern int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp,
  const char* ptr, int count, int flags);

int 
altera_avalon_lcd_16207_write_fd(alt_fd* fd, const char* buffer, int space)
{
  819d14:	defffa04 	addi	sp,sp,-24
  819d18:	dfc00515 	stw	ra,20(sp)
  819d1c:	df000415 	stw	fp,16(sp)
  819d20:	df000404 	addi	fp,sp,16
  819d24:	e13ffd15 	stw	r4,-12(fp)
  819d28:	e17ffe15 	stw	r5,-8(fp)
  819d2c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_lcd_16207_dev* dev = (altera_avalon_lcd_16207_dev*) fd->dev; 
  819d30:	e0bffd17 	ldw	r2,-12(fp)
  819d34:	10800017 	ldw	r2,0(r2)
  819d38:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_lcd_16207_write(&dev->state, buffer, space,
  819d3c:	e0bffc17 	ldw	r2,-16(fp)
  819d40:	10c00a04 	addi	r3,r2,40
  819d44:	e0bffd17 	ldw	r2,-12(fp)
  819d48:	10800217 	ldw	r2,8(r2)
  819d4c:	1809883a 	mov	r4,r3
  819d50:	e17ffe17 	ldw	r5,-8(fp)
  819d54:	e1bfff17 	ldw	r6,-4(fp)
  819d58:	100f883a 	mov	r7,r2
  819d5c:	08196480 	call	819648 <altera_avalon_lcd_16207_write>
      fd->fd_flags);
}
  819d60:	e037883a 	mov	sp,fp
  819d64:	dfc00117 	ldw	ra,4(sp)
  819d68:	df000017 	ldw	fp,0(sp)
  819d6c:	dec00204 	addi	sp,sp,8
  819d70:	f800283a 	ret

00819d74 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  819d74:	defff904 	addi	sp,sp,-28
  819d78:	dfc00615 	stw	ra,24(sp)
  819d7c:	df000515 	stw	fp,20(sp)
  819d80:	df000504 	addi	fp,sp,20
  819d84:	e13ffe15 	stw	r4,-8(fp)
  819d88:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  819d8c:	0007883a 	mov	r3,zero
  819d90:	e0bffe17 	ldw	r2,-8(fp)
  819d94:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  819d98:	e0bffe17 	ldw	r2,-8(fp)
  819d9c:	10800104 	addi	r2,r2,4
  819da0:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  819da4:	0005303a 	rdctl	r2,status
  819da8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  819dac:	e0fffc17 	ldw	r3,-16(fp)
  819db0:	00bfff84 	movi	r2,-2
  819db4:	1884703a 	and	r2,r3,r2
  819db8:	1001703a 	wrctl	status,r2
  
  return context;
  819dbc:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  819dc0:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
  819dc4:	081b0380 	call	81b038 <alt_tick>
  819dc8:	e0bffb17 	ldw	r2,-20(fp)
  819dcc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  819dd0:	e0bffd17 	ldw	r2,-12(fp)
  819dd4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  819dd8:	e037883a 	mov	sp,fp
  819ddc:	dfc00117 	ldw	ra,4(sp)
  819de0:	df000017 	ldw	fp,0(sp)
  819de4:	dec00204 	addi	sp,sp,8
  819de8:	f800283a 	ret

00819dec <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  819dec:	defff904 	addi	sp,sp,-28
  819df0:	dfc00615 	stw	ra,24(sp)
  819df4:	df000515 	stw	fp,20(sp)
  819df8:	df000504 	addi	fp,sp,20
  819dfc:	e13ffc15 	stw	r4,-16(fp)
  819e00:	e17ffd15 	stw	r5,-12(fp)
  819e04:	e1bffe15 	stw	r6,-8(fp)
  819e08:	e1ffff15 	stw	r7,-4(fp)
  819e0c:	e0bfff17 	ldw	r2,-4(fp)
  819e10:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  819e14:	008020b4 	movhi	r2,130
  819e18:	10bf6e04 	addi	r2,r2,-584
  819e1c:	10800017 	ldw	r2,0(r2)
  819e20:	1000041e 	bne	r2,zero,819e34 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
  819e24:	008020b4 	movhi	r2,130
  819e28:	10bf6e04 	addi	r2,r2,-584
  819e2c:	e0fffb17 	ldw	r3,-20(fp)
  819e30:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  819e34:	e0bffc17 	ldw	r2,-16(fp)
  819e38:	10800104 	addi	r2,r2,4
  819e3c:	00c001c4 	movi	r3,7
  819e40:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
  819e44:	e13ffe17 	ldw	r4,-8(fp)
  819e48:	e17ffc17 	ldw	r5,-16(fp)
  819e4c:	018020b4 	movhi	r6,130
  819e50:	31a75d04 	addi	r6,r6,-25228
  819e54:	08177980 	call	817798 <alt_irq_register>
#endif  
}
  819e58:	e037883a 	mov	sp,fp
  819e5c:	dfc00117 	ldw	ra,4(sp)
  819e60:	df000017 	ldw	fp,0(sp)
  819e64:	dec00204 	addi	sp,sp,8
  819e68:	f800283a 	ret

00819e6c <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  819e6c:	defffa04 	addi	sp,sp,-24
  819e70:	dfc00515 	stw	ra,20(sp)
  819e74:	df000415 	stw	fp,16(sp)
  819e78:	df000404 	addi	fp,sp,16
  819e7c:	e13ffd15 	stw	r4,-12(fp)
  819e80:	e17ffe15 	stw	r5,-8(fp)
  819e84:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  819e88:	e0bffd17 	ldw	r2,-12(fp)
  819e8c:	10800017 	ldw	r2,0(r2)
  819e90:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
  819e94:	e0bffc17 	ldw	r2,-16(fp)
  819e98:	10c00a04 	addi	r3,r2,40
  819e9c:	e0bffd17 	ldw	r2,-12(fp)
  819ea0:	10800217 	ldw	r2,8(r2)
  819ea4:	1809883a 	mov	r4,r3
  819ea8:	e17ffe17 	ldw	r5,-8(fp)
  819eac:	e1bfff17 	ldw	r6,-4(fp)
  819eb0:	100f883a 	mov	r7,r2
  819eb4:	081a3800 	call	81a380 <altera_avalon_uart_read>
      fd->fd_flags);
}
  819eb8:	e037883a 	mov	sp,fp
  819ebc:	dfc00117 	ldw	ra,4(sp)
  819ec0:	df000017 	ldw	fp,0(sp)
  819ec4:	dec00204 	addi	sp,sp,8
  819ec8:	f800283a 	ret

00819ecc <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  819ecc:	defffa04 	addi	sp,sp,-24
  819ed0:	dfc00515 	stw	ra,20(sp)
  819ed4:	df000415 	stw	fp,16(sp)
  819ed8:	df000404 	addi	fp,sp,16
  819edc:	e13ffd15 	stw	r4,-12(fp)
  819ee0:	e17ffe15 	stw	r5,-8(fp)
  819ee4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  819ee8:	e0bffd17 	ldw	r2,-12(fp)
  819eec:	10800017 	ldw	r2,0(r2)
  819ef0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
  819ef4:	e0bffc17 	ldw	r2,-16(fp)
  819ef8:	10c00a04 	addi	r3,r2,40
  819efc:	e0bffd17 	ldw	r2,-12(fp)
  819f00:	10800217 	ldw	r2,8(r2)
  819f04:	1809883a 	mov	r4,r3
  819f08:	e17ffe17 	ldw	r5,-8(fp)
  819f0c:	e1bfff17 	ldw	r6,-4(fp)
  819f10:	100f883a 	mov	r7,r2
  819f14:	081a5ac0 	call	81a5ac <altera_avalon_uart_write>
      fd->fd_flags);
}
  819f18:	e037883a 	mov	sp,fp
  819f1c:	dfc00117 	ldw	ra,4(sp)
  819f20:	df000017 	ldw	fp,0(sp)
  819f24:	dec00204 	addi	sp,sp,8
  819f28:	f800283a 	ret

00819f2c <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
  819f2c:	defffc04 	addi	sp,sp,-16
  819f30:	dfc00315 	stw	ra,12(sp)
  819f34:	df000215 	stw	fp,8(sp)
  819f38:	df000204 	addi	fp,sp,8
  819f3c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  819f40:	e0bfff17 	ldw	r2,-4(fp)
  819f44:	10800017 	ldw	r2,0(r2)
  819f48:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
  819f4c:	e0bffe17 	ldw	r2,-8(fp)
  819f50:	10c00a04 	addi	r3,r2,40
  819f54:	e0bfff17 	ldw	r2,-4(fp)
  819f58:	10800217 	ldw	r2,8(r2)
  819f5c:	1809883a 	mov	r4,r3
  819f60:	100b883a 	mov	r5,r2
  819f64:	081a2dc0 	call	81a2dc <altera_avalon_uart_close>
}
  819f68:	e037883a 	mov	sp,fp
  819f6c:	dfc00117 	ldw	ra,4(sp)
  819f70:	df000017 	ldw	fp,0(sp)
  819f74:	dec00204 	addi	sp,sp,8
  819f78:	f800283a 	ret

00819f7c <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
  819f7c:	defff904 	addi	sp,sp,-28
  819f80:	dfc00615 	stw	ra,24(sp)
  819f84:	df000515 	stw	fp,20(sp)
  819f88:	df000504 	addi	fp,sp,20
  819f8c:	e13ffd15 	stw	r4,-12(fp)
  819f90:	e17ffe15 	stw	r5,-8(fp)
  819f94:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  819f98:	e0bffd17 	ldw	r2,-12(fp)
  819f9c:	10800017 	ldw	r2,0(r2)
  819fa0:	e0bffb15 	stw	r2,-20(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  819fa4:	0005883a 	mov	r2,zero
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  819fa8:	1000041e 	bne	r2,zero,819fbc <altera_avalon_uart_init+0x40>
  819fac:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  819fb0:	1000021e 	bne	r2,zero,819fbc <altera_avalon_uart_init+0x40>
  819fb4:	0005883a 	mov	r2,zero
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  819fb8:	10000226 	beq	r2,zero,819fc4 <altera_avalon_uart_init+0x48>
  819fbc:	00800044 	movi	r2,1
  819fc0:	00000106 	br	819fc8 <altera_avalon_uart_init+0x4c>
  819fc4:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  819fc8:	e0bffc15 	stw	r2,-16(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  819fcc:	e0bffc17 	ldw	r2,-16(fp)
  819fd0:	10000d1e 	bne	r2,zero,81a008 <altera_avalon_uart_init+0x8c>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
  819fd4:	e0bffd17 	ldw	r2,-12(fp)
  819fd8:	00c32004 	movi	r3,3200
  819fdc:	10c00115 	stw	r3,4(r2)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
  819fe0:	e0bffb17 	ldw	r2,-20(fp)
  819fe4:	10800304 	addi	r2,r2,12
  819fe8:	e0fffd17 	ldw	r3,-12(fp)
  819fec:	18c00117 	ldw	r3,4(r3)
  819ff0:	10c00035 	stwio	r3,0(r2)
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
  819ff4:	e13fff17 	ldw	r4,-4(fp)
  819ff8:	e17ffd17 	ldw	r5,-12(fp)
  819ffc:	018020b4 	movhi	r6,130
  81a000:	31a80704 	addi	r6,r6,-24548
  81a004:	08177980 	call	817798 <alt_irq_register>
#endif  
  }
}
  81a008:	e037883a 	mov	sp,fp
  81a00c:	dfc00117 	ldw	ra,4(sp)
  81a010:	df000017 	ldw	fp,0(sp)
  81a014:	dec00204 	addi	sp,sp,8
  81a018:	f800283a 	ret

0081a01c <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  81a01c:	defff904 	addi	sp,sp,-28
  81a020:	dfc00615 	stw	ra,24(sp)
  81a024:	df000515 	stw	fp,20(sp)
  81a028:	df000504 	addi	fp,sp,20
  81a02c:	e13ffe15 	stw	r4,-8(fp)
  81a030:	e17fff15 	stw	r5,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
  81a034:	e0bffe17 	ldw	r2,-8(fp)
  81a038:	e0bffb15 	stw	r2,-20(fp)
  void* base               = sp->base;
  81a03c:	e0bffb17 	ldw	r2,-20(fp)
  81a040:	10800017 	ldw	r2,0(r2)
  81a044:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
  81a048:	e0bffc17 	ldw	r2,-16(fp)
  81a04c:	10800204 	addi	r2,r2,8
  81a050:	10800037 	ldwio	r2,0(r2)
  81a054:	e0bffd15 	stw	r2,-12(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
  81a058:	e0bffc17 	ldw	r2,-16(fp)
  81a05c:	10800204 	addi	r2,r2,8
  81a060:	0007883a 	mov	r3,zero
  81a064:	10c00035 	stwio	r3,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
  81a068:	e0bffc17 	ldw	r2,-16(fp)
  81a06c:	10800204 	addi	r2,r2,8
  81a070:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
  81a074:	e0bffd17 	ldw	r2,-12(fp)
  81a078:	1080200c 	andi	r2,r2,128
  81a07c:	10000326 	beq	r2,zero,81a08c <altera_avalon_uart_irq+0x70>
  {
    altera_avalon_uart_rxirq(sp, status);
  81a080:	e13ffb17 	ldw	r4,-20(fp)
  81a084:	e17ffd17 	ldw	r5,-12(fp)
  81a088:	081a0b80 	call	81a0b8 <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
  81a08c:	e0bffd17 	ldw	r2,-12(fp)
  81a090:	1081100c 	andi	r2,r2,1088
  81a094:	10000326 	beq	r2,zero,81a0a4 <altera_avalon_uart_irq+0x88>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
  81a098:	e13ffb17 	ldw	r4,-20(fp)
  81a09c:	e17ffd17 	ldw	r5,-12(fp)
  81a0a0:	081a1980 	call	81a198 <altera_avalon_uart_txirq>
  }
  

}
  81a0a4:	e037883a 	mov	sp,fp
  81a0a8:	dfc00117 	ldw	ra,4(sp)
  81a0ac:	df000017 	ldw	fp,0(sp)
  81a0b0:	dec00204 	addi	sp,sp,8
  81a0b4:	f800283a 	ret

0081a0b8 <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  81a0b8:	defffc04 	addi	sp,sp,-16
  81a0bc:	df000315 	stw	fp,12(sp)
  81a0c0:	df000304 	addi	fp,sp,12
  81a0c4:	e13ffe15 	stw	r4,-8(fp)
  81a0c8:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
  81a0cc:	e0bfff17 	ldw	r2,-4(fp)
  81a0d0:	108000cc 	andi	r2,r2,3
  81a0d4:	10000126 	beq	r2,zero,81a0dc <altera_avalon_uart_rxirq+0x24>
                  ALTERA_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  81a0d8:	00002b06 	br	81a188 <altera_avalon_uart_rxirq+0xd0>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
  81a0dc:	e0bffe17 	ldw	r2,-8(fp)
  81a0e0:	10800317 	ldw	r2,12(r2)
  81a0e4:	e0bffe17 	ldw	r2,-8(fp)
  81a0e8:	10800217 	ldw	r2,8(r2)
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81a0ec:	e0bffe17 	ldw	r2,-8(fp)
  81a0f0:	10800317 	ldw	r2,12(r2)
  81a0f4:	10800044 	addi	r2,r2,1
  81a0f8:	10800fcc 	andi	r2,r2,63
  81a0fc:	e0bffd15 	stw	r2,-12(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
  81a100:	e0bffe17 	ldw	r2,-8(fp)
  81a104:	10800317 	ldw	r2,12(r2)
  81a108:	e0fffe17 	ldw	r3,-8(fp)
  81a10c:	18c00017 	ldw	r3,0(r3)
  81a110:	18c00037 	ldwio	r3,0(r3)
  81a114:	1809883a 	mov	r4,r3
  81a118:	e0fffe17 	ldw	r3,-8(fp)
  81a11c:	1885883a 	add	r2,r3,r2
  81a120:	10800704 	addi	r2,r2,28
  81a124:	11000005 	stb	r4,0(r2)

  sp->rx_end = next;
  81a128:	e0bffe17 	ldw	r2,-8(fp)
  81a12c:	e0fffd17 	ldw	r3,-12(fp)
  81a130:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81a134:	e0bffe17 	ldw	r2,-8(fp)
  81a138:	10800317 	ldw	r2,12(r2)
  81a13c:	10800044 	addi	r2,r2,1
  81a140:	10800fcc 	andi	r2,r2,63
  81a144:	e0bffd15 	stw	r2,-12(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  81a148:	e0bffe17 	ldw	r2,-8(fp)
  81a14c:	10c00217 	ldw	r3,8(r2)
  81a150:	e0bffd17 	ldw	r2,-12(fp)
  81a154:	18800c1e 	bne	r3,r2,81a188 <altera_avalon_uart_rxirq+0xd0>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81a158:	e0bffe17 	ldw	r2,-8(fp)
  81a15c:	10c00117 	ldw	r3,4(r2)
  81a160:	00bfdfc4 	movi	r2,-129
  81a164:	1886703a 	and	r3,r3,r2
  81a168:	e0bffe17 	ldw	r2,-8(fp)
  81a16c:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  81a170:	e0bffe17 	ldw	r2,-8(fp)
  81a174:	10800017 	ldw	r2,0(r2)
  81a178:	10800304 	addi	r2,r2,12
  81a17c:	e0fffe17 	ldw	r3,-8(fp)
  81a180:	18c00117 	ldw	r3,4(r3)
  81a184:	10c00035 	stwio	r3,0(r2)
  }   
}
  81a188:	e037883a 	mov	sp,fp
  81a18c:	df000017 	ldw	fp,0(sp)
  81a190:	dec00104 	addi	sp,sp,4
  81a194:	f800283a 	ret

0081a198 <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  81a198:	defffb04 	addi	sp,sp,-20
  81a19c:	df000415 	stw	fp,16(sp)
  81a1a0:	df000404 	addi	fp,sp,16
  81a1a4:	e13ffc15 	stw	r4,-16(fp)
  81a1a8:	e17ffd15 	stw	r5,-12(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  81a1ac:	e0bffc17 	ldw	r2,-16(fp)
  81a1b0:	10c00417 	ldw	r3,16(r2)
  81a1b4:	e0bffc17 	ldw	r2,-16(fp)
  81a1b8:	10800517 	ldw	r2,20(r2)
  81a1bc:	18803226 	beq	r3,r2,81a288 <altera_avalon_uart_txirq+0xf0>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  81a1c0:	e0bffc17 	ldw	r2,-16(fp)
  81a1c4:	10800617 	ldw	r2,24(r2)
  81a1c8:	1080008c 	andi	r2,r2,2
  81a1cc:	10000326 	beq	r2,zero,81a1dc <altera_avalon_uart_txirq+0x44>
      (status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  81a1d0:	e0bffd17 	ldw	r2,-12(fp)
  81a1d4:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  81a1d8:	10001d26 	beq	r2,zero,81a250 <altera_avalon_uart_txirq+0xb8>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
  81a1dc:	e0bffc17 	ldw	r2,-16(fp)
  81a1e0:	10800417 	ldw	r2,16(r2)
  81a1e4:	e0bffc17 	ldw	r2,-16(fp)
  81a1e8:	10800517 	ldw	r2,20(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  81a1ec:	e0bffc17 	ldw	r2,-16(fp)
  81a1f0:	10800017 	ldw	r2,0(r2)
  81a1f4:	10800104 	addi	r2,r2,4
  81a1f8:	e0fffc17 	ldw	r3,-16(fp)
  81a1fc:	18c00417 	ldw	r3,16(r3)
  81a200:	e13ffc17 	ldw	r4,-16(fp)
  81a204:	20c7883a 	add	r3,r4,r3
  81a208:	18c01704 	addi	r3,r3,92
  81a20c:	18c00003 	ldbu	r3,0(r3)
  81a210:	18c03fcc 	andi	r3,r3,255
  81a214:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
  81a218:	e0bffc17 	ldw	r2,-16(fp)
  81a21c:	10800417 	ldw	r2,16(r2)
  81a220:	10800044 	addi	r2,r2,1
  81a224:	e0fffc17 	ldw	r3,-16(fp)
  81a228:	18800415 	stw	r2,16(r3)
  81a22c:	10c00fcc 	andi	r3,r2,63
  81a230:	e0bffc17 	ldw	r2,-16(fp)
  81a234:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  81a238:	e0bffc17 	ldw	r2,-16(fp)
  81a23c:	10800117 	ldw	r2,4(r2)
  81a240:	10c01014 	ori	r3,r2,64
  81a244:	e0bffc17 	ldw	r2,-16(fp)
  81a248:	10c00115 	stw	r3,4(r2)
  81a24c:	00000e06 	br	81a288 <altera_avalon_uart_txirq+0xf0>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
  81a250:	e0bffc17 	ldw	r2,-16(fp)
  81a254:	10800017 	ldw	r2,0(r2)
  81a258:	10800204 	addi	r2,r2,8
  81a25c:	10800037 	ldwio	r2,0(r2)
  81a260:	e0bffd15 	stw	r2,-12(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  81a264:	e0bffd17 	ldw	r2,-12(fp)
  81a268:	1082000c 	andi	r2,r2,2048
  81a26c:	1000061e 	bne	r2,zero,81a288 <altera_avalon_uart_txirq+0xf0>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  81a270:	e0bffc17 	ldw	r2,-16(fp)
  81a274:	10c00117 	ldw	r3,4(r2)
  81a278:	00bfefc4 	movi	r2,-65
  81a27c:	1886703a 	and	r3,r3,r2
  81a280:	e0bffc17 	ldw	r2,-16(fp)
  81a284:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  81a288:	e0bffc17 	ldw	r2,-16(fp)
  81a28c:	10c00417 	ldw	r3,16(r2)
  81a290:	e0bffc17 	ldw	r2,-16(fp)
  81a294:	10800517 	ldw	r2,20(r2)
  81a298:	1880061e 	bne	r3,r2,81a2b4 <altera_avalon_uart_txirq+0x11c>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81a29c:	e0bffc17 	ldw	r2,-16(fp)
  81a2a0:	10c00117 	ldw	r3,4(r2)
  81a2a4:	00beefc4 	movi	r2,-1089
  81a2a8:	1886703a 	and	r3,r3,r2
  81a2ac:	e0bffc17 	ldw	r2,-16(fp)
  81a2b0:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81a2b4:	e0bffc17 	ldw	r2,-16(fp)
  81a2b8:	10800017 	ldw	r2,0(r2)
  81a2bc:	10800304 	addi	r2,r2,12
  81a2c0:	e0fffc17 	ldw	r3,-16(fp)
  81a2c4:	18c00117 	ldw	r3,4(r3)
  81a2c8:	10c00035 	stwio	r3,0(r2)
}
  81a2cc:	e037883a 	mov	sp,fp
  81a2d0:	df000017 	ldw	fp,0(sp)
  81a2d4:	dec00104 	addi	sp,sp,4
  81a2d8:	f800283a 	ret

0081a2dc <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  81a2dc:	defffd04 	addi	sp,sp,-12
  81a2e0:	df000215 	stw	fp,8(sp)
  81a2e4:	df000204 	addi	fp,sp,8
  81a2e8:	e13ffe15 	stw	r4,-8(fp)
  81a2ec:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  81a2f0:	00000506 	br	81a308 <altera_avalon_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  81a2f4:	e0bfff17 	ldw	r2,-4(fp)
  81a2f8:	1090000c 	andi	r2,r2,16384
  81a2fc:	10000226 	beq	r2,zero,81a308 <altera_avalon_uart_close+0x2c>
      return -EWOULDBLOCK; 
  81a300:	00bffd44 	movi	r2,-11
  81a304:	00000606 	br	81a320 <altera_avalon_uart_close+0x44>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  81a308:	e0bffe17 	ldw	r2,-8(fp)
  81a30c:	10c00417 	ldw	r3,16(r2)
  81a310:	e0bffe17 	ldw	r2,-8(fp)
  81a314:	10800517 	ldw	r2,20(r2)
  81a318:	18bff61e 	bne	r3,r2,81a2f4 <__alt_data_end+0xff81a2f4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  81a31c:	0005883a 	mov	r2,zero
}
  81a320:	e037883a 	mov	sp,fp
  81a324:	df000017 	ldw	fp,0(sp)
  81a328:	dec00104 	addi	sp,sp,4
  81a32c:	f800283a 	ret

0081a330 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81a330:	defffe04 	addi	sp,sp,-8
  81a334:	dfc00115 	stw	ra,4(sp)
  81a338:	df000015 	stw	fp,0(sp)
  81a33c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81a340:	008020b4 	movhi	r2,130
  81a344:	10b80404 	addi	r2,r2,-8176
  81a348:	10800017 	ldw	r2,0(r2)
  81a34c:	10000526 	beq	r2,zero,81a364 <alt_get_errno+0x34>
  81a350:	008020b4 	movhi	r2,130
  81a354:	10b80404 	addi	r2,r2,-8176
  81a358:	10800017 	ldw	r2,0(r2)
  81a35c:	103ee83a 	callr	r2
  81a360:	00000206 	br	81a36c <alt_get_errno+0x3c>
  81a364:	008020b4 	movhi	r2,130
  81a368:	10bf6304 	addi	r2,r2,-628
}
  81a36c:	e037883a 	mov	sp,fp
  81a370:	dfc00117 	ldw	ra,4(sp)
  81a374:	df000017 	ldw	fp,0(sp)
  81a378:	dec00204 	addi	sp,sp,8
  81a37c:	f800283a 	ret

0081a380 <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
  81a380:	defff204 	addi	sp,sp,-56
  81a384:	dfc00d15 	stw	ra,52(sp)
  81a388:	df000c15 	stw	fp,48(sp)
  81a38c:	df000c04 	addi	fp,sp,48
  81a390:	e13ffc15 	stw	r4,-16(fp)
  81a394:	e17ffd15 	stw	r5,-12(fp)
  81a398:	e1bffe15 	stw	r6,-8(fp)
  81a39c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
  alt_u8          read_would_block = 0;
  81a3a0:	e03ff405 	stb	zero,-48(fp)
  int             count = 0;
  81a3a4:	e03ff515 	stw	zero,-44(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  81a3a8:	e0bfff17 	ldw	r2,-4(fp)
  81a3ac:	1090000c 	andi	r2,r2,16384
  81a3b0:	1005003a 	cmpeq	r2,r2,zero
  81a3b4:	10803fcc 	andi	r2,r2,255
  81a3b8:	e0bff615 	stw	r2,-40(fp)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  81a3bc:	00001306 	br	81a40c <altera_avalon_uart_read+0x8c>
    {
      count++;
  81a3c0:	e0bff517 	ldw	r2,-44(fp)
  81a3c4:	10800044 	addi	r2,r2,1
  81a3c8:	e0bff515 	stw	r2,-44(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  81a3cc:	e0bffd17 	ldw	r2,-12(fp)
  81a3d0:	10c00044 	addi	r3,r2,1
  81a3d4:	e0fffd15 	stw	r3,-12(fp)
  81a3d8:	e0fffc17 	ldw	r3,-16(fp)
  81a3dc:	18c00217 	ldw	r3,8(r3)
  81a3e0:	e13ffc17 	ldw	r4,-16(fp)
  81a3e4:	20c7883a 	add	r3,r4,r3
  81a3e8:	18c00704 	addi	r3,r3,28
  81a3ec:	18c00003 	ldbu	r3,0(r3)
  81a3f0:	10c00005 	stb	r3,0(r2)
      
      sp->rx_start = (sp->rx_start+1) & ALT_AVALON_UART_BUF_MSK;
  81a3f4:	e0bffc17 	ldw	r2,-16(fp)
  81a3f8:	10800217 	ldw	r2,8(r2)
  81a3fc:	10800044 	addi	r2,r2,1
  81a400:	10c00fcc 	andi	r3,r2,63
  81a404:	e0bffc17 	ldw	r2,-16(fp)
  81a408:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  81a40c:	e0fff517 	ldw	r3,-44(fp)
  81a410:	e0bffe17 	ldw	r2,-8(fp)
  81a414:	1880050e 	bge	r3,r2,81a42c <altera_avalon_uart_read+0xac>
  81a418:	e0bffc17 	ldw	r2,-16(fp)
  81a41c:	10c00217 	ldw	r3,8(r2)
  81a420:	e0bffc17 	ldw	r2,-16(fp)
  81a424:	10800317 	ldw	r2,12(r2)
  81a428:	18bfe51e 	bne	r3,r2,81a3c0 <__alt_data_end+0xff81a3c0>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  81a42c:	e0bff517 	ldw	r2,-44(fp)
  81a430:	1000251e 	bne	r2,zero,81a4c8 <altera_avalon_uart_read+0x148>
  81a434:	e0bffc17 	ldw	r2,-16(fp)
  81a438:	10c00217 	ldw	r3,8(r2)
  81a43c:	e0bffc17 	ldw	r2,-16(fp)
  81a440:	10800317 	ldw	r2,12(r2)
  81a444:	1880201e 	bne	r3,r2,81a4c8 <altera_avalon_uart_read+0x148>
    {
      if (!block)
  81a448:	e0bff617 	ldw	r2,-40(fp)
  81a44c:	1000071e 	bne	r2,zero,81a46c <altera_avalon_uart_read+0xec>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  81a450:	081a3300 	call	81a330 <alt_get_errno>
  81a454:	1007883a 	mov	r3,r2
  81a458:	008002c4 	movi	r2,11
  81a45c:	18800015 	stw	r2,0(r3)
        read_would_block = 1;
  81a460:	00800044 	movi	r2,1
  81a464:	e0bff405 	stb	r2,-48(fp)
        break;
  81a468:	00001b06 	br	81a4d8 <altera_avalon_uart_read+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a46c:	0005303a 	rdctl	r2,status
  81a470:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a474:	e0fff817 	ldw	r3,-32(fp)
  81a478:	00bfff84 	movi	r2,-2
  81a47c:	1884703a 	and	r2,r3,r2
  81a480:	1001703a 	wrctl	status,r2
  
  return context;
  81a484:	e0bff817 	ldw	r2,-32(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  81a488:	e0bff715 	stw	r2,-36(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81a48c:	e0bffc17 	ldw	r2,-16(fp)
  81a490:	10800117 	ldw	r2,4(r2)
  81a494:	10c02014 	ori	r3,r2,128
  81a498:	e0bffc17 	ldw	r2,-16(fp)
  81a49c:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81a4a0:	e0bffc17 	ldw	r2,-16(fp)
  81a4a4:	10800017 	ldw	r2,0(r2)
  81a4a8:	10800304 	addi	r2,r2,12
  81a4ac:	e0fffc17 	ldw	r3,-16(fp)
  81a4b0:	18c00117 	ldw	r3,4(r3)
  81a4b4:	10c00035 	stwio	r3,0(r2)
  81a4b8:	e0bff717 	ldw	r2,-36(fp)
  81a4bc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a4c0:	e0bff917 	ldw	r2,-28(fp)
  81a4c4:	1001703a 	wrctl	status,r2
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  81a4c8:	e0bff517 	ldw	r2,-44(fp)
  81a4cc:	1000021e 	bne	r2,zero,81a4d8 <altera_avalon_uart_read+0x158>
  81a4d0:	e0bffe17 	ldw	r2,-8(fp)
  81a4d4:	103fb91e 	bne	r2,zero,81a3bc <__alt_data_end+0xff81a3bc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a4d8:	0005303a 	rdctl	r2,status
  81a4dc:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a4e0:	e0fffa17 	ldw	r3,-24(fp)
  81a4e4:	00bfff84 	movi	r2,-2
  81a4e8:	1884703a 	and	r2,r3,r2
  81a4ec:	1001703a 	wrctl	status,r2
  
  return context;
  81a4f0:	e0bffa17 	ldw	r2,-24(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  81a4f4:	e0bff715 	stw	r2,-36(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81a4f8:	e0bffc17 	ldw	r2,-16(fp)
  81a4fc:	10800117 	ldw	r2,4(r2)
  81a500:	10c02014 	ori	r3,r2,128
  81a504:	e0bffc17 	ldw	r2,-16(fp)
  81a508:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81a50c:	e0bffc17 	ldw	r2,-16(fp)
  81a510:	10800017 	ldw	r2,0(r2)
  81a514:	10800304 	addi	r2,r2,12
  81a518:	e0fffc17 	ldw	r3,-16(fp)
  81a51c:	18c00117 	ldw	r3,4(r3)
  81a520:	10c00035 	stwio	r3,0(r2)
  81a524:	e0bff717 	ldw	r2,-36(fp)
  81a528:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a52c:	e0bffb17 	ldw	r2,-20(fp)
  81a530:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
  81a534:	e0bff403 	ldbu	r2,-48(fp)
  81a538:	10000226 	beq	r2,zero,81a544 <altera_avalon_uart_read+0x1c4>
    return -EWOULDBLOCK;
  81a53c:	00bffd44 	movi	r2,-11
  81a540:	00000106 	br	81a548 <altera_avalon_uart_read+0x1c8>
  }
  else {
    return count;
  81a544:	e0bff517 	ldw	r2,-44(fp)
  }
}
  81a548:	e037883a 	mov	sp,fp
  81a54c:	dfc00117 	ldw	ra,4(sp)
  81a550:	df000017 	ldw	fp,0(sp)
  81a554:	dec00204 	addi	sp,sp,8
  81a558:	f800283a 	ret

0081a55c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81a55c:	defffe04 	addi	sp,sp,-8
  81a560:	dfc00115 	stw	ra,4(sp)
  81a564:	df000015 	stw	fp,0(sp)
  81a568:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81a56c:	008020b4 	movhi	r2,130
  81a570:	10b80404 	addi	r2,r2,-8176
  81a574:	10800017 	ldw	r2,0(r2)
  81a578:	10000526 	beq	r2,zero,81a590 <alt_get_errno+0x34>
  81a57c:	008020b4 	movhi	r2,130
  81a580:	10b80404 	addi	r2,r2,-8176
  81a584:	10800017 	ldw	r2,0(r2)
  81a588:	103ee83a 	callr	r2
  81a58c:	00000206 	br	81a598 <alt_get_errno+0x3c>
  81a590:	008020b4 	movhi	r2,130
  81a594:	10bf6304 	addi	r2,r2,-628
}
  81a598:	e037883a 	mov	sp,fp
  81a59c:	dfc00117 	ldw	ra,4(sp)
  81a5a0:	df000017 	ldw	fp,0(sp)
  81a5a4:	dec00204 	addi	sp,sp,8
  81a5a8:	f800283a 	ret

0081a5ac <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
  81a5ac:	defff204 	addi	sp,sp,-56
  81a5b0:	dfc00d15 	stw	ra,52(sp)
  81a5b4:	df000c15 	stw	fp,48(sp)
  81a5b8:	df000c04 	addi	fp,sp,48
  81a5bc:	e13ffc15 	stw	r4,-16(fp)
  81a5c0:	e17ffd15 	stw	r5,-12(fp)
  81a5c4:	e1bffe15 	stw	r6,-8(fp)
  81a5c8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
  81a5cc:	e0bffe17 	ldw	r2,-8(fp)
  81a5d0:	e0bff415 	stw	r2,-48(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  81a5d4:	e0bfff17 	ldw	r2,-4(fp)
  81a5d8:	1090000c 	andi	r2,r2,16384
  81a5dc:	e0bff515 	stw	r2,-44(fp)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  81a5e0:	00003c06 	br	81a6d4 <altera_avalon_uart_write+0x128>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81a5e4:	e0bffc17 	ldw	r2,-16(fp)
  81a5e8:	10800517 	ldw	r2,20(r2)
  81a5ec:	10800044 	addi	r2,r2,1
  81a5f0:	10800fcc 	andi	r2,r2,63
  81a5f4:	e0bff615 	stw	r2,-40(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  81a5f8:	e0bffc17 	ldw	r2,-16(fp)
  81a5fc:	10c00417 	ldw	r3,16(r2)
  81a600:	e0bff617 	ldw	r2,-40(fp)
  81a604:	1880221e 	bne	r3,r2,81a690 <altera_avalon_uart_write+0xe4>
    {
      if (no_block)
  81a608:	e0bff517 	ldw	r2,-44(fp)
  81a60c:	10000526 	beq	r2,zero,81a624 <altera_avalon_uart_write+0x78>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  81a610:	081a55c0 	call	81a55c <alt_get_errno>
  81a614:	1007883a 	mov	r3,r2
  81a618:	008002c4 	movi	r2,11
  81a61c:	18800015 	stw	r2,0(r3)
        break;
  81a620:	00002e06 	br	81a6dc <altera_avalon_uart_write+0x130>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a624:	0005303a 	rdctl	r2,status
  81a628:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a62c:	e0fff817 	ldw	r3,-32(fp)
  81a630:	00bfff84 	movi	r2,-2
  81a634:	1884703a 	and	r2,r3,r2
  81a638:	1001703a 	wrctl	status,r2
  
  return context;
  81a63c:	e0bff817 	ldw	r2,-32(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  81a640:	e0bff715 	stw	r2,-36(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81a644:	e0bffc17 	ldw	r2,-16(fp)
  81a648:	10800117 	ldw	r2,4(r2)
  81a64c:	10c11014 	ori	r3,r2,1088
  81a650:	e0bffc17 	ldw	r2,-16(fp)
  81a654:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81a658:	e0bffc17 	ldw	r2,-16(fp)
  81a65c:	10800017 	ldw	r2,0(r2)
  81a660:	10800304 	addi	r2,r2,12
  81a664:	e0fffc17 	ldw	r3,-16(fp)
  81a668:	18c00117 	ldw	r3,4(r3)
  81a66c:	10c00035 	stwio	r3,0(r2)
  81a670:	e0bff717 	ldw	r2,-36(fp)
  81a674:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a678:	e0bff917 	ldw	r2,-28(fp)
  81a67c:	1001703a 	wrctl	status,r2
          ALT_FLAG_PEND (sp->events, 
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  81a680:	e0bffc17 	ldw	r2,-16(fp)
  81a684:	10c00417 	ldw	r3,16(r2)
  81a688:	e0bff617 	ldw	r2,-40(fp)
  81a68c:	18bffc26 	beq	r3,r2,81a680 <__alt_data_end+0xff81a680>
      }
    }

    count--;
  81a690:	e0bff417 	ldw	r2,-48(fp)
  81a694:	10bfffc4 	addi	r2,r2,-1
  81a698:	e0bff415 	stw	r2,-48(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  81a69c:	e0bffc17 	ldw	r2,-16(fp)
  81a6a0:	10c00517 	ldw	r3,20(r2)
  81a6a4:	e0bffd17 	ldw	r2,-12(fp)
  81a6a8:	11000044 	addi	r4,r2,1
  81a6ac:	e13ffd15 	stw	r4,-12(fp)
  81a6b0:	10800003 	ldbu	r2,0(r2)
  81a6b4:	1009883a 	mov	r4,r2
  81a6b8:	e0bffc17 	ldw	r2,-16(fp)
  81a6bc:	10c5883a 	add	r2,r2,r3
  81a6c0:	10801704 	addi	r2,r2,92
  81a6c4:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  81a6c8:	e0bffc17 	ldw	r2,-16(fp)
  81a6cc:	e0fff617 	ldw	r3,-40(fp)
  81a6d0:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  81a6d4:	e0bff417 	ldw	r2,-48(fp)
  81a6d8:	103fc21e 	bne	r2,zero,81a5e4 <__alt_data_end+0xff81a5e4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a6dc:	0005303a 	rdctl	r2,status
  81a6e0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a6e4:	e0fffa17 	ldw	r3,-24(fp)
  81a6e8:	00bfff84 	movi	r2,-2
  81a6ec:	1884703a 	and	r2,r3,r2
  81a6f0:	1001703a 	wrctl	status,r2
  
  return context;
  81a6f4:	e0bffa17 	ldw	r2,-24(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  81a6f8:	e0bff715 	stw	r2,-36(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81a6fc:	e0bffc17 	ldw	r2,-16(fp)
  81a700:	10800117 	ldw	r2,4(r2)
  81a704:	10c11014 	ori	r3,r2,1088
  81a708:	e0bffc17 	ldw	r2,-16(fp)
  81a70c:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81a710:	e0bffc17 	ldw	r2,-16(fp)
  81a714:	10800017 	ldw	r2,0(r2)
  81a718:	10800304 	addi	r2,r2,12
  81a71c:	e0fffc17 	ldw	r3,-16(fp)
  81a720:	18c00117 	ldw	r3,4(r3)
  81a724:	10c00035 	stwio	r3,0(r2)
  81a728:	e0bff717 	ldw	r2,-36(fp)
  81a72c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a730:	e0bffb17 	ldw	r2,-20(fp)
  81a734:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  81a738:	e0fffe17 	ldw	r3,-8(fp)
  81a73c:	e0bff417 	ldw	r2,-48(fp)
  81a740:	1885c83a 	sub	r2,r3,r2
}
  81a744:	e037883a 	mov	sp,fp
  81a748:	dfc00117 	ldw	ra,4(sp)
  81a74c:	df000017 	ldw	fp,0(sp)
  81a750:	dec00204 	addi	sp,sp,8
  81a754:	f800283a 	ret

0081a758 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  81a758:	defff504 	addi	sp,sp,-44
  81a75c:	df000a15 	stw	fp,40(sp)
  81a760:	df000a04 	addi	fp,sp,40
  81a764:	e13ffc15 	stw	r4,-16(fp)
  81a768:	e17ffd15 	stw	r5,-12(fp)
  81a76c:	e1bffe15 	stw	r6,-8(fp)
  81a770:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  81a774:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  81a778:	008020b4 	movhi	r2,130
  81a77c:	10bf6e04 	addi	r2,r2,-584
  81a780:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
  81a784:	10003f26 	beq	r2,zero,81a884 <alt_alarm_start+0x12c>
  {
    if (alarm)
  81a788:	e0bffc17 	ldw	r2,-16(fp)
  81a78c:	10003b26 	beq	r2,zero,81a87c <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
  81a790:	e0bffc17 	ldw	r2,-16(fp)
  81a794:	e0fffe17 	ldw	r3,-8(fp)
  81a798:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  81a79c:	e0bffc17 	ldw	r2,-16(fp)
  81a7a0:	e0ffff17 	ldw	r3,-4(fp)
  81a7a4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a7a8:	0005303a 	rdctl	r2,status
  81a7ac:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a7b0:	e0fff817 	ldw	r3,-32(fp)
  81a7b4:	00bfff84 	movi	r2,-2
  81a7b8:	1884703a 	and	r2,r3,r2
  81a7bc:	1001703a 	wrctl	status,r2
  
  return context;
  81a7c0:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
  81a7c4:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  81a7c8:	008020b4 	movhi	r2,130
  81a7cc:	10bf6f04 	addi	r2,r2,-580
  81a7d0:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
  81a7d4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  81a7d8:	e0fffd17 	ldw	r3,-12(fp)
  81a7dc:	e0bff617 	ldw	r2,-40(fp)
  81a7e0:	1885883a 	add	r2,r3,r2
  81a7e4:	10c00044 	addi	r3,r2,1
  81a7e8:	e0bffc17 	ldw	r2,-16(fp)
  81a7ec:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  81a7f0:	e0bffc17 	ldw	r2,-16(fp)
  81a7f4:	10c00217 	ldw	r3,8(r2)
  81a7f8:	e0bff617 	ldw	r2,-40(fp)
  81a7fc:	1880042e 	bgeu	r3,r2,81a810 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
  81a800:	e0bffc17 	ldw	r2,-16(fp)
  81a804:	00c00044 	movi	r3,1
  81a808:	10c00405 	stb	r3,16(r2)
  81a80c:	00000206 	br	81a818 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
  81a810:	e0bffc17 	ldw	r2,-16(fp)
  81a814:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  81a818:	e0fffc17 	ldw	r3,-16(fp)
  81a81c:	008020b4 	movhi	r2,130
  81a820:	10b80804 	addi	r2,r2,-8160
  81a824:	e0bff915 	stw	r2,-28(fp)
  81a828:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  81a82c:	e0bffa17 	ldw	r2,-24(fp)
  81a830:	e0fff917 	ldw	r3,-28(fp)
  81a834:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  81a838:	e0bff917 	ldw	r2,-28(fp)
  81a83c:	10c00017 	ldw	r3,0(r2)
  81a840:	e0bffa17 	ldw	r2,-24(fp)
  81a844:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  81a848:	e0bff917 	ldw	r2,-28(fp)
  81a84c:	10800017 	ldw	r2,0(r2)
  81a850:	e0fffa17 	ldw	r3,-24(fp)
  81a854:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  81a858:	e0bff917 	ldw	r2,-28(fp)
  81a85c:	e0fffa17 	ldw	r3,-24(fp)
  81a860:	10c00015 	stw	r3,0(r2)
  81a864:	e0bff717 	ldw	r2,-36(fp)
  81a868:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a86c:	e0bffb17 	ldw	r2,-20(fp)
  81a870:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  81a874:	0005883a 	mov	r2,zero
  81a878:	00000306 	br	81a888 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
  81a87c:	00bffa84 	movi	r2,-22
  81a880:	00000106 	br	81a888 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
  81a884:	00bfde84 	movi	r2,-134
  }
}
  81a888:	e037883a 	mov	sp,fp
  81a88c:	df000017 	ldw	fp,0(sp)
  81a890:	dec00104 	addi	sp,sp,4
  81a894:	f800283a 	ret

0081a898 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
  81a898:	defffa04 	addi	sp,sp,-24
  81a89c:	dfc00515 	stw	ra,20(sp)
  81a8a0:	df000415 	stw	fp,16(sp)
  81a8a4:	df000404 	addi	fp,sp,16
  81a8a8:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
  81a8ac:	008000c4 	movi	r2,3
  81a8b0:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
  81a8b4:	e0fffd17 	ldw	r3,-12(fp)
  81a8b8:	008003f4 	movhi	r2,15
  81a8bc:	10909004 	addi	r2,r2,16960
  81a8c0:	1885383a 	mul	r2,r3,r2
  81a8c4:	0100bef4 	movhi	r4,763
  81a8c8:	213c2004 	addi	r4,r4,-3968
  81a8cc:	100b883a 	mov	r5,r2
  81a8d0:	0814bc00 	call	814bc0 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  81a8d4:	01200034 	movhi	r4,32768
  81a8d8:	213fffc4 	addi	r4,r4,-1
  81a8dc:	100b883a 	mov	r5,r2
  81a8e0:	0814bc00 	call	814bc0 <__udivsi3>
  81a8e4:	e13fff17 	ldw	r4,-4(fp)
  81a8e8:	100b883a 	mov	r5,r2
  81a8ec:	0814bc00 	call	814bc0 <__udivsi3>
  81a8f0:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  81a8f4:	e0bffe17 	ldw	r2,-8(fp)
  81a8f8:	10002a26 	beq	r2,zero,81a9a4 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
  81a8fc:	e03ffc15 	stw	zero,-16(fp)
  81a900:	00001706 	br	81a960 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
  81a904:	00a00034 	movhi	r2,32768
  81a908:	10bfffc4 	addi	r2,r2,-1
  81a90c:	10bfffc4 	addi	r2,r2,-1
  81a910:	103ffe1e 	bne	r2,zero,81a90c <__alt_data_end+0xff81a90c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
  81a914:	e0fffd17 	ldw	r3,-12(fp)
  81a918:	008003f4 	movhi	r2,15
  81a91c:	10909004 	addi	r2,r2,16960
  81a920:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
  81a924:	0100bef4 	movhi	r4,763
  81a928:	213c2004 	addi	r4,r4,-3968
  81a92c:	100b883a 	mov	r5,r2
  81a930:	0814bc00 	call	814bc0 <__udivsi3>
  81a934:	01200034 	movhi	r4,32768
  81a938:	213fffc4 	addi	r4,r4,-1
  81a93c:	100b883a 	mov	r5,r2
  81a940:	0814bc00 	call	814bc0 <__udivsi3>
  81a944:	1007883a 	mov	r3,r2
  81a948:	e0bfff17 	ldw	r2,-4(fp)
  81a94c:	10c5c83a 	sub	r2,r2,r3
  81a950:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
  81a954:	e0bffc17 	ldw	r2,-16(fp)
  81a958:	10800044 	addi	r2,r2,1
  81a95c:	e0bffc15 	stw	r2,-16(fp)
  81a960:	e0fffc17 	ldw	r3,-16(fp)
  81a964:	e0bffe17 	ldw	r2,-8(fp)
  81a968:	18bfe616 	blt	r3,r2,81a904 <__alt_data_end+0xff81a904>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  81a96c:	e0fffd17 	ldw	r3,-12(fp)
  81a970:	008003f4 	movhi	r2,15
  81a974:	10909004 	addi	r2,r2,16960
  81a978:	1885383a 	mul	r2,r3,r2
  81a97c:	0100bef4 	movhi	r4,763
  81a980:	213c2004 	addi	r4,r4,-3968
  81a984:	100b883a 	mov	r5,r2
  81a988:	0814bc00 	call	814bc0 <__udivsi3>
  81a98c:	1007883a 	mov	r3,r2
  81a990:	e0bfff17 	ldw	r2,-4(fp)
  81a994:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  81a998:	10bfffc4 	addi	r2,r2,-1
  81a99c:	103ffe1e 	bne	r2,zero,81a998 <__alt_data_end+0xff81a998>
  81a9a0:	00000d06 	br	81a9d8 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  81a9a4:	e0fffd17 	ldw	r3,-12(fp)
  81a9a8:	008003f4 	movhi	r2,15
  81a9ac:	10909004 	addi	r2,r2,16960
  81a9b0:	1885383a 	mul	r2,r3,r2
  81a9b4:	0100bef4 	movhi	r4,763
  81a9b8:	213c2004 	addi	r4,r4,-3968
  81a9bc:	100b883a 	mov	r5,r2
  81a9c0:	0814bc00 	call	814bc0 <__udivsi3>
  81a9c4:	1007883a 	mov	r3,r2
  81a9c8:	e0bfff17 	ldw	r2,-4(fp)
  81a9cc:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  81a9d0:	10bfffc4 	addi	r2,r2,-1
  81a9d4:	00bffe16 	blt	zero,r2,81a9d0 <__alt_data_end+0xff81a9d0>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
  81a9d8:	0005883a 	mov	r2,zero
}
  81a9dc:	e037883a 	mov	sp,fp
  81a9e0:	dfc00117 	ldw	ra,4(sp)
  81a9e4:	df000017 	ldw	fp,0(sp)
  81a9e8:	dec00204 	addi	sp,sp,8
  81a9ec:	f800283a 	ret

0081a9f0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  81a9f0:	defffe04 	addi	sp,sp,-8
  81a9f4:	df000115 	stw	fp,4(sp)
  81a9f8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81a9fc:	e03fff15 	stw	zero,-4(fp)
  81aa00:	00000506 	br	81aa18 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  81aa04:	e0bfff17 	ldw	r2,-4(fp)
  81aa08:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81aa0c:	e0bfff17 	ldw	r2,-4(fp)
  81aa10:	10800804 	addi	r2,r2,32
  81aa14:	e0bfff15 	stw	r2,-4(fp)
  81aa18:	e0bfff17 	ldw	r2,-4(fp)
  81aa1c:	10820030 	cmpltui	r2,r2,2048
  81aa20:	103ff81e 	bne	r2,zero,81aa04 <__alt_data_end+0xff81aa04>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  81aa24:	e037883a 	mov	sp,fp
  81aa28:	df000017 	ldw	fp,0(sp)
  81aa2c:	dec00104 	addi	sp,sp,4
  81aa30:	f800283a 	ret

0081aa34 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81aa34:	defffe04 	addi	sp,sp,-8
  81aa38:	dfc00115 	stw	ra,4(sp)
  81aa3c:	df000015 	stw	fp,0(sp)
  81aa40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81aa44:	008020b4 	movhi	r2,130
  81aa48:	10b80404 	addi	r2,r2,-8176
  81aa4c:	10800017 	ldw	r2,0(r2)
  81aa50:	10000526 	beq	r2,zero,81aa68 <alt_get_errno+0x34>
  81aa54:	008020b4 	movhi	r2,130
  81aa58:	10b80404 	addi	r2,r2,-8176
  81aa5c:	10800017 	ldw	r2,0(r2)
  81aa60:	103ee83a 	callr	r2
  81aa64:	00000206 	br	81aa70 <alt_get_errno+0x3c>
  81aa68:	008020b4 	movhi	r2,130
  81aa6c:	10bf6304 	addi	r2,r2,-628
}
  81aa70:	e037883a 	mov	sp,fp
  81aa74:	dfc00117 	ldw	ra,4(sp)
  81aa78:	df000017 	ldw	fp,0(sp)
  81aa7c:	dec00204 	addi	sp,sp,8
  81aa80:	f800283a 	ret

0081aa84 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  81aa84:	defffa04 	addi	sp,sp,-24
  81aa88:	dfc00515 	stw	ra,20(sp)
  81aa8c:	df000415 	stw	fp,16(sp)
  81aa90:	df000404 	addi	fp,sp,16
  81aa94:	e13ffe15 	stw	r4,-8(fp)
  81aa98:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  81aa9c:	e0bffe17 	ldw	r2,-8(fp)
  81aaa0:	10000326 	beq	r2,zero,81aab0 <alt_dev_llist_insert+0x2c>
  81aaa4:	e0bffe17 	ldw	r2,-8(fp)
  81aaa8:	10800217 	ldw	r2,8(r2)
  81aaac:	1000061e 	bne	r2,zero,81aac8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  81aab0:	081aa340 	call	81aa34 <alt_get_errno>
  81aab4:	1007883a 	mov	r3,r2
  81aab8:	00800584 	movi	r2,22
  81aabc:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  81aac0:	00bffa84 	movi	r2,-22
  81aac4:	00001306 	br	81ab14 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  81aac8:	e0bffe17 	ldw	r2,-8(fp)
  81aacc:	e0ffff17 	ldw	r3,-4(fp)
  81aad0:	e0fffc15 	stw	r3,-16(fp)
  81aad4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  81aad8:	e0bffd17 	ldw	r2,-12(fp)
  81aadc:	e0fffc17 	ldw	r3,-16(fp)
  81aae0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  81aae4:	e0bffc17 	ldw	r2,-16(fp)
  81aae8:	10c00017 	ldw	r3,0(r2)
  81aaec:	e0bffd17 	ldw	r2,-12(fp)
  81aaf0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  81aaf4:	e0bffc17 	ldw	r2,-16(fp)
  81aaf8:	10800017 	ldw	r2,0(r2)
  81aafc:	e0fffd17 	ldw	r3,-12(fp)
  81ab00:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  81ab04:	e0bffc17 	ldw	r2,-16(fp)
  81ab08:	e0fffd17 	ldw	r3,-12(fp)
  81ab0c:	10c00015 	stw	r3,0(r2)

  return 0;  
  81ab10:	0005883a 	mov	r2,zero
}
  81ab14:	e037883a 	mov	sp,fp
  81ab18:	dfc00117 	ldw	ra,4(sp)
  81ab1c:	df000017 	ldw	fp,0(sp)
  81ab20:	dec00204 	addi	sp,sp,8
  81ab24:	f800283a 	ret

0081ab28 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  81ab28:	defffd04 	addi	sp,sp,-12
  81ab2c:	dfc00215 	stw	ra,8(sp)
  81ab30:	df000115 	stw	fp,4(sp)
  81ab34:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  81ab38:	008020b4 	movhi	r2,130
  81ab3c:	10ad8904 	addi	r2,r2,-18908
  81ab40:	e0bfff15 	stw	r2,-4(fp)
  81ab44:	00000606 	br	81ab60 <_do_ctors+0x38>
        (*ctor) (); 
  81ab48:	e0bfff17 	ldw	r2,-4(fp)
  81ab4c:	10800017 	ldw	r2,0(r2)
  81ab50:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  81ab54:	e0bfff17 	ldw	r2,-4(fp)
  81ab58:	10bfff04 	addi	r2,r2,-4
  81ab5c:	e0bfff15 	stw	r2,-4(fp)
  81ab60:	e0ffff17 	ldw	r3,-4(fp)
  81ab64:	008020b4 	movhi	r2,130
  81ab68:	10ad8a04 	addi	r2,r2,-18904
  81ab6c:	18bff62e 	bgeu	r3,r2,81ab48 <__alt_data_end+0xff81ab48>
        (*ctor) (); 
}
  81ab70:	e037883a 	mov	sp,fp
  81ab74:	dfc00117 	ldw	ra,4(sp)
  81ab78:	df000017 	ldw	fp,0(sp)
  81ab7c:	dec00204 	addi	sp,sp,8
  81ab80:	f800283a 	ret

0081ab84 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  81ab84:	defffd04 	addi	sp,sp,-12
  81ab88:	dfc00215 	stw	ra,8(sp)
  81ab8c:	df000115 	stw	fp,4(sp)
  81ab90:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  81ab94:	008020b4 	movhi	r2,130
  81ab98:	10ad8904 	addi	r2,r2,-18908
  81ab9c:	e0bfff15 	stw	r2,-4(fp)
  81aba0:	00000606 	br	81abbc <_do_dtors+0x38>
        (*dtor) (); 
  81aba4:	e0bfff17 	ldw	r2,-4(fp)
  81aba8:	10800017 	ldw	r2,0(r2)
  81abac:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  81abb0:	e0bfff17 	ldw	r2,-4(fp)
  81abb4:	10bfff04 	addi	r2,r2,-4
  81abb8:	e0bfff15 	stw	r2,-4(fp)
  81abbc:	e0ffff17 	ldw	r3,-4(fp)
  81abc0:	008020b4 	movhi	r2,130
  81abc4:	10ad8a04 	addi	r2,r2,-18904
  81abc8:	18bff62e 	bgeu	r3,r2,81aba4 <__alt_data_end+0xff81aba4>
        (*dtor) (); 
}
  81abcc:	e037883a 	mov	sp,fp
  81abd0:	dfc00117 	ldw	ra,4(sp)
  81abd4:	df000017 	ldw	fp,0(sp)
  81abd8:	dec00204 	addi	sp,sp,8
  81abdc:	f800283a 	ret

0081abe0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  81abe0:	defffa04 	addi	sp,sp,-24
  81abe4:	dfc00515 	stw	ra,20(sp)
  81abe8:	df000415 	stw	fp,16(sp)
  81abec:	df000404 	addi	fp,sp,16
  81abf0:	e13ffe15 	stw	r4,-8(fp)
  81abf4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  81abf8:	e0bfff17 	ldw	r2,-4(fp)
  81abfc:	10800017 	ldw	r2,0(r2)
  81ac00:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  81ac04:	e13ffe17 	ldw	r4,-8(fp)
  81ac08:	08034f40 	call	8034f4 <strlen>
  81ac0c:	10800044 	addi	r2,r2,1
  81ac10:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81ac14:	00000d06 	br	81ac4c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  81ac18:	e0bffc17 	ldw	r2,-16(fp)
  81ac1c:	10c00217 	ldw	r3,8(r2)
  81ac20:	e0bffd17 	ldw	r2,-12(fp)
  81ac24:	1809883a 	mov	r4,r3
  81ac28:	e17ffe17 	ldw	r5,-8(fp)
  81ac2c:	100d883a 	mov	r6,r2
  81ac30:	081b2d00 	call	81b2d0 <memcmp>
  81ac34:	1000021e 	bne	r2,zero,81ac40 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  81ac38:	e0bffc17 	ldw	r2,-16(fp)
  81ac3c:	00000706 	br	81ac5c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  81ac40:	e0bffc17 	ldw	r2,-16(fp)
  81ac44:	10800017 	ldw	r2,0(r2)
  81ac48:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81ac4c:	e0fffc17 	ldw	r3,-16(fp)
  81ac50:	e0bfff17 	ldw	r2,-4(fp)
  81ac54:	18bff01e 	bne	r3,r2,81ac18 <__alt_data_end+0xff81ac18>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  81ac58:	0005883a 	mov	r2,zero
}
  81ac5c:	e037883a 	mov	sp,fp
  81ac60:	dfc00117 	ldw	ra,4(sp)
  81ac64:	df000017 	ldw	fp,0(sp)
  81ac68:	dec00204 	addi	sp,sp,8
  81ac6c:	f800283a 	ret

0081ac70 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  81ac70:	defffb04 	addi	sp,sp,-20
  81ac74:	dfc00415 	stw	ra,16(sp)
  81ac78:	df000315 	stw	fp,12(sp)
  81ac7c:	df000304 	addi	fp,sp,12
  81ac80:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  81ac84:	008020b4 	movhi	r2,130
  81ac88:	10b7ff04 	addi	r2,r2,-8196
  81ac8c:	10800017 	ldw	r2,0(r2)
  81ac90:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81ac94:	00003106 	br	81ad5c <alt_find_file+0xec>
  {
    len = strlen(next->name);
  81ac98:	e0bffd17 	ldw	r2,-12(fp)
  81ac9c:	10800217 	ldw	r2,8(r2)
  81aca0:	1009883a 	mov	r4,r2
  81aca4:	08034f40 	call	8034f4 <strlen>
  81aca8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  81acac:	e0bffd17 	ldw	r2,-12(fp)
  81acb0:	10c00217 	ldw	r3,8(r2)
  81acb4:	e0bffe17 	ldw	r2,-8(fp)
  81acb8:	10bfffc4 	addi	r2,r2,-1
  81acbc:	1885883a 	add	r2,r3,r2
  81acc0:	10800003 	ldbu	r2,0(r2)
  81acc4:	10803fcc 	andi	r2,r2,255
  81acc8:	1080201c 	xori	r2,r2,128
  81accc:	10bfe004 	addi	r2,r2,-128
  81acd0:	10800bd8 	cmpnei	r2,r2,47
  81acd4:	1000031e 	bne	r2,zero,81ace4 <alt_find_file+0x74>
    {
      len -= 1;
  81acd8:	e0bffe17 	ldw	r2,-8(fp)
  81acdc:	10bfffc4 	addi	r2,r2,-1
  81ace0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81ace4:	e0bffe17 	ldw	r2,-8(fp)
  81ace8:	e0ffff17 	ldw	r3,-4(fp)
  81acec:	1885883a 	add	r2,r3,r2
  81acf0:	10800003 	ldbu	r2,0(r2)
  81acf4:	10803fcc 	andi	r2,r2,255
  81acf8:	1080201c 	xori	r2,r2,128
  81acfc:	10bfe004 	addi	r2,r2,-128
  81ad00:	10800be0 	cmpeqi	r2,r2,47
  81ad04:	1000081e 	bne	r2,zero,81ad28 <alt_find_file+0xb8>
  81ad08:	e0bffe17 	ldw	r2,-8(fp)
  81ad0c:	e0ffff17 	ldw	r3,-4(fp)
  81ad10:	1885883a 	add	r2,r3,r2
  81ad14:	10800003 	ldbu	r2,0(r2)
  81ad18:	10803fcc 	andi	r2,r2,255
  81ad1c:	1080201c 	xori	r2,r2,128
  81ad20:	10bfe004 	addi	r2,r2,-128
  81ad24:	10000a1e 	bne	r2,zero,81ad50 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
  81ad28:	e0bffd17 	ldw	r2,-12(fp)
  81ad2c:	10c00217 	ldw	r3,8(r2)
  81ad30:	e0bffe17 	ldw	r2,-8(fp)
  81ad34:	1809883a 	mov	r4,r3
  81ad38:	e17fff17 	ldw	r5,-4(fp)
  81ad3c:	100d883a 	mov	r6,r2
  81ad40:	081b2d00 	call	81b2d0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81ad44:	1000021e 	bne	r2,zero,81ad50 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  81ad48:	e0bffd17 	ldw	r2,-12(fp)
  81ad4c:	00000806 	br	81ad70 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
  81ad50:	e0bffd17 	ldw	r2,-12(fp)
  81ad54:	10800017 	ldw	r2,0(r2)
  81ad58:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81ad5c:	e0fffd17 	ldw	r3,-12(fp)
  81ad60:	008020b4 	movhi	r2,130
  81ad64:	10b7ff04 	addi	r2,r2,-8196
  81ad68:	18bfcb1e 	bne	r3,r2,81ac98 <__alt_data_end+0xff81ac98>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  81ad6c:	0005883a 	mov	r2,zero
}
  81ad70:	e037883a 	mov	sp,fp
  81ad74:	dfc00117 	ldw	ra,4(sp)
  81ad78:	df000017 	ldw	fp,0(sp)
  81ad7c:	dec00204 	addi	sp,sp,8
  81ad80:	f800283a 	ret

0081ad84 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  81ad84:	defffc04 	addi	sp,sp,-16
  81ad88:	df000315 	stw	fp,12(sp)
  81ad8c:	df000304 	addi	fp,sp,12
  81ad90:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  81ad94:	00bffa04 	movi	r2,-24
  81ad98:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81ad9c:	e03ffd15 	stw	zero,-12(fp)
  81ada0:	00001d06 	br	81ae18 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  81ada4:	008020b4 	movhi	r2,130
  81ada8:	10b2ee04 	addi	r2,r2,-13384
  81adac:	e0fffd17 	ldw	r3,-12(fp)
  81adb0:	18c00324 	muli	r3,r3,12
  81adb4:	10c5883a 	add	r2,r2,r3
  81adb8:	10800017 	ldw	r2,0(r2)
  81adbc:	1000131e 	bne	r2,zero,81ae0c <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  81adc0:	008020b4 	movhi	r2,130
  81adc4:	10b2ee04 	addi	r2,r2,-13384
  81adc8:	e0fffd17 	ldw	r3,-12(fp)
  81adcc:	18c00324 	muli	r3,r3,12
  81add0:	10c5883a 	add	r2,r2,r3
  81add4:	e0ffff17 	ldw	r3,-4(fp)
  81add8:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  81addc:	008020b4 	movhi	r2,130
  81ade0:	10b80304 	addi	r2,r2,-8180
  81ade4:	10c00017 	ldw	r3,0(r2)
  81ade8:	e0bffd17 	ldw	r2,-12(fp)
  81adec:	1880040e 	bge	r3,r2,81ae00 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  81adf0:	008020b4 	movhi	r2,130
  81adf4:	10b80304 	addi	r2,r2,-8180
  81adf8:	e0fffd17 	ldw	r3,-12(fp)
  81adfc:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
  81ae00:	e0bffd17 	ldw	r2,-12(fp)
  81ae04:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  81ae08:	00000606 	br	81ae24 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81ae0c:	e0bffd17 	ldw	r2,-12(fp)
  81ae10:	10800044 	addi	r2,r2,1
  81ae14:	e0bffd15 	stw	r2,-12(fp)
  81ae18:	e0bffd17 	ldw	r2,-12(fp)
  81ae1c:	10800810 	cmplti	r2,r2,32
  81ae20:	103fe01e 	bne	r2,zero,81ada4 <__alt_data_end+0xff81ada4>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  81ae24:	e0bffe17 	ldw	r2,-8(fp)
}
  81ae28:	e037883a 	mov	sp,fp
  81ae2c:	df000017 	ldw	fp,0(sp)
  81ae30:	dec00104 	addi	sp,sp,4
  81ae34:	f800283a 	ret

0081ae38 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  81ae38:	defffe04 	addi	sp,sp,-8
  81ae3c:	dfc00115 	stw	ra,4(sp)
  81ae40:	df000015 	stw	fp,0(sp)
  81ae44:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  81ae48:	0009883a 	mov	r4,zero
  81ae4c:	01440004 	movi	r5,4096
  81ae50:	081b15c0 	call	81b15c <alt_icache_flush>
#endif
}
  81ae54:	e037883a 	mov	sp,fp
  81ae58:	dfc00117 	ldw	ra,4(sp)
  81ae5c:	df000017 	ldw	fp,0(sp)
  81ae60:	dec00204 	addi	sp,sp,8
  81ae64:	f800283a 	ret

0081ae68 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  81ae68:	defff904 	addi	sp,sp,-28
  81ae6c:	dfc00615 	stw	ra,24(sp)
  81ae70:	df000515 	stw	fp,20(sp)
  81ae74:	df000504 	addi	fp,sp,20
  81ae78:	e13ffc15 	stw	r4,-16(fp)
  81ae7c:	e17ffd15 	stw	r5,-12(fp)
  81ae80:	e1bffe15 	stw	r6,-8(fp)
  81ae84:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  81ae88:	e13ffd17 	ldw	r4,-12(fp)
  81ae8c:	e17ffe17 	ldw	r5,-8(fp)
  81ae90:	e1bfff17 	ldw	r6,-4(fp)
  81ae94:	0817e180 	call	817e18 <open>
  81ae98:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  81ae9c:	e0bffb17 	ldw	r2,-20(fp)
  81aea0:	10001c16 	blt	r2,zero,81af14 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  81aea4:	008020b4 	movhi	r2,130
  81aea8:	10b2ee04 	addi	r2,r2,-13384
  81aeac:	e0fffb17 	ldw	r3,-20(fp)
  81aeb0:	18c00324 	muli	r3,r3,12
  81aeb4:	10c5883a 	add	r2,r2,r3
  81aeb8:	10c00017 	ldw	r3,0(r2)
  81aebc:	e0bffc17 	ldw	r2,-16(fp)
  81aec0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  81aec4:	008020b4 	movhi	r2,130
  81aec8:	10b2ee04 	addi	r2,r2,-13384
  81aecc:	e0fffb17 	ldw	r3,-20(fp)
  81aed0:	18c00324 	muli	r3,r3,12
  81aed4:	18c00104 	addi	r3,r3,4
  81aed8:	10c5883a 	add	r2,r2,r3
  81aedc:	10c00017 	ldw	r3,0(r2)
  81aee0:	e0bffc17 	ldw	r2,-16(fp)
  81aee4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  81aee8:	008020b4 	movhi	r2,130
  81aeec:	10b2ee04 	addi	r2,r2,-13384
  81aef0:	e0fffb17 	ldw	r3,-20(fp)
  81aef4:	18c00324 	muli	r3,r3,12
  81aef8:	18c00204 	addi	r3,r3,8
  81aefc:	10c5883a 	add	r2,r2,r3
  81af00:	10c00017 	ldw	r3,0(r2)
  81af04:	e0bffc17 	ldw	r2,-16(fp)
  81af08:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  81af0c:	e13ffb17 	ldw	r4,-20(fp)
  81af10:	08180bc0 	call	8180bc <alt_release_fd>
  }
} 
  81af14:	e037883a 	mov	sp,fp
  81af18:	dfc00117 	ldw	ra,4(sp)
  81af1c:	df000017 	ldw	fp,0(sp)
  81af20:	dec00204 	addi	sp,sp,8
  81af24:	f800283a 	ret

0081af28 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  81af28:	defffb04 	addi	sp,sp,-20
  81af2c:	dfc00415 	stw	ra,16(sp)
  81af30:	df000315 	stw	fp,12(sp)
  81af34:	df000304 	addi	fp,sp,12
  81af38:	e13ffd15 	stw	r4,-12(fp)
  81af3c:	e17ffe15 	stw	r5,-8(fp)
  81af40:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  81af44:	010020b4 	movhi	r4,130
  81af48:	2132f104 	addi	r4,r4,-13372
  81af4c:	e17ffd17 	ldw	r5,-12(fp)
  81af50:	01800044 	movi	r6,1
  81af54:	01c07fc4 	movi	r7,511
  81af58:	081ae680 	call	81ae68 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  81af5c:	010020b4 	movhi	r4,130
  81af60:	2132ee04 	addi	r4,r4,-13384
  81af64:	e17ffe17 	ldw	r5,-8(fp)
  81af68:	000d883a 	mov	r6,zero
  81af6c:	01c07fc4 	movi	r7,511
  81af70:	081ae680 	call	81ae68 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  81af74:	010020b4 	movhi	r4,130
  81af78:	2132f404 	addi	r4,r4,-13360
  81af7c:	e17fff17 	ldw	r5,-4(fp)
  81af80:	01800044 	movi	r6,1
  81af84:	01c07fc4 	movi	r7,511
  81af88:	081ae680 	call	81ae68 <alt_open_fd>
}  
  81af8c:	e037883a 	mov	sp,fp
  81af90:	dfc00117 	ldw	ra,4(sp)
  81af94:	df000017 	ldw	fp,0(sp)
  81af98:	dec00204 	addi	sp,sp,8
  81af9c:	f800283a 	ret

0081afa0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  81afa0:	defffa04 	addi	sp,sp,-24
  81afa4:	df000515 	stw	fp,20(sp)
  81afa8:	df000504 	addi	fp,sp,20
  81afac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81afb0:	0005303a 	rdctl	r2,status
  81afb4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81afb8:	e0fffc17 	ldw	r3,-16(fp)
  81afbc:	00bfff84 	movi	r2,-2
  81afc0:	1884703a 	and	r2,r3,r2
  81afc4:	1001703a 	wrctl	status,r2
  
  return context;
  81afc8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  81afcc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  81afd0:	e0bfff17 	ldw	r2,-4(fp)
  81afd4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  81afd8:	e0bffd17 	ldw	r2,-12(fp)
  81afdc:	10800017 	ldw	r2,0(r2)
  81afe0:	e0fffd17 	ldw	r3,-12(fp)
  81afe4:	18c00117 	ldw	r3,4(r3)
  81afe8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  81afec:	e0bffd17 	ldw	r2,-12(fp)
  81aff0:	10800117 	ldw	r2,4(r2)
  81aff4:	e0fffd17 	ldw	r3,-12(fp)
  81aff8:	18c00017 	ldw	r3,0(r3)
  81affc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  81b000:	e0bffd17 	ldw	r2,-12(fp)
  81b004:	e0fffd17 	ldw	r3,-12(fp)
  81b008:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  81b00c:	e0bffd17 	ldw	r2,-12(fp)
  81b010:	e0fffd17 	ldw	r3,-12(fp)
  81b014:	10c00015 	stw	r3,0(r2)
  81b018:	e0bffb17 	ldw	r2,-20(fp)
  81b01c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81b020:	e0bffe17 	ldw	r2,-8(fp)
  81b024:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  81b028:	e037883a 	mov	sp,fp
  81b02c:	df000017 	ldw	fp,0(sp)
  81b030:	dec00104 	addi	sp,sp,4
  81b034:	f800283a 	ret

0081b038 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  81b038:	defffb04 	addi	sp,sp,-20
  81b03c:	dfc00415 	stw	ra,16(sp)
  81b040:	df000315 	stw	fp,12(sp)
  81b044:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  81b048:	d0a01117 	ldw	r2,-32700(gp)
  81b04c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  81b050:	d0a77817 	ldw	r2,-25120(gp)
  81b054:	10800044 	addi	r2,r2,1
  81b058:	d0a77815 	stw	r2,-25120(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  81b05c:	00002e06 	br	81b118 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  81b060:	e0bffd17 	ldw	r2,-12(fp)
  81b064:	10800017 	ldw	r2,0(r2)
  81b068:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  81b06c:	e0bffd17 	ldw	r2,-12(fp)
  81b070:	10800403 	ldbu	r2,16(r2)
  81b074:	10803fcc 	andi	r2,r2,255
  81b078:	10000426 	beq	r2,zero,81b08c <alt_tick+0x54>
  81b07c:	d0a77817 	ldw	r2,-25120(gp)
  81b080:	1000021e 	bne	r2,zero,81b08c <alt_tick+0x54>
    {
      alarm->rollover = 0;
  81b084:	e0bffd17 	ldw	r2,-12(fp)
  81b088:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  81b08c:	e0bffd17 	ldw	r2,-12(fp)
  81b090:	10800217 	ldw	r2,8(r2)
  81b094:	d0e77817 	ldw	r3,-25120(gp)
  81b098:	18801d36 	bltu	r3,r2,81b110 <alt_tick+0xd8>
  81b09c:	e0bffd17 	ldw	r2,-12(fp)
  81b0a0:	10800403 	ldbu	r2,16(r2)
  81b0a4:	10803fcc 	andi	r2,r2,255
  81b0a8:	1000191e 	bne	r2,zero,81b110 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  81b0ac:	e0bffd17 	ldw	r2,-12(fp)
  81b0b0:	10800317 	ldw	r2,12(r2)
  81b0b4:	e0fffd17 	ldw	r3,-12(fp)
  81b0b8:	18c00517 	ldw	r3,20(r3)
  81b0bc:	1809883a 	mov	r4,r3
  81b0c0:	103ee83a 	callr	r2
  81b0c4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  81b0c8:	e0bfff17 	ldw	r2,-4(fp)
  81b0cc:	1000031e 	bne	r2,zero,81b0dc <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  81b0d0:	e13ffd17 	ldw	r4,-12(fp)
  81b0d4:	081afa00 	call	81afa0 <alt_alarm_stop>
  81b0d8:	00000d06 	br	81b110 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  81b0dc:	e0bffd17 	ldw	r2,-12(fp)
  81b0e0:	10c00217 	ldw	r3,8(r2)
  81b0e4:	e0bfff17 	ldw	r2,-4(fp)
  81b0e8:	1887883a 	add	r3,r3,r2
  81b0ec:	e0bffd17 	ldw	r2,-12(fp)
  81b0f0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  81b0f4:	e0bffd17 	ldw	r2,-12(fp)
  81b0f8:	10c00217 	ldw	r3,8(r2)
  81b0fc:	d0a77817 	ldw	r2,-25120(gp)
  81b100:	1880032e 	bgeu	r3,r2,81b110 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  81b104:	e0bffd17 	ldw	r2,-12(fp)
  81b108:	00c00044 	movi	r3,1
  81b10c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  81b110:	e0bffe17 	ldw	r2,-8(fp)
  81b114:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  81b118:	e0fffd17 	ldw	r3,-12(fp)
  81b11c:	d0a01104 	addi	r2,gp,-32700
  81b120:	18bfcf1e 	bne	r3,r2,81b060 <__alt_data_end+0xff81b060>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  81b124:	0001883a 	nop
}
  81b128:	e037883a 	mov	sp,fp
  81b12c:	dfc00117 	ldw	ra,4(sp)
  81b130:	df000017 	ldw	fp,0(sp)
  81b134:	dec00204 	addi	sp,sp,8
  81b138:	f800283a 	ret

0081b13c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  81b13c:	deffff04 	addi	sp,sp,-4
  81b140:	df000015 	stw	fp,0(sp)
  81b144:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  81b148:	000170fa 	wrctl	ienable,zero
}
  81b14c:	e037883a 	mov	sp,fp
  81b150:	df000017 	ldw	fp,0(sp)
  81b154:	dec00104 	addi	sp,sp,4
  81b158:	f800283a 	ret

0081b15c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  81b15c:	defffb04 	addi	sp,sp,-20
  81b160:	df000415 	stw	fp,16(sp)
  81b164:	df000404 	addi	fp,sp,16
  81b168:	e13ffe15 	stw	r4,-8(fp)
  81b16c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  81b170:	e0bfff17 	ldw	r2,-4(fp)
  81b174:	10840070 	cmpltui	r2,r2,4097
  81b178:	1000021e 	bne	r2,zero,81b184 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  81b17c:	00840004 	movi	r2,4096
  81b180:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  81b184:	e0fffe17 	ldw	r3,-8(fp)
  81b188:	e0bfff17 	ldw	r2,-4(fp)
  81b18c:	1885883a 	add	r2,r3,r2
  81b190:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81b194:	e0bffe17 	ldw	r2,-8(fp)
  81b198:	e0bffc15 	stw	r2,-16(fp)
  81b19c:	00000506 	br	81b1b4 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  81b1a0:	e0bffc17 	ldw	r2,-16(fp)
  81b1a4:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81b1a8:	e0bffc17 	ldw	r2,-16(fp)
  81b1ac:	10800804 	addi	r2,r2,32
  81b1b0:	e0bffc15 	stw	r2,-16(fp)
  81b1b4:	e0fffc17 	ldw	r3,-16(fp)
  81b1b8:	e0bffd17 	ldw	r2,-12(fp)
  81b1bc:	18bff836 	bltu	r3,r2,81b1a0 <__alt_data_end+0xff81b1a0>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  81b1c0:	e0bffe17 	ldw	r2,-8(fp)
  81b1c4:	108007cc 	andi	r2,r2,31
  81b1c8:	10000226 	beq	r2,zero,81b1d4 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  81b1cc:	e0bffc17 	ldw	r2,-16(fp)
  81b1d0:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  81b1d4:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  81b1d8:	e037883a 	mov	sp,fp
  81b1dc:	df000017 	ldw	fp,0(sp)
  81b1e0:	dec00104 	addi	sp,sp,4
  81b1e4:	f800283a 	ret

0081b1e8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  81b1e8:	defffe04 	addi	sp,sp,-8
  81b1ec:	df000115 	stw	fp,4(sp)
  81b1f0:	df000104 	addi	fp,sp,4
  81b1f4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  81b1f8:	e0bfff17 	ldw	r2,-4(fp)
  81b1fc:	10bffe84 	addi	r2,r2,-6
  81b200:	10c00428 	cmpgeui	r3,r2,16
  81b204:	18001a1e 	bne	r3,zero,81b270 <alt_exception_cause_generated_bad_addr+0x88>
  81b208:	100690ba 	slli	r3,r2,2
  81b20c:	008020b4 	movhi	r2,130
  81b210:	10ac8804 	addi	r2,r2,-19936
  81b214:	1885883a 	add	r2,r3,r2
  81b218:	10800017 	ldw	r2,0(r2)
  81b21c:	1000683a 	jmp	r2
  81b220:	0081b260 	cmpeqi	r2,zero,1737
  81b224:	0081b260 	cmpeqi	r2,zero,1737
  81b228:	0081b270 	cmpltui	r2,zero,1737
  81b22c:	0081b270 	cmpltui	r2,zero,1737
  81b230:	0081b270 	cmpltui	r2,zero,1737
  81b234:	0081b260 	cmpeqi	r2,zero,1737
  81b238:	0081b268 	cmpgeui	r2,zero,1737
  81b23c:	0081b270 	cmpltui	r2,zero,1737
  81b240:	0081b260 	cmpeqi	r2,zero,1737
  81b244:	0081b260 	cmpeqi	r2,zero,1737
  81b248:	0081b270 	cmpltui	r2,zero,1737
  81b24c:	0081b260 	cmpeqi	r2,zero,1737
  81b250:	0081b268 	cmpgeui	r2,zero,1737
  81b254:	0081b270 	cmpltui	r2,zero,1737
  81b258:	0081b270 	cmpltui	r2,zero,1737
  81b25c:	0081b260 	cmpeqi	r2,zero,1737
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  81b260:	00800044 	movi	r2,1
  81b264:	00000306 	br	81b274 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  81b268:	0005883a 	mov	r2,zero
  81b26c:	00000106 	br	81b274 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  81b270:	0005883a 	mov	r2,zero
  }
}
  81b274:	e037883a 	mov	sp,fp
  81b278:	df000017 	ldw	fp,0(sp)
  81b27c:	dec00104 	addi	sp,sp,4
  81b280:	f800283a 	ret

0081b284 <atexit>:
  81b284:	200b883a 	mov	r5,r4
  81b288:	000d883a 	mov	r6,zero
  81b28c:	0009883a 	mov	r4,zero
  81b290:	000f883a 	mov	r7,zero
  81b294:	081b34c1 	jmpi	81b34c <__register_exitproc>

0081b298 <exit>:
  81b298:	defffe04 	addi	sp,sp,-8
  81b29c:	000b883a 	mov	r5,zero
  81b2a0:	dc000015 	stw	r16,0(sp)
  81b2a4:	dfc00115 	stw	ra,4(sp)
  81b2a8:	2021883a 	mov	r16,r4
  81b2ac:	081b4600 	call	81b460 <__call_exitprocs>
  81b2b0:	008020b4 	movhi	r2,130
  81b2b4:	10b7f704 	addi	r2,r2,-8228
  81b2b8:	11000017 	ldw	r4,0(r2)
  81b2bc:	20800f17 	ldw	r2,60(r4)
  81b2c0:	10000126 	beq	r2,zero,81b2c8 <exit+0x30>
  81b2c4:	103ee83a 	callr	r2
  81b2c8:	8009883a 	mov	r4,r16
  81b2cc:	081b5f40 	call	81b5f4 <_exit>

0081b2d0 <memcmp>:
  81b2d0:	01c000c4 	movi	r7,3
  81b2d4:	3980192e 	bgeu	r7,r6,81b33c <memcmp+0x6c>
  81b2d8:	2144b03a 	or	r2,r4,r5
  81b2dc:	11c4703a 	and	r2,r2,r7
  81b2e0:	10000f26 	beq	r2,zero,81b320 <memcmp+0x50>
  81b2e4:	20800003 	ldbu	r2,0(r4)
  81b2e8:	28c00003 	ldbu	r3,0(r5)
  81b2ec:	10c0151e 	bne	r2,r3,81b344 <memcmp+0x74>
  81b2f0:	31bfff84 	addi	r6,r6,-2
  81b2f4:	01ffffc4 	movi	r7,-1
  81b2f8:	00000406 	br	81b30c <memcmp+0x3c>
  81b2fc:	20800003 	ldbu	r2,0(r4)
  81b300:	28c00003 	ldbu	r3,0(r5)
  81b304:	31bfffc4 	addi	r6,r6,-1
  81b308:	10c00e1e 	bne	r2,r3,81b344 <memcmp+0x74>
  81b30c:	21000044 	addi	r4,r4,1
  81b310:	29400044 	addi	r5,r5,1
  81b314:	31fff91e 	bne	r6,r7,81b2fc <__alt_data_end+0xff81b2fc>
  81b318:	0005883a 	mov	r2,zero
  81b31c:	f800283a 	ret
  81b320:	20c00017 	ldw	r3,0(r4)
  81b324:	28800017 	ldw	r2,0(r5)
  81b328:	1880041e 	bne	r3,r2,81b33c <memcmp+0x6c>
  81b32c:	31bfff04 	addi	r6,r6,-4
  81b330:	21000104 	addi	r4,r4,4
  81b334:	29400104 	addi	r5,r5,4
  81b338:	39bff936 	bltu	r7,r6,81b320 <__alt_data_end+0xff81b320>
  81b33c:	303fe91e 	bne	r6,zero,81b2e4 <__alt_data_end+0xff81b2e4>
  81b340:	003ff506 	br	81b318 <__alt_data_end+0xff81b318>
  81b344:	10c5c83a 	sub	r2,r2,r3
  81b348:	f800283a 	ret

0081b34c <__register_exitproc>:
  81b34c:	008020b4 	movhi	r2,130
  81b350:	defffa04 	addi	sp,sp,-24
  81b354:	10b7f704 	addi	r2,r2,-8228
  81b358:	dc000315 	stw	r16,12(sp)
  81b35c:	14000017 	ldw	r16,0(r2)
  81b360:	dc400415 	stw	r17,16(sp)
  81b364:	dfc00515 	stw	ra,20(sp)
  81b368:	80805217 	ldw	r2,328(r16)
  81b36c:	2023883a 	mov	r17,r4
  81b370:	10003626 	beq	r2,zero,81b44c <__register_exitproc+0x100>
  81b374:	10c00117 	ldw	r3,4(r2)
  81b378:	010007c4 	movi	r4,31
  81b37c:	20c00e16 	blt	r4,r3,81b3b8 <__register_exitproc+0x6c>
  81b380:	1a400044 	addi	r9,r3,1
  81b384:	8800211e 	bne	r17,zero,81b40c <__register_exitproc+0xc0>
  81b388:	18c00084 	addi	r3,r3,2
  81b38c:	18c7883a 	add	r3,r3,r3
  81b390:	18c7883a 	add	r3,r3,r3
  81b394:	12400115 	stw	r9,4(r2)
  81b398:	10c7883a 	add	r3,r2,r3
  81b39c:	19400015 	stw	r5,0(r3)
  81b3a0:	0005883a 	mov	r2,zero
  81b3a4:	dfc00517 	ldw	ra,20(sp)
  81b3a8:	dc400417 	ldw	r17,16(sp)
  81b3ac:	dc000317 	ldw	r16,12(sp)
  81b3b0:	dec00604 	addi	sp,sp,24
  81b3b4:	f800283a 	ret
  81b3b8:	00800034 	movhi	r2,0
  81b3bc:	10800004 	addi	r2,r2,0
  81b3c0:	10002526 	beq	r2,zero,81b458 <__register_exitproc+0x10c>
  81b3c4:	01006404 	movi	r4,400
  81b3c8:	d9400015 	stw	r5,0(sp)
  81b3cc:	d9800115 	stw	r6,4(sp)
  81b3d0:	d9c00215 	stw	r7,8(sp)
  81b3d4:	00000000 	call	0 <__alt_mem_sdram_0-0x800000>
  81b3d8:	d9400017 	ldw	r5,0(sp)
  81b3dc:	d9800117 	ldw	r6,4(sp)
  81b3e0:	d9c00217 	ldw	r7,8(sp)
  81b3e4:	10001c26 	beq	r2,zero,81b458 <__register_exitproc+0x10c>
  81b3e8:	80c05217 	ldw	r3,328(r16)
  81b3ec:	10000115 	stw	zero,4(r2)
  81b3f0:	02400044 	movi	r9,1
  81b3f4:	10c00015 	stw	r3,0(r2)
  81b3f8:	80805215 	stw	r2,328(r16)
  81b3fc:	10006215 	stw	zero,392(r2)
  81b400:	10006315 	stw	zero,396(r2)
  81b404:	0007883a 	mov	r3,zero
  81b408:	883fdf26 	beq	r17,zero,81b388 <__alt_data_end+0xff81b388>
  81b40c:	18d1883a 	add	r8,r3,r3
  81b410:	4211883a 	add	r8,r8,r8
  81b414:	1211883a 	add	r8,r2,r8
  81b418:	41802215 	stw	r6,136(r8)
  81b41c:	01000044 	movi	r4,1
  81b420:	11806217 	ldw	r6,392(r2)
  81b424:	20c8983a 	sll	r4,r4,r3
  81b428:	310cb03a 	or	r6,r6,r4
  81b42c:	11806215 	stw	r6,392(r2)
  81b430:	41c04215 	stw	r7,264(r8)
  81b434:	01800084 	movi	r6,2
  81b438:	89bfd31e 	bne	r17,r6,81b388 <__alt_data_end+0xff81b388>
  81b43c:	11806317 	ldw	r6,396(r2)
  81b440:	3108b03a 	or	r4,r6,r4
  81b444:	11006315 	stw	r4,396(r2)
  81b448:	003fcf06 	br	81b388 <__alt_data_end+0xff81b388>
  81b44c:	80805304 	addi	r2,r16,332
  81b450:	80805215 	stw	r2,328(r16)
  81b454:	003fc706 	br	81b374 <__alt_data_end+0xff81b374>
  81b458:	00bfffc4 	movi	r2,-1
  81b45c:	003fd106 	br	81b3a4 <__alt_data_end+0xff81b3a4>

0081b460 <__call_exitprocs>:
  81b460:	008020b4 	movhi	r2,130
  81b464:	10b7f704 	addi	r2,r2,-8228
  81b468:	10800017 	ldw	r2,0(r2)
  81b46c:	defff404 	addi	sp,sp,-48
  81b470:	dd800815 	stw	r22,32(sp)
  81b474:	d8800015 	stw	r2,0(sp)
  81b478:	10805204 	addi	r2,r2,328
  81b47c:	dd000615 	stw	r20,24(sp)
  81b480:	dc800415 	stw	r18,16(sp)
  81b484:	dfc00b15 	stw	ra,44(sp)
  81b488:	df000a15 	stw	fp,40(sp)
  81b48c:	ddc00915 	stw	r23,36(sp)
  81b490:	dd400715 	stw	r21,28(sp)
  81b494:	dcc00515 	stw	r19,20(sp)
  81b498:	dc400315 	stw	r17,12(sp)
  81b49c:	dc000215 	stw	r16,8(sp)
  81b4a0:	2025883a 	mov	r18,r4
  81b4a4:	2829883a 	mov	r20,r5
  81b4a8:	d8800115 	stw	r2,4(sp)
  81b4ac:	05bfffc4 	movi	r22,-1
  81b4b0:	d8800017 	ldw	r2,0(sp)
  81b4b4:	14c05217 	ldw	r19,328(r2)
  81b4b8:	98001d26 	beq	r19,zero,81b530 <__call_exitprocs+0xd0>
  81b4bc:	dd400117 	ldw	r21,4(sp)
  81b4c0:	98800117 	ldw	r2,4(r19)
  81b4c4:	173fffc4 	addi	fp,r2,-1
  81b4c8:	e0000d16 	blt	fp,zero,81b500 <__call_exitprocs+0xa0>
  81b4cc:	14000044 	addi	r16,r2,1
  81b4d0:	8421883a 	add	r16,r16,r16
  81b4d4:	8421883a 	add	r16,r16,r16
  81b4d8:	84402004 	addi	r17,r16,128
  81b4dc:	9c63883a 	add	r17,r19,r17
  81b4e0:	9c21883a 	add	r16,r19,r16
  81b4e4:	a0001e26 	beq	r20,zero,81b560 <__call_exitprocs+0x100>
  81b4e8:	80804017 	ldw	r2,256(r16)
  81b4ec:	15001c26 	beq	r2,r20,81b560 <__call_exitprocs+0x100>
  81b4f0:	e73fffc4 	addi	fp,fp,-1
  81b4f4:	843fff04 	addi	r16,r16,-4
  81b4f8:	8c7fff04 	addi	r17,r17,-4
  81b4fc:	e5bff91e 	bne	fp,r22,81b4e4 <__alt_data_end+0xff81b4e4>
  81b500:	00800034 	movhi	r2,0
  81b504:	10800004 	addi	r2,r2,0
  81b508:	10000926 	beq	r2,zero,81b530 <__call_exitprocs+0xd0>
  81b50c:	98800117 	ldw	r2,4(r19)
  81b510:	1000311e 	bne	r2,zero,81b5d8 <__call_exitprocs+0x178>
  81b514:	98800017 	ldw	r2,0(r19)
  81b518:	10003426 	beq	r2,zero,81b5ec <__call_exitprocs+0x18c>
  81b51c:	9809883a 	mov	r4,r19
  81b520:	a8800015 	stw	r2,0(r21)
  81b524:	00000000 	call	0 <__alt_mem_sdram_0-0x800000>
  81b528:	acc00017 	ldw	r19,0(r21)
  81b52c:	983fe41e 	bne	r19,zero,81b4c0 <__alt_data_end+0xff81b4c0>
  81b530:	dfc00b17 	ldw	ra,44(sp)
  81b534:	df000a17 	ldw	fp,40(sp)
  81b538:	ddc00917 	ldw	r23,36(sp)
  81b53c:	dd800817 	ldw	r22,32(sp)
  81b540:	dd400717 	ldw	r21,28(sp)
  81b544:	dd000617 	ldw	r20,24(sp)
  81b548:	dcc00517 	ldw	r19,20(sp)
  81b54c:	dc800417 	ldw	r18,16(sp)
  81b550:	dc400317 	ldw	r17,12(sp)
  81b554:	dc000217 	ldw	r16,8(sp)
  81b558:	dec00c04 	addi	sp,sp,48
  81b55c:	f800283a 	ret
  81b560:	98800117 	ldw	r2,4(r19)
  81b564:	80c00017 	ldw	r3,0(r16)
  81b568:	10bfffc4 	addi	r2,r2,-1
  81b56c:	17001526 	beq	r2,fp,81b5c4 <__call_exitprocs+0x164>
  81b570:	80000015 	stw	zero,0(r16)
  81b574:	183fde26 	beq	r3,zero,81b4f0 <__alt_data_end+0xff81b4f0>
  81b578:	00800044 	movi	r2,1
  81b57c:	1708983a 	sll	r4,r2,fp
  81b580:	98806217 	ldw	r2,392(r19)
  81b584:	9dc00117 	ldw	r23,4(r19)
  81b588:	2084703a 	and	r2,r4,r2
  81b58c:	1000061e 	bne	r2,zero,81b5a8 <__call_exitprocs+0x148>
  81b590:	183ee83a 	callr	r3
  81b594:	98800117 	ldw	r2,4(r19)
  81b598:	15ffc51e 	bne	r2,r23,81b4b0 <__alt_data_end+0xff81b4b0>
  81b59c:	a8800017 	ldw	r2,0(r21)
  81b5a0:	14ffd326 	beq	r2,r19,81b4f0 <__alt_data_end+0xff81b4f0>
  81b5a4:	003fc206 	br	81b4b0 <__alt_data_end+0xff81b4b0>
  81b5a8:	98806317 	ldw	r2,396(r19)
  81b5ac:	2084703a 	and	r2,r4,r2
  81b5b0:	1000061e 	bne	r2,zero,81b5cc <__call_exitprocs+0x16c>
  81b5b4:	89400017 	ldw	r5,0(r17)
  81b5b8:	9009883a 	mov	r4,r18
  81b5bc:	183ee83a 	callr	r3
  81b5c0:	003ff406 	br	81b594 <__alt_data_end+0xff81b594>
  81b5c4:	9f000115 	stw	fp,4(r19)
  81b5c8:	003fea06 	br	81b574 <__alt_data_end+0xff81b574>
  81b5cc:	89000017 	ldw	r4,0(r17)
  81b5d0:	183ee83a 	callr	r3
  81b5d4:	003fef06 	br	81b594 <__alt_data_end+0xff81b594>
  81b5d8:	98800017 	ldw	r2,0(r19)
  81b5dc:	982b883a 	mov	r21,r19
  81b5e0:	1027883a 	mov	r19,r2
  81b5e4:	983fb61e 	bne	r19,zero,81b4c0 <__alt_data_end+0xff81b4c0>
  81b5e8:	003fd106 	br	81b530 <__alt_data_end+0xff81b530>
  81b5ec:	0005883a 	mov	r2,zero
  81b5f0:	003ffa06 	br	81b5dc <__alt_data_end+0xff81b5dc>

0081b5f4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  81b5f4:	defffd04 	addi	sp,sp,-12
  81b5f8:	df000215 	stw	fp,8(sp)
  81b5fc:	df000204 	addi	fp,sp,8
  81b600:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  81b604:	0001883a 	nop
  81b608:	e0bfff17 	ldw	r2,-4(fp)
  81b60c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  81b610:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  81b614:	10000226 	beq	r2,zero,81b620 <_exit+0x2c>
    ALT_SIM_FAIL();
  81b618:	002af070 	cmpltui	zero,zero,43969
  81b61c:	00000106 	br	81b624 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  81b620:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  81b624:	003fff06 	br	81b624 <__alt_data_end+0xff81b624>
